; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optsize -noreduceopt -nopadbranch -debug
; -peephole -globalopt -localcse -const=ROM 
	FILE	"..\vdp.c"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
;    1	#include <defines.h>
;    2	#include "mos-interface.h"
;    3	
;    4	// Generic functions
;    5	
;    6	void vdp_mode(unsigned char mode)
;    7	{
_vdp_mode:
.DEFINE "_vdp_mode"

.VALUE _vdp_mode

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_mode",7,"_vdp_mode"

.LINE 7

.DEFINE "mode"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;    8	    putch(22);
.LINE 8

	LD	BC,22
	PUSH	BC
	CALL	_putch
	POP	BC
;    9	    putch(mode);
.LINE 9

	LD	A,(IX+%6)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_putch
	POP	BC
;   10	}
.LINE 10

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_mode ***************************
;Name                         Addr/Register   Size   Type
;_putch                              IMPORT  -----   function
;mode                                  IX+6      1   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_mode",10,"_vdp_mode"
;   11	
;   12	// Text functions
;   13	void vdp_cls()
;   14	{
_vdp_cls:
.DEFINE "_vdp_cls"

.VALUE _vdp_cls

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_cls",14,"_vdp_cls"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   15	    putch(12);
.LINE 15

	LD	BC,12
	PUSH	BC
	CALL	_putch
	POP	BC
;   16	}
.LINE 16

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_cls ***************************
;Name                         Addr/Register   Size   Type
;_putch                              IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_cls",16,"_vdp_cls"
;   17	
;   18	void vdp_cursorHome()
;   19	{
_vdp_cursorHome:
.DEFINE "_vdp_cursorHome"

.VALUE _vdp_cursorHome

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_cursorHome",19,"_vdp_cursorHome"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   20	    putch(30);
.LINE 20

	LD	BC,30
	PUSH	BC
	CALL	_putch
	POP	BC
;   21	}
.LINE 21

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_cursorHome ***************************
;Name                         Addr/Register   Size   Type
;_putch                              IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_cursorHome",21,"_vdp_cursorHome"
;   22	
;   23	void vdp_cursorUp()
;   24	{
_vdp_cursorUp:
.DEFINE "_vdp_cursorUp"

.VALUE _vdp_cursorUp

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_cursorUp",24,"_vdp_cursorUp"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   25	    putch(11);
.LINE 25

	LD	BC,11
	PUSH	BC
	CALL	_putch
	POP	BC
;   26	}
.LINE 26

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_cursorUp ***************************
;Name                         Addr/Register   Size   Type
;_putch                              IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_cursorUp",26,"_vdp_cursorUp"
;   27	
;   28	void vdp_cursorGoto(unsigned char x, unsigned char y)
;   29	{
_vdp_cursorGoto:
.DEFINE "_vdp_cursorGoto"

.VALUE _vdp_cursorGoto

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_cursorGoto",29,"_vdp_cursorGoto"

.LINE 29

.DEFINE "x"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "y"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   30	    putch(31); // TAB
.LINE 30

	LD	BC,31
	PUSH	BC
	CALL	_putch
	POP	BC
;   31	    putch(x);
.LINE 31

	LD	A,(IX+%6)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_putch
	POP	BC
;   32	    putch(y);
.LINE 32

	LD	A,(IX+%9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_putch
	POP	BC
;   33	}
.LINE 33

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_cursorGoto ***************************
;Name                         Addr/Register   Size   Type
;_putch                              IMPORT  -----   function
;y                                     IX+9      1   parameter
;x                                     IX+6      1   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_cursorGoto",33,"_vdp_cursorGoto"
;   34	
;   35	void vdp_colour(unsigned char foreground, unsigned char r, unsigned char g, unsigned char b)
;   36	{
_vdp_colour:
.DEFINE "_vdp_colour"

.VALUE _vdp_colour

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_colour",36,"_vdp_colour"

.LINE 36

.DEFINE "foreground"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "r"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "g"

.CLASS 65

.VALUE 12

.TYPE 12

.ENDEF

.DEFINE "b"

.CLASS 65

.VALUE 15

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   37	    putch(17); // COLOUR
.LINE 37

	LD	BC,17
	PUSH	BC
	CALL	_putch
	POP	BC
;   38	    putch(!foreground);
.LINE 38

	LD	A,(IX+%6)
	OR	A,A
	JR	NZ,L_6
	LD	BC,1
	LD	(IX+%FFFFFFFD),BC
	JR	L_7
L_6:
	LD	BC,0
	LD	(IX+%FFFFFFFD),BC
L_7:
	LD	BC,(IX+%FFFFFFFD)
	PUSH	BC
	CALL	_putch
	POP	BC
;   39	    putch(r);
.LINE 39

	LD	A,(IX+%9)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_putch
	POP	BC
;   40	    putch(g);
.LINE 40

	LD	A,(IX+%C)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_putch
	POP	BC
;   41	    putch(b);
.LINE 41

	LD	A,(IX+%F)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_putch
	POP	BC
;   42	}
.LINE 42

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_colour ***************************
;Name                         Addr/Register   Size   Type
;_putch                              IMPORT  -----   function
;temp8                                 IX-3      3   variable
;b                                    IX+15      1   parameter
;g                                    IX+12      1   parameter
;r                                     IX+9      1   parameter
;foreground                            IX+6      1   parameter


; Stack Frame Size: 21 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_colour",42,"_vdp_colour"
;   43	
;   44	void vdp_fgcolour(unsigned char r, unsigned char g, unsigned char b)
;   45	{
_vdp_fgcolour:
.DEFINE "_vdp_fgcolour"

.VALUE _vdp_fgcolour

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_fgcolour",45,"_vdp_fgcolour"

.LINE 45

.DEFINE "r"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "g"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "b"

.CLASS 65

.VALUE 12

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   46	    vdp_colour(1,r,g,b);
.LINE 46

	LD	C,(IX+%C)
	LD	B,%0
	PUSH	BC
	LD	C,(IX+%9)
	PUSH	BC
	LD	C,(IX+%6)
	PUSH	BC
	LD	BC,1
	PUSH	BC
	CALL	_vdp_colour
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   47	}
.LINE 47

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_fgcolour ***************************
;Name                         Addr/Register   Size   Type
;b                                    IX+12      1   parameter
;g                                     IX+9      1   parameter
;r                                     IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_fgcolour",47,"_vdp_fgcolour"
;   48	
;   49	void vdp_bgcolour(unsigned char r, unsigned char g, unsigned char b)
;   50	{
_vdp_bgcolour:
.DEFINE "_vdp_bgcolour"

.VALUE _vdp_bgcolour

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "vdp_bgcolour",50,"_vdp_bgcolour"

.LINE 50

.DEFINE "r"

.CLASS 65

.VALUE 6

.TYPE 12

.ENDEF

.DEFINE "g"

.CLASS 65

.VALUE 9

.TYPE 12

.ENDEF

.DEFINE "b"

.CLASS 65

.VALUE 12

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   51	    vdp_colour(0,r,g,b);
.LINE 51

	LD	C,(IX+%C)
	LD	B,%0
	PUSH	BC
	LD	C,(IX+%9)
	PUSH	BC
	LD	C,(IX+%6)
	PUSH	BC
	LD	BC,0
	PUSH	BC
	CALL	_vdp_colour
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   52	}
.LINE 52

	LD	SP,IX
	POP	IX
	RET	


;**************************** _vdp_bgcolour ***************************
;Name                         Addr/Register   Size   Type
;b                                    IX+12      1   parameter
;g                                     IX+9      1   parameter
;r                                     IX+6      1   parameter


; Stack Frame Size: 15 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "vdp_bgcolour",52,"_vdp_bgcolour"
	XREF _putch:ROM
	XDEF _vdp_bgcolour
	XDEF _vdp_fgcolour
	XDEF _vdp_colour
	XDEF _vdp_cursorGoto
	XDEF _vdp_cursorUp
	XDEF _vdp_cursorHome
	XDEF _vdp_cls
	XDEF _vdp_mode
	END
