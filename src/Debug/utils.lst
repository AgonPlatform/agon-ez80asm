Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED01-Mar-23     14:26:44     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\utils.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",16
                           A    94    .DEFINE "reg"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "reg_index"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "indirect"
                           A   105    .VALUE 4
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "cc"
                           A   110    .VALUE 5
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "cc_index"
                           A   115    .VALUE 6
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "displacement"
                           A   120    .VALUE 7
                           A   121    .CLASS 8
                           A   122    .TYPE 3
                           A   123    .ENDEF
                           A   124    .DEFINE "displacement_provided"
                           A   125    .VALUE 9
                           A   126    .CLASS 8
                           A   127    .TYPE 12
                           A   128    .ENDEF
                           A   129    .DEFINE "immediate_provided"
                           A   130    .VALUE 10
                           A   131    .CLASS 8
                           A   132    .TYPE 12
                           A   133    .ENDEF
                           A   134    .DEFINE "immediate"
                           A   135    .VALUE 11
                           A   136    .CLASS 8
                           A   137    .TYPE 5
                           A   138    .ENDEF
                           A   139    .DEFINE "wasLabel"
                           A   140    .VALUE 15
                           A   141    .CLASS 8
                           A   142    .TYPE 12
                           A   143    .ENDEF
                           A   144    .ENDREC "NONAME0"
                           A   145    .BEGREC "NONAME1",4
                           A   146    .DEFINE "suffix"
                           A   147    .VALUE 0
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "prefix1"
                           A   152    .VALUE 1
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "prefix2"
                           A   157    .VALUE 2
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "opcode"
                           A   162    .VALUE 3
                           A   163    .CLASS 8
                           A   164    .TYPE 12
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME1"
                           A   167    .BEGREC "NONAME2",16
                           A   168    .DEFINE "operandA"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TYPE 4
                           A   172    .ENDEF
                           A   173    .DEFINE "operandB"
                           A   174    .VALUE 3
                           A   175    .CLASS 8
                           A   176    .TYPE 4
                           A   177    .ENDEF
                           A   178    .DEFINE "ddfdpermitted"
                           A   179    .VALUE 6
                           A   180    .CLASS 8
                           A   181    .TYPE 12
                           A   182    .ENDEF
                           A   183    .DEFINE "transformA"
                           A   184    .VALUE 7
                           A   185    .CLASS 8
                           A   186    .TYPE 4
                           A   187    .ENDEF
                           A   188    .DEFINE "transformB"
                           A   189    .VALUE 10
                           A   190    .CLASS 8
                           A   191    .TYPE 4
                           A   192    .ENDEF
                           A   193    .DEFINE "prefix"
                           A   194    .VALUE 13
                           A   195    .CLASS 8
                           A   196    .TYPE 12
                           A   197    .ENDEF
                           A   198    .DEFINE "opcode"
                           A   199    .VALUE 14
                           A   200    .CLASS 8
                           A   201    .TYPE 12
                           A   202    .ENDEF
                           A   203    .DEFINE "adl"
                           A   204    .VALUE 15
                           A   205    .CLASS 8
                           A   206    .TYPE 12
                           A   207    .ENDEF
                           A   208    .ENDREC "NONAME2"
                           A   209    .BEGREC "NONAME3",17
                           A   210    .DEFINE "name"
                           A   211    .VALUE 0
                           A   212    .CLASS 8
                           A   213    .DIM 8
                           A   214    .TYPE 98
                           A   215    .ENDEF
                           A   216    .DEFINE "type"
                           A   217    .VALUE 8
                           A   218    .CLASS 8
                           A   219    .TYPE 12
                           A   220    .ENDEF
                           A   221    .DEFINE "asmtype"
                           A   222    .VALUE 9
                           A   223    .CLASS 8
                           A   224    .TYPE 12
                           A   225    .ENDEF
                           A   226    .DEFINE "listnumber"
                           A   227    .VALUE 10
                           A   228    .CLASS 8
                           A   229    .TYPE 12
                           A   230    .ENDEF
                           A   231    .DEFINE "list"
                           A   232    .VALUE 11
                           A   233    .CLASS 8
                           A   234    .TAG "NONAME2"
                           A   235    .TYPE 40
                           A   236    .ENDEF
                           A   237    .DEFINE "asmargument"
                           A   238    .VALUE 14
                           A   239    .CLASS 8
                           A   240    .TYPE 4
                           A   241    .ENDEF
                           A   242    .ENDREC "NONAME3"
                           A   243    .BEGREC "NONAME4",6
                           A   244    .DEFINE "type"
                           A   245    .VALUE 0
                           A   246    .CLASS 8
                           A   247    .TYPE 4
                           A   248    .ENDEF
                           A   249    .DEFINE "match"
                           A   250    .VALUE 3
                           A   251    .CLASS 8
                           A   252    .TYPE 556
                           A   253    .ENDEF
                           A   254    .ENDREC "NONAME4"
                           A   255    .BEGREC "NONAME5",264
                           A   256    .DEFINE "current_instruction"
                           A   257    .VALUE 0
                           A   258    .CLASS 8
                           A   259    .TAG "NONAME3"
                           A   260    .TYPE 40
                           A   261    .ENDEF
                           A   262    .DEFINE "next"
                           A   263    .VALUE 3
                           A   264    .CLASS 8
                           A   265    .TYPE 34
                           A   266    .ENDEF
                           A   267    .DEFINE "label"
                           A   268    .VALUE 6
                           A   269    .CLASS 8
                           A   270    .DIM 32
                           A   271    .TYPE 98
                           A   272    .ENDEF
                           A   273    .DEFINE "mnemonic"
                           A   274    .VALUE 38
                           A   275    .CLASS 8
                           A   276    .DIM 16
                           A   277    .TYPE 98
                           A   278    .ENDEF
                           A   279    .DEFINE "suffix"
                           A   280    .VALUE 54
                           A   281    .CLASS 8
                           A   282    .DIM 16
                           A   283    .TYPE 98
                           A   284    .ENDEF
                           A   285    .DEFINE "operand1"
                           A   286    .VALUE 70
                           A   287    .CLASS 8
                           A   288    .DIM 32
                           A   289    .TYPE 98
                           A   290    .ENDEF
                           A   291    .DEFINE "operand2"
                           A   292    .VALUE 102
                           A   293    .CLASS 8
                           A   294    .DIM 32
                           A   295    .TYPE 98
                           A   296    .ENDEF
                           A   297    .DEFINE "comment"
                           A   298    .VALUE 134
                           A   299    .CLASS 8
                           A   300    .DIM 128
                           A   301    .TYPE 98
                           A   302    .ENDEF
                           A   303    .DEFINE "size"
                           A   304    .VALUE 262
                           A   305    .CLASS 8
                           A   306    .TYPE 13
                           A   307    .ENDEF
                           A   308    .ENDREC "NONAME5"
                           A   309    .BEGREC "NONAME6",261
                           A   310    .DEFINE "start"
                           A   311    .VALUE 0
                           A   312    .CLASS 8
                           A   313    .DIM 256
                           A   314    .TYPE 98
                           A   315    .ENDEF
                           A   316    .DEFINE "length"
                           A   317    .VALUE 256
                           A   318    .CLASS 8
                           A   319    .TYPE 12
                           A   320    .ENDEF
                           A   321    .DEFINE "next"
                           A   322    .VALUE 257
                           A   323    .CLASS 8
                           A   324    .TYPE 34
                           A   325    .ENDEF
                           A   326    .DEFINE "terminator"
                           A   327    .VALUE 260
                           A   328    .CLASS 8
                           A   329    .TYPE 2
                           A   330    .ENDEF
                           A   331    .ENDREC "NONAME6"
                           A   332    .BEGREC "NONAME7",6
                           A   333    .DEFINE "quot"
                           A   334    .VALUE 0
                           A   335    .CLASS 8
                           A   336    .TYPE 4
                           A   337    .ENDEF
                           A   338    .DEFINE "rem"
                           A   339    .VALUE 3
                           A   340    .CLASS 8
                           A   341    .TYPE 4
                           A   342    .ENDEF
                           A   343    .ENDREC "NONAME7"
                           A   344    .BEGREC "NONAME8",8
                           A   345    .DEFINE "quot"
                           A   346    .VALUE 0
                           A   347    .CLASS 8
                           A   348    .TYPE 5
                           A   349    .ENDEF
                           A   350    .DEFINE "rem"
                           A   351    .VALUE 4
                           A   352    .CLASS 8
                           A   353    .TYPE 5
                           A   354    .ENDEF
                           A   355    .ENDREC "NONAME8"
                           A   356    .BEGREC "header",6
                           A   357    .DEFINE "s"
                           A   358    .VALUE 0
                           A   359    .CLASS 11
                           A   360    .TAG "NONAME9"
                           A   361    .TYPE 8
                           A   362    .ENDEF
                           A   363    .DEFINE "x"
                           A   364    .VALUE 0
                           A   365    .CLASS 11
                           A   366    .TYPE 2
                           A   367    .ENDEF
                           A   368    .ENDREC "header"
                           A   369    .BEGREC "NONAME9",6
                           A   370    .DEFINE "ptr"
                           A   371    .VALUE 0
                           A   372    .CLASS 8
                           A   373    .TAG "header"
                           A   374    .TYPE 40
                           A   375    .ENDEF
                           A   376    .DEFINE "size"
                           A   377    .VALUE 3
                           A   378    .CLASS 8
                           A   379    .TYPE 14
                           A   380    .ENDEF
                           A   381    .ENDREC "NONAME9"
                           A   382    .BEGREC "NONAME10",7
                           A   383    .DEFINE "name"
                           A   384    .VALUE 0
                           A   385    .CLASS 8
                           A   386    .TYPE 34
                           A   387    .ENDEF
                           A   388    .DEFINE "address"
                           A   389    .VALUE 3
                           A   390    .CLASS 8
                           A   391    .TYPE 5
                           A   392    .ENDEF
                           A   393    .ENDREC "NONAME10"
                           A   394    .BEGREC "NONAME11",5
                           A   395    .DEFINE "defined"
                           A   396    .VALUE 0
                           A   397    .CLASS 8
                           A   398    .TYPE 12
                           A   399    .ENDEF
                           A   400    .DEFINE "address"
                           A   401    .VALUE 1
                           A   402    .CLASS 8
                           A   403    .TYPE 5
                           A   404    .ENDEF
                           A   405    .ENDREC "NONAME11"
                           A   406    ;    1	#include <stdio.h>
                           A   407    ;    2	#include <string.h>
                           A   408    ;    3	#include <ctype.h>
                           A   409    ;    4	#include "globals.h"
                           A   410    ;    5	#include "utils.h"
                           A   411    ;    6	#include "str2num.h"
                           A   412    ;    7	#include "label.h"
                           A   413    ;    8	#include "instruction.h"
                           A   414    ;    9	#include "stdint.h"
                           A   415    ;   10	#include "mos-interface.h"
                           A   416    ;   11	
                           A   417    ;   12	// return a base filename, stripping th
                           A   418    ;   13	void remove_ext (char* myStr, char extS
0457E7                     A   419    _remove_ext:
                           A   420    .DEFINE "_remove_ext"
                           A   421    
                           A   422    .VALUE _remove_ext
                           A   423    
                           A   424    .CLASS 2
                           A   425    
                           A   426    .TYPE 65
                           A   427    
                           A   428    .ENDEF
                           A   429    
                           A   430    .BEGFUNC "remove_ext",13,"_remove_ext"
                           A   431    
                           A   432    .LINE 13
                           A   433    
                           A   434    .DEFINE "myStr"
                           A   435    
                           A   436    .CLASS 65
                           A   437    
                           A   438    .VALUE 6
                           A   439    
                           A   440    .TYPE 34
                           A   441    
                           A   442    .ENDEF
                           A   443    
                           A   444    .DEFINE "extSep"
                           A   445    
                           A   446    .CLASS 65
                           A   447    
                           A   448    .VALUE 9
                           A   449    
                           A   450    .TYPE 2
                           A   451    
                           A   452    .ENDEF
                           A   453    
                           A   454    .DEFINE "pathSep"
                           A   455    
                           A   456    .CLASS 65
                           A   457    
                           A   458    .VALUE 12
                           A   459    
                           A   460    .TYPE 2
                           A   461    
                           A   462    .ENDEF
                           A   463    
                           A   464    .DEFINE "lastExt"
                           A   465    
                           A   466    .CLASS 65
                           A   467    
                           A   468    .VALUE -3
                           A   469    
                           A   470    .TYPE 34
                           A   471    
                           A   472    .ENDEF
                           A   473    
                           A   474    .DEFINE "lastPath"
                           A   475    
                           A   476    .CLASS 65
                           A   477    
                           A   478    .VALUE -6
                           A   479    
                           A   480    .TYPE 34
                           A   481    
                           A   482    .ENDEF
                           A   483    
0457E7 DDE5                A   484    	PUSH	IX
0457E9 DD210000 00         A   485    	LD	IX,0
0457EE DD39                A   486    	ADD	IX,SP
0457F0 C5                  A   487    	PUSH	BC
0457F1 C5                  A   488    	PUSH	BC
0457F2 C5                  A   489    	PUSH	BC
                           A   490    ;   14	    char *lastExt, *lastPath;
                           A   491    ;   15	    // Error checks.
                           A   492    ;   16	    if (myStr == NULL) return;
                           A   493    .LINE 16
                           A   494    
0457F3 DD2706              A   495    	LD	HL,(IX+%6)
0457F6 CD E3 6A 04         A   496    	CALL	__icmpzero
0457FA 28 6C               A   497    	JR	Z,L_10
                           A   498    ;   17	    // Find the relevant characters.
                           A   499    ;   18	    lastExt = strrchr (myStr, extSep);
                           A   500    .LINE 18
                           A   501    
0457FC DD7E09              A   502    	LD	A,(IX+%9)
0457FF 17ED62              A   503    	SEXT	HL
045802 DD6E09              A   504    	LD	L,(IX+%9)
045805 E5                  A   505    	PUSH	HL
045806 DD0706              A   506    	LD	BC,(IX+%6)
045809 C5                  A   507    	PUSH	BC
04580A CD E0 63 04         A   508    	CALL	_strrchr
04580E C1                  A   509    	POP	BC
04580F C1                  A   510    	POP	BC
045810 DD2FFD              A   511    	LD	(IX+%FFFFFFFD),HL
                           A   512    ;   19	    lastPath = (pathSep == 0) ? NULL : 
                           A   513    .LINE 19
                           A   514    
045813 DD7E0C              A   515    	LD	A,(IX+%C)
045816 B7                  A   516    	OR	A,A
045817 20 09               A   517    	JR	NZ,L_4
045819 01000000            A   518    	LD	BC,0
04581D DD0FF7              A   519    	LD	(IX+%FFFFFFF7),BC
045820 18 17               A   520    	JR	L_5
045822                     A   521    L_4:
045822 DD7E0C              A   522    	LD	A,(IX+%C)
045825 17ED62              A   523    	SEXT	HL
045828 DD6E0C              A   524    	LD	L,(IX+%C)
04582B E5                  A   525    	PUSH	HL
04582C DD0706              A   526    	LD	BC,(IX+%6)
04582F C5                  A   527    	PUSH	BC
045830 CD E0 63 04         A   528    	CALL	_strrchr
045834 C1                  A   529    	POP	BC
045835 C1                  A   530    	POP	BC
045836 DD2FF7              A   531    	LD	(IX+%FFFFFFF7),HL
045839                     A   532    L_5:
045839 DD07F7              A   533    	LD	BC,(IX+%FFFFFFF7)
04583C DD0FFA              A   534    	LD	(IX+%FFFFFFFA),BC
                           A   535    ;   20	    // If it has an extension separator
                           A   536    ;   21	    if (lastExt != NULL) {
                           A   537    .LINE 21
                           A   538    
04583F DD27FD              A   539    	LD	HL,(IX+%FFFFFFFD)
045842 CD E3 6A 04         A   540    	CALL	__icmpzero
045846 28 20               A   541    	JR	Z,L_10
                           A   542    ;   22	        // and it's to the right of the
                           A   543    ;   23	        if (lastPath != NULL) {
                           A   544    .LINE 23
                           A   545    
045848 DD27FA              A   546    	LD	HL,(IX+%FFFFFFFA)
04584B CD E3 6A 04         A   547    	CALL	__icmpzero
04584F 28 12               A   548    	JR	Z,L_8
                           A   549    ;   24	            if (lastPath < lastExt) {
                           A   550    .LINE 24
                           A   551    
045851 DD07FD              A   552    	LD	BC,(IX+%FFFFFFFD)
045854 DD27FA              A   553    	LD	HL,(IX+%FFFFFFFA)
045857 B7                  A   554    	OR	A,A
045858 ED42                A   555    	SBC	HL,BC
04585A 30 0C               A   556    	JR	NC,L_10
                           A   557    ;   25	                // then remove it.
                           A   558    ;   26	                *lastExt = '\0';
                           A   559    .LINE 26
                           A   560    
04585C DD27FD              A   561    	LD	HL,(IX+%FFFFFFFD)
04585F 3600                A   562    	LD	(HL),%0
                           A   563    ;   27	            }
                           A   564    ;   28	        } else {
                           A   565    .LINE 28
                           A   566    
045861 18 05               A   567    	JR	L_10
045863                     A   568    L_8:
                           A   569    ;   29	            // Has extension separator 
                           A   570    ;   30	            *lastExt = '\0';
                           A   571    .LINE 30
                           A   572    
045863 DD27FD              A   573    	LD	HL,(IX+%FFFFFFFD)
045866 3600                A   574    	LD	(HL),%0
                           A   575    ;   31	        }
                           A   576    ;   32	    }
                           A   577    ;   33	}
045868                     A   578    L_10:
                           A   579    .LINE 33
                           A   580    
045868 DDF9                A   581    	LD	SP,IX
04586A DDE1                A   582    	POP	IX
04586C C9                  A   583    	RET	
                           A   584    
                           A   585    
                           A   586    ;**************************** _remove_ext *****
                           A   587    ;Name                         Addr/Register   S
                           A   588    ;_strrchr                            IMPORT  --
                           A   589    ;temp2                                 IX-9    
                           A   590    ;lastPath                              IX-6    
                           A   591    ;lastExt                               IX-3    
                           A   592    ;pathSep                              IX+12    
                           A   593    ;extSep                                IX+9    
                           A   594    ;myStr                                 IX+6    
                           A   595    
                           A   596    
                           A   597    ; Stack Frame Size: 24 (bytes)
                           A   598    ;       Spill Code: 0 (instruction)
                           A   599    
                           A   600    
                           A   601    .ENDFUNC "remove_ext",33,"_remove_ext"
                           A   602    ;   34	
                           A   603    ;   35	
                           A   604    ;   36	bool isEmpty(const char *str){
04586D                     A   605    _isEmpty:
                           A   606    .DEFINE "_isEmpty"
                           A   607    
                           A   608    .VALUE _isEmpty
                           A   609    
                           A   610    .CLASS 2
                           A   611    
                           A   612    .TYPE 76
                           A   613    
                           A   614    .ENDEF
                           A   615    
                           A   616    .BEGFUNC "isEmpty",36,"_isEmpty"
                           A   617    
                           A   618    .LINE 36
                           A   619    
                           A   620    .DEFINE "str"
                           A   621    
                           A   622    .CLASS 65
                           A   623    
                           A   624    .VALUE 6
                           A   625    
                           A   626    .TYPE 194
                           A   627    
                           A   628    .ENDEF
                           A   629    
04586D DDE5                A   630    	PUSH	IX
04586F DD210000 00         A   631    	LD	IX,0
045874 DD39                A   632    	ADD	IX,SP
                           A   633    ;   37	    return (str[0] == '\0');
                           A   634    .LINE 37
                           A   635    
045876 DD2706              A   636    	LD	HL,(IX+%6)
045879 7E                  A   637    	LD	A,(HL)
04587A B7                  A   638    	OR	A,A
04587B 20 04               A   639    	JR	NZ,L__7
04587D 3E01                A   640    	LD	A,%1
04587F 18 01               A   641    	JR	L__8
045881                     A   642    L__7:
045881 AF                  A   643    	XOR	A,A
045882                     A   644    L__8:
                           A   645    ;   38	}
                           A   646    .LINE 38
                           A   647    
045882 DDF9                A   648    	LD	SP,IX
045884 DDE1                A   649    	POP	IX
045886 C9                  A   650    	RET	
                           A   651    
                           A   652    
                           A   653    ;**************************** _isEmpty ********
                           A   654    ;Name                         Addr/Register   S
                           A   655    ;str                                   IX+6    
                           A   656    
                           A   657    
                           A   658    ; Stack Frame Size: 9 (bytes)
                           A   659    ;       Spill Code: 0 (instruction)
                           A   660    
                           A   661    
                           A   662    .ENDFUNC "isEmpty",38,"_isEmpty"
                           A   663    ;   39	
                           A   664    ;   40	bool notEmpty(const char *str) {
045887                     A   665    _notEmpty:
                           A   666    .DEFINE "_notEmpty"
                           A   667    
                           A   668    .VALUE _notEmpty
                           A   669    
                           A   670    .CLASS 2
                           A   671    
                           A   672    .TYPE 76
                           A   673    
                           A   674    .ENDEF
                           A   675    
                           A   676    .BEGFUNC "notEmpty",40,"_notEmpty"
                           A   677    
                           A   678    .LINE 40
                           A   679    
                           A   680    .DEFINE "str"
                           A   681    
                           A   682    .CLASS 65
                           A   683    
                           A   684    .VALUE 6
                           A   685    
                           A   686    .TYPE 194
                           A   687    
                           A   688    .ENDEF
                           A   689    
045887 DDE5                A   690    	PUSH	IX
045889 DD210000 00         A   691    	LD	IX,0
04588E DD39                A   692    	ADD	IX,SP
                           A   693    ;   41	    return (str[0] != '\0');
                           A   694    .LINE 41
                           A   695    
045890 DD2706              A   696    	LD	HL,(IX+%6)
045893 7E                  A   697    	LD	A,(HL)
045894 B7                  A   698    	OR	A,A
045895 28 04               A   699    	JR	Z,L__11
045897 3E01                A   700    	LD	A,%1
045899 18 01               A   701    	JR	L__12
04589B                     A   702    L__11:
04589B AF                  A   703    	XOR	A,A
04589C                     A   704    L__12:
                           A   705    ;   42	}
                           A   706    .LINE 42
                           A   707    
04589C DDF9                A   708    	LD	SP,IX
04589E DDE1                A   709    	POP	IX
0458A0 C9                  A   710    	RET	
                           A   711    
                           A   712    
                           A   713    ;**************************** _notEmpty *******
                           A   714    ;Name                         Addr/Register   S
                           A   715    ;str                                   IX+6    
                           A   716    
                           A   717    
                           A   718    ; Stack Frame Size: 9 (bytes)
                           A   719    ;       Spill Code: 0 (instruction)
                           A   720    
                           A   721    
                           A   722    .ENDFUNC "notEmpty",42,"_notEmpty"
                           A   723    ;   43	
                           A   724    ;   44	void error(char* msg)
                           A   725    ;   45	{
0458A1                     A   726    _error:
                           A   727    .DEFINE "_error"
                           A   728    
                           A   729    .VALUE _error
                           A   730    
                           A   731    .CLASS 2
                           A   732    
                           A   733    .TYPE 65
                           A   734    
                           A   735    .ENDEF
                           A   736    
                           A   737    .BEGFUNC "error",45,"_error"
                           A   738    
                           A   739    .LINE 45
                           A   740    
                           A   741    .DEFINE "msg"
                           A   742    
                           A   743    .CLASS 65
                           A   744    
                           A   745    .VALUE 6
                           A   746    
                           A   747    .TYPE 34
                           A   748    
                           A   749    .ENDEF
                           A   750    
0458A1 DDE5                A   751    	PUSH	IX
0458A3 DD210000 00         A   752    	LD	IX,0
0458A8 DD39                A   753    	ADD	IX,SP
                           A   754    ;   46	    printf("\"%s\" - line %d - %s\n\r",
                           A   755    .LINE 46
                           A   756    
0458AA 01 9C 66 04         A   757    	LD	BC,___print_uputch
0458AE ED43 34 8C 04       A   758    	LD	(___print_xputch),BC
0458B3 01220000            A   759    	LD	BC,34
0458B7 C5                  A   760    	PUSH	BC
0458B8 CD 9C 66 04         A   761    	CALL	___print_uputch
0458BC C1                  A   762    	POP	BC
0458BD 01 0B 94 04         A   763    	LD	BC,_filename
0458C1 C5                  A   764    	PUSH	BC
0458C2 CD 0E 65 04         A   765    	CALL	___print_sendstring
0458C6 C1                  A   766    	POP	BC
0458C7 01 BC 91 04         A   767    	LD	BC,L__14
0458CB C5                  A   768    	PUSH	BC
0458CC CD 0E 65 04         A   769    	CALL	___print_sendstring
0458D0 C1                  A   770    	POP	BC
0458D1 ED4B 14 97 04       A   771    	LD	BC,(_linenumber)
0458D6 AF                  A   772    	XOR	A,A
0458D7 C5D1                A   773    	LD	DE,BC
0458D9 4F                  A   774    	LD	C,A
0458DA 0600                A   775    	LD	B,%0
0458DC C5                  A   776    	PUSH	BC
0458DD D5                  A   777    	PUSH	DE
0458DE CD 76 67 04         A   778    	CALL	__u_itoa
0458E2 C1                  A   779    	POP	BC
0458E3 C1                  A   780    	POP	BC
0458E4 01 C6 91 04         A   781    	LD	BC,L__15
0458E8 C5                  A   782    	PUSH	BC
0458E9 CD 0E 65 04         A   783    	CALL	___print_sendstring
0458ED C1                  A   784    	POP	BC
0458EE DD0706              A   785    	LD	BC,(IX+%6)
0458F1 C5                  A   786    	PUSH	BC
0458F2 CD 0E 65 04         A   787    	CALL	___print_sendstring
0458F6 C1                  A   788    	POP	BC
0458F7 01 CA 91 04         A   789    	LD	BC,L__16
0458FB C5                  A   790    	PUSH	BC
0458FC CD 0E 65 04         A   791    	CALL	___print_sendstring
045900 C1                  A   792    	POP	BC
                           A   793    ;   47	    global_errors++;
                           A   794    .LINE 47
                           A   795    
045901 ED4B 22 97 04       A   796    	LD	BC,(_global_errors)
045906 03                  A   797    	INC	BC
045907 21 22 97 04         A   798    	LD	HL,_global_errors
04590B 71                  A   799    	LD	(HL),C
04590C 23                  A   800    	INC	HL
04590D 70                  A   801    	LD	(HL),B
                           A   802    ;   48	}
                           A   803    .LINE 48
                           A   804    
04590E DDF9                A   805    	LD	SP,IX
045910 DDE1                A   806    	POP	IX
045912 C9                  A   807    	RET	
                           A   808    
                           A   809    
                           A   810    ;**************************** _error **********
                           A   811    ;Name                         Addr/Register   S
                           A   812    ;_global_errors                      IMPORT    
                           A   813    ;_linenumber                         IMPORT    
                           A   814    ;__u_itoa                            IMPORT  --
                           A   815    ;_filename                           IMPORT    
                           A   816    ;___print_sendstring                 IMPORT  --
                           A   817    ;___print_xputch                     IMPORT    
                           A   818    ;___print_uputch                     IMPORT  --
                           A   819    ;msg                                   IX+6    
                           A   820    
                           A   821    
                           A   822    ; Stack Frame Size: 9 (bytes)
                           A   823    ;       Spill Code: 0 (instruction)
                           A   824    
                           A   825    
                           A   826    .ENDFUNC "error",48,"_error"
                           A   827    	SEGMENT STRSECT
0491BC                     A   828    L__14:
0491BC 22202D20 6C696E65   A   829    	DB	"\" - line "
0491C4 20 
0491C5 00                  A   830    	DB	0
0491C6                     A   831    L__15:
0491C6 202D20              A   832    	DB	" - "
0491C9 00                  A   833    	DB	0
0491CA                     A   834    L__16:
0491CA 0A0D00              A   835    	DB	10,13,0
                           A   836    	SEGMENT CODE
                           A   837    ;   49	
                           A   838    ;   50	void trimRight(char *str) {
045913                     A   839    _trimRight:
                           A   840    .DEFINE "_trimRight"
                           A   841    
                           A   842    .VALUE _trimRight
                           A   843    
                           A   844    .CLASS 2
                           A   845    
                           A   846    .TYPE 65
                           A   847    
                           A   848    .ENDEF
                           A   849    
                           A   850    .BEGFUNC "trimRight",50,"_trimRight"
                           A   851    
                           A   852    .LINE 50
                           A   853    
                           A   854    .DEFINE "str"
                           A   855    
                           A   856    .CLASS 65
                           A   857    
                           A   858    .VALUE 6
                           A   859    
                           A   860    .TYPE 34
                           A   861    
                           A   862    .ENDEF
                           A   863    
045913 DDE5                A   864    	PUSH	IX
045915 DD210000 00         A   865    	LD	IX,0
04591A DD39                A   866    	ADD	IX,SP
                           A   867    ;   51	    while(*str) str++;
                           A   868    .LINE 51
                           A   869    
04591C 18 07               A   870    	JR	L_16
04591E                     A   871    L_17:
04591E DD0706              A   872    	LD	BC,(IX+%6)
045921 03                  A   873    	INC	BC
045922 DD0F06              A   874    	LD	(IX+%6),BC
045925                     A   875    L_16:
045925 DD2706              A   876    	LD	HL,(IX+%6)
045928 7E                  A   877    	LD	A,(HL)
045929 B7                  A   878    	OR	A,A
04592A 20 F2               A   879    	JR	NZ,L_17
                           A   880    ;   52	    str--;
                           A   881    .LINE 52
                           A   882    
04592C DD0706              A   883    	LD	BC,(IX+%6)
04592F 0B                  A   884    	DEC	BC
045930 DD0F06              A   885    	LD	(IX+%6),BC
                           A   886    ;   53	    while(isspace(*str)) str--;
                           A   887    .LINE 53
                           A   888    
045933 18 07               A   889    	JR	L_21
045935                     A   890    L_22:
045935 DD0706              A   891    	LD	BC,(IX+%6)
045938 0B                  A   892    	DEC	BC
045939 DD0F06              A   893    	LD	(IX+%6),BC
04593C                     A   894    L_21:
04593C DD2706              A   895    	LD	HL,(IX+%6)
04593F 7E                  A   896    	LD	A,(HL)
045940 47                  A   897    	LD	B,A
045941 17ED62              A   898    	SEXT	HL
045944 68                  A   899    	LD	L,B
045945 E5                  A   900    	PUSH	HL
045946 CD 18 6B 04         A   901    	CALL	_isspace
04594A C1                  A   902    	POP	BC
04594B CD E3 6A 04         A   903    	CALL	__icmpzero
04594F 20 E4               A   904    	JR	NZ,L_22
                           A   905    ;   54	    str++;
                           A   906    .LINE 54
                           A   907    
045951 DD0706              A   908    	LD	BC,(IX+%6)
045954 03                  A   909    	INC	BC
045955 DD0F06              A   910    	LD	(IX+%6),BC
                           A   911    ;   55	    *str = 0;
                           A   912    .LINE 55
                           A   913    
045958 C5E1                A   914    	LD	HL,BC
04595A 3600                A   915    	LD	(HL),%0
                           A   916    ;   56	}
                           A   917    .LINE 56
                           A   918    
04595C DDF9                A   919    	LD	SP,IX
04595E DDE1                A   920    	POP	IX
045960 C9                  A   921    	RET	
                           A   922    
                           A   923    
                           A   924    ;**************************** _trimRight ******
                           A   925    ;Name                         Addr/Register   S
                           A   926    ;_isspace                            IMPORT  --
                           A   927    ;str                                   IX+6    
                           A   928    
                           A   929    
                           A   930    ; Stack Frame Size: 9 (bytes)
                           A   931    ;       Spill Code: 0 (instruction)
                           A   932    
                           A   933    
                           A   934    .ENDFUNC "trimRight",56,"_trimRight"
                           A   935    ;   57	
                           A   936    ;   58	typedef enum {
                           A   937    ;   59	    TOKEN_REGULAR,
                           A   938    ;   60	    TOKEN_STRING,
                           A   939    ;   61	    TOKEN_BRACKET
                           A   940    ;   62	} tokenclass;
                           A   941    ;   63	
                           A   942    ;   64	// split a 'command.suffix' token in tw
                           A   943    ;   65	void split_suffix(char *mnemonic, char 
045961                     A   944    _split_suffix:
                           A   945    .DEFINE "_split_suffix"
                           A   946    
                           A   947    .VALUE _split_suffix
                           A   948    
                           A   949    .CLASS 2
                           A   950    
                           A   951    .TYPE 65
                           A   952    
                           A   953    .ENDEF
                           A   954    
                           A   955    .BEGFUNC "split_suffix",65,"_split_suffix"
                           A   956    
                           A   957    .LINE 65
                           A   958    
                           A   959    .DEFINE "mnemonic"
                           A   960    
                           A   961    .CLASS 65
                           A   962    
                           A   963    .VALUE 6
                           A   964    
                           A   965    .TYPE 34
                           A   966    
                           A   967    .ENDEF
                           A   968    
                           A   969    .DEFINE "suffix"
                           A   970    
                           A   971    .CLASS 65
                           A   972    
                           A   973    .VALUE 9
                           A   974    
                           A   975    .TYPE 34
                           A   976    
                           A   977    .ENDEF
                           A   978    
                           A   979    .DEFINE "buffer"
                           A   980    
                           A   981    .CLASS 65
                           A   982    
                           A   983    .VALUE 12
                           A   984    
                           A   985    .TYPE 34
                           A   986    
                           A   987    .ENDEF
                           A   988    
                           A   989    .DEFINE "cmd"
                           A   990    
                           A   991    .CLASS 65
                           A   992    
                           A   993    .VALUE -1
                           A   994    
                           A   995    .TYPE 12
                           A   996    
                           A   997    .ENDEF
                           A   998    
045961 DDE5                A   999    	PUSH	IX
045963 DD210000 00         A  1000    	LD	IX,0
045968 DD39                A  1001    	ADD	IX,SP
04596A 3B                  A  1002    	DEC	SP
                           A  1003    ;   66	    bool cmd = true;
                           A  1004    .LINE 66
                           A  1005    
04596B DD36FF01            A  1006    	LD	(IX+%FFFFFFFF),%1
                           A  1007    ;   67	
                           A  1008    ;   68	    while(*buffer) {
                           A  1009    .LINE 68
                           A  1010    
04596F 18 49               A  1011    	JR	L_34
045971                     A  1012    L_35:
                           A  1013    ;   69	        if(cmd) {
                           A  1014    .LINE 69
                           A  1015    
045971 DD7EFF              A  1016    	LD	A,(IX+%FFFFFFFF)
045974 B7                  A  1017    	OR	A,A
045975 28 2B               A  1018    	JR	Z,L_31
                           A  1019    ;   70	            *mnemonic = *buffer;
                           A  1020    .LINE 70
                           A  1021    
045977 DD270C              A  1022    	LD	HL,(IX+%C)
04597A DD3106              A  1023    	LD	IY,(IX+%6)
04597D 7E                  A  1024    	LD	A,(HL)
04597E FD7700              A  1025    	LD	(IY),A
                           A  1026    ;   71	            if(*buffer == '.') cmd = fa
                           A  1027    .LINE 71
                           A  1028    
045981 DD270C              A  1029    	LD	HL,(IX+%C)
045984 7E                  A  1030    	LD	A,(HL)
045985 47                  A  1031    	LD	B,A
045986 17ED62              A  1032    	SEXT	HL
045989 68                  A  1033    	LD	L,B
04598A 012E0000            A  1034    	LD	BC,46
04598E B7                  A  1035    	OR	A,A
04598F ED42                A  1036    	SBC	HL,BC
045991 20 06               A  1037    	JR	NZ,L_28
045993 DD36FF00            A  1038    	LD	(IX+%FFFFFFFF),%0
                           A  1039    ;   72	            else mnemonic++;
                           A  1040    .LINE 72
                           A  1041    
045997 18 1A               A  1042    	JR	L_33
045999                     A  1043    L_28:
045999 DD0706              A  1044    	LD	BC,(IX+%6)
04599C 03                  A  1045    	INC	BC
04599D DD0F06              A  1046    	LD	(IX+%6),BC
                           A  1047    ;   73	        }
                           A  1048    ;   74	        else *suffix++ = *buffer;
                           A  1049    .LINE 74
                           A  1050    
0459A0 18 11               A  1051    	JR	L_33
0459A2                     A  1052    L_31:
0459A2 DD270C              A  1053    	LD	HL,(IX+%C)
0459A5 DD3109              A  1054    	LD	IY,(IX+%9)
0459A8 7E                  A  1055    	LD	A,(HL)
0459A9 FD7700              A  1056    	LD	(IY),A
0459AC DD0709              A  1057    	LD	BC,(IX+%9)
0459AF 03                  A  1058    	INC	BC
0459B0 DD0F09              A  1059    	LD	(IX+%9),BC
0459B3                     A  1060    L_33:
                           A  1061    ;   75	        buffer++;
                           A  1062    .LINE 75
                           A  1063    
0459B3 DD070C              A  1064    	LD	BC,(IX+%C)
0459B6 03                  A  1065    	INC	BC
0459B7 DD0F0C              A  1066    	LD	(IX+%C),BC
                           A  1067    ;   76	    }
0459BA                     A  1068    L_34:
                           A  1069    .LINE 76
                           A  1070    
0459BA DD270C              A  1071    	LD	HL,(IX+%C)
0459BD 7E                  A  1072    	LD	A,(HL)
0459BE B7                  A  1073    	OR	A,A
0459BF 20 B0               A  1074    	JR	NZ,L_35
                           A  1075    ;   77	    *suffix = 0;
                           A  1076    .LINE 77
                           A  1077    
0459C1 DD2709              A  1078    	LD	HL,(IX+%9)
0459C4 3600                A  1079    	LD	(HL),%0
                           A  1080    ;   78	    *mnemonic = 0;
                           A  1081    .LINE 78
                           A  1082    
0459C6 DD2706              A  1083    	LD	HL,(IX+%6)
0459C9 3600                A  1084    	LD	(HL),%0
                           A  1085    ;   79	}
                           A  1086    .LINE 79
                           A  1087    
0459CB DDF9                A  1088    	LD	SP,IX
0459CD DDE1                A  1089    	POP	IX
0459CF C9                  A  1090    	RET	
                           A  1091    
                           A  1092    
                           A  1093    ;**************************** _split_suffix ***
                           A  1094    ;Name                         Addr/Register   S
                           A  1095    ;cmd                                   IX-1    
                           A  1096    ;buffer                               IX+12    
                           A  1097    ;suffix                                IX+9    
                           A  1098    ;mnemonic                              IX+6    
                           A  1099    
                           A  1100    
                           A  1101    ; Stack Frame Size: 16 (bytes)
                           A  1102    ;       Spill Code: 0 (instruction)
                           A  1103    
                           A  1104    
                           A  1105    .ENDFUNC "split_suffix",79,"_split_suffix"
                           A  1106    ;   80	
                           A  1107    ;   81	uint8_t getLineToken(tokentype *token, 
0459D0                     A  1108    _getLineToken:
                           A  1109    .DEFINE "_getLineToken"
                           A  1110    
                           A  1111    .VALUE _getLineToken
                           A  1112    
                           A  1113    .CLASS 2
                           A  1114    
                           A  1115    .TYPE 76
                           A  1116    
                           A  1117    .ENDEF
                           A  1118    
                           A  1119    .BEGFUNC "getLineToken",81,"_getLineToken"
                           A  1120    
                           A  1121    .LINE 81
                           A  1122    
                           A  1123    .DEFINE "token"
                           A  1124    
                           A  1125    .CLASS 65
                           A  1126    
                           A  1127    .VALUE 6
                           A  1128    
                           A  1129    .TAG "NONAME6"
                           A  1130    
                           A  1131    .TYPE 40
                           A  1132    
                           A  1133    .ENDEF
                           A  1134    
                           A  1135    .DEFINE "src"
                           A  1136    
                           A  1137    .CLASS 65
                           A  1138    
                           A  1139    .VALUE 9
                           A  1140    
                           A  1141    .TYPE 34
                           A  1142    
                           A  1143    .ENDEF
                           A  1144    
                           A  1145    .DEFINE "terminator"
                           A  1146    
                           A  1147    .CLASS 65
                           A  1148    
                           A  1149    .VALUE 12
                           A  1150    
                           A  1151    .TYPE 2
                           A  1152    
                           A  1153    .ENDEF
                           A  1154    
                           A  1155    .DEFINE "target"
                           A  1156    
                           A  1157    .CLASS 65
                           A  1158    
                           A  1159    .VALUE -3
                           A  1160    
                           A  1161    .TYPE 34
                           A  1162    
                           A  1163    .ENDEF
                           A  1164    
                           A  1165    .DEFINE "index"
                           A  1166    
                           A  1167    .CLASS 65
                           A  1168    
                           A  1169    .VALUE -4
                           A  1170    
                           A  1171    .TYPE 12
                           A  1172    
                           A  1173    .ENDEF
                           A  1174    
                           A  1175    .DEFINE "escaped"
                           A  1176    
                           A  1177    .CLASS 65
                           A  1178    
                           A  1179    .VALUE -5
                           A  1180    
                           A  1181    .TYPE 12
                           A  1182    
                           A  1183    .ENDEF
                           A  1184    
                           A  1185    .DEFINE "terminated"
                           A  1186    
                           A  1187    .CLASS 65
                           A  1188    
                           A  1189    .VALUE -6
                           A  1190    
                           A  1191    .TYPE 12
                           A  1192    
                           A  1193    .ENDEF
                           A  1194    
                           A  1195    .DEFINE "state"
                           A  1196    
                           A  1197    .CLASS 65
                           A  1198    
                           A  1199    .VALUE -9
                           A  1200    
                           A  1201    .TYPE 4
                           A  1202    
                           A  1203    .ENDEF
                           A  1204    
0459D0 DDE5                A  1205    	PUSH	IX
0459D2 DD210000 00         A  1206    	LD	IX,0
0459D7 DD39                A  1207    	ADD	IX,SP
0459D9 ED22E8              A  1208    	LEA	HL,IX+%FFFFFFE8
0459DC F9                  A  1209    	LD	SP,HL
                           A  1210    ;   82	    char *target;
                           A  1211    ;   83	    uint8_t index = 0;
                           A  1212    .LINE 83
                           A  1213    
0459DD DD36FC00            A  1214    	LD	(IX+%FFFFFFFC),%0
                           A  1215    ;   84	    bool escaped = false;
                           A  1216    .LINE 84
                           A  1217    
0459E1 DD36FB00            A  1218    	LD	(IX+%FFFFFFFB),%0
                           A  1219    ;   85	    bool terminated;
                           A  1220    ;   86	    tokenclass state;
                           A  1221    ;   87	
                           A  1222    ;   88	    // remove leading space
                           A  1223    ;   89	    while(*src) {
                           A  1224    .LINE 89
                           A  1225    
0459E5 18 1C               A  1226    	JR	L_41
0459E7                     A  1227    L_42:
                           A  1228    ;   90	        if(isspace(*src) != 0) src++;
                           A  1229    .LINE 90
                           A  1230    
0459E7 DD2709              A  1231    	LD	HL,(IX+%9)
0459EA 7E                  A  1232    	LD	A,(HL)
0459EB 47                  A  1233    	LD	B,A
0459EC 17ED62              A  1234    	SEXT	HL
0459EF 68                  A  1235    	LD	L,B
0459F0 E5                  A  1236    	PUSH	HL
0459F1 CD 18 6B 04         A  1237    	CALL	_isspace
0459F5 C1                  A  1238    	POP	BC
0459F6 CD E3 6A 04         A  1239    	CALL	__icmpzero
0459FA 28 0E               A  1240    	JR	Z,L_44
0459FC DD0709              A  1241    	LD	BC,(IX+%9)
0459FF 03                  A  1242    	INC	BC
045A00 DD0F09              A  1243    	LD	(IX+%9),BC
                           A  1244    ;   91	        else break;
                           A  1245    .LINE 91
                           A  1246    
                           A  1247    ;   92	    }
045A03                     A  1248    L_41:
                           A  1249    .LINE 92
                           A  1250    
045A03 DD2709              A  1251    	LD	HL,(IX+%9)
045A06 7E                  A  1252    	LD	A,(HL)
045A07 B7                  A  1253    	OR	A,A
045A08 20 DD               A  1254    	JR	NZ,L_42
045A0A                     A  1255    L_44:
                           A  1256    ;   93	    if(*src == 0) { // empty string
                           A  1257    .LINE 93
                           A  1258    
045A0A DD2709              A  1259    	LD	HL,(IX+%9)
045A0D 7E                  A  1260    	LD	A,(HL)
045A0E B7                  A  1261    	OR	A,A
045A0F 20 29               A  1262    	JR	NZ,L_45
                           A  1263    ;   94	        token->terminator = 0;
                           A  1264    .LINE 94
                           A  1265    
045A11 AF                  A  1266    	XOR	A,A
045A12 01040100            A  1267    	LD	BC,260
045A16 DD3106              A  1268    	LD	IY,(IX+%6)
045A19 CD 30 71 04         A  1269    	CALL	__bstiy
                           A  1270    ;   95	        token->start[0] = 0;
                           A  1271    .LINE 95
                           A  1272    
045A1D FD360000            A  1273    	LD	(IY+%0),%0
                           A  1274    ;   96	        token->length = 0;
                           A  1275    .LINE 96
                           A  1276    
045A21 AF                  A  1277    	XOR	A,A
045A22 01000100            A  1278    	LD	BC,256
045A26 CD 30 71 04         A  1279    	CALL	__bstiy
                           A  1280    ;   97	        token->next = NULL;
                           A  1281    .LINE 97
                           A  1282    
045A2A B7                  A  1283    	OR	A,A
045A2B ED62                A  1284    	SBC	HL,HL
045A2D 01010100            A  1285    	LD	BC,257
045A31 CD F9 64 04         A  1286    	CALL	__istiy
                           A  1287    ;   98	        return 0;
                           A  1288    .LINE 98
                           A  1289    
045A35 AF                  A  1290    	XOR	A,A
045A36 C3 06 5C 04         A  1291    	JR	L_95
                           A  1292    ;   99	    }
045A3A                     A  1293    L_45:
                           A  1294    .LINE 99
                           A  1295    
                           A  1296    ;  100	    // copy over the token itself, taki
                           A  1297    ;  101	    state = TOKEN_REGULAR;
                           A  1298    .LINE 101
                           A  1299    
045A3A 01000000            A  1300    	LD	BC,0
045A3E DD0FF7              A  1301    	LD	(IX+%FFFFFFF7),BC
                           A  1302    ;  102	    target = token->start;
                           A  1303    .LINE 102
                           A  1304    
045A41 DD3106              A  1305    	LD	IY,(IX+%6)
045A44 ED0300              A  1306    	LEA	BC,IY+%0
045A47 DD0FFD              A  1307    	LD	(IX+%FFFFFFFD),BC
                           A  1308    ;  103	    while(true) {
045A4A                     A  1309    L_82:
                           A  1310    .LINE 103
                           A  1311    
                           A  1312    ;  104	        terminated = false;
                           A  1313    .LINE 104
                           A  1314    
045A4A DD36FA00            A  1315    	LD	(IX+%FFFFFFFA),%0
                           A  1316    ;  105	        switch(state) {
                           A  1317    .LINE 105
                           A  1318    
045A4E DD27F7              A  1319    	LD	HL,(IX+%FFFFFFF7)
045A51 CD 64 64 04         A  1320    	CALL	__seqcaseD
045A55 E9                  A  1321    	JP	(HL)
045A56                     A  1322    L__28:
045A56 0300                A  1323    	DW	3
045A58 0000                A  1324    	DW	0
045A5A 00                  A  1325    	DB	0
045A5B D85A04              A  1326    	DW24	L_60	
                           A  1327    
045A5E 675A04              A  1328    	DW24	L_46	
                           A  1329    
045A61 BD5A04              A  1330    	DW24	L_57	
                           A  1331    
045A64 3B5B04              A  1332    	DW24	L_75	
                           A  1333    
                           A  1334    ;  106	            case TOKEN_STRING:
045A67                     A  1335    L_46:
                           A  1336    .LINE 106
                           A  1337    
                           A  1338    ;  107	                switch(*src) {
                           A  1339    .LINE 107
                           A  1340    
045A67 DD2709              A  1341    	LD	HL,(IX+%9)
045A6A 7E                  A  1342    	LD	A,(HL)
045A6B 47                  A  1343    	LD	B,A
045A6C 17ED62              A  1344    	SEXT	HL
045A6F 68                  A  1345    	LD	L,B
045A70 CD 33 6E 04         A  1346    	CALL	__case8D
045A74 E9                  A  1347    	JP	(HL)
045A75                     A  1348    L__29:
045A75 0200                A  1349    	DW	2
045A77 22                  A  1350    	DB	34
045A78 A25A04              A  1351    	DW24	L_52	
                           A  1352    
045A7B 5C                  A  1353    	DB	92
045A7C 825A04              A  1354    	DW24	L_47	
                           A  1355    
045A7F B75A04              A  1356    	DW24	L_55	
                           A  1357    
                           A  1358    ;  108	                    case '\\':
045A82                     A  1359    L_47:
                           A  1360    .LINE 108
                           A  1361    
                           A  1362    ;  109	                        escaped = !esca
                           A  1363    .LINE 109
                           A  1364    
045A82 DD7EFB              A  1365    	LD	A,(IX+%FFFFFFFB)
045A85 B7                  A  1366    	OR	A,A
045A86 20 09               A  1367    	JR	NZ,L_49
045A88 01010000            A  1368    	LD	BC,1
045A8C DD0FF4              A  1369    	LD	(IX+%FFFFFFF4),BC
045A8F 18 07               A  1370    	JR	L_50
045A91                     A  1371    L_49:
045A91 01000000            A  1372    	LD	BC,0
045A95 DD0FF4              A  1373    	LD	(IX+%FFFFFFF4),BC
045A98                     A  1374    L_50:
045A98 DD7EF4              A  1375    	LD	A,(IX+%FFFFFFF4)
045A9B DD77FB              A  1376    	LD	(IX+%FFFFFFFB),A
                           A  1377    ;  110	                        break;
                           A  1378    .LINE 110
                           A  1379    
045A9E C3 3B 5B 04         A  1380    	JR	L_75
                           A  1381    ;  111	                    case '\"':
045AA2                     A  1382    L_52:
                           A  1383    .LINE 111
                           A  1384    
                           A  1385    ;  112	                        if(!escaped) st
                           A  1386    .LINE 112
                           A  1387    
045AA2 DD7EFB              A  1388    	LD	A,(IX+%FFFFFFFB)
045AA5 B7                  A  1389    	OR	A,A
045AA6 20 07               A  1390    	JR	NZ,L_54
045AA8 01000000            A  1391    	LD	BC,0
045AAC DD0FF7              A  1392    	LD	(IX+%FFFFFFF7),BC
045AAF                     A  1393    L_54:
                           A  1394    ;  113	                        escaped = false
                           A  1395    .LINE 113
                           A  1396    
045AAF DD36FB00            A  1397    	LD	(IX+%FFFFFFFB),%0
                           A  1398    ;  114	                        break;
                           A  1399    .LINE 114
                           A  1400    
045AB3 C3 3B 5B 04         A  1401    	JR	L_75
                           A  1402    ;  115	                    default:
045AB7                     A  1403    L_55:
                           A  1404    .LINE 115
                           A  1405    
                           A  1406    ;  116	                        escaped = false
                           A  1407    .LINE 116
                           A  1408    
045AB7 DD36FB00            A  1409    	LD	(IX+%FFFFFFFB),%0
                           A  1410    ;  117	                        break;
                           A  1411    .LINE 117
                           A  1412    
045ABB 18 7E               A  1413    	JR	L_75
                           A  1414    ;  118	                }
                           A  1415    ;  119	                break;
                           A  1416    ;  120	            case TOKEN_BRACKET:
045ABD                     A  1417    L_57:
                           A  1418    .LINE 120
                           A  1419    
                           A  1420    ;  121	                if(*src == ')') state =
                           A  1421    .LINE 121
                           A  1422    
045ABD DD2709              A  1423    	LD	HL,(IX+%9)
045AC0 7E                  A  1424    	LD	A,(HL)
045AC1 47                  A  1425    	LD	B,A
045AC2 17ED62              A  1426    	SEXT	HL
045AC5 68                  A  1427    	LD	L,B
045AC6 01290000            A  1428    	LD	BC,41
045ACA B7                  A  1429    	OR	A,A
045ACB ED42                A  1430    	SBC	HL,BC
045ACD 20 6C               A  1431    	JR	NZ,L_75
045ACF 01000000            A  1432    	LD	BC,0
045AD3 DD0FF7              A  1433    	LD	(IX+%FFFFFFF7),BC
                           A  1434    ;  122	                break;
                           A  1435    .LINE 122
                           A  1436    
045AD6 18 63               A  1437    	JR	L_75
                           A  1438    ;  123	            case TOKEN_REGULAR:
045AD8                     A  1439    L_60:
                           A  1440    .LINE 123
                           A  1441    
                           A  1442    ;  124	                if(*src == '\"') state 
                           A  1443    .LINE 124
                           A  1444    
045AD8 DD2709              A  1445    	LD	HL,(IX+%9)
045ADB 7E                  A  1446    	LD	A,(HL)
045ADC 47                  A  1447    	LD	B,A
045ADD 17ED62              A  1448    	SEXT	HL
045AE0 68                  A  1449    	LD	L,B
045AE1 01220000            A  1450    	LD	BC,34
045AE5 B7                  A  1451    	OR	A,A
045AE6 ED42                A  1452    	SBC	HL,BC
045AE8 20 07               A  1453    	JR	NZ,L_63
045AEA 01010000            A  1454    	LD	BC,1
045AEE DD0FF7              A  1455    	LD	(IX+%FFFFFFF7),BC
045AF1                     A  1456    L_63:
                           A  1457    ;  125	                if(*src == '(') state =
                           A  1458    .LINE 125
                           A  1459    
045AF1 DD2709              A  1460    	LD	HL,(IX+%9)
045AF4 7E                  A  1461    	LD	A,(HL)
045AF5 47                  A  1462    	LD	B,A
045AF6 17ED62              A  1463    	SEXT	HL
045AF9 68                  A  1464    	LD	L,B
045AFA 01280000            A  1465    	LD	BC,40
045AFE B7                  A  1466    	OR	A,A
045AFF ED42                A  1467    	SBC	HL,BC
045B01 20 07               A  1468    	JR	NZ,L_69
045B03 01020000            A  1469    	LD	BC,2
045B07 DD0FF7              A  1470    	LD	(IX+%FFFFFFF7),BC
045B0A                     A  1471    L_69:
                           A  1472    ;  126	                terminated = ((*src == 
                           A  1473    .LINE 126
                           A  1474    
045B0A DD2709              A  1475    	LD	HL,(IX+%9)
045B0D 7E                  A  1476    	LD	A,(HL)
045B0E 47                  A  1477    	LD	B,A
045B0F 17ED62              A  1478    	SEXT	HL
045B12 68                  A  1479    	LD	L,B
045B13 013B0000            A  1480    	LD	BC,59
045B17 B7                  A  1481    	OR	A,A
045B18 ED42                A  1482    	SBC	HL,BC
045B1A 28 09               A  1483    	JR	Z,L_65
045B1C DD2709              A  1484    	LD	HL,(IX+%9)
045B1F 7E                  A  1485    	LD	A,(HL)
045B20 DDBE0C              A  1486    	CP	A,(IX+%C)
045B23 20 09               A  1487    	JR	NZ,L_66
045B25                     A  1488    L_65:
045B25 01010000            A  1489    	LD	BC,1
045B29 DD0FF1              A  1490    	LD	(IX+%FFFFFFF1),BC
045B2C 18 07               A  1491    	JR	L_67
045B2E                     A  1492    L_66:
045B2E 01000000            A  1493    	LD	BC,0
045B32 DD0FF1              A  1494    	LD	(IX+%FFFFFFF1),BC
045B35                     A  1495    L_67:
045B35 DD7EF1              A  1496    	LD	A,(IX+%FFFFFFF1)
045B38 DD77FA              A  1497    	LD	(IX+%FFFFFFFA),A
                           A  1498    ;  127	                break;            
                           A  1499    ;  128	        }
045B3B                     A  1500    L_75:
                           A  1501    .LINE 128
                           A  1502    
                           A  1503    ;  129	        terminated = terminated || (*sr
                           A  1504    .LINE 129
                           A  1505    
045B3B DD7EFA              A  1506    	LD	A,(IX+%FFFFFFFA)
045B3E B7                  A  1507    	OR	A,A
045B3F 20 07               A  1508    	JR	NZ,L_71
045B41 DD2709              A  1509    	LD	HL,(IX+%9)
045B44 7E                  A  1510    	LD	A,(HL)
045B45 B7                  A  1511    	OR	A,A
045B46 20 09               A  1512    	JR	NZ,L_72
045B48                     A  1513    L_71:
045B48 01010000            A  1514    	LD	BC,1
045B4C DD0FEE              A  1515    	LD	(IX+%FFFFFFEE),BC
045B4F 18 07               A  1516    	JR	L_73
045B51                     A  1517    L_72:
045B51 01000000            A  1518    	LD	BC,0
045B55 DD0FEE              A  1519    	LD	(IX+%FFFFFFEE),BC
045B58                     A  1520    L_73:
045B58 DD7EEE              A  1521    	LD	A,(IX+%FFFFFFEE)
045B5B DD77FA              A  1522    	LD	(IX+%FFFFFFFA),A
                           A  1523    ;  130	        if(terminated) {
                           A  1524    .LINE 130
                           A  1525    
045B5E B7                  A  1526    	OR	A,A
045B5F 28 11               A  1527    	JR	Z,L_79
                           A  1528    ;  131	            token->terminator = *src;
                           A  1529    .LINE 131
                           A  1530    
045B61 DD2709              A  1531    	LD	HL,(IX+%9)
045B64 7E                  A  1532    	LD	A,(HL)
045B65 01040100            A  1533    	LD	BC,260
045B69 DD3106              A  1534    	LD	IY,(IX+%6)
045B6C CD 30 71 04         A  1535    	CALL	__bstiy
                           A  1536    ;  132	            break;
                           A  1537    .LINE 132
                           A  1538    
045B70 18 52               A  1539    	JR	L_88
                           A  1540    ;  133	        }
045B72                     A  1541    L_79:
                           A  1542    .LINE 133
                           A  1543    
                           A  1544    ;  134	        *target++ = *src++;
                           A  1545    .LINE 134
                           A  1546    
045B72 DD0709              A  1547    	LD	BC,(IX+%9)
045B75 DD0FEB              A  1548    	LD	(IX+%FFFFFFEB),BC
045B78 DD07FD              A  1549    	LD	BC,(IX+%FFFFFFFD)
045B7B DD0FE8              A  1550    	LD	(IX+%FFFFFFE8),BC
045B7E DD27EB              A  1551    	LD	HL,(IX+%FFFFFFEB)
045B81 DD31E8              A  1552    	LD	IY,(IX+%FFFFFFE8)
045B84 7E                  A  1553    	LD	A,(HL)
045B85 FD7700              A  1554    	LD	(IY),A
045B88 DD0709              A  1555    	LD	BC,(IX+%9)
045B8B 03                  A  1556    	INC	BC
045B8C DD0F09              A  1557    	LD	(IX+%9),BC
045B8F DD07FD              A  1558    	LD	BC,(IX+%FFFFFFFD)
045B92 03                  A  1559    	INC	BC
045B93 DD0FFD              A  1560    	LD	(IX+%FFFFFFFD),BC
                           A  1561    ;  135	        index++;
                           A  1562    .LINE 135
                           A  1563    
045B96 DD34FC              A  1564    	INC	(IX+%FFFFFFFC)
045B99 C3 4A 5A 04         A  1565    	JR	L_82
                           A  1566    ;  136	    }
                           A  1567    ;  137	    // remove trailing space
                           A  1568    ;  138	    while(index) {
045B9D                     A  1569    L_89:
                           A  1570    .LINE 138
                           A  1571    
                           A  1572    ;  139	        target--;
                           A  1573    .LINE 139
                           A  1574    
045B9D DD07FD              A  1575    	LD	BC,(IX+%FFFFFFFD)
045BA0 0B                  A  1576    	DEC	BC
045BA1 DD0FFD              A  1577    	LD	(IX+%FFFFFFFD),BC
                           A  1578    ;  140	        if(isspace(*target) == 0) {
                           A  1579    .LINE 140
                           A  1580    
045BA4 C5E1                A  1581    	LD	HL,BC
045BA6 7E                  A  1582    	LD	A,(HL)
045BA7 47                  A  1583    	LD	B,A
045BA8 17ED62              A  1584    	SEXT	HL
045BAB 68                  A  1585    	LD	L,B
045BAC E5                  A  1586    	PUSH	HL
045BAD CD 18 6B 04         A  1587    	CALL	_isspace
045BB1 C1                  A  1588    	POP	BC
045BB2 CD E3 6A 04         A  1589    	CALL	__icmpzero
045BB6 20 09               A  1590    	JR	NZ,L_87
                           A  1591    ;  141	            target++;
                           A  1592    .LINE 141
                           A  1593    
045BB8 DD07FD              A  1594    	LD	BC,(IX+%FFFFFFFD)
045BBB 03                  A  1595    	INC	BC
045BBC DD0FFD              A  1596    	LD	(IX+%FFFFFFFD),BC
                           A  1597    ;  142	            break;
                           A  1598    .LINE 142
                           A  1599    
045BBF 18 09               A  1600    	JR	L_91
                           A  1601    ;  143	        }
045BC1                     A  1602    L_87:
                           A  1603    .LINE 143
                           A  1604    
                           A  1605    ;  144	        index--;
                           A  1606    .LINE 144
                           A  1607    
045BC1 DD35FC              A  1608    	DEC	(IX+%FFFFFFFC)
                           A  1609    ;  145	    }
045BC4                     A  1610    L_88:
                           A  1611    .LINE 145
                           A  1612    
045BC4 DD7EFC              A  1613    	LD	A,(IX+%FFFFFFFC)
045BC7 B7                  A  1614    	OR	A,A
045BC8 20 D3               A  1615    	JR	NZ,L_89
045BCA                     A  1616    L_91:
                           A  1617    ;  146	    *target = 0;
                           A  1618    .LINE 146
                           A  1619    
045BCA DD27FD              A  1620    	LD	HL,(IX+%FFFFFFFD)
045BCD 3600                A  1621    	LD	(HL),%0
                           A  1622    ;  147	    if(*src == 0) token->next = NULL;
                           A  1623    .LINE 147
                           A  1624    
045BCF DD2709              A  1625    	LD	HL,(IX+%9)
045BD2 7E                  A  1626    	LD	A,(HL)
045BD3 B7                  A  1627    	OR	A,A
045BD4 20 10               A  1628    	JR	NZ,L_93
045BD6 B7                  A  1629    	OR	A,A
045BD7 ED62                A  1630    	SBC	HL,HL
045BD9 01010100            A  1631    	LD	BC,257
045BDD DD3106              A  1632    	LD	IY,(IX+%6)
045BE0 CD F9 64 04         A  1633    	CALL	__istiy
                           A  1634    ;  148	    else token->next = src+1;
                           A  1635    .LINE 148
                           A  1636    
045BE4 18 0F               A  1637    	JR	L_94
045BE6                     A  1638    L_93:
045BE6 DD2709              A  1639    	LD	HL,(IX+%9)
045BE9 23                  A  1640    	INC	HL
045BEA 01010100            A  1641    	LD	BC,257
045BEE DD3106              A  1642    	LD	IY,(IX+%6)
045BF1 CD F9 64 04         A  1643    	CALL	__istiy
045BF5                     A  1644    L_94:
                           A  1645    ;  149	    token->length = index;
                           A  1646    .LINE 149
                           A  1647    
045BF5 DD7EFC              A  1648    	LD	A,(IX+%FFFFFFFC)
045BF8 01000100            A  1649    	LD	BC,256
045BFC DD3106              A  1650    	LD	IY,(IX+%6)
045BFF CD 30 71 04         A  1651    	CALL	__bstiy
                           A  1652    ;  150	    return index;
                           A  1653    .LINE 150
                           A  1654    
045C03 DD7EFC              A  1655    	LD	A,(IX+%FFFFFFFC)
                           A  1656    ;  151	}
045C06                     A  1657    L_95:
                           A  1658    .LINE 151
                           A  1659    
045C06 DDF9                A  1660    	LD	SP,IX
045C08 DDE1                A  1661    	POP	IX
045C0A C9                  A  1662    	RET	
                           A  1663    
                           A  1664    
                           A  1665    ;**************************** _getLineToken ***
                           A  1666    ;Name                         Addr/Register   S
                           A  1667    ;_isspace                            IMPORT  --
                           A  1668    ;temp74                               IX-18    
                           A  1669    ;temp68                               IX-15    
                           A  1670    ;temp51                               IX-12    
                           A  1671    ;state                                 IX-9    
                           A  1672    ;terminated                            IX-6    
                           A  1673    ;escaped                               IX-5    
                           A  1674    ;index                                 IX-4    
                           A  1675    ;target                                IX-3    
                           A  1676    ;terminator                           IX+12    
                           A  1677    ;src                                   IX+9    
                           A  1678    ;token                                 IX+6    
                           A  1679    
                           A  1680    
                           A  1681    ; Stack Frame Size: 39 (bytes)
                           A  1682    ;       Spill Code: 0 (instruction)
                           A  1683    
                           A  1684    
                           A  1685    .ENDFUNC "getLineToken",151,"_getLineToken"
                           A  1686    ;  152	
                           A  1687    ;  153	uint8_t getOperatorToken(tokentype *tok
045C0B                     A  1688    _getOperatorToken:
                           A  1689    .DEFINE "_getOperatorToken"
                           A  1690    
                           A  1691    .VALUE _getOperatorToken
                           A  1692    
                           A  1693    .CLASS 2
                           A  1694    
                           A  1695    .TYPE 76
                           A  1696    
                           A  1697    .ENDEF
                           A  1698    
                           A  1699    .BEGFUNC "getOperatorToken",153,"_getOperatorTo
                           A  1700    
                           A  1701    .LINE 153
                           A  1702    
                           A  1703    .DEFINE "token"
                           A  1704    
                           A  1705    .CLASS 65
                           A  1706    
                           A  1707    .VALUE 6
                           A  1708    
                           A  1709    .TAG "NONAME6"
                           A  1710    
                           A  1711    .TYPE 40
                           A  1712    
                           A  1713    .ENDEF
                           A  1714    
                           A  1715    .DEFINE "src"
                           A  1716    
                           A  1717    .CLASS 65
                           A  1718    
                           A  1719    .VALUE 9
                           A  1720    
                           A  1721    .TYPE 34
                           A  1722    
                           A  1723    .ENDEF
                           A  1724    
                           A  1725    .DEFINE "target"
                           A  1726    
                           A  1727    .CLASS 65
                           A  1728    
                           A  1729    .VALUE -3
                           A  1730    
                           A  1731    .TYPE 34
                           A  1732    
                           A  1733    .ENDEF
                           A  1734    
                           A  1735    .DEFINE "index"
                           A  1736    
                           A  1737    .CLASS 65
                           A  1738    
                           A  1739    .VALUE -4
                           A  1740    
                           A  1741    .TYPE 12
                           A  1742    
                           A  1743    .ENDEF
                           A  1744    
045C0B DDE5                A  1745    	PUSH	IX
045C0D DD210000 00         A  1746    	LD	IX,0
045C12 DD39                A  1747    	ADD	IX,SP
045C14 ED22F3              A  1748    	LEA	HL,IX+%FFFFFFF3
045C17 F9                  A  1749    	LD	SP,HL
                           A  1750    ;  154	    char *target;
                           A  1751    ;  155	    uint8_t index = 0;
                           A  1752    .LINE 155
                           A  1753    
045C18 DD36FC00            A  1754    	LD	(IX+%FFFFFFFC),%0
                           A  1755    ;  156	
                           A  1756    ;  157	    // remove leading space
                           A  1757    ;  158	    while(*src) {
                           A  1758    .LINE 158
                           A  1759    
045C1C 18 1C               A  1760    	JR	L_99
045C1E                     A  1761    L_100:
                           A  1762    ;  159	        if(isspace(*src) != 0) src++;
                           A  1763    .LINE 159
                           A  1764    
045C1E DD2709              A  1765    	LD	HL,(IX+%9)
045C21 7E                  A  1766    	LD	A,(HL)
045C22 47                  A  1767    	LD	B,A
045C23 17ED62              A  1768    	SEXT	HL
045C26 68                  A  1769    	LD	L,B
045C27 E5                  A  1770    	PUSH	HL
045C28 CD 18 6B 04         A  1771    	CALL	_isspace
045C2C C1                  A  1772    	POP	BC
045C2D CD E3 6A 04         A  1773    	CALL	__icmpzero
045C31 28 0E               A  1774    	JR	Z,L_102
045C33 DD0709              A  1775    	LD	BC,(IX+%9)
045C36 03                  A  1776    	INC	BC
045C37 DD0F09              A  1777    	LD	(IX+%9),BC
                           A  1778    ;  160	        else break;
                           A  1779    .LINE 160
                           A  1780    
                           A  1781    ;  161	    }
045C3A                     A  1782    L_99:
                           A  1783    .LINE 161
                           A  1784    
045C3A DD2709              A  1785    	LD	HL,(IX+%9)
045C3D 7E                  A  1786    	LD	A,(HL)
045C3E B7                  A  1787    	OR	A,A
045C3F 20 DD               A  1788    	JR	NZ,L_100
045C41                     A  1789    L_102:
                           A  1790    ;  162	    if(*src == 0) { // empty string
                           A  1791    .LINE 162
                           A  1792    
045C41 DD2709              A  1793    	LD	HL,(IX+%9)
045C44 7E                  A  1794    	LD	A,(HL)
045C45 B7                  A  1795    	OR	A,A
045C46 20 29               A  1796    	JR	NZ,L_103
                           A  1797    ;  163	        token->terminator = 0;
                           A  1798    .LINE 163
                           A  1799    
045C48 AF                  A  1800    	XOR	A,A
045C49 01040100            A  1801    	LD	BC,260
045C4D DD3106              A  1802    	LD	IY,(IX+%6)
045C50 CD 30 71 04         A  1803    	CALL	__bstiy
                           A  1804    ;  164	        token->start[0] = 0;
                           A  1805    .LINE 164
                           A  1806    
045C54 FD360000            A  1807    	LD	(IY+%0),%0
                           A  1808    ;  165	        token->length = 0;
                           A  1809    .LINE 165
                           A  1810    
045C58 AF                  A  1811    	XOR	A,A
045C59 01000100            A  1812    	LD	BC,256
045C5D CD 30 71 04         A  1813    	CALL	__bstiy
                           A  1814    ;  166	        token->next = NULL;
                           A  1815    .LINE 166
                           A  1816    
045C61 B7                  A  1817    	OR	A,A
045C62 ED62                A  1818    	SBC	HL,HL
045C64 01010100            A  1819    	LD	BC,257
045C68 CD F9 64 04         A  1820    	CALL	__istiy
                           A  1821    ;  167	        return 0;
                           A  1822    .LINE 167
                           A  1823    
045C6C AF                  A  1824    	XOR	A,A
045C6D C3 BC 5D 04         A  1825    	JR	L_132
                           A  1826    ;  168	    }
045C71                     A  1827    L_103:
                           A  1828    .LINE 168
                           A  1829    
                           A  1830    ;  169	    // copy content
                           A  1831    ;  170	    target = token->start;
                           A  1832    .LINE 170
                           A  1833    
045C71 DD3106              A  1834    	LD	IY,(IX+%6)
045C74 ED0300              A  1835    	LEA	BC,IY+%0
045C77 DD0FFD              A  1836    	LD	(IX+%FFFFFFFD),BC
                           A  1837    ;  171	    while(true) {
045C7A                     A  1838    L_119:
                           A  1839    .LINE 171
                           A  1840    
                           A  1841    ;  172	        if((*src == 0) || (*src == '+')
                           A  1842    .LINE 172
                           A  1843    
045C7A DD2709              A  1844    	LD	HL,(IX+%9)
045C7D 7E                  A  1845    	LD	A,(HL)
045C7E B7                  A  1846    	OR	A,A
045C7F 28 48               A  1847    	JR	Z,L_113
045C81 DD2709              A  1848    	LD	HL,(IX+%9)
045C84 7E                  A  1849    	LD	A,(HL)
045C85 47                  A  1850    	LD	B,A
045C86 17ED62              A  1851    	SEXT	HL
045C89 68                  A  1852    	LD	L,B
045C8A 012B0000            A  1853    	LD	BC,43
045C8E B7                  A  1854    	OR	A,A
045C8F ED42                A  1855    	SBC	HL,BC
045C91 28 36               A  1856    	JR	Z,L_113
045C93 DD2709              A  1857    	LD	HL,(IX+%9)
045C96 7E                  A  1858    	LD	A,(HL)
045C97 47                  A  1859    	LD	B,A
045C98 17ED62              A  1860    	SEXT	HL
045C9B 68                  A  1861    	LD	L,B
045C9C 012D0000            A  1862    	LD	BC,45
045CA0 B7                  A  1863    	OR	A,A
045CA1 ED42                A  1864    	SBC	HL,BC
045CA3 28 24               A  1865    	JR	Z,L_113
045CA5 DD2709              A  1866    	LD	HL,(IX+%9)
045CA8 7E                  A  1867    	LD	A,(HL)
045CA9 47                  A  1868    	LD	B,A
045CAA 17ED62              A  1869    	SEXT	HL
045CAD 68                  A  1870    	LD	L,B
045CAE 013C0000            A  1871    	LD	BC,60
045CB2 B7                  A  1872    	OR	A,A
045CB3 ED42                A  1873    	SBC	HL,BC
045CB5 28 12               A  1874    	JR	Z,L_113
045CB7 DD2709              A  1875    	LD	HL,(IX+%9)
045CBA 7E                  A  1876    	LD	A,(HL)
045CBB 47                  A  1877    	LD	B,A
045CBC 17ED62              A  1878    	SEXT	HL
045CBF 68                  A  1879    	LD	L,B
045CC0 013E0000            A  1880    	LD	BC,62
045CC4 B7                  A  1881    	OR	A,A
045CC5 ED42                A  1882    	SBC	HL,BC
045CC7 20 5F               A  1883    	JR	NZ,L_116
045CC9                     A  1884    L_113:
                           A  1885    ;  173	            if(((*src == '<') || (*src 
                           A  1886    .LINE 173
                           A  1887    
045CC9 DD2709              A  1888    	LD	HL,(IX+%9)
045CCC 7E                  A  1889    	LD	A,(HL)
045CCD 47                  A  1890    	LD	B,A
045CCE 17ED62              A  1891    	SEXT	HL
045CD1 68                  A  1892    	LD	L,B
045CD2 013C0000            A  1893    	LD	BC,60
045CD6 B7                  A  1894    	OR	A,A
045CD7 ED42                A  1895    	SBC	HL,BC
045CD9 28 12               A  1896    	JR	Z,L_111
045CDB DD2709              A  1897    	LD	HL,(IX+%9)
045CDE 7E                  A  1898    	LD	A,(HL)
045CDF 47                  A  1899    	LD	B,A
045CE0 17ED62              A  1900    	SEXT	HL
045CE3 68                  A  1901    	LD	L,B
045CE4 013E0000            A  1902    	LD	BC,62
045CE8 B7                  A  1903    	OR	A,A
045CE9 ED42                A  1904    	SBC	HL,BC
045CEB 20 2A               A  1905    	JR	NZ,L_112
045CED                     A  1906    L_111:
                           A  1907    ;  174	                if((*(src+1) == *src)) 
                           A  1908    .LINE 174
                           A  1909    
045CED DD0709              A  1910    	LD	BC,(IX+%9)
045CF0 03                  A  1911    	INC	BC
045CF1 DD0FF9              A  1912    	LD	(IX+%FFFFFFF9),BC
045CF4 DD2709              A  1913    	LD	HL,(IX+%9)
045CF7 DD31F9              A  1914    	LD	IY,(IX+%FFFFFFF9)
045CFA 7E                  A  1915    	LD	A,(HL)
045CFB FDBE00              A  1916    	CP	A,(IY)
045CFE 20 08               A  1917    	JR	NZ,L_110
045D00 DD07F9              A  1918    	LD	BC,(IX+%FFFFFFF9)
045D03 DD0F09              A  1919    	LD	(IX+%9),BC
                           A  1920    ;  175	                else {
                           A  1921    .LINE 175
                           A  1922    
045D06 18 0F               A  1923    	JR	L_112
045D08                     A  1924    L_110:
                           A  1925    ;  176	                    token->terminator =
                           A  1926    .LINE 176
                           A  1927    
045D08 3E21                A  1928    	LD	A,%21
045D0A 01040100            A  1929    	LD	BC,260
045D0E DD3106              A  1930    	LD	IY,(IX+%6)
045D11 CD 30 71 04         A  1931    	CALL	__bstiy
                           A  1932    ;  177	                    break;
                           A  1933    .LINE 177
                           A  1934    
045D15 18 63               A  1935    	JR	L_125
                           A  1936    ;  178	                }
                           A  1937    ;  179	            }
045D17                     A  1938    L_112:
                           A  1939    .LINE 179
                           A  1940    
                           A  1941    ;  180	            token->terminator = *src;
                           A  1942    .LINE 180
                           A  1943    
045D17 DD2709              A  1944    	LD	HL,(IX+%9)
045D1A 7E                  A  1945    	LD	A,(HL)
045D1B 01040100            A  1946    	LD	BC,260
045D1F DD3106              A  1947    	LD	IY,(IX+%6)
045D22 CD 30 71 04         A  1948    	CALL	__bstiy
                           A  1949    ;  181	            break;
                           A  1950    .LINE 181
                           A  1951    
045D26 18 52               A  1952    	JR	L_125
                           A  1953    ;  182	        }
045D28                     A  1954    L_116:
                           A  1955    .LINE 182
                           A  1956    
                           A  1957    ;  183	        *target++ = *src++;
                           A  1958    .LINE 183
                           A  1959    
045D28 DD0709              A  1960    	LD	BC,(IX+%9)
045D2B DD0FF6              A  1961    	LD	(IX+%FFFFFFF6),BC
045D2E DD07FD              A  1962    	LD	BC,(IX+%FFFFFFFD)
045D31 DD0FF3              A  1963    	LD	(IX+%FFFFFFF3),BC
045D34 DD27F6              A  1964    	LD	HL,(IX+%FFFFFFF6)
045D37 DD31F3              A  1965    	LD	IY,(IX+%FFFFFFF3)
045D3A 7E                  A  1966    	LD	A,(HL)
045D3B FD7700              A  1967    	LD	(IY),A
045D3E DD0709              A  1968    	LD	BC,(IX+%9)
045D41 03                  A  1969    	INC	BC
045D42 DD0F09              A  1970    	LD	(IX+%9),BC
045D45 DD07FD              A  1971    	LD	BC,(IX+%FFFFFFFD)
045D48 03                  A  1972    	INC	BC
045D49 DD0FFD              A  1973    	LD	(IX+%FFFFFFFD),BC
                           A  1974    ;  184	        index++;
                           A  1975    .LINE 184
                           A  1976    
045D4C DD34FC              A  1977    	INC	(IX+%FFFFFFFC)
045D4F C3 7A 5C 04         A  1978    	JR	L_119
                           A  1979    ;  185	    }
                           A  1980    ;  186	    // remove trailing space
                           A  1981    ;  187	    while(index) {
045D53                     A  1982    L_126:
                           A  1983    .LINE 187
                           A  1984    
                           A  1985    ;  188	        target--;
                           A  1986    .LINE 188
                           A  1987    
045D53 DD07FD              A  1988    	LD	BC,(IX+%FFFFFFFD)
045D56 0B                  A  1989    	DEC	BC
045D57 DD0FFD              A  1990    	LD	(IX+%FFFFFFFD),BC
                           A  1991    ;  189	        if(isspace(*target) == 0) {
                           A  1992    .LINE 189
                           A  1993    
045D5A C5E1                A  1994    	LD	HL,BC
045D5C 7E                  A  1995    	LD	A,(HL)
045D5D 47                  A  1996    	LD	B,A
045D5E 17ED62              A  1997    	SEXT	HL
045D61 68                  A  1998    	LD	L,B
045D62 E5                  A  1999    	PUSH	HL
045D63 CD 18 6B 04         A  2000    	CALL	_isspace
045D67 C1                  A  2001    	POP	BC
045D68 CD E3 6A 04         A  2002    	CALL	__icmpzero
045D6C 20 09               A  2003    	JR	NZ,L_124
                           A  2004    ;  190	            target++;
                           A  2005    .LINE 190
                           A  2006    
045D6E DD07FD              A  2007    	LD	BC,(IX+%FFFFFFFD)
045D71 03                  A  2008    	INC	BC
045D72 DD0FFD              A  2009    	LD	(IX+%FFFFFFFD),BC
                           A  2010    ;  191	            break;
                           A  2011    .LINE 191
                           A  2012    
045D75 18 09               A  2013    	JR	L_128
                           A  2014    ;  192	        }
045D77                     A  2015    L_124:
                           A  2016    .LINE 192
                           A  2017    
                           A  2018    ;  193	        index--;
                           A  2019    .LINE 193
                           A  2020    
045D77 DD35FC              A  2021    	DEC	(IX+%FFFFFFFC)
                           A  2022    ;  194	    }
045D7A                     A  2023    L_125:
                           A  2024    .LINE 194
                           A  2025    
045D7A DD7EFC              A  2026    	LD	A,(IX+%FFFFFFFC)
045D7D B7                  A  2027    	OR	A,A
045D7E 20 D3               A  2028    	JR	NZ,L_126
045D80                     A  2029    L_128:
                           A  2030    ;  195	    *target = 0;
                           A  2031    .LINE 195
                           A  2032    
045D80 DD27FD              A  2033    	LD	HL,(IX+%FFFFFFFD)
045D83 3600                A  2034    	LD	(HL),%0
                           A  2035    ;  196	    if(*src == 0) token->next = NULL;
                           A  2036    .LINE 196
                           A  2037    
045D85 DD2709              A  2038    	LD	HL,(IX+%9)
045D88 7E                  A  2039    	LD	A,(HL)
045D89 B7                  A  2040    	OR	A,A
045D8A 20 10               A  2041    	JR	NZ,L_130
045D8C B7                  A  2042    	OR	A,A
045D8D ED62                A  2043    	SBC	HL,HL
045D8F 01010100            A  2044    	LD	BC,257
045D93 DD3106              A  2045    	LD	IY,(IX+%6)
045D96 CD F9 64 04         A  2046    	CALL	__istiy
                           A  2047    ;  197	    else token->next = src+1;
                           A  2048    .LINE 197
                           A  2049    
045D9A 18 0F               A  2050    	JR	L_131
045D9C                     A  2051    L_130:
045D9C DD2709              A  2052    	LD	HL,(IX+%9)
045D9F 23                  A  2053    	INC	HL
045DA0 01010100            A  2054    	LD	BC,257
045DA4 DD3106              A  2055    	LD	IY,(IX+%6)
045DA7 CD F9 64 04         A  2056    	CALL	__istiy
045DAB                     A  2057    L_131:
                           A  2058    ;  198	    token->length = index;
                           A  2059    .LINE 198
                           A  2060    
045DAB DD7EFC              A  2061    	LD	A,(IX+%FFFFFFFC)
045DAE 01000100            A  2062    	LD	BC,256
045DB2 DD3106              A  2063    	LD	IY,(IX+%6)
045DB5 CD 30 71 04         A  2064    	CALL	__bstiy
                           A  2065    ;  199	    return index;
                           A  2066    .LINE 199
                           A  2067    
045DB9 DD7EFC              A  2068    	LD	A,(IX+%FFFFFFFC)
                           A  2069    ;  200	}
045DBC                     A  2070    L_132:
                           A  2071    .LINE 200
                           A  2072    
045DBC DDF9                A  2073    	LD	SP,IX
045DBE DDE1                A  2074    	POP	IX
045DC0 C9                  A  2075    	RET	
                           A  2076    
                           A  2077    
                           A  2078    ;**************************** _getOperatorToken
                           A  2079    ;Name                         Addr/Register   S
                           A  2080    ;_isspace                            IMPORT  --
                           A  2081    ;G_0                                   IX-7    
                           A  2082    ;index                                 IX-4    
                           A  2083    ;target                                IX-3    
                           A  2084    ;src                                   IX+9    
                           A  2085    ;token                                 IX+6    
                           A  2086    
                           A  2087    
                           A  2088    ; Stack Frame Size: 25 (bytes)
                           A  2089    ;       Spill Code: 0 (instruction)
                           A  2090    
                           A  2091    
                           A  2092    .ENDFUNC "getOperatorToken",200,"_getOperatorTo
                           A  2093    ;  201	
                           A  2094    ;  202	
                           A  2095    ;  203	bool openFile(uint8_t *file, char *name
045DC1                     A  2096    _openFile:
                           A  2097    .DEFINE "_openFile"
                           A  2098    
                           A  2099    .VALUE _openFile
                           A  2100    
                           A  2101    .CLASS 2
                           A  2102    
                           A  2103    .TYPE 76
                           A  2104    
                           A  2105    .ENDEF
                           A  2106    
                           A  2107    .BEGFUNC "openFile",203,"_openFile"
                           A  2108    
                           A  2109    .LINE 203
                           A  2110    
                           A  2111    .DEFINE "file"
                           A  2112    
                           A  2113    .CLASS 65
                           A  2114    
                           A  2115    .VALUE 6
                           A  2116    
                           A  2117    .TYPE 44
                           A  2118    
                           A  2119    .ENDEF
                           A  2120    
                           A  2121    .DEFINE "name"
                           A  2122    
                           A  2123    .CLASS 65
                           A  2124    
                           A  2125    .VALUE 9
                           A  2126    
                           A  2127    .TYPE 34
                           A  2128    
                           A  2129    .ENDEF
                           A  2130    
                           A  2131    .DEFINE "mode"
                           A  2132    
                           A  2133    .CLASS 65
                           A  2134    
                           A  2135    .VALUE 12
                           A  2136    
                           A  2137    .TYPE 12
                           A  2138    
                           A  2139    .ENDEF
                           A  2140    
045DC1 DDE5                A  2141    	PUSH	IX
045DC3 DD210000 00         A  2142    	LD	IX,0
045DC8 DD39                A  2143    	ADD	IX,SP
                           A  2144    ;  204	    *file = mos_fopen(name, mode);
                           A  2145    .LINE 204
                           A  2146    
045DCA DD4E0C              A  2147    	LD	C,(IX+%C)
045DCD 0600                A  2148    	LD	B,%0
045DCF C5                  A  2149    	PUSH	BC
045DD0 DD0709              A  2150    	LD	BC,(IX+%9)
045DD3 C5                  A  2151    	PUSH	BC
045DD4 CD 4E 0D 04         A  2152    	CALL	_mos_fopen
045DD8 C1                  A  2153    	POP	BC
045DD9 C1                  A  2154    	POP	BC
045DDA DD2706              A  2155    	LD	HL,(IX+%6)
045DDD 77                  A  2156    	LD	(HL),A
                           A  2157    ;  205	
                           A  2158    ;  206	    if(*file) return true;
                           A  2159    .LINE 206
                           A  2160    
045DDE DD2706              A  2161    	LD	HL,(IX+%6)
045DE1 7E                  A  2162    	LD	A,(HL)
045DE2 B7                  A  2163    	OR	A,A
045DE3 28 04               A  2164    	JR	Z,L_134
045DE5 3E01                A  2165    	LD	A,%1
045DE7 18 27               A  2166    	JR	L_135
045DE9                     A  2167    L_134:
                           A  2168    ;  207	    printf("Error opening \"%s\"\n\r", 
                           A  2169    .LINE 207
                           A  2170    
045DE9 01 9C 66 04         A  2171    	LD	BC,___print_uputch
045DED ED43 34 8C 04       A  2172    	LD	(___print_xputch),BC
045DF2 01 CD 91 04         A  2173    	LD	BC,L__60
045DF6 C5                  A  2174    	PUSH	BC
045DF7 CD 0E 65 04         A  2175    	CALL	___print_sendstring
045DFB C1                  A  2176    	POP	BC
045DFC DD0709              A  2177    	LD	BC,(IX+%9)
045DFF C5                  A  2178    	PUSH	BC
045E00 CD 0E 65 04         A  2179    	CALL	___print_sendstring
045E04 C1                  A  2180    	POP	BC
045E05 01 DD 91 04         A  2181    	LD	BC,L__61
045E09 C5                  A  2182    	PUSH	BC
045E0A CD 0E 65 04         A  2183    	CALL	___print_sendstring
045E0E C1                  A  2184    	POP	BC
                           A  2185    ;  208	    return false;
                           A  2186    .LINE 208
                           A  2187    
045E0F AF                  A  2188    	XOR	A,A
                           A  2189    ;  209	}
045E10                     A  2190    L_135:
                           A  2191    .LINE 209
                           A  2192    
045E10 DDF9                A  2193    	LD	SP,IX
045E12 DDE1                A  2194    	POP	IX
045E14 C9                  A  2195    	RET	
                           A  2196    
                           A  2197    
                           A  2198    ;**************************** _openFile *******
                           A  2199    ;Name                         Addr/Register   S
                           A  2200    ;___print_sendstring                 IMPORT  --
                           A  2201    ;___print_xputch                     IMPORT    
                           A  2202    ;___print_uputch                     IMPORT  --
                           A  2203    ;_mos_fopen                          IMPORT  --
                           A  2204    ;mode                                 IX+12    
                           A  2205    ;name                                  IX+9    
                           A  2206    ;file                                  IX+6    
                           A  2207    
                           A  2208    
                           A  2209    ; Stack Frame Size: 15 (bytes)
                           A  2210    ;       Spill Code: 0 (instruction)
                           A  2211    
                           A  2212    
                           A  2213    .ENDFUNC "openFile",209,"_openFile"
                           A  2214    	SEGMENT STRSECT
0491CD                     A  2215    L__60:
0491CD 4572726F 72206F70   A  2216    	DB	"Error opening \""
0491D5 656E696E 672022 
0491DC 00                  A  2217    	DB	0
0491DD                     A  2218    L__61:
0491DD 22                  A  2219    	DB	"\""
0491DE 0A0D00              A  2220    	DB	10,13,0
                           A  2221    	SEGMENT CODE
                           A  2222    ;  210	
                           A  2223    ;  211	bool reOpenFile(uint8_t number, uint8_t
045E15                     A  2224    _reOpenFile:
                           A  2225    .DEFINE "_reOpenFile"
                           A  2226    
                           A  2227    .VALUE _reOpenFile
                           A  2228    
                           A  2229    .CLASS 2
                           A  2230    
                           A  2231    .TYPE 76
                           A  2232    
                           A  2233    .ENDEF
                           A  2234    
                           A  2235    .BEGFUNC "reOpenFile",211,"_reOpenFile"
                           A  2236    
                           A  2237    .LINE 211
                           A  2238    
                           A  2239    .DEFINE "number"
                           A  2240    
                           A  2241    .CLASS 65
                           A  2242    
                           A  2243    .VALUE 6
                           A  2244    
                           A  2245    .TYPE 12
                           A  2246    
                           A  2247    .ENDEF
                           A  2248    
                           A  2249    .DEFINE "mode"
                           A  2250    
                           A  2251    .CLASS 65
                           A  2252    
                           A  2253    .VALUE 9
                           A  2254    
                           A  2255    .TYPE 12
                           A  2256    
                           A  2257    .ENDEF
                           A  2258    
045E15 DDE5                A  2259    	PUSH	IX
045E17 DD210000 00         A  2260    	LD	IX,0
045E1C DD39                A  2261    	ADD	IX,SP
045E1E C5                  A  2262    	PUSH	BC
045E1F C5                  A  2263    	PUSH	BC
                           A  2264    ;  212	    if(filehandle[number]) mos_fclose(f
                           A  2265    .LINE 212
                           A  2266    
045E20 DD7E06              A  2267    	LD	A,(IX+%6)
045E23 B7ED62              A  2268    	UEXT	HL
045E26 6F                  A  2269    	LD	L,A
045E27 01 0B 97 04         A  2270    	LD	BC,_filehandle
045E2B 09                  A  2271    	ADD	HL,BC
045E2C DD2FFD              A  2272    	LD	(IX+%FFFFFFFD),HL
045E2F DD2FFA              A  2273    	LD	(IX+%FFFFFFFA),HL
045E32 DD27FD              A  2274    	LD	HL,(IX+%FFFFFFFD)
045E35 7E                  A  2275    	LD	A,(HL)
045E36 B7                  A  2276    	OR	A,A
045E37 28 12               A  2277    	JR	Z,L_137
045E39 DD07FD              A  2278    	LD	BC,(IX+%FFFFFFFD)
045E3C DD0FFA              A  2279    	LD	(IX+%FFFFFFFA),BC
045E3F DD27FD              A  2280    	LD	HL,(IX+%FFFFFFFD)
045E42 4E                  A  2281    	LD	C,(HL)
045E43 0600                A  2282    	LD	B,%0
045E45 C5                  A  2283    	PUSH	BC
045E46 CD 66 0D 04         A  2284    	CALL	_mos_fclose
045E4A C1                  A  2285    	POP	BC
045E4B                     A  2286    L_137:
                           A  2287    ;  213	    return openFile(&filehandle[number]
                           A  2288    .LINE 213
                           A  2289    
045E4B DD4E09              A  2290    	LD	C,(IX+%9)
045E4E 0600                A  2291    	LD	B,%0
045E50 C5                  A  2292    	PUSH	BC
045E51 DD7E06              A  2293    	LD	A,(IX+%6)
045E54 B7ED62              A  2294    	UEXT	HL
045E57 6F                  A  2295    	LD	L,A
045E58 29                  A  2296    	ADD	HL,HL
045E59 29                  A  2297    	ADD	HL,HL
045E5A 29                  A  2298    	ADD	HL,HL
045E5B 29                  A  2299    	ADD	HL,HL
045E5C 29                  A  2300    	ADD	HL,HL
045E5D 29                  A  2301    	ADD	HL,HL
045E5E 29                  A  2302    	ADD	HL,HL
045E5F 01 0B 94 04         A  2303    	LD	BC,_filename
045E63 09                  A  2304    	ADD	HL,BC
045E64 E5                  A  2305    	PUSH	HL
045E65 DD07FA              A  2306    	LD	BC,(IX+%FFFFFFFA)
045E68 C5                  A  2307    	PUSH	BC
045E69 CD C1 5D 04         A  2308    	CALL	_openFile
045E6D C1                  A  2309    	POP	BC
045E6E C1                  A  2310    	POP	BC
045E6F C1                  A  2311    	POP	BC
                           A  2312    ;  214	}
                           A  2313    .LINE 214
                           A  2314    
045E70 DDF9                A  2315    	LD	SP,IX
045E72 DDE1                A  2316    	POP	IX
045E74 C9                  A  2317    	RET	
                           A  2318    
                           A  2319    
                           A  2320    ;**************************** _reOpenFile *****
                           A  2321    ;Name                         Addr/Register   S
                           A  2322    ;_filename                           IMPORT    
                           A  2323    ;_openFile                           IMPORT  --
                           A  2324    ;_mos_fclose                         IMPORT  --
                           A  2325    ;_filehandle                         IMPORT    
                           A  2326    ;G_2                                   IX-6    
                           A  2327    ;G_1                                   IX-3    
                           A  2328    ;mode                                  IX+9    
                           A  2329    ;number                                IX+6    
                           A  2330    
                           A  2331    
                           A  2332    ; Stack Frame Size: 18 (bytes)
                           A  2333    ;       Spill Code: 0 (instruction)
                           A  2334    
                           A  2335    
                           A  2336    .ENDFUNC "reOpenFile",214,"_reOpenFile"
                           A  2337    ;  215	
                           A  2338    ;  216	void prepare_filenames(char *input_file
045E75                     A  2339    _prepare_filenames:
                           A  2340    .DEFINE "_prepare_filenames"
                           A  2341    
                           A  2342    .VALUE _prepare_filenames
                           A  2343    
                           A  2344    .CLASS 2
                           A  2345    
                           A  2346    .TYPE 65
                           A  2347    
                           A  2348    .ENDEF
                           A  2349    
                           A  2350    .BEGFUNC "prepare_filenames",216,"_prepare_file
                           A  2351    
                           A  2352    .LINE 216
                           A  2353    
                           A  2354    .DEFINE "input_filename"
                           A  2355    
                           A  2356    .CLASS 65
                           A  2357    
                           A  2358    .VALUE 6
                           A  2359    
                           A  2360    .TYPE 34
                           A  2361    
                           A  2362    .ENDEF
                           A  2363    
045E75 DDE5                A  2364    	PUSH	IX
045E77 DD210000 00         A  2365    	LD	IX,0
045E7C DD39                A  2366    	ADD	IX,SP
                           A  2367    ;  217	    // prepare filenames
                           A  2368    ;  218	    strcpy(filename[FILE_INPUT], input_
                           A  2369    .LINE 218
                           A  2370    
045E7E DD0706              A  2371    	LD	BC,(IX+%6)
045E81 C5                  A  2372    	PUSH	BC
045E82 01800000            A  2373    	LD	BC,128
045E86 21 0B 94 04         A  2374    	LD	HL,_filename
045E8A 09                  A  2375    	ADD	HL,BC
045E8B E5                  A  2376    	PUSH	HL
045E8C CD 6F 6E 04         A  2377    	CALL	_strcpy
045E90 C1                  A  2378    	POP	BC
045E91 C1                  A  2379    	POP	BC
                           A  2380    ;  219	    strcpy(filename[FILE_OUTPUT], input
                           A  2381    .LINE 219
                           A  2382    
045E92 DD0706              A  2383    	LD	BC,(IX+%6)
045E95 C5                  A  2384    	PUSH	BC
045E96 01000100            A  2385    	LD	BC,256
045E9A 21 0B 94 04         A  2386    	LD	HL,_filename
045E9E 09                  A  2387    	ADD	HL,BC
045E9F E5                  A  2388    	PUSH	HL
045EA0 CD 6F 6E 04         A  2389    	CALL	_strcpy
045EA4 C1                  A  2390    	POP	BC
045EA5 C1                  A  2391    	POP	BC
                           A  2392    ;  220	    remove_ext(filename[FILE_OUTPUT], '
                           A  2393    .LINE 220
                           A  2394    
045EA6 012F0000            A  2395    	LD	BC,47
045EAA C5                  A  2396    	PUSH	BC
045EAB 012E0000            A  2397    	LD	BC,46
045EAF C5                  A  2398    	PUSH	BC
045EB0 01000100            A  2399    	LD	BC,256
045EB4 21 0B 94 04         A  2400    	LD	HL,_filename
045EB8 09                  A  2401    	ADD	HL,BC
045EB9 E5                  A  2402    	PUSH	HL
045EBA CD E7 57 04         A  2403    	CALL	_remove_ext
045EBE C1                  A  2404    	POP	BC
045EBF C1                  A  2405    	POP	BC
045EC0 C1                  A  2406    	POP	BC
                           A  2407    ;  221	    strcpy(filename[FILE_LOCAL_LABELS],
                           A  2408    .LINE 221
                           A  2409    
045EC1 01000100            A  2410    	LD	BC,256
045EC5 21 0B 94 04         A  2411    	LD	HL,_filename
045EC9 09                  A  2412    	ADD	HL,BC
045ECA E5                  A  2413    	PUSH	HL
045ECB 01800100            A  2414    	LD	BC,384
045ECF 21 0B 94 04         A  2415    	LD	HL,_filename
045ED3 09                  A  2416    	ADD	HL,BC
045ED4 E5                  A  2417    	PUSH	HL
045ED5 CD 6F 6E 04         A  2418    	CALL	_strcpy
045ED9 C1                  A  2419    	POP	BC
045EDA C1                  A  2420    	POP	BC
                           A  2421    ;  222	    strcpy(filename[FILE_ANONYMOUS_LABE
                           A  2422    .LINE 222
                           A  2423    
045EDB 01000100            A  2424    	LD	BC,256
045EDF 21 0B 94 04         A  2425    	LD	HL,_filename
045EE3 09                  A  2426    	ADD	HL,BC
045EE4 E5                  A  2427    	PUSH	HL
045EE5 01000200            A  2428    	LD	BC,512
045EE9 21 0B 94 04         A  2429    	LD	HL,_filename
045EED 09                  A  2430    	ADD	HL,BC
045EEE E5                  A  2431    	PUSH	HL
045EEF CD 6F 6E 04         A  2432    	CALL	_strcpy
045EF3 C1                  A  2433    	POP	BC
045EF4 C1                  A  2434    	POP	BC
                           A  2435    ;  223	    strcpy(filename[FILE_LISTING],filen
                           A  2436    .LINE 223
                           A  2437    
045EF5 01000100            A  2438    	LD	BC,256
045EF9 21 0B 94 04         A  2439    	LD	HL,_filename
045EFD 09                  A  2440    	ADD	HL,BC
045EFE E5                  A  2441    	PUSH	HL
045EFF 01800200            A  2442    	LD	BC,640
045F03 21 0B 94 04         A  2443    	LD	HL,_filename
045F07 09                  A  2444    	ADD	HL,BC
045F08 E5                  A  2445    	PUSH	HL
045F09 CD 6F 6E 04         A  2446    	CALL	_strcpy
045F0D C1                  A  2447    	POP	BC
045F0E C1                  A  2448    	POP	BC
                           A  2449    ;  224	    strcat(filename[FILE_OUTPUT], ".bin
                           A  2450    .LINE 224
                           A  2451    
045F0F 01 E1 91 04         A  2452    	LD	BC,L__65
045F13 C5                  A  2453    	PUSH	BC
045F14 01000100            A  2454    	LD	BC,256
045F18 21 0B 94 04         A  2455    	LD	HL,_filename
045F1C 09                  A  2456    	ADD	HL,BC
045F1D E5                  A  2457    	PUSH	HL
045F1E CD 5D 6F 04         A  2458    	CALL	_strcat
045F22 C1                  A  2459    	POP	BC
045F23 C1                  A  2460    	POP	BC
                           A  2461    ;  225	    strcat(filename[FILE_LOCAL_LABELS],
                           A  2462    .LINE 225
                           A  2463    
045F24 01 E6 91 04         A  2464    	LD	BC,L__66
045F28 C5                  A  2465    	PUSH	BC
045F29 01800100            A  2466    	LD	BC,384
045F2D 21 0B 94 04         A  2467    	LD	HL,_filename
045F31 09                  A  2468    	ADD	HL,BC
045F32 E5                  A  2469    	PUSH	HL
045F33 CD 5D 6F 04         A  2470    	CALL	_strcat
045F37 C1                  A  2471    	POP	BC
045F38 C1                  A  2472    	POP	BC
                           A  2473    ;  226	    strcat(filename[FILE_ANONYMOUS_LABE
                           A  2474    .LINE 226
                           A  2475    
045F39 01 EF 91 04         A  2476    	LD	BC,L__67
045F3D C5                  A  2477    	PUSH	BC
045F3E 01000200            A  2478    	LD	BC,512
045F42 21 0B 94 04         A  2479    	LD	HL,_filename
045F46 09                  A  2480    	ADD	HL,BC
045F47 E5                  A  2481    	PUSH	HL
045F48 CD 5D 6F 04         A  2482    	CALL	_strcat
045F4C C1                  A  2483    	POP	BC
045F4D C1                  A  2484    	POP	BC
                           A  2485    ;  227	    strcat(filename[FILE_LISTING], ".ls
                           A  2486    .LINE 227
                           A  2487    
045F4E 01 F9 91 04         A  2488    	LD	BC,L__68
045F52 C5                  A  2489    	PUSH	BC
045F53 01800200            A  2490    	LD	BC,640
045F57 21 0B 94 04         A  2491    	LD	HL,_filename
045F5B 09                  A  2492    	ADD	HL,BC
045F5C E5                  A  2493    	PUSH	HL
045F5D CD 5D 6F 04         A  2494    	CALL	_strcat
045F61 C1                  A  2495    	POP	BC
045F62 C1                  A  2496    	POP	BC
                           A  2497    ;  228	}
                           A  2498    .LINE 228
                           A  2499    
045F63 DDF9                A  2500    	LD	SP,IX
045F65 DDE1                A  2501    	POP	IX
045F67 C9                  A  2502    	RET	
                           A  2503    
                           A  2504    
                           A  2505    ;**************************** _prepare_filename
                           A  2506    ;Name                         Addr/Register   S
                           A  2507    ;_strcat                             IMPORT  --
                           A  2508    ;_remove_ext                         IMPORT  --
                           A  2509    ;_filename                           IMPORT    
                           A  2510    ;_strcpy                             IMPORT  --
                           A  2511    ;input_filename                        IX+6    
                           A  2512    
                           A  2513    
                           A  2514    ; Stack Frame Size: 9 (bytes)
                           A  2515    ;       Spill Code: 0 (instruction)
                           A  2516    
                           A  2517    
                           A  2518    .ENDFUNC "prepare_filenames",228,"_prepare_file
                           A  2519    	SEGMENT STRSECT
0491E1                     A  2520    L__65:
0491E1 2E62696E            A  2521    	DB	".bin"
0491E5 00                  A  2522    	DB	0
0491E6                     A  2523    L__66:
0491E6 2E6C636C 6C626C73   A  2524    	DB	".lcllbls"
0491EE 00                  A  2525    	DB	0
0491EF                     A  2526    L__67:
0491EF 2E616E6F 6E6C626C   A  2527    	DB	".anonlbls"
0491F7 73 
0491F8 00                  A  2528    	DB	0
0491F9                     A  2529    L__68:
0491F9 2E6C7374            A  2530    	DB	".lst"
0491FD 00                  A  2531    	DB	0
                           A  2532    	SEGMENT CODE
                           A  2533    ;  229	
                           A  2534    ;  230	void closeAllFiles() {
045F68                     A  2535    _closeAllFiles:
                           A  2536    .DEFINE "_closeAllFiles"
                           A  2537    
                           A  2538    .VALUE _closeAllFiles
                           A  2539    
                           A  2540    .CLASS 2
                           A  2541    
                           A  2542    .TYPE 65
                           A  2543    
                           A  2544    .ENDEF
                           A  2545    
                           A  2546    .BEGFUNC "closeAllFiles",230,"_closeAllFiles"
                           A  2547    
045F68 DDE5                A  2548    	PUSH	IX
045F6A DD210000 00         A  2549    	LD	IX,0
045F6F DD39                A  2550    	ADD	IX,SP
045F71 ED22F1              A  2551    	LEA	HL,IX+%FFFFFFF1
045F74 F9                  A  2552    	LD	SP,HL
                           A  2553    ;  231	   // Cleanup
                           A  2554    ;  232	    if(filehandle[FILE_INPUT]) mos_fclo
                           A  2555    .LINE 232
                           A  2556    
045F75 01 0B 97 04         A  2557    	LD	BC,_filehandle
045F79 03                  A  2558    	INC	BC
045F7A DD0FFD              A  2559    	LD	(IX+%FFFFFFFD),BC
045F7D C5E1                A  2560    	LD	HL,BC
045F7F 7E                  A  2561    	LD	A,(HL)
045F80 B7                  A  2562    	OR	A,A
045F81 28 0C               A  2563    	JR	Z,L_142
045F83 DD27FD              A  2564    	LD	HL,(IX+%FFFFFFFD)
045F86 4E                  A  2565    	LD	C,(HL)
045F87 0600                A  2566    	LD	B,%0
045F89 C5                  A  2567    	PUSH	BC
045F8A CD 66 0D 04         A  2568    	CALL	_mos_fclose
045F8E C1                  A  2569    	POP	BC
045F8F                     A  2570    L_142:
                           A  2571    ;  233	    if(filehandle[FILE_OUTPUT]) mos_fcl
                           A  2572    .LINE 233
                           A  2573    
045F8F FD21 0B 97 04       A  2574    	LD	IY,_filehandle
045F94 ED3302              A  2575    	LEA	IY,IY+%2
045F97 DD3EFA              A  2576    	LD	(IX+%FFFFFFFA),IY
045F9A DD27FA              A  2577    	LD	HL,(IX+%FFFFFFFA)
045F9D 7E                  A  2578    	LD	A,(HL)
045F9E B7                  A  2579    	OR	A,A
045F9F 28 0C               A  2580    	JR	Z,L_144
045FA1 DD27FA              A  2581    	LD	HL,(IX+%FFFFFFFA)
045FA4 4E                  A  2582    	LD	C,(HL)
045FA5 0600                A  2583    	LD	B,%0
045FA7 C5                  A  2584    	PUSH	BC
045FA8 CD 66 0D 04         A  2585    	CALL	_mos_fclose
045FAC C1                  A  2586    	POP	BC
045FAD                     A  2587    L_144:
                           A  2588    ;  234	    if(filehandle[FILE_LOCAL_LABELS]) m
                           A  2589    .LINE 234
                           A  2590    
045FAD FD21 0B 97 04       A  2591    	LD	IY,_filehandle
045FB2 ED3303              A  2592    	LEA	IY,IY+%3
045FB5 DD3EF7              A  2593    	LD	(IX+%FFFFFFF7),IY
045FB8 DD27F7              A  2594    	LD	HL,(IX+%FFFFFFF7)
045FBB 7E                  A  2595    	LD	A,(HL)
045FBC B7                  A  2596    	OR	A,A
045FBD 28 0C               A  2597    	JR	Z,L_146
045FBF DD27F7              A  2598    	LD	HL,(IX+%FFFFFFF7)
045FC2 4E                  A  2599    	LD	C,(HL)
045FC3 0600                A  2600    	LD	B,%0
045FC5 C5                  A  2601    	PUSH	BC
045FC6 CD 66 0D 04         A  2602    	CALL	_mos_fclose
045FCA C1                  A  2603    	POP	BC
045FCB                     A  2604    L_146:
                           A  2605    ;  235	    if(filehandle[FILE_ANONYMOUS_LABELS
                           A  2606    .LINE 235
                           A  2607    
045FCB FD21 0B 97 04       A  2608    	LD	IY,_filehandle
045FD0 ED3304              A  2609    	LEA	IY,IY+%4
045FD3 DD3EF4              A  2610    	LD	(IX+%FFFFFFF4),IY
045FD6 DD27F4              A  2611    	LD	HL,(IX+%FFFFFFF4)
045FD9 7E                  A  2612    	LD	A,(HL)
045FDA B7                  A  2613    	OR	A,A
045FDB 28 0C               A  2614    	JR	Z,L_148
045FDD DD27F4              A  2615    	LD	HL,(IX+%FFFFFFF4)
045FE0 4E                  A  2616    	LD	C,(HL)
045FE1 0600                A  2617    	LD	B,%0
045FE3 C5                  A  2618    	PUSH	BC
045FE4 CD 66 0D 04         A  2619    	CALL	_mos_fclose
045FE8 C1                  A  2620    	POP	BC
045FE9                     A  2621    L_148:
                           A  2622    ;  236	    if(filehandle[FILE_LISTING]) mos_fc
                           A  2623    .LINE 236
                           A  2624    
045FE9 FD21 0B 97 04       A  2625    	LD	IY,_filehandle
045FEE ED3305              A  2626    	LEA	IY,IY+%5
045FF1 DD3EF1              A  2627    	LD	(IX+%FFFFFFF1),IY
045FF4 DD27F1              A  2628    	LD	HL,(IX+%FFFFFFF1)
045FF7 7E                  A  2629    	LD	A,(HL)
045FF8 B7                  A  2630    	OR	A,A
045FF9 28 0C               A  2631    	JR	Z,L_149
045FFB DD27F1              A  2632    	LD	HL,(IX+%FFFFFFF1)
045FFE 4E                  A  2633    	LD	C,(HL)
045FFF 0600                A  2634    	LD	B,%0
046001 C5                  A  2635    	PUSH	BC
046002 CD 66 0D 04         A  2636    	CALL	_mos_fclose
046006 C1                  A  2637    	POP	BC
                           A  2638    ;  237	    //remove(filename[FILE_LOCAL_LABELS
                           A  2639    ;  238	    //remove(filename[FILE_ANONYMOUS_LA
                           A  2640    ;  239	}
046007                     A  2641    L_149:
                           A  2642    .LINE 239
                           A  2643    
046007 DDF9                A  2644    	LD	SP,IX
046009 DDE1                A  2645    	POP	IX
04600B C9                  A  2646    	RET	
                           A  2647    
                           A  2648    
                           A  2649    ;**************************** _closeAllFiles **
                           A  2650    ;Name                         Addr/Register   S
                           A  2651    ;_mos_fclose                         IMPORT  --
                           A  2652    ;_filehandle                         IMPORT    
                           A  2653    ;G_12                                 IX-15    
                           A  2654    ;G_11                                 IX-12    
                           A  2655    ;G_10                                  IX-9    
                           A  2656    ;G_9                                   IX-6    
                           A  2657    ;G_8                                   IX-3    
                           A  2658    
                           A  2659    
                           A  2660    ; Stack Frame Size: 21 (bytes)
                           A  2661    ;       Spill Code: 0 (instruction)
                           A  2662    
                           A  2663    
                           A  2664    .ENDFUNC "closeAllFiles",239,"_closeAllFiles"
                           A  2665    ;  240	
                           A  2666    ;  241	bool openfiles(void) {
04600C                     A  2667    _openfiles:
                           A  2668    .DEFINE "_openfiles"
                           A  2669    
                           A  2670    .VALUE _openfiles
                           A  2671    
                           A  2672    .CLASS 2
                           A  2673    
                           A  2674    .TYPE 76
                           A  2675    
                           A  2676    .ENDEF
                           A  2677    
                           A  2678    .BEGFUNC "openfiles",241,"_openfiles"
                           A  2679    
                           A  2680    .LINE 241
                           A  2681    
                           A  2682    .DEFINE "status"
                           A  2683    
                           A  2684    .CLASS 65
                           A  2685    
                           A  2686    .VALUE -1
                           A  2687    
                           A  2688    .TYPE 12
                           A  2689    
                           A  2690    .ENDEF
                           A  2691    
04600C DDE5                A  2692    	PUSH	IX
04600E DD210000 00         A  2693    	LD	IX,0
046013 DD39                A  2694    	ADD	IX,SP
046015 ED22F0              A  2695    	LEA	HL,IX+%FFFFFFF0
046018 F9                  A  2696    	LD	SP,HL
                           A  2697    ;  242	    bool status = true;
                           A  2698    ;  243	
                           A  2699    ;  244	    status = status && openFile(&fileha
                           A  2700    .LINE 244
                           A  2701    
046019 01010000            A  2702    	LD	BC,1
04601D C5                  A  2703    	PUSH	BC
04601E 01800000            A  2704    	LD	BC,128
046022 21 0B 94 04         A  2705    	LD	HL,_filename
046026 09                  A  2706    	ADD	HL,BC
046027 E5                  A  2707    	PUSH	HL
046028 01 0B 97 04         A  2708    	LD	BC,_filehandle
04602C 03                  A  2709    	INC	BC
04602D C5                  A  2710    	PUSH	BC
04602E CD C1 5D 04         A  2711    	CALL	_openFile
046032 C1                  A  2712    	POP	BC
046033 C1                  A  2713    	POP	BC
046034 C1                  A  2714    	POP	BC
046035 B7                  A  2715    	OR	A,A
046036 28 09               A  2716    	JR	Z,L_152
046038 01010000            A  2717    	LD	BC,1
04603C DD0FFC              A  2718    	LD	(IX+%FFFFFFFC),BC
04603F 18 07               A  2719    	JR	L_153
046041                     A  2720    L_152:
046041 01000000            A  2721    	LD	BC,0
046045 DD0FFC              A  2722    	LD	(IX+%FFFFFFFC),BC
046048                     A  2723    L_153:
046048 DD7EFC              A  2724    	LD	A,(IX+%FFFFFFFC)
04604B DD77FF              A  2725    	LD	(IX+%FFFFFFFF),A
                           A  2726    ;  245	    status = status && openFile(&fileha
                           A  2727    .LINE 245
                           A  2728    
04604E B7                  A  2729    	OR	A,A
04604F 28 27               A  2730    	JR	Z,L_157
046051 010A0000            A  2731    	LD	BC,10
046055 C5                  A  2732    	PUSH	BC
046056 01000100            A  2733    	LD	BC,256
04605A 21 0B 94 04         A  2734    	LD	HL,_filename
04605E 09                  A  2735    	ADD	HL,BC
04605F E5                  A  2736    	PUSH	HL
046060 01 0D 97 04         A  2737    	LD	BC,_filehandle+2
046064 C5                  A  2738    	PUSH	BC
046065 CD C1 5D 04         A  2739    	CALL	_openFile
046069 C1                  A  2740    	POP	BC
04606A C1                  A  2741    	POP	BC
04606B C1                  A  2742    	POP	BC
04606C B7                  A  2743    	OR	A,A
04606D 28 09               A  2744    	JR	Z,L_157
04606F 01010000            A  2745    	LD	BC,1
046073 DD0FF9              A  2746    	LD	(IX+%FFFFFFF9),BC
046076 18 07               A  2747    	JR	L_158
046078                     A  2748    L_157:
046078 01000000            A  2749    	LD	BC,0
04607C DD0FF9              A  2750    	LD	(IX+%FFFFFFF9),BC
04607F                     A  2751    L_158:
04607F DD7EF9              A  2752    	LD	A,(IX+%FFFFFFF9)
046082 DD77FF              A  2753    	LD	(IX+%FFFFFFFF),A
                           A  2754    ;  246	    status = status && openFile(&fileha
                           A  2755    .LINE 246
                           A  2756    
046085 B7                  A  2757    	OR	A,A
046086 28 27               A  2758    	JR	Z,L_162
046088 010A0000            A  2759    	LD	BC,10
04608C C5                  A  2760    	PUSH	BC
04608D 01800100            A  2761    	LD	BC,384
046091 21 0B 94 04         A  2762    	LD	HL,_filename
046095 09                  A  2763    	ADD	HL,BC
046096 E5                  A  2764    	PUSH	HL
046097 01 0E 97 04         A  2765    	LD	BC,_filehandle+3
04609B C5                  A  2766    	PUSH	BC
04609C CD C1 5D 04         A  2767    	CALL	_openFile
0460A0 C1                  A  2768    	POP	BC
0460A1 C1                  A  2769    	POP	BC
0460A2 C1                  A  2770    	POP	BC
0460A3 B7                  A  2771    	OR	A,A
0460A4 28 09               A  2772    	JR	Z,L_162
0460A6 01010000            A  2773    	LD	BC,1
0460AA DD0FF6              A  2774    	LD	(IX+%FFFFFFF6),BC
0460AD 18 07               A  2775    	JR	L_163
0460AF                     A  2776    L_162:
0460AF 01000000            A  2777    	LD	BC,0
0460B3 DD0FF6              A  2778    	LD	(IX+%FFFFFFF6),BC
0460B6                     A  2779    L_163:
0460B6 DD7EF6              A  2780    	LD	A,(IX+%FFFFFFF6)
0460B9 DD77FF              A  2781    	LD	(IX+%FFFFFFFF),A
                           A  2782    ;  247	    status = status && openFile(&fileha
                           A  2783    .LINE 247
                           A  2784    
0460BC B7                  A  2785    	OR	A,A
0460BD 28 27               A  2786    	JR	Z,L_167
0460BF 010A0000            A  2787    	LD	BC,10
0460C3 C5                  A  2788    	PUSH	BC
0460C4 01000200            A  2789    	LD	BC,512
0460C8 21 0B 94 04         A  2790    	LD	HL,_filename
0460CC 09                  A  2791    	ADD	HL,BC
0460CD E5                  A  2792    	PUSH	HL
0460CE 01 0F 97 04         A  2793    	LD	BC,_filehandle+4
0460D2 C5                  A  2794    	PUSH	BC
0460D3 CD C1 5D 04         A  2795    	CALL	_openFile
0460D7 C1                  A  2796    	POP	BC
0460D8 C1                  A  2797    	POP	BC
0460D9 C1                  A  2798    	POP	BC
0460DA B7                  A  2799    	OR	A,A
0460DB 28 09               A  2800    	JR	Z,L_167
0460DD 01010000            A  2801    	LD	BC,1
0460E1 DD0FF3              A  2802    	LD	(IX+%FFFFFFF3),BC
0460E4 18 07               A  2803    	JR	L_168
0460E6                     A  2804    L_167:
0460E6 01000000            A  2805    	LD	BC,0
0460EA DD0FF3              A  2806    	LD	(IX+%FFFFFFF3),BC
0460ED                     A  2807    L_168:
0460ED DD7EF3              A  2808    	LD	A,(IX+%FFFFFFF3)
0460F0 DD77FF              A  2809    	LD	(IX+%FFFFFFFF),A
                           A  2810    ;  248	    status = status && openFile(&fileha
                           A  2811    .LINE 248
                           A  2812    
0460F3 B7                  A  2813    	OR	A,A
0460F4 28 27               A  2814    	JR	Z,L_172
0460F6 010A0000            A  2815    	LD	BC,10
0460FA C5                  A  2816    	PUSH	BC
0460FB 01800200            A  2817    	LD	BC,640
0460FF 21 0B 94 04         A  2818    	LD	HL,_filename
046103 09                  A  2819    	ADD	HL,BC
046104 E5                  A  2820    	PUSH	HL
046105 01 10 97 04         A  2821    	LD	BC,_filehandle+5
046109 C5                  A  2822    	PUSH	BC
04610A CD C1 5D 04         A  2823    	CALL	_openFile
04610E C1                  A  2824    	POP	BC
04610F C1                  A  2825    	POP	BC
046110 C1                  A  2826    	POP	BC
046111 B7                  A  2827    	OR	A,A
046112 28 09               A  2828    	JR	Z,L_172
046114 01010000            A  2829    	LD	BC,1
046118 DD0FF0              A  2830    	LD	(IX+%FFFFFFF0),BC
04611B 18 07               A  2831    	JR	L_173
04611D                     A  2832    L_172:
04611D 01000000            A  2833    	LD	BC,0
046121 DD0FF0              A  2834    	LD	(IX+%FFFFFFF0),BC
046124                     A  2835    L_173:
046124 DD7EF0              A  2836    	LD	A,(IX+%FFFFFFF0)
046127 DD77FF              A  2837    	LD	(IX+%FFFFFFFF),A
                           A  2838    ;  249	    if(!status) closeAllFiles();
                           A  2839    .LINE 249
                           A  2840    
04612A B7                  A  2841    	OR	A,A
04612B 20 04               A  2842    	JR	NZ,L_176
04612D CD 68 5F 04         A  2843    	CALL	_closeAllFiles
046131                     A  2844    L_176:
                           A  2845    ;  250	    return status;
                           A  2846    .LINE 250
                           A  2847    
046131 DD7EFF              A  2848    	LD	A,(IX+%FFFFFFFF)
                           A  2849    ;  251	}
                           A  2850    .LINE 251
                           A  2851    
046134 DDF9                A  2852    	LD	SP,IX
046136 DDE1                A  2853    	POP	IX
046138 C9                  A  2854    	RET	
                           A  2855    
                           A  2856    
                           A  2857    ;**************************** _openfiles ******
                           A  2858    ;Name                         Addr/Register   S
                           A  2859    ;_closeAllFiles                      IMPORT  --
                           A  2860    ;_filehandle                         IMPORT    
                           A  2861    ;_filename                           IMPORT    
                           A  2862    ;_openFile                           IMPORT  --
                           A  2863    ;temp174                              IX-16    
                           A  2864    ;temp169                              IX-13    
                           A  2865    ;temp164                              IX-10    
                           A  2866    ;temp159                               IX-7    
                           A  2867    ;temp154                               IX-4    
                           A  2868    ;status                                IX-1    
                           A  2869    
                           A  2870    
                           A  2871    ; Stack Frame Size: 22 (bytes)
                           A  2872    ;       Spill Code: 0 (instruction)
                           A  2873    
                           A  2874    
                           A  2875    .ENDFUNC "openfiles",251,"_openfiles"
                           A  2876    ;  252	
                           A  2877    ;  253	
                           A  2878    ;  254	char *agon_fgets(char *s, int size, uin
046139                     A  2879    _agon_fgets:
                           A  2880    .DEFINE "_agon_fgets"
                           A  2881    
                           A  2882    .VALUE _agon_fgets
                           A  2883    
                           A  2884    .CLASS 2
                           A  2885    
                           A  2886    .TYPE 322
                           A  2887    
                           A  2888    .ENDEF
                           A  2889    
                           A  2890    .BEGFUNC "agon_fgets",254,"_agon_fgets"
                           A  2891    
                           A  2892    .LINE 254
                           A  2893    
                           A  2894    .DEFINE "s"
                           A  2895    
                           A  2896    .CLASS 65
                           A  2897    
                           A  2898    .VALUE 6
                           A  2899    
                           A  2900    .TYPE 34
                           A  2901    
                           A  2902    .ENDEF
                           A  2903    
                           A  2904    .DEFINE "size"
                           A  2905    
                           A  2906    .CLASS 65
                           A  2907    
                           A  2908    .VALUE 9
                           A  2909    
                           A  2910    .TYPE 4
                           A  2911    
                           A  2912    .ENDEF
                           A  2913    
                           A  2914    .DEFINE "fileid"
                           A  2915    
                           A  2916    .CLASS 65
                           A  2917    
                           A  2918    .VALUE 12
                           A  2919    
                           A  2920    .TYPE 12
                           A  2921    
                           A  2922    .ENDEF
                           A  2923    
                           A  2924    .DEFINE "cs"
                           A  2925    
                           A  2926    .CLASS 65
                           A  2927    
                           A  2928    .VALUE -3
                           A  2929    
                           A  2930    .TYPE 34
                           A  2931    
                           A  2932    .ENDEF
                           A  2933    
                           A  2934    .DEFINE "eof"
                           A  2935    
                           A  2936    .CLASS 65
                           A  2937    
                           A  2938    .VALUE -4
                           A  2939    
                           A  2940    .TYPE 12
                           A  2941    
                           A  2942    .ENDEF
                           A  2943    
                           A  2944    .DEFINE "c"
                           A  2945    
                           A  2946    .CLASS 65
                           A  2947    
                           A  2948    .VALUE -7
                           A  2949    
                           A  2950    .TYPE 4
                           A  2951    
                           A  2952    .ENDEF
                           A  2953    
046139 DDE5                A  2954    	PUSH	IX
04613B DD210000 00         A  2955    	LD	IX,0
046140 DD39                A  2956    	ADD	IX,SP
046142 ED22F3              A  2957    	LEA	HL,IX+%FFFFFFF3
046145 F9                  A  2958    	LD	SP,HL
                           A  2959    ;  255		int c;
                           A  2960    ;  256		char *cs;
                           A  2961    ;  257		bool eof;
                           A  2962    ;  258	    c = 0;
                           A  2963    .LINE 258
                           A  2964    
046146 01000000            A  2965    	LD	BC,0
04614A DD0FF9              A  2966    	LD	(IX+%FFFFFFF9),BC
                           A  2967    ;  259		cs = s;
                           A  2968    .LINE 259
                           A  2969    
04614D DD0706              A  2970    	LD	BC,(IX+%6)
046150 DD0FFD              A  2971    	LD	(IX+%FFFFFFFD),BC
                           A  2972    ;  260	
                           A  2973    ;  261		do {
046153                     A  2974    L_181:
                           A  2975    .LINE 261
                           A  2976    
                           A  2977    ;  262			eof = mos_feof(filehandle[filei
                           A  2978    .LINE 262
                           A  2979    
046153 DD7E0C              A  2980    	LD	A,(IX+%C)
046156 B7ED62              A  2981    	UEXT	HL
046159 6F                  A  2982    	LD	L,A
04615A 01 0B 97 04         A  2983    	LD	BC,_filehandle
04615E 09                  A  2984    	ADD	HL,BC
04615F 4E                  A  2985    	LD	C,(HL)
046160 0600                A  2986    	LD	B,%0
046162 C5                  A  2987    	PUSH	BC
046163 CD A8 0D 04         A  2988    	CALL	_mos_feof
046167 C1                  A  2989    	POP	BC
046168 DD77FC              A  2990    	LD	(IX+%FFFFFFFC),A
                           A  2991    ;  263			c = mos_fgetc(filehandle[fileid
                           A  2992    .LINE 263
                           A  2993    
04616B DD7E0C              A  2994    	LD	A,(IX+%C)
04616E B7ED62              A  2995    	UEXT	HL
046171 6F                  A  2996    	LD	L,A
046172 01 0B 97 04         A  2997    	LD	BC,_filehandle
046176 09                  A  2998    	ADD	HL,BC
046177 4E                  A  2999    	LD	C,(HL)
046178 0600                A  3000    	LD	B,%0
04617A C5                  A  3001    	PUSH	BC
04617B CD 7B 0D 04         A  3002    	CALL	_mos_fgetc
04617F C1                  A  3003    	POP	BC
046180 47                  A  3004    	LD	B,A
046181 78                  A  3005    	LD	A,B
046182 17ED62              A  3006    	SEXT	HL
046185 68                  A  3007    	LD	L,B
046186 DD2FF9              A  3008    	LD	(IX+%FFFFFFF9),HL
                           A  3009    ;  264			if((*cs++ = c) == '\n') break;	
                           A  3010    .LINE 264
                           A  3011    
046189 DD07FD              A  3012    	LD	BC,(IX+%FFFFFFFD)
04618C DD0FF3              A  3013    	LD	(IX+%FFFFFFF3),BC
04618F DD7EF9              A  3014    	LD	A,(IX+%FFFFFFF9)
046192 C5E1                A  3015    	LD	HL,BC
046194 77                  A  3016    	LD	(HL),A
046195 DD07FD              A  3017    	LD	BC,(IX+%FFFFFFFD)
046198 03                  A  3018    	INC	BC
046199 DD0FFD              A  3019    	LD	(IX+%FFFFFFFD),BC
04619C DD27F3              A  3020    	LD	HL,(IX+%FFFFFFF3)
04619F 7E                  A  3021    	LD	A,(HL)
0461A0 47                  A  3022    	LD	B,A
0461A1 17ED62              A  3023    	SEXT	HL
0461A4 68                  A  3024    	LD	L,B
0461A5 010A0000            A  3025    	LD	BC,10
0461A9 B7                  A  3026    	OR	A,A
0461AA ED42                A  3027    	SBC	HL,BC
0461AC 28 17               A  3028    	JR	Z,L_183
                           A  3029    ;  265		}
                           A  3030    ;  266		while(--size > 0 && !eof);
                           A  3031    .LINE 266
                           A  3032    
0461AE DD0709              A  3033    	LD	BC,(IX+%9)
0461B1 0B                  A  3034    	DEC	BC
0461B2 DD0F09              A  3035    	LD	(IX+%9),BC
0461B5 B7                  A  3036    	OR	A,A
0461B6 ED62                A  3037    	SBC	HL,HL
0461B8 B7                  A  3038    	OR	A,A
0461B9 ED42                A  3039    	SBC	HL,BC
0461BB F2 C5 61 04         A  3040    	JP	P,L_183
0461BF DD7EFC              A  3041    	LD	A,(IX+%FFFFFFFC)
0461C2 B7                  A  3042    	OR	A,A
0461C3 28 8E               A  3043    	JR	Z,L_181
0461C5                     A  3044    L_183:
                           A  3045    ;  267		
                           A  3046    ;  268		*cs = '\0';
                           A  3047    .LINE 268
                           A  3048    
0461C5 DD27FD              A  3049    	LD	HL,(IX+%FFFFFFFD)
0461C8 3600                A  3050    	LD	(HL),%0
                           A  3051    ;  269	
                           A  3052    ;  270		return (eof) ? NULL : s;
                           A  3053    .LINE 270
                           A  3054    
0461CA DD7EFC              A  3055    	LD	A,(IX+%FFFFFFFC)
0461CD B7                  A  3056    	OR	A,A
0461CE 28 09               A  3057    	JR	Z,L_186
0461D0 01000000            A  3058    	LD	BC,0
0461D4 DD0FF6              A  3059    	LD	(IX+%FFFFFFF6),BC
0461D7 18 06               A  3060    	JR	L_187
0461D9                     A  3061    L_186:
0461D9 DD0706              A  3062    	LD	BC,(IX+%6)
0461DC DD0FF6              A  3063    	LD	(IX+%FFFFFFF6),BC
0461DF                     A  3064    L_187:
0461DF DD27F6              A  3065    	LD	HL,(IX+%FFFFFFF6)
                           A  3066    ;  271	}
                           A  3067    .LINE 271
                           A  3068    
0461E2 DDF9                A  3069    	LD	SP,IX
0461E4 DDE1                A  3070    	POP	IX
0461E6 C9                  A  3071    	RET	
                           A  3072    
                           A  3073    
                           A  3074    ;**************************** _agon_fgets *****
                           A  3075    ;Name                         Addr/Register   S
                           A  3076    ;_mos_fgetc                          IMPORT  --
                           A  3077    ;_filehandle                         IMPORT    
                           A  3078    ;_mos_feof                           IMPORT  --
                           A  3079    ;temp184                              IX-10    
                           A  3080    ;c                                     IX-7    
                           A  3081    ;eof                                   IX-4    
                           A  3082    ;cs                                    IX-3    
                           A  3083    ;fileid                               IX+12    
                           A  3084    ;size                                  IX+9    
                           A  3085    ;s                                     IX+6    
                           A  3086    
                           A  3087    
                           A  3088    ; Stack Frame Size: 28 (bytes)
                           A  3089    ;       Spill Code: 0 (instruction)
                           A  3090    
                           A  3091    
                           A  3092    .ENDFUNC "agon_fgets",271,"_agon_fgets"
                           A  3093    ;  272	
                           A  3094    ;  273	int agon_fputs(char *s, uint8_t fileid)
0461E7                     A  3095    _agon_fputs:
                           A  3096    .DEFINE "_agon_fputs"
                           A  3097    
                           A  3098    .VALUE _agon_fputs
                           A  3099    
                           A  3100    .CLASS 2
                           A  3101    
                           A  3102    .TYPE 68
                           A  3103    
                           A  3104    .ENDEF
                           A  3105    
                           A  3106    .BEGFUNC "agon_fputs",273,"_agon_fputs"
                           A  3107    
                           A  3108    .LINE 273
                           A  3109    
                           A  3110    .DEFINE "s"
                           A  3111    
                           A  3112    .CLASS 65
                           A  3113    
                           A  3114    .VALUE 6
                           A  3115    
                           A  3116    .TYPE 34
                           A  3117    
                           A  3118    .ENDEF
                           A  3119    
                           A  3120    .DEFINE "fileid"
                           A  3121    
                           A  3122    .CLASS 65
                           A  3123    
                           A  3124    .VALUE 9
                           A  3125    
                           A  3126    .TYPE 12
                           A  3127    
                           A  3128    .ENDEF
                           A  3129    
                           A  3130    .DEFINE "number"
                           A  3131    
                           A  3132    .CLASS 65
                           A  3133    
                           A  3134    .VALUE -3
                           A  3135    
                           A  3136    .TYPE 4
                           A  3137    
                           A  3138    .ENDEF
                           A  3139    
0461E7 DDE5                A  3140    	PUSH	IX
0461E9 DD210000 00         A  3141    	LD	IX,0
0461EE DD39                A  3142    	ADD	IX,SP
0461F0 C5                  A  3143    	PUSH	BC
                           A  3144    ;  274	    int number = 0;
                           A  3145    .LINE 274
                           A  3146    
0461F1 01000000            A  3147    	LD	BC,0
0461F5 DD0FFD              A  3148    	LD	(IX+%FFFFFFFD),BC
                           A  3149    ;  275	    while(*s) {
                           A  3150    .LINE 275
                           A  3151    
0461F8 18 2B               A  3152    	JR	L_191
0461FA                     A  3153    L_192:
                           A  3154    ;  276	        mos_fputc(filehandle[fileid], *
                           A  3155    .LINE 276
                           A  3156    
0461FA DD2706              A  3157    	LD	HL,(IX+%6)
0461FD 4E                  A  3158    	LD	C,(HL)
0461FE 0600                A  3159    	LD	B,%0
046200 C5                  A  3160    	PUSH	BC
046201 DD7E09              A  3161    	LD	A,(IX+%9)
046204 B7ED62              A  3162    	UEXT	HL
046207 6F                  A  3163    	LD	L,A
046208 01 0B 97 04         A  3164    	LD	BC,_filehandle
04620C 09                  A  3165    	ADD	HL,BC
04620D 4E                  A  3166    	LD	C,(HL)
04620E 0600                A  3167    	LD	B,%0
046210 C5                  A  3168    	PUSH	BC
046211 CD 90 0D 04         A  3169    	CALL	_mos_fputc
046215 C1                  A  3170    	POP	BC
046216 C1                  A  3171    	POP	BC
                           A  3172    ;  277	        number++;
                           A  3173    .LINE 277
                           A  3174    
046217 DD07FD              A  3175    	LD	BC,(IX+%FFFFFFFD)
04621A 03                  A  3176    	INC	BC
04621B DD0FFD              A  3177    	LD	(IX+%FFFFFFFD),BC
                           A  3178    ;  278	        s++;
                           A  3179    .LINE 278
                           A  3180    
04621E DD0706              A  3181    	LD	BC,(IX+%6)
046221 03                  A  3182    	INC	BC
046222 DD0F06              A  3183    	LD	(IX+%6),BC
                           A  3184    ;  279	    }
046225                     A  3185    L_191:
                           A  3186    .LINE 279
                           A  3187    
046225 DD2706              A  3188    	LD	HL,(IX+%6)
046228 7E                  A  3189    	LD	A,(HL)
046229 B7                  A  3190    	OR	A,A
04622A 20 CE               A  3191    	JR	NZ,L_192
                           A  3192    ;  280	    return number;
                           A  3193    .LINE 280
                           A  3194    
04622C DD27FD              A  3195    	LD	HL,(IX+%FFFFFFFD)
                           A  3196    ;  281	}
                           A  3197    .LINE 281
                           A  3198    
04622F DDF9                A  3199    	LD	SP,IX
046231 DDE1                A  3200    	POP	IX
046233 C9                  A  3201    	RET	
                           A  3202    
                           A  3203    
                           A  3204    ;**************************** _agon_fputs *****
                           A  3205    ;Name                         Addr/Register   S
                           A  3206    ;_filehandle                         IMPORT    
                           A  3207    ;_mos_fputc                          IMPORT  --
                           A  3208    ;number                                IX-3    
                           A  3209    ;fileid                                IX+9    
                           A  3210    ;s                                     IX+6    
                           A  3211    
                           A  3212    
                           A  3213    ; Stack Frame Size: 15 (bytes)
                           A  3214    ;       Spill Code: 0 (instruction)
                           A  3215    
                           A  3216    
                           A  3217    .ENDFUNC "agon_fputs",281,"_agon_fputs"
                           A  3218    ;  282	
                           A  3219    ;  283	size_t agon_fwrite(void *ptr, size_t si
046234                     A  3220    _agon_fwrite:
                           A  3221    .DEFINE "_agon_fwrite"
                           A  3222    
                           A  3223    .VALUE _agon_fwrite
                           A  3224    
                           A  3225    .CLASS 2
                           A  3226    
                           A  3227    .TYPE 78
                           A  3228    
                           A  3229    .ENDEF
                           A  3230    
                           A  3231    .BEGFUNC "agon_fwrite",283,"_agon_fwrite"
                           A  3232    
                           A  3233    .LINE 283
                           A  3234    
                           A  3235    .DEFINE "ptr"
                           A  3236    
                           A  3237    .CLASS 65
                           A  3238    
                           A  3239    .VALUE 6
                           A  3240    
                           A  3241    .TYPE 33
                           A  3242    
                           A  3243    .ENDEF
                           A  3244    
                           A  3245    .DEFINE "size"
                           A  3246    
                           A  3247    .CLASS 65
                           A  3248    
                           A  3249    .VALUE 9
                           A  3250    
                           A  3251    .TYPE 14
                           A  3252    
                           A  3253    .ENDEF
                           A  3254    
                           A  3255    .DEFINE "nmemb"
                           A  3256    
                           A  3257    .CLASS 65
                           A  3258    
                           A  3259    .VALUE 12
                           A  3260    
                           A  3261    .TYPE 14
                           A  3262    
                           A  3263    .ENDEF
                           A  3264    
                           A  3265    .DEFINE "fileid"
                           A  3266    
                           A  3267    .CLASS 65
                           A  3268    
                           A  3269    .VALUE 15
                           A  3270    
                           A  3271    .TYPE 12
                           A  3272    
                           A  3273    .ENDEF
                           A  3274    
                           A  3275    .DEFINE "n"
                           A  3276    
                           A  3277    .CLASS 65
                           A  3278    
                           A  3279    .VALUE -3
                           A  3280    
                           A  3281    .TYPE 14
                           A  3282    
                           A  3283    .ENDEF
                           A  3284    
                           A  3285    .DEFINE "s"
                           A  3286    
                           A  3287    .CLASS 65
                           A  3288    
                           A  3289    .VALUE -6
                           A  3290    
                           A  3291    .TYPE 14
                           A  3292    
                           A  3293    .ENDEF
                           A  3294    
                           A  3295    .DEFINE "result"
                           A  3296    
                           A  3297    .CLASS 65
                           A  3298    
                           A  3299    .VALUE -9
                           A  3300    
                           A  3301    .TYPE 14
                           A  3302    
                           A  3303    .ENDEF
                           A  3304    
                           A  3305    .DEFINE "t"
                           A  3306    
                           A  3307    .CLASS 65
                           A  3308    
                           A  3309    .VALUE -12
                           A  3310    
                           A  3311    .TYPE 34
                           A  3312    
                           A  3313    .ENDEF
                           A  3314    
046234 DDE5                A  3315    	PUSH	IX
046236 DD210000 00         A  3316    	LD	IX,0
04623B DD39                A  3317    	ADD	IX,SP
04623D ED22F4              A  3318    	LEA	HL,IX+%FFFFFFF4
046240 F9                  A  3319    	LD	SP,HL
                           A  3320    ;  284	    size_t n, s, result = 0;
                           A  3321    .LINE 284
                           A  3322    
046241 01000000            A  3323    	LD	BC,0
046245 DD0FF7              A  3324    	LD	(IX+%FFFFFFF7),BC
                           A  3325    ;  285	    char *t = (char *)ptr;
                           A  3326    .LINE 285
                           A  3327    
046248 DD0706              A  3328    	LD	BC,(IX+%6)
04624B DD0FF4              A  3329    	LD	(IX+%FFFFFFF4),BC
                           A  3330    ;  286	
                           A  3331    ;  287	    for(n = 0; n < nmemb; n++) {
                           A  3332    .LINE 287
                           A  3333    
04624E 01000000            A  3334    	LD	BC,0
046252 DD0FFD              A  3335    	LD	(IX+%FFFFFFFD),BC
046255 18 4D               A  3336    	JR	L_204
046257                     A  3337    L_202:
                           A  3338    ;  288	        for(s = 0; s < size; s++) {
                           A  3339    .LINE 288
                           A  3340    
046257 01000000            A  3341    	LD	BC,0
04625B DD0FFA              A  3342    	LD	(IX+%FFFFFFFA),BC
04625E 18 32               A  3343    	JR	L_201
046260                     A  3344    L_199:
                           A  3345    ;  289	            mos_fputc(filehandle[fileid
                           A  3346    .LINE 289
                           A  3347    
046260 DD27F4              A  3348    	LD	HL,(IX+%FFFFFFF4)
046263 4E                  A  3349    	LD	C,(HL)
046264 0600                A  3350    	LD	B,%0
046266 C5                  A  3351    	PUSH	BC
046267 DD7E0F              A  3352    	LD	A,(IX+%F)
04626A B7ED62              A  3353    	UEXT	HL
04626D 6F                  A  3354    	LD	L,A
04626E 01 0B 97 04         A  3355    	LD	BC,_filehandle
046272 09                  A  3356    	ADD	HL,BC
046273 4E                  A  3357    	LD	C,(HL)
046274 0600                A  3358    	LD	B,%0
046276 C5                  A  3359    	PUSH	BC
046277 CD 90 0D 04         A  3360    	CALL	_mos_fputc
04627B C1                  A  3361    	POP	BC
04627C C1                  A  3362    	POP	BC
                           A  3363    ;  290	            t++;
                           A  3364    .LINE 290
                           A  3365    
04627D DD07F4              A  3366    	LD	BC,(IX+%FFFFFFF4)
046280 03                  A  3367    	INC	BC
046281 DD0FF4              A  3368    	LD	(IX+%FFFFFFF4),BC
                           A  3369    ;  291	            result++;
                           A  3370    .LINE 291
                           A  3371    
046284 DD07F7              A  3372    	LD	BC,(IX+%FFFFFFF7)
046287 03                  A  3373    	INC	BC
046288 DD0FF7              A  3374    	LD	(IX+%FFFFFFF7),BC
04628B DD07FA              A  3375    	LD	BC,(IX+%FFFFFFFA)
04628E 03                  A  3376    	INC	BC
04628F DD0FFA              A  3377    	LD	(IX+%FFFFFFFA),BC
                           A  3378    ;  292	        }
046292                     A  3379    L_201:
                           A  3380    .LINE 292
                           A  3381    
046292 DD0709              A  3382    	LD	BC,(IX+%9)
046295 DD27FA              A  3383    	LD	HL,(IX+%FFFFFFFA)
046298 B7                  A  3384    	OR	A,A
046299 ED42                A  3385    	SBC	HL,BC
04629B 38 C3               A  3386    	JR	C,L_199
04629D DD07FD              A  3387    	LD	BC,(IX+%FFFFFFFD)
0462A0 03                  A  3388    	INC	BC
0462A1 DD0FFD              A  3389    	LD	(IX+%FFFFFFFD),BC
                           A  3390    ;  293	    }
0462A4                     A  3391    L_204:
                           A  3392    .LINE 293
                           A  3393    
0462A4 DD070C              A  3394    	LD	BC,(IX+%C)
0462A7 DD27FD              A  3395    	LD	HL,(IX+%FFFFFFFD)
0462AA B7                  A  3396    	OR	A,A
0462AB ED42                A  3397    	SBC	HL,BC
0462AD 38 A8               A  3398    	JR	C,L_202
                           A  3399    ;  294	    return result;
                           A  3400    .LINE 294
                           A  3401    
0462AF DD27F7              A  3402    	LD	HL,(IX+%FFFFFFF7)
                           A  3403    ;  295	}
                           A  3404    .LINE 295
                           A  3405    
0462B2 DDF9                A  3406    	LD	SP,IX
0462B4 DDE1                A  3407    	POP	IX
0462B6 C9                  A  3408    	RET	
                           A  3409    
                           A  3410    
                           A  3411    ;**************************** _agon_fwrite ****
                           A  3412    ;Name                         Addr/Register   S
                           A  3413    ;_filehandle                         IMPORT    
                           A  3414    ;_mos_fputc                          IMPORT  --
                           A  3415    ;t                                    IX-12    
                           A  3416    ;result                                IX-9    
                           A  3417    ;s                                     IX-6    
                           A  3418    ;n                                     IX-3    
                           A  3419    ;fileid                               IX+15    
                           A  3420    ;nmemb                                IX+12    
                           A  3421    ;size                                  IX+9    
                           A  3422    ;ptr                                   IX+6    
                           A  3423    
                           A  3424    
                           A  3425    ; Stack Frame Size: 30 (bytes)
                           A  3426    ;       Spill Code: 0 (instruction)
                           A  3427    
                           A  3428    
                           A  3429    .ENDFUNC "agon_fwrite",295,"_agon_fwrite"
                           A  3430    ;  296	
                           A  3431    ;  297	size_t agon_fread(void *ptr, size_t siz
0462B7                     A  3432    _agon_fread:
                           A  3433    .DEFINE "_agon_fread"
                           A  3434    
                           A  3435    .VALUE _agon_fread
                           A  3436    
                           A  3437    .CLASS 2
                           A  3438    
                           A  3439    .TYPE 78
                           A  3440    
                           A  3441    .ENDEF
                           A  3442    
                           A  3443    .BEGFUNC "agon_fread",297,"_agon_fread"
                           A  3444    
                           A  3445    .LINE 297
                           A  3446    
                           A  3447    .DEFINE "ptr"
                           A  3448    
                           A  3449    .CLASS 65
                           A  3450    
                           A  3451    .VALUE 6
                           A  3452    
                           A  3453    .TYPE 33
                           A  3454    
                           A  3455    .ENDEF
                           A  3456    
                           A  3457    .DEFINE "size"
                           A  3458    
                           A  3459    .CLASS 65
                           A  3460    
                           A  3461    .VALUE 9
                           A  3462    
                           A  3463    .TYPE 14
                           A  3464    
                           A  3465    .ENDEF
                           A  3466    
                           A  3467    .DEFINE "nmemb"
                           A  3468    
                           A  3469    .CLASS 65
                           A  3470    
                           A  3471    .VALUE 12
                           A  3472    
                           A  3473    .TYPE 14
                           A  3474    
                           A  3475    .ENDEF
                           A  3476    
                           A  3477    .DEFINE "fileid"
                           A  3478    
                           A  3479    .CLASS 65
                           A  3480    
                           A  3481    .VALUE 15
                           A  3482    
                           A  3483    .TYPE 12
                           A  3484    
                           A  3485    .ENDEF
                           A  3486    
                           A  3487    .DEFINE "result"
                           A  3488    
                           A  3489    .CLASS 65
                           A  3490    
                           A  3491    .VALUE -3
                           A  3492    
                           A  3493    .TYPE 14
                           A  3494    
                           A  3495    .ENDEF
                           A  3496    
                           A  3497    .DEFINE "s"
                           A  3498    
                           A  3499    .CLASS 65
                           A  3500    
                           A  3501    .VALUE -6
                           A  3502    
                           A  3503    .TYPE 14
                           A  3504    
                           A  3505    .ENDEF
                           A  3506    
                           A  3507    .DEFINE "n"
                           A  3508    
                           A  3509    .CLASS 65
                           A  3510    
                           A  3511    .VALUE -9
                           A  3512    
                           A  3513    .TYPE 14
                           A  3514    
                           A  3515    .ENDEF
                           A  3516    
                           A  3517    .DEFINE "t"
                           A  3518    
                           A  3519    .CLASS 65
                           A  3520    
                           A  3521    .VALUE -12
                           A  3522    
                           A  3523    .TYPE 34
                           A  3524    
                           A  3525    .ENDEF
                           A  3526    
0462B7 DDE5                A  3527    	PUSH	IX
0462B9 DD210000 00         A  3528    	LD	IX,0
0462BE DD39                A  3529    	ADD	IX,SP
0462C0 ED22F4              A  3530    	LEA	HL,IX+%FFFFFFF4
0462C3 F9                  A  3531    	LD	SP,HL
                           A  3532    ;  298	    size_t n, s, result = 0;
                           A  3533    .LINE 298
                           A  3534    
0462C4 01000000            A  3535    	LD	BC,0
0462C8 DD0FFD              A  3536    	LD	(IX+%FFFFFFFD),BC
                           A  3537    ;  299	    char *t = (char *)ptr;
                           A  3538    .LINE 299
                           A  3539    
0462CB DD0706              A  3540    	LD	BC,(IX+%6)
0462CE DD0FF4              A  3541    	LD	(IX+%FFFFFFF4),BC
                           A  3542    ;  300	
                           A  3543    ;  301	    for(n = 0; n < nmemb; n++) {
                           A  3544    .LINE 301
                           A  3545    
0462D1 01000000            A  3546    	LD	BC,0
0462D5 DD0FF7              A  3547    	LD	(IX+%FFFFFFF7),BC
0462D8 18 66               A  3548    	JR	L_218
0462DA                     A  3549    L_216:
                           A  3550    ;  302	        for(s = 0; s < size; s++) {
                           A  3551    .LINE 302
                           A  3552    
0462DA 01000000            A  3553    	LD	BC,0
0462DE DD0FFA              A  3554    	LD	(IX+%FFFFFFFA),BC
0462E1 18 4B               A  3555    	JR	L_215
0462E3                     A  3556    L_213:
                           A  3557    ;  303	            *t = mos_fgetc(filehandle[f
                           A  3558    .LINE 303
                           A  3559    
0462E3 DD7E0F              A  3560    	LD	A,(IX+%F)
0462E6 B7ED62              A  3561    	UEXT	HL
0462E9 6F                  A  3562    	LD	L,A
0462EA 01 0B 97 04         A  3563    	LD	BC,_filehandle
0462EE 09                  A  3564    	ADD	HL,BC
0462EF 4E                  A  3565    	LD	C,(HL)
0462F0 0600                A  3566    	LD	B,%0
0462F2 C5                  A  3567    	PUSH	BC
0462F3 CD 7B 0D 04         A  3568    	CALL	_mos_fgetc
0462F7 C1                  A  3569    	POP	BC
0462F8 DD27F4              A  3570    	LD	HL,(IX+%FFFFFFF4)
0462FB 77                  A  3571    	LD	(HL),A
                           A  3572    ;  304	                if(mos_feof(filehandle[
                           A  3573    .LINE 304
                           A  3574    
0462FC DD7E0F              A  3575    	LD	A,(IX+%F)
0462FF B7ED62              A  3576    	UEXT	HL
046302 6F                  A  3577    	LD	L,A
046303 01 0B 97 04         A  3578    	LD	BC,_filehandle
046307 09                  A  3579    	ADD	HL,BC
046308 4E                  A  3580    	LD	C,(HL)
046309 0600                A  3581    	LD	B,%0
04630B C5                  A  3582    	PUSH	BC
04630C CD A8 0D 04         A  3583    	CALL	_mos_feof
046310 C1                  A  3584    	POP	BC
046311 B7                  A  3585    	OR	A,A
046312 28 05               A  3586    	JR	Z,L_211
                           A  3587    ;  305	                return result;
                           A  3588    .LINE 305
                           A  3589    
046314 DD27FD              A  3590    	LD	HL,(IX+%FFFFFFFD)
046317 18 35               A  3591    	JR	L_220
                           A  3592    ;  306	            }
046319                     A  3593    L_211:
                           A  3594    .LINE 306
                           A  3595    
                           A  3596    ;  307	            t++;
                           A  3597    .LINE 307
                           A  3598    
046319 DD07F4              A  3599    	LD	BC,(IX+%FFFFFFF4)
04631C 03                  A  3600    	INC	BC
04631D DD0FF4              A  3601    	LD	(IX+%FFFFFFF4),BC
                           A  3602    ;  308	            result++;
                           A  3603    .LINE 308
                           A  3604    
046320 DD07FD              A  3605    	LD	BC,(IX+%FFFFFFFD)
046323 03                  A  3606    	INC	BC
046324 DD0FFD              A  3607    	LD	(IX+%FFFFFFFD),BC
046327 DD07FA              A  3608    	LD	BC,(IX+%FFFFFFFA)
04632A 03                  A  3609    	INC	BC
04632B DD0FFA              A  3610    	LD	(IX+%FFFFFFFA),BC
                           A  3611    ;  309	        }
04632E                     A  3612    L_215:
                           A  3613    .LINE 309
                           A  3614    
04632E DD0709              A  3615    	LD	BC,(IX+%9)
046331 DD27FA              A  3616    	LD	HL,(IX+%FFFFFFFA)
046334 B7                  A  3617    	OR	A,A
046335 ED42                A  3618    	SBC	HL,BC
046337 38 AA               A  3619    	JR	C,L_213
046339 DD07F7              A  3620    	LD	BC,(IX+%FFFFFFF7)
04633C 03                  A  3621    	INC	BC
04633D DD0FF7              A  3622    	LD	(IX+%FFFFFFF7),BC
                           A  3623    ;  310	    }
046340                     A  3624    L_218:
                           A  3625    .LINE 310
                           A  3626    
046340 DD070C              A  3627    	LD	BC,(IX+%C)
046343 DD27F7              A  3628    	LD	HL,(IX+%FFFFFFF7)
046346 B7                  A  3629    	OR	A,A
046347 ED42                A  3630    	SBC	HL,BC
046349 38 8F               A  3631    	JR	C,L_216
                           A  3632    ;  311	    return result;
                           A  3633    .LINE 311
                           A  3634    
04634B DD27FD              A  3635    	LD	HL,(IX+%FFFFFFFD)
                           A  3636    ;  312	}
04634E                     A  3637    L_220:
                           A  3638    .LINE 312
                           A  3639    
04634E DDF9                A  3640    	LD	SP,IX
046350 DDE1                A  3641    	POP	IX
046352 C9                  A  3642    	RET	
                           A  3643    
                           A  3644    
                           A  3645    ;**************************** _agon_fread *****
                           A  3646    ;Name                         Addr/Register   S
                           A  3647    ;_mos_feof                           IMPORT  --
                           A  3648    ;_filehandle                         IMPORT    
                           A  3649    ;_mos_fgetc                          IMPORT  --
                           A  3650    ;t                                    IX-12    
                           A  3651    ;n                                     IX-9    
                           A  3652    ;s                                     IX-6    
                           A  3653    ;result                                IX-3    
                           A  3654    ;fileid                               IX+15    
                           A  3655    ;nmemb                                IX+12    
                           A  3656    ;size                                  IX+9    
                           A  3657    ;ptr                                   IX+6    
                           A  3658    
                           A  3659    
                           A  3660    ; Stack Frame Size: 30 (bytes)
                           A  3661    ;       Spill Code: 0 (instruction)
                           A  3662    
                           A  3663    
                           A  3664    .ENDFUNC "agon_fread",312,"_agon_fread"
                           A  3665    ;  313	
                           A  3666    ;  314	int strcasecmp (char *s1, char *s2) {
046353                     A  3667    _strcasecmp:
                           A  3668    .DEFINE "_strcasecmp"
                           A  3669    
                           A  3670    .VALUE _strcasecmp
                           A  3671    
                           A  3672    .CLASS 2
                           A  3673    
                           A  3674    .TYPE 68
                           A  3675    
                           A  3676    .ENDEF
                           A  3677    
                           A  3678    .BEGFUNC "strcasecmp",314,"_strcasecmp"
                           A  3679    
                           A  3680    .LINE 314
                           A  3681    
                           A  3682    .DEFINE "s1"
                           A  3683    
                           A  3684    .CLASS 65
                           A  3685    
                           A  3686    .VALUE 6
                           A  3687    
                           A  3688    .TYPE 34
                           A  3689    
                           A  3690    .ENDEF
                           A  3691    
                           A  3692    .DEFINE "s2"
                           A  3693    
                           A  3694    .CLASS 65
                           A  3695    
                           A  3696    .VALUE 9
                           A  3697    
                           A  3698    .TYPE 34
                           A  3699    
                           A  3700    .ENDEF
                           A  3701    
                           A  3702    .DEFINE "p1"
                           A  3703    
                           A  3704    .CLASS 65
                           A  3705    
                           A  3706    .VALUE -3
                           A  3707    
                           A  3708    .TYPE 204
                           A  3709    
                           A  3710    .ENDEF
                           A  3711    
                           A  3712    .DEFINE "p2"
                           A  3713    
                           A  3714    .CLASS 65
                           A  3715    
                           A  3716    .VALUE -6
                           A  3717    
                           A  3718    .TYPE 204
                           A  3719    
                           A  3720    .ENDEF
                           A  3721    
                           A  3722    .DEFINE "result"
                           A  3723    
                           A  3724    .CLASS 65
                           A  3725    
                           A  3726    .VALUE -9
                           A  3727    
                           A  3728    .TYPE 4
                           A  3729    
                           A  3730    .ENDEF
                           A  3731    
046353 DDE5                A  3732    	PUSH	IX
046355 DD210000 00         A  3733    	LD	IX,0
04635A DD39                A  3734    	ADD	IX,SP
04635C ED22ED              A  3735    	LEA	HL,IX+%FFFFFFED
04635F F9                  A  3736    	LD	SP,HL
                           A  3737    ;  315	  const unsigned char *p1 = (const unsi
                           A  3738    .LINE 315
                           A  3739    
046360 DD0706              A  3740    	LD	BC,(IX+%6)
046363 DD0FFD              A  3741    	LD	(IX+%FFFFFFFD),BC
                           A  3742    ;  316	  const unsigned char *p2 = (const unsi
                           A  3743    .LINE 316
                           A  3744    
046366 DD0709              A  3745    	LD	BC,(IX+%9)
046369 DD0FFA              A  3746    	LD	(IX+%FFFFFFFA),BC
                           A  3747    ;  317	  int result;
                           A  3748    ;  318	  if (p1 == p2)
                           A  3749    .LINE 318
                           A  3750    
04636C DD0709              A  3751    	LD	BC,(IX+%9)
04636F DD2706              A  3752    	LD	HL,(IX+%6)
046372 B7                  A  3753    	OR	A,A
046373 ED42                A  3754    	SBC	HL,BC
046375 20 19               A  3755    	JR	NZ,L_225
                           A  3756    ;  319	    return 0;
                           A  3757    .LINE 319
                           A  3758    
046377 B7                  A  3759    	OR	A,A
046378 ED62                A  3760    	SBC	HL,HL
04637A 18 5E               A  3761    	JR	L_229
                           A  3762    ;  320	  while ((result = tolower(*p1) - tolow
                           A  3763    .LINE 320
                           A  3764    
04637C                     A  3765    L_226:
                           A  3766    ;  321	    if (*p1++ == '\0')
                           A  3767    .LINE 321
                           A  3768    
04637C DD07FD              A  3769    	LD	BC,(IX+%FFFFFFFD)
04637F DD0FF4              A  3770    	LD	(IX+%FFFFFFF4),BC
046382 DD07FD              A  3771    	LD	BC,(IX+%FFFFFFFD)
046385 03                  A  3772    	INC	BC
046386 DD0FFD              A  3773    	LD	(IX+%FFFFFFFD),BC
046389 DD27F4              A  3774    	LD	HL,(IX+%FFFFFFF4)
04638C 7E                  A  3775    	LD	A,(HL)
04638D B7                  A  3776    	OR	A,A
04638E 28 47               A  3777    	JR	Z,L_228
                           A  3778    ;  322	      break;
046390                     A  3779    L_225:
                           A  3780    .LINE 322
                           A  3781    
046390 DD07FA              A  3782    	LD	BC,(IX+%FFFFFFFA)
046393 DD0FF1              A  3783    	LD	(IX+%FFFFFFF1),BC
046396 DD07FA              A  3784    	LD	BC,(IX+%FFFFFFFA)
046399 03                  A  3785    	INC	BC
04639A DD0FFA              A  3786    	LD	(IX+%FFFFFFFA),BC
04639D DD27FD              A  3787    	LD	HL,(IX+%FFFFFFFD)
0463A0 7E                  A  3788    	LD	A,(HL)
0463A1 B7ED62              A  3789    	UEXT	HL
0463A4 6F                  A  3790    	LD	L,A
0463A5 E5                  A  3791    	PUSH	HL
0463A6 CD D0 6E 04         A  3792    	CALL	_tolower
0463AA C1                  A  3793    	POP	BC
0463AB E5C1                A  3794    	LD	BC,HL
0463AD DD27F1              A  3795    	LD	HL,(IX+%FFFFFFF1)
0463B0 7E                  A  3796    	LD	A,(HL)
0463B1 B7ED62              A  3797    	UEXT	HL
0463B4 6F                  A  3798    	LD	L,A
0463B5 E5                  A  3799    	PUSH	HL
0463B6 DD0FEE              A  3800    	LD	(IX+%FFFFFFEE),BC
0463B9 DD77ED              A  3801    	LD	(IX+%FFFFFFED),A
0463BC CD D0 6E 04         A  3802    	CALL	_tolower
0463C0 DD07EE              A  3803    	LD	BC,(IX+%FFFFFFEE)
0463C3 DD7EED              A  3804    	LD	A,(IX+%FFFFFFED)
0463C6 D1                  A  3805    	POP	DE
0463C7 E5D1                A  3806    	LD	DE,HL
0463C9 C5E1                A  3807    	LD	HL,BC
0463CB B7                  A  3808    	OR	A,A
0463CC ED52                A  3809    	SBC	HL,DE
0463CE DD2FF7              A  3810    	LD	(IX+%FFFFFFF7),HL
0463D1 CD E3 6A 04         A  3811    	CALL	__icmpzero
0463D5 28 A5               A  3812    	JR	Z,L_226
0463D7                     A  3813    L_228:
                           A  3814    ;  323	  return result;
                           A  3815    .LINE 323
                           A  3816    
0463D7 DD27F7              A  3817    	LD	HL,(IX+%FFFFFFF7)
0463DA                     A  3818    L_229:
                           A  3819    .LINE 324
                           A  3820    
0463DA DDF9                A  3821    	LD	SP,IX
0463DC DDE1                A  3822    	POP	IX
0463DE C9                  A  3823    	RET	
                           A  3824    
                           A  3825    
                           A  3826    ;**************************** _strcasecmp *****
                           A  3827    ;Name                         Addr/Register   S
                           A  3828    ;_tolower                            IMPORT  --
                           A  3829    ;result                                IX-9    
                           A  3830    ;p2                                    IX-6    
                           A  3831    ;p1                                    IX-3    
                           A  3832    ;s2                                    IX+9    
                           A  3833    ;s1                                    IX+6    
                           A  3834    
                           A  3835    
                           A  3836    ; Stack Frame Size: 31 (bytes)
                           A  3837    ;       Spill Code: 0 (instruction)
                           A  3838    
                           A  3839    
                           A  3840    .ENDFUNC "strcasecmp",324,"_strcasecmp"
                           A  3841    	XREF _mos_feof:ROM
                           A  3842    	XREF _mos_fputc:ROM
                           A  3843    	XREF _mos_fgetc:ROM
                           A  3844    	XREF _mos_fclose:ROM
                           A  3845    	XREF _mos_fopen:ROM
                           A  3846    	XREF _global_errors:ROM
                           A  3847    	XREF _linenumber:ROM
                           A  3848    	XREF _filehandle:ROM
                           A  3849    	XREF _filename:ROM
                           A  3850    	XREF _tolower:ROM
                           A  3851    	XREF _isspace:ROM
                           A  3852    	XREF _strrchr:ROM
                           A  3853    	XREF _strcat:ROM
                           A  3854    	XREF _strcpy:ROM
                           A  3855    	XREF __u_itoa:ROM
                           A  3856    	XREF ___print_sendstring:ROM
                           A  3857    	XREF ___print_xputch:ROM
                           A  3858    	XREF ___print_uputch:ROM
                           A  3859    	XREF __istiy:ROM
                           A  3860    	XREF __bstiy:ROM
                           A  3861    	XREF __icmpzero:ROM
                           A  3862    	XREF __case8D:ROM
                           A  3863    	XREF __seqcaseD:ROM
                           A  3864    	XDEF _strcasecmp
                           A  3865    	XDEF _agon_fread
                           A  3866    	XDEF _agon_fwrite
                           A  3867    	XDEF _agon_fputs
                           A  3868    	XDEF _agon_fgets
                           A  3869    	XDEF _openfiles
                           A  3870    	XDEF _closeAllFiles
                           A  3871    	XDEF _prepare_filenames
                           A  3872    	XDEF _reOpenFile
                           A  3873    	XDEF _openFile
                           A  3874    	XDEF _getOperatorToken
                           A  3875    	XDEF _getLineToken
                           A  3876    	XDEF _split_suffix
                           A  3877    	XDEF _trimRight
                           A  3878    	XDEF _error
                           A  3879    	XDEF _notEmpty
                           A  3880    	XDEF _isEmpty
                           A  3881    	XDEF _remove_ext
                           A  3882    	END


Errors: 0
Warnings: 0
Lines Assembled: 3883
