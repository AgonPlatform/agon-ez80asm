Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED01-Mar-23     16:29:18     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\utils.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",16
                           A    94    .DEFINE "reg"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "reg_index"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "indirect"
                           A   105    .VALUE 4
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "cc"
                           A   110    .VALUE 5
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "cc_index"
                           A   115    .VALUE 6
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "displacement"
                           A   120    .VALUE 7
                           A   121    .CLASS 8
                           A   122    .TYPE 3
                           A   123    .ENDEF
                           A   124    .DEFINE "displacement_provided"
                           A   125    .VALUE 9
                           A   126    .CLASS 8
                           A   127    .TYPE 12
                           A   128    .ENDEF
                           A   129    .DEFINE "immediate_provided"
                           A   130    .VALUE 10
                           A   131    .CLASS 8
                           A   132    .TYPE 12
                           A   133    .ENDEF
                           A   134    .DEFINE "immediate"
                           A   135    .VALUE 11
                           A   136    .CLASS 8
                           A   137    .TYPE 5
                           A   138    .ENDEF
                           A   139    .DEFINE "wasLabel"
                           A   140    .VALUE 15
                           A   141    .CLASS 8
                           A   142    .TYPE 12
                           A   143    .ENDEF
                           A   144    .ENDREC "NONAME0"
                           A   145    .BEGREC "NONAME1",4
                           A   146    .DEFINE "suffix"
                           A   147    .VALUE 0
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "prefix1"
                           A   152    .VALUE 1
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "prefix2"
                           A   157    .VALUE 2
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "opcode"
                           A   162    .VALUE 3
                           A   163    .CLASS 8
                           A   164    .TYPE 12
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME1"
                           A   167    .BEGREC "NONAME2",16
                           A   168    .DEFINE "operandA"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TYPE 4
                           A   172    .ENDEF
                           A   173    .DEFINE "operandB"
                           A   174    .VALUE 3
                           A   175    .CLASS 8
                           A   176    .TYPE 4
                           A   177    .ENDEF
                           A   178    .DEFINE "ddfdpermitted"
                           A   179    .VALUE 6
                           A   180    .CLASS 8
                           A   181    .TYPE 12
                           A   182    .ENDEF
                           A   183    .DEFINE "transformA"
                           A   184    .VALUE 7
                           A   185    .CLASS 8
                           A   186    .TYPE 4
                           A   187    .ENDEF
                           A   188    .DEFINE "transformB"
                           A   189    .VALUE 10
                           A   190    .CLASS 8
                           A   191    .TYPE 4
                           A   192    .ENDEF
                           A   193    .DEFINE "prefix"
                           A   194    .VALUE 13
                           A   195    .CLASS 8
                           A   196    .TYPE 12
                           A   197    .ENDEF
                           A   198    .DEFINE "opcode"
                           A   199    .VALUE 14
                           A   200    .CLASS 8
                           A   201    .TYPE 12
                           A   202    .ENDEF
                           A   203    .DEFINE "adl"
                           A   204    .VALUE 15
                           A   205    .CLASS 8
                           A   206    .TYPE 12
                           A   207    .ENDEF
                           A   208    .ENDREC "NONAME2"
                           A   209    .BEGREC "NONAME3",17
                           A   210    .DEFINE "name"
                           A   211    .VALUE 0
                           A   212    .CLASS 8
                           A   213    .DIM 8
                           A   214    .TYPE 98
                           A   215    .ENDEF
                           A   216    .DEFINE "type"
                           A   217    .VALUE 8
                           A   218    .CLASS 8
                           A   219    .TYPE 12
                           A   220    .ENDEF
                           A   221    .DEFINE "asmtype"
                           A   222    .VALUE 9
                           A   223    .CLASS 8
                           A   224    .TYPE 12
                           A   225    .ENDEF
                           A   226    .DEFINE "listnumber"
                           A   227    .VALUE 10
                           A   228    .CLASS 8
                           A   229    .TYPE 12
                           A   230    .ENDEF
                           A   231    .DEFINE "list"
                           A   232    .VALUE 11
                           A   233    .CLASS 8
                           A   234    .TAG "NONAME2"
                           A   235    .TYPE 40
                           A   236    .ENDEF
                           A   237    .DEFINE "asmargument"
                           A   238    .VALUE 14
                           A   239    .CLASS 8
                           A   240    .TYPE 4
                           A   241    .ENDEF
                           A   242    .ENDREC "NONAME3"
                           A   243    .BEGREC "NONAME4",6
                           A   244    .DEFINE "type"
                           A   245    .VALUE 0
                           A   246    .CLASS 8
                           A   247    .TYPE 4
                           A   248    .ENDEF
                           A   249    .DEFINE "match"
                           A   250    .VALUE 3
                           A   251    .CLASS 8
                           A   252    .TYPE 556
                           A   253    .ENDEF
                           A   254    .ENDREC "NONAME4"
                           A   255    .BEGREC "NONAME5",264
                           A   256    .DEFINE "current_instruction"
                           A   257    .VALUE 0
                           A   258    .CLASS 8
                           A   259    .TAG "NONAME3"
                           A   260    .TYPE 40
                           A   261    .ENDEF
                           A   262    .DEFINE "next"
                           A   263    .VALUE 3
                           A   264    .CLASS 8
                           A   265    .TYPE 34
                           A   266    .ENDEF
                           A   267    .DEFINE "label"
                           A   268    .VALUE 6
                           A   269    .CLASS 8
                           A   270    .DIM 32
                           A   271    .TYPE 98
                           A   272    .ENDEF
                           A   273    .DEFINE "mnemonic"
                           A   274    .VALUE 38
                           A   275    .CLASS 8
                           A   276    .DIM 16
                           A   277    .TYPE 98
                           A   278    .ENDEF
                           A   279    .DEFINE "suffix"
                           A   280    .VALUE 54
                           A   281    .CLASS 8
                           A   282    .DIM 16
                           A   283    .TYPE 98
                           A   284    .ENDEF
                           A   285    .DEFINE "operand1"
                           A   286    .VALUE 70
                           A   287    .CLASS 8
                           A   288    .DIM 32
                           A   289    .TYPE 98
                           A   290    .ENDEF
                           A   291    .DEFINE "operand2"
                           A   292    .VALUE 102
                           A   293    .CLASS 8
                           A   294    .DIM 32
                           A   295    .TYPE 98
                           A   296    .ENDEF
                           A   297    .DEFINE "comment"
                           A   298    .VALUE 134
                           A   299    .CLASS 8
                           A   300    .DIM 128
                           A   301    .TYPE 98
                           A   302    .ENDEF
                           A   303    .DEFINE "size"
                           A   304    .VALUE 262
                           A   305    .CLASS 8
                           A   306    .TYPE 13
                           A   307    .ENDEF
                           A   308    .ENDREC "NONAME5"
                           A   309    .BEGREC "NONAME6",133
                           A   310    .DEFINE "start"
                           A   311    .VALUE 0
                           A   312    .CLASS 8
                           A   313    .DIM 128
                           A   314    .TYPE 98
                           A   315    .ENDEF
                           A   316    .DEFINE "length"
                           A   317    .VALUE 128
                           A   318    .CLASS 8
                           A   319    .TYPE 12
                           A   320    .ENDEF
                           A   321    .DEFINE "next"
                           A   322    .VALUE 129
                           A   323    .CLASS 8
                           A   324    .TYPE 34
                           A   325    .ENDEF
                           A   326    .DEFINE "terminator"
                           A   327    .VALUE 132
                           A   328    .CLASS 8
                           A   329    .TYPE 2
                           A   330    .ENDEF
                           A   331    .ENDREC "NONAME6"
                           A   332    .BEGREC "NONAME7",6
                           A   333    .DEFINE "quot"
                           A   334    .VALUE 0
                           A   335    .CLASS 8
                           A   336    .TYPE 4
                           A   337    .ENDEF
                           A   338    .DEFINE "rem"
                           A   339    .VALUE 3
                           A   340    .CLASS 8
                           A   341    .TYPE 4
                           A   342    .ENDEF
                           A   343    .ENDREC "NONAME7"
                           A   344    .BEGREC "NONAME8",8
                           A   345    .DEFINE "quot"
                           A   346    .VALUE 0
                           A   347    .CLASS 8
                           A   348    .TYPE 5
                           A   349    .ENDEF
                           A   350    .DEFINE "rem"
                           A   351    .VALUE 4
                           A   352    .CLASS 8
                           A   353    .TYPE 5
                           A   354    .ENDEF
                           A   355    .ENDREC "NONAME8"
                           A   356    .BEGREC "header",6
                           A   357    .DEFINE "s"
                           A   358    .VALUE 0
                           A   359    .CLASS 11
                           A   360    .TAG "NONAME9"
                           A   361    .TYPE 8
                           A   362    .ENDEF
                           A   363    .DEFINE "x"
                           A   364    .VALUE 0
                           A   365    .CLASS 11
                           A   366    .TYPE 2
                           A   367    .ENDEF
                           A   368    .ENDREC "header"
                           A   369    .BEGREC "NONAME9",6
                           A   370    .DEFINE "ptr"
                           A   371    .VALUE 0
                           A   372    .CLASS 8
                           A   373    .TAG "header"
                           A   374    .TYPE 40
                           A   375    .ENDEF
                           A   376    .DEFINE "size"
                           A   377    .VALUE 3
                           A   378    .CLASS 8
                           A   379    .TYPE 14
                           A   380    .ENDEF
                           A   381    .ENDREC "NONAME9"
                           A   382    .BEGREC "NONAME10",7
                           A   383    .DEFINE "name"
                           A   384    .VALUE 0
                           A   385    .CLASS 8
                           A   386    .TYPE 34
                           A   387    .ENDEF
                           A   388    .DEFINE "address"
                           A   389    .VALUE 3
                           A   390    .CLASS 8
                           A   391    .TYPE 5
                           A   392    .ENDEF
                           A   393    .ENDREC "NONAME10"
                           A   394    .BEGREC "NONAME11",5
                           A   395    .DEFINE "defined"
                           A   396    .VALUE 0
                           A   397    .CLASS 8
                           A   398    .TYPE 12
                           A   399    .ENDEF
                           A   400    .DEFINE "address"
                           A   401    .VALUE 1
                           A   402    .CLASS 8
                           A   403    .TYPE 5
                           A   404    .ENDEF
                           A   405    .ENDREC "NONAME11"
                           A   406    ;    1	#include <stdio.h>
                           A   407    ;    2	#include <string.h>
                           A   408    ;    3	#include <ctype.h>
                           A   409    ;    4	#include "globals.h"
                           A   410    ;    5	#include "utils.h"
                           A   411    ;    6	#include "str2num.h"
                           A   412    ;    7	#include "label.h"
                           A   413    ;    8	#include "instruction.h"
                           A   414    ;    9	#include "stdint.h"
                           A   415    ;   10	#include "mos-interface.h"
                           A   416    ;   11	
                           A   417    ;   12	// return a base filename, stripping th
                           A   418    ;   13	void remove_ext (char* myStr, char extS
044DEA                     A   419    _remove_ext:
                           A   420    .DEFINE "_remove_ext"
                           A   421    
                           A   422    .VALUE _remove_ext
                           A   423    
                           A   424    .CLASS 2
                           A   425    
                           A   426    .TYPE 65
                           A   427    
                           A   428    .ENDEF
                           A   429    
                           A   430    .BEGFUNC "remove_ext",13,"_remove_ext"
                           A   431    
                           A   432    .LINE 13
                           A   433    
                           A   434    .DEFINE "myStr"
                           A   435    
                           A   436    .CLASS 65
                           A   437    
                           A   438    .VALUE 6
                           A   439    
                           A   440    .TYPE 34
                           A   441    
                           A   442    .ENDEF
                           A   443    
                           A   444    .DEFINE "extSep"
                           A   445    
                           A   446    .CLASS 65
                           A   447    
                           A   448    .VALUE 9
                           A   449    
                           A   450    .TYPE 2
                           A   451    
                           A   452    .ENDEF
                           A   453    
                           A   454    .DEFINE "pathSep"
                           A   455    
                           A   456    .CLASS 65
                           A   457    
                           A   458    .VALUE 12
                           A   459    
                           A   460    .TYPE 2
                           A   461    
                           A   462    .ENDEF
                           A   463    
                           A   464    .DEFINE "lastExt"
                           A   465    
                           A   466    .CLASS 65
                           A   467    
                           A   468    .VALUE -3
                           A   469    
                           A   470    .TYPE 34
                           A   471    
                           A   472    .ENDEF
                           A   473    
                           A   474    .DEFINE "lastPath"
                           A   475    
                           A   476    .CLASS 65
                           A   477    
                           A   478    .VALUE -6
                           A   479    
                           A   480    .TYPE 34
                           A   481    
                           A   482    .ENDEF
                           A   483    
044DEA DDE5                A   484    	PUSH	IX
044DEC DD210000 00         A   485    	LD	IX,0
044DF1 DD39                A   486    	ADD	IX,SP
044DF3 C5                  A   487    	PUSH	BC
044DF4 C5                  A   488    	PUSH	BC
044DF5 C5                  A   489    	PUSH	BC
                           A   490    ;   14	    char *lastExt, *lastPath;
                           A   491    ;   15	    // Error checks.
                           A   492    ;   16	    if (myStr == NULL) return;
                           A   493    .LINE 16
                           A   494    
044DF6 DD2706              A   495    	LD	HL,(IX+%6)
044DF9 CD CF 60 04         A   496    	CALL	__icmpzero
044DFD 28 6C               A   497    	JR	Z,L_10
                           A   498    ;   17	    // Find the relevant characters.
                           A   499    ;   18	    lastExt = strrchr (myStr, extSep);
                           A   500    .LINE 18
                           A   501    
044DFF DD7E09              A   502    	LD	A,(IX+%9)
044E02 17ED62              A   503    	SEXT	HL
044E05 DD6E09              A   504    	LD	L,(IX+%9)
044E08 E5                  A   505    	PUSH	HL
044E09 DD0706              A   506    	LD	BC,(IX+%6)
044E0C C5                  A   507    	PUSH	BC
044E0D CD D8 59 04         A   508    	CALL	_strrchr
044E11 C1                  A   509    	POP	BC
044E12 C1                  A   510    	POP	BC
044E13 DD2FFD              A   511    	LD	(IX+%FFFFFFFD),HL
                           A   512    ;   19	    lastPath = (pathSep == 0) ? NULL : 
                           A   513    .LINE 19
                           A   514    
044E16 DD7E0C              A   515    	LD	A,(IX+%C)
044E19 B7                  A   516    	OR	A,A
044E1A 20 09               A   517    	JR	NZ,L_4
044E1C 01000000            A   518    	LD	BC,0
044E20 DD0FF7              A   519    	LD	(IX+%FFFFFFF7),BC
044E23 18 17               A   520    	JR	L_5
044E25                     A   521    L_4:
044E25 DD7E0C              A   522    	LD	A,(IX+%C)
044E28 17ED62              A   523    	SEXT	HL
044E2B DD6E0C              A   524    	LD	L,(IX+%C)
044E2E E5                  A   525    	PUSH	HL
044E2F DD0706              A   526    	LD	BC,(IX+%6)
044E32 C5                  A   527    	PUSH	BC
044E33 CD D8 59 04         A   528    	CALL	_strrchr
044E37 C1                  A   529    	POP	BC
044E38 C1                  A   530    	POP	BC
044E39 DD2FF7              A   531    	LD	(IX+%FFFFFFF7),HL
044E3C                     A   532    L_5:
044E3C DD07F7              A   533    	LD	BC,(IX+%FFFFFFF7)
044E3F DD0FFA              A   534    	LD	(IX+%FFFFFFFA),BC
                           A   535    ;   20	    // If it has an extension separator
                           A   536    ;   21	    if (lastExt != NULL) {
                           A   537    .LINE 21
                           A   538    
044E42 DD27FD              A   539    	LD	HL,(IX+%FFFFFFFD)
044E45 CD CF 60 04         A   540    	CALL	__icmpzero
044E49 28 20               A   541    	JR	Z,L_10
                           A   542    ;   22	        // and it's to the right of the
                           A   543    ;   23	        if (lastPath != NULL) {
                           A   544    .LINE 23
                           A   545    
044E4B DD27FA              A   546    	LD	HL,(IX+%FFFFFFFA)
044E4E CD CF 60 04         A   547    	CALL	__icmpzero
044E52 28 12               A   548    	JR	Z,L_8
                           A   549    ;   24	            if (lastPath < lastExt) {
                           A   550    .LINE 24
                           A   551    
044E54 DD07FD              A   552    	LD	BC,(IX+%FFFFFFFD)
044E57 DD27FA              A   553    	LD	HL,(IX+%FFFFFFFA)
044E5A B7                  A   554    	OR	A,A
044E5B ED42                A   555    	SBC	HL,BC
044E5D 30 0C               A   556    	JR	NC,L_10
                           A   557    ;   25	                // then remove it.
                           A   558    ;   26	                *lastExt = '\0';
                           A   559    .LINE 26
                           A   560    
044E5F DD27FD              A   561    	LD	HL,(IX+%FFFFFFFD)
044E62 3600                A   562    	LD	(HL),%0
                           A   563    ;   27	            }
                           A   564    ;   28	        } else {
                           A   565    .LINE 28
                           A   566    
044E64 18 05               A   567    	JR	L_10
044E66                     A   568    L_8:
                           A   569    ;   29	            // Has extension separator 
                           A   570    ;   30	            *lastExt = '\0';
                           A   571    .LINE 30
                           A   572    
044E66 DD27FD              A   573    	LD	HL,(IX+%FFFFFFFD)
044E69 3600                A   574    	LD	(HL),%0
                           A   575    ;   31	        }
                           A   576    ;   32	    }
                           A   577    ;   33	}
044E6B                     A   578    L_10:
                           A   579    .LINE 33
                           A   580    
044E6B DDF9                A   581    	LD	SP,IX
044E6D DDE1                A   582    	POP	IX
044E6F C9                  A   583    	RET	
                           A   584    
                           A   585    
                           A   586    ;**************************** _remove_ext *****
                           A   587    ;Name                         Addr/Register   S
                           A   588    ;_strrchr                            IMPORT  --
                           A   589    ;temp2                                 IX-9    
                           A   590    ;lastPath                              IX-6    
                           A   591    ;lastExt                               IX-3    
                           A   592    ;pathSep                              IX+12    
                           A   593    ;extSep                                IX+9    
                           A   594    ;myStr                                 IX+6    
                           A   595    
                           A   596    
                           A   597    ; Stack Frame Size: 24 (bytes)
                           A   598    ;       Spill Code: 0 (instruction)
                           A   599    
                           A   600    
                           A   601    .ENDFUNC "remove_ext",33,"_remove_ext"
                           A   602    ;   34	
                           A   603    ;   35	
                           A   604    ;   36	bool isEmpty(const char *str){
044E70                     A   605    _isEmpty:
                           A   606    .DEFINE "_isEmpty"
                           A   607    
                           A   608    .VALUE _isEmpty
                           A   609    
                           A   610    .CLASS 2
                           A   611    
                           A   612    .TYPE 76
                           A   613    
                           A   614    .ENDEF
                           A   615    
                           A   616    .BEGFUNC "isEmpty",36,"_isEmpty"
                           A   617    
                           A   618    .LINE 36
                           A   619    
                           A   620    .DEFINE "str"
                           A   621    
                           A   622    .CLASS 65
                           A   623    
                           A   624    .VALUE 6
                           A   625    
                           A   626    .TYPE 194
                           A   627    
                           A   628    .ENDEF
                           A   629    
044E70 DDE5                A   630    	PUSH	IX
044E72 DD210000 00         A   631    	LD	IX,0
044E77 DD39                A   632    	ADD	IX,SP
                           A   633    ;   37	    return (str[0] == '\0');
                           A   634    .LINE 37
                           A   635    
044E79 DD2706              A   636    	LD	HL,(IX+%6)
044E7C 7E                  A   637    	LD	A,(HL)
044E7D B7                  A   638    	OR	A,A
044E7E 20 04               A   639    	JR	NZ,L__7
044E80 3E01                A   640    	LD	A,%1
044E82 18 01               A   641    	JR	L__8
044E84                     A   642    L__7:
044E84 AF                  A   643    	XOR	A,A
044E85                     A   644    L__8:
                           A   645    ;   38	}
                           A   646    .LINE 38
                           A   647    
044E85 DDF9                A   648    	LD	SP,IX
044E87 DDE1                A   649    	POP	IX
044E89 C9                  A   650    	RET	
                           A   651    
                           A   652    
                           A   653    ;**************************** _isEmpty ********
                           A   654    ;Name                         Addr/Register   S
                           A   655    ;str                                   IX+6    
                           A   656    
                           A   657    
                           A   658    ; Stack Frame Size: 9 (bytes)
                           A   659    ;       Spill Code: 0 (instruction)
                           A   660    
                           A   661    
                           A   662    .ENDFUNC "isEmpty",38,"_isEmpty"
                           A   663    ;   39	
                           A   664    ;   40	bool notEmpty(const char *str) {
044E8A                     A   665    _notEmpty:
                           A   666    .DEFINE "_notEmpty"
                           A   667    
                           A   668    .VALUE _notEmpty
                           A   669    
                           A   670    .CLASS 2
                           A   671    
                           A   672    .TYPE 76
                           A   673    
                           A   674    .ENDEF
                           A   675    
                           A   676    .BEGFUNC "notEmpty",40,"_notEmpty"
                           A   677    
                           A   678    .LINE 40
                           A   679    
                           A   680    .DEFINE "str"
                           A   681    
                           A   682    .CLASS 65
                           A   683    
                           A   684    .VALUE 6
                           A   685    
                           A   686    .TYPE 194
                           A   687    
                           A   688    .ENDEF
                           A   689    
044E8A DDE5                A   690    	PUSH	IX
044E8C DD210000 00         A   691    	LD	IX,0
044E91 DD39                A   692    	ADD	IX,SP
                           A   693    ;   41	    return (str[0] != '\0');
                           A   694    .LINE 41
                           A   695    
044E93 DD2706              A   696    	LD	HL,(IX+%6)
044E96 7E                  A   697    	LD	A,(HL)
044E97 B7                  A   698    	OR	A,A
044E98 28 04               A   699    	JR	Z,L__11
044E9A 3E01                A   700    	LD	A,%1
044E9C 18 01               A   701    	JR	L__12
044E9E                     A   702    L__11:
044E9E AF                  A   703    	XOR	A,A
044E9F                     A   704    L__12:
                           A   705    ;   42	}
                           A   706    .LINE 42
                           A   707    
044E9F DDF9                A   708    	LD	SP,IX
044EA1 DDE1                A   709    	POP	IX
044EA3 C9                  A   710    	RET	
                           A   711    
                           A   712    
                           A   713    ;**************************** _notEmpty *******
                           A   714    ;Name                         Addr/Register   S
                           A   715    ;str                                   IX+6    
                           A   716    
                           A   717    
                           A   718    ; Stack Frame Size: 9 (bytes)
                           A   719    ;       Spill Code: 0 (instruction)
                           A   720    
                           A   721    
                           A   722    .ENDFUNC "notEmpty",42,"_notEmpty"
                           A   723    ;   43	
                           A   724    ;   44	void error(char* msg)
                           A   725    ;   45	{
044EA4                     A   726    _error:
                           A   727    .DEFINE "_error"
                           A   728    
                           A   729    .VALUE _error
                           A   730    
                           A   731    .CLASS 2
                           A   732    
                           A   733    .TYPE 65
                           A   734    
                           A   735    .ENDEF
                           A   736    
                           A   737    .BEGFUNC "error",45,"_error"
                           A   738    
                           A   739    .LINE 45
                           A   740    
                           A   741    .DEFINE "msg"
                           A   742    
                           A   743    .CLASS 65
                           A   744    
                           A   745    .VALUE 6
                           A   746    
                           A   747    .TYPE 34
                           A   748    
                           A   749    .ENDEF
                           A   750    
044EA4 DDE5                A   751    	PUSH	IX
044EA6 DD210000 00         A   752    	LD	IX,0
044EAB DD39                A   753    	ADD	IX,SP
                           A   754    ;   46	    printf("\"%s\" - line %d - %s\n\r",
                           A   755    .LINE 46
                           A   756    
044EAD 01 88 5C 04         A   757    	LD	BC,___print_uputch
044EB1 ED43 EF 81 04       A   758    	LD	(___print_xputch),BC
044EB6 01220000            A   759    	LD	BC,34
044EBA C5                  A   760    	PUSH	BC
044EBB CD 88 5C 04         A   761    	CALL	___print_uputch
044EBF C1                  A   762    	POP	BC
044EC0 01 C6 88 04         A   763    	LD	BC,_filename
044EC4 C5                  A   764    	PUSH	BC
044EC5 CD FA 5A 04         A   765    	CALL	___print_sendstring
044EC9 C1                  A   766    	POP	BC
044ECA 01 77 87 04         A   767    	LD	BC,L__14
044ECE C5                  A   768    	PUSH	BC
044ECF CD FA 5A 04         A   769    	CALL	___print_sendstring
044ED3 C1                  A   770    	POP	BC
044ED4 ED4B 4F 8A 04       A   771    	LD	BC,(_linenumber)
044ED9 AF                  A   772    	XOR	A,A
044EDA C5D1                A   773    	LD	DE,BC
044EDC 4F                  A   774    	LD	C,A
044EDD 0600                A   775    	LD	B,%0
044EDF C5                  A   776    	PUSH	BC
044EE0 D5                  A   777    	PUSH	DE
044EE1 CD 62 5D 04         A   778    	CALL	__u_itoa
044EE5 C1                  A   779    	POP	BC
044EE6 C1                  A   780    	POP	BC
044EE7 01 81 87 04         A   781    	LD	BC,L__15
044EEB C5                  A   782    	PUSH	BC
044EEC CD FA 5A 04         A   783    	CALL	___print_sendstring
044EF0 C1                  A   784    	POP	BC
044EF1 DD0706              A   785    	LD	BC,(IX+%6)
044EF4 C5                  A   786    	PUSH	BC
044EF5 CD FA 5A 04         A   787    	CALL	___print_sendstring
044EF9 C1                  A   788    	POP	BC
044EFA 01 85 87 04         A   789    	LD	BC,L__16
044EFE C5                  A   790    	PUSH	BC
044EFF CD FA 5A 04         A   791    	CALL	___print_sendstring
044F03 C1                  A   792    	POP	BC
                           A   793    ;   47	    global_errors++;
                           A   794    .LINE 47
                           A   795    
044F04 ED4B 5D 8A 04       A   796    	LD	BC,(_global_errors)
044F09 03                  A   797    	INC	BC
044F0A 21 5D 8A 04         A   798    	LD	HL,_global_errors
044F0E 71                  A   799    	LD	(HL),C
044F0F 23                  A   800    	INC	HL
044F10 70                  A   801    	LD	(HL),B
                           A   802    ;   48	}
                           A   803    .LINE 48
                           A   804    
044F11 DDF9                A   805    	LD	SP,IX
044F13 DDE1                A   806    	POP	IX
044F15 C9                  A   807    	RET	
                           A   808    
                           A   809    
                           A   810    ;**************************** _error **********
                           A   811    ;Name                         Addr/Register   S
                           A   812    ;_global_errors                      IMPORT    
                           A   813    ;_linenumber                         IMPORT    
                           A   814    ;__u_itoa                            IMPORT  --
                           A   815    ;_filename                           IMPORT    
                           A   816    ;___print_sendstring                 IMPORT  --
                           A   817    ;___print_xputch                     IMPORT    
                           A   818    ;___print_uputch                     IMPORT  --
                           A   819    ;msg                                   IX+6    
                           A   820    
                           A   821    
                           A   822    ; Stack Frame Size: 9 (bytes)
                           A   823    ;       Spill Code: 0 (instruction)
                           A   824    
                           A   825    
                           A   826    .ENDFUNC "error",48,"_error"
                           A   827    	SEGMENT STRSECT
048777                     A   828    L__14:
048777 22202D20 6C696E65   A   829    	DB	"\" - line "
04877F 20 
048780 00                  A   830    	DB	0
048781                     A   831    L__15:
048781 202D20              A   832    	DB	" - "
048784 00                  A   833    	DB	0
048785                     A   834    L__16:
048785 0A0D00              A   835    	DB	10,13,0
                           A   836    	SEGMENT CODE
                           A   837    ;   49	
                           A   838    ;   50	void trimRight(char *str) {
044F16                     A   839    _trimRight:
                           A   840    .DEFINE "_trimRight"
                           A   841    
                           A   842    .VALUE _trimRight
                           A   843    
                           A   844    .CLASS 2
                           A   845    
                           A   846    .TYPE 65
                           A   847    
                           A   848    .ENDEF
                           A   849    
                           A   850    .BEGFUNC "trimRight",50,"_trimRight"
                           A   851    
                           A   852    .LINE 50
                           A   853    
                           A   854    .DEFINE "str"
                           A   855    
                           A   856    .CLASS 65
                           A   857    
                           A   858    .VALUE 6
                           A   859    
                           A   860    .TYPE 34
                           A   861    
                           A   862    .ENDEF
                           A   863    
044F16 DDE5                A   864    	PUSH	IX
044F18 DD210000 00         A   865    	LD	IX,0
044F1D DD39                A   866    	ADD	IX,SP
                           A   867    ;   51	    while(*str) str++;
                           A   868    .LINE 51
                           A   869    
044F1F 18 07               A   870    	JR	L_16
044F21                     A   871    L_17:
044F21 DD0706              A   872    	LD	BC,(IX+%6)
044F24 03                  A   873    	INC	BC
044F25 DD0F06              A   874    	LD	(IX+%6),BC
044F28                     A   875    L_16:
044F28 DD2706              A   876    	LD	HL,(IX+%6)
044F2B 7E                  A   877    	LD	A,(HL)
044F2C B7                  A   878    	OR	A,A
044F2D 20 F2               A   879    	JR	NZ,L_17
                           A   880    ;   52	    str--;
                           A   881    .LINE 52
                           A   882    
044F2F DD0706              A   883    	LD	BC,(IX+%6)
044F32 0B                  A   884    	DEC	BC
044F33 DD0F06              A   885    	LD	(IX+%6),BC
                           A   886    ;   53	    while(isspace(*str)) str--;
                           A   887    .LINE 53
                           A   888    
044F36 18 07               A   889    	JR	L_21
044F38                     A   890    L_22:
044F38 DD0706              A   891    	LD	BC,(IX+%6)
044F3B 0B                  A   892    	DEC	BC
044F3C DD0F06              A   893    	LD	(IX+%6),BC
044F3F                     A   894    L_21:
044F3F DD2706              A   895    	LD	HL,(IX+%6)
044F42 7E                  A   896    	LD	A,(HL)
044F43 47                  A   897    	LD	B,A
044F44 17ED62              A   898    	SEXT	HL
044F47 68                  A   899    	LD	L,B
044F48 E5                  A   900    	PUSH	HL
044F49 CD 04 61 04         A   901    	CALL	_isspace
044F4D C1                  A   902    	POP	BC
044F4E CD CF 60 04         A   903    	CALL	__icmpzero
044F52 20 E4               A   904    	JR	NZ,L_22
                           A   905    ;   54	    str++;
                           A   906    .LINE 54
                           A   907    
044F54 DD0706              A   908    	LD	BC,(IX+%6)
044F57 03                  A   909    	INC	BC
044F58 DD0F06              A   910    	LD	(IX+%6),BC
                           A   911    ;   55	    *str = 0;
                           A   912    .LINE 55
                           A   913    
044F5B C5E1                A   914    	LD	HL,BC
044F5D 3600                A   915    	LD	(HL),%0
                           A   916    ;   56	}
                           A   917    .LINE 56
                           A   918    
044F5F DDF9                A   919    	LD	SP,IX
044F61 DDE1                A   920    	POP	IX
044F63 C9                  A   921    	RET	
                           A   922    
                           A   923    
                           A   924    ;**************************** _trimRight ******
                           A   925    ;Name                         Addr/Register   S
                           A   926    ;_isspace                            IMPORT  --
                           A   927    ;str                                   IX+6    
                           A   928    
                           A   929    
                           A   930    ; Stack Frame Size: 9 (bytes)
                           A   931    ;       Spill Code: 0 (instruction)
                           A   932    
                           A   933    
                           A   934    .ENDFUNC "trimRight",56,"_trimRight"
                           A   935    ;   57	
                           A   936    ;   58	typedef enum {
                           A   937    ;   59	    TOKEN_REGULAR,
                           A   938    ;   60	    TOKEN_STRING,
                           A   939    ;   61	    TOKEN_BRACKET
                           A   940    ;   62	} tokenclass;
                           A   941    ;   63	
                           A   942    ;   64	// split a 'command.suffix' token in tw
                           A   943    ;   65	void split_suffix(char *mnemonic, char 
044F64                     A   944    _split_suffix:
                           A   945    .DEFINE "_split_suffix"
                           A   946    
                           A   947    .VALUE _split_suffix
                           A   948    
                           A   949    .CLASS 2
                           A   950    
                           A   951    .TYPE 65
                           A   952    
                           A   953    .ENDEF
                           A   954    
                           A   955    .BEGFUNC "split_suffix",65,"_split_suffix"
                           A   956    
                           A   957    .LINE 65
                           A   958    
                           A   959    .DEFINE "mnemonic"
                           A   960    
                           A   961    .CLASS 65
                           A   962    
                           A   963    .VALUE 6
                           A   964    
                           A   965    .TYPE 34
                           A   966    
                           A   967    .ENDEF
                           A   968    
                           A   969    .DEFINE "suffix"
                           A   970    
                           A   971    .CLASS 65
                           A   972    
                           A   973    .VALUE 9
                           A   974    
                           A   975    .TYPE 34
                           A   976    
                           A   977    .ENDEF
                           A   978    
                           A   979    .DEFINE "buffer"
                           A   980    
                           A   981    .CLASS 65
                           A   982    
                           A   983    .VALUE 12
                           A   984    
                           A   985    .TYPE 34
                           A   986    
                           A   987    .ENDEF
                           A   988    
                           A   989    .DEFINE "cmd"
                           A   990    
                           A   991    .CLASS 65
                           A   992    
                           A   993    .VALUE -1
                           A   994    
                           A   995    .TYPE 12
                           A   996    
                           A   997    .ENDEF
                           A   998    
044F64 DDE5                A   999    	PUSH	IX
044F66 DD210000 00         A  1000    	LD	IX,0
044F6B DD39                A  1001    	ADD	IX,SP
044F6D 3B                  A  1002    	DEC	SP
                           A  1003    ;   66	    bool cmd = true;
                           A  1004    .LINE 66
                           A  1005    
044F6E DD36FF01            A  1006    	LD	(IX+%FFFFFFFF),%1
                           A  1007    ;   67	
                           A  1008    ;   68	    while(*buffer) {
                           A  1009    .LINE 68
                           A  1010    
044F72 18 49               A  1011    	JR	L_34
044F74                     A  1012    L_35:
                           A  1013    ;   69	        if(cmd) {
                           A  1014    .LINE 69
                           A  1015    
044F74 DD7EFF              A  1016    	LD	A,(IX+%FFFFFFFF)
044F77 B7                  A  1017    	OR	A,A
044F78 28 2B               A  1018    	JR	Z,L_31
                           A  1019    ;   70	            *mnemonic = *buffer;
                           A  1020    .LINE 70
                           A  1021    
044F7A DD270C              A  1022    	LD	HL,(IX+%C)
044F7D DD3106              A  1023    	LD	IY,(IX+%6)
044F80 7E                  A  1024    	LD	A,(HL)
044F81 FD7700              A  1025    	LD	(IY),A
                           A  1026    ;   71	            if(*buffer == '.') cmd = fa
                           A  1027    .LINE 71
                           A  1028    
044F84 DD270C              A  1029    	LD	HL,(IX+%C)
044F87 7E                  A  1030    	LD	A,(HL)
044F88 47                  A  1031    	LD	B,A
044F89 17ED62              A  1032    	SEXT	HL
044F8C 68                  A  1033    	LD	L,B
044F8D 012E0000            A  1034    	LD	BC,46
044F91 B7                  A  1035    	OR	A,A
044F92 ED42                A  1036    	SBC	HL,BC
044F94 20 06               A  1037    	JR	NZ,L_28
044F96 DD36FF00            A  1038    	LD	(IX+%FFFFFFFF),%0
                           A  1039    ;   72	            else mnemonic++;
                           A  1040    .LINE 72
                           A  1041    
044F9A 18 1A               A  1042    	JR	L_33
044F9C                     A  1043    L_28:
044F9C DD0706              A  1044    	LD	BC,(IX+%6)
044F9F 03                  A  1045    	INC	BC
044FA0 DD0F06              A  1046    	LD	(IX+%6),BC
                           A  1047    ;   73	        }
                           A  1048    ;   74	        else *suffix++ = *buffer;
                           A  1049    .LINE 74
                           A  1050    
044FA3 18 11               A  1051    	JR	L_33
044FA5                     A  1052    L_31:
044FA5 DD270C              A  1053    	LD	HL,(IX+%C)
044FA8 DD3109              A  1054    	LD	IY,(IX+%9)
044FAB 7E                  A  1055    	LD	A,(HL)
044FAC FD7700              A  1056    	LD	(IY),A
044FAF DD0709              A  1057    	LD	BC,(IX+%9)
044FB2 03                  A  1058    	INC	BC
044FB3 DD0F09              A  1059    	LD	(IX+%9),BC
044FB6                     A  1060    L_33:
                           A  1061    ;   75	        buffer++;
                           A  1062    .LINE 75
                           A  1063    
044FB6 DD070C              A  1064    	LD	BC,(IX+%C)
044FB9 03                  A  1065    	INC	BC
044FBA DD0F0C              A  1066    	LD	(IX+%C),BC
                           A  1067    ;   76	    }
044FBD                     A  1068    L_34:
                           A  1069    .LINE 76
                           A  1070    
044FBD DD270C              A  1071    	LD	HL,(IX+%C)
044FC0 7E                  A  1072    	LD	A,(HL)
044FC1 B7                  A  1073    	OR	A,A
044FC2 20 B0               A  1074    	JR	NZ,L_35
                           A  1075    ;   77	    *suffix = 0;
                           A  1076    .LINE 77
                           A  1077    
044FC4 DD2709              A  1078    	LD	HL,(IX+%9)
044FC7 3600                A  1079    	LD	(HL),%0
                           A  1080    ;   78	    *mnemonic = 0;
                           A  1081    .LINE 78
                           A  1082    
044FC9 DD2706              A  1083    	LD	HL,(IX+%6)
044FCC 3600                A  1084    	LD	(HL),%0
                           A  1085    ;   79	}
                           A  1086    .LINE 79
                           A  1087    
044FCE DDF9                A  1088    	LD	SP,IX
044FD0 DDE1                A  1089    	POP	IX
044FD2 C9                  A  1090    	RET	
                           A  1091    
                           A  1092    
                           A  1093    ;**************************** _split_suffix ***
                           A  1094    ;Name                         Addr/Register   S
                           A  1095    ;cmd                                   IX-1    
                           A  1096    ;buffer                               IX+12    
                           A  1097    ;suffix                                IX+9    
                           A  1098    ;mnemonic                              IX+6    
                           A  1099    
                           A  1100    
                           A  1101    ; Stack Frame Size: 16 (bytes)
                           A  1102    ;       Spill Code: 0 (instruction)
                           A  1103    
                           A  1104    
                           A  1105    .ENDFUNC "split_suffix",79,"_split_suffix"
                           A  1106    ;   80	
                           A  1107    ;   81	uint8_t getLineToken(tokentype *token, 
044FD3                     A  1108    _getLineToken:
                           A  1109    .DEFINE "_getLineToken"
                           A  1110    
                           A  1111    .VALUE _getLineToken
                           A  1112    
                           A  1113    .CLASS 2
                           A  1114    
                           A  1115    .TYPE 76
                           A  1116    
                           A  1117    .ENDEF
                           A  1118    
                           A  1119    .BEGFUNC "getLineToken",81,"_getLineToken"
                           A  1120    
                           A  1121    .LINE 81
                           A  1122    
                           A  1123    .DEFINE "token"
                           A  1124    
                           A  1125    .CLASS 65
                           A  1126    
                           A  1127    .VALUE 6
                           A  1128    
                           A  1129    .TAG "NONAME6"
                           A  1130    
                           A  1131    .TYPE 40
                           A  1132    
                           A  1133    .ENDEF
                           A  1134    
                           A  1135    .DEFINE "src"
                           A  1136    
                           A  1137    .CLASS 65
                           A  1138    
                           A  1139    .VALUE 9
                           A  1140    
                           A  1141    .TYPE 34
                           A  1142    
                           A  1143    .ENDEF
                           A  1144    
                           A  1145    .DEFINE "terminator"
                           A  1146    
                           A  1147    .CLASS 65
                           A  1148    
                           A  1149    .VALUE 12
                           A  1150    
                           A  1151    .TYPE 2
                           A  1152    
                           A  1153    .ENDEF
                           A  1154    
                           A  1155    .DEFINE "target"
                           A  1156    
                           A  1157    .CLASS 65
                           A  1158    
                           A  1159    .VALUE -3
                           A  1160    
                           A  1161    .TYPE 34
                           A  1162    
                           A  1163    .ENDEF
                           A  1164    
                           A  1165    .DEFINE "index"
                           A  1166    
                           A  1167    .CLASS 65
                           A  1168    
                           A  1169    .VALUE -4
                           A  1170    
                           A  1171    .TYPE 12
                           A  1172    
                           A  1173    .ENDEF
                           A  1174    
                           A  1175    .DEFINE "escaped"
                           A  1176    
                           A  1177    .CLASS 65
                           A  1178    
                           A  1179    .VALUE -5
                           A  1180    
                           A  1181    .TYPE 12
                           A  1182    
                           A  1183    .ENDEF
                           A  1184    
                           A  1185    .DEFINE "terminated"
                           A  1186    
                           A  1187    .CLASS 65
                           A  1188    
                           A  1189    .VALUE -6
                           A  1190    
                           A  1191    .TYPE 12
                           A  1192    
                           A  1193    .ENDEF
                           A  1194    
                           A  1195    .DEFINE "state"
                           A  1196    
                           A  1197    .CLASS 65
                           A  1198    
                           A  1199    .VALUE -9
                           A  1200    
                           A  1201    .TYPE 4
                           A  1202    
                           A  1203    .ENDEF
                           A  1204    
044FD3 DDE5                A  1205    	PUSH	IX
044FD5 DD210000 00         A  1206    	LD	IX,0
044FDA DD39                A  1207    	ADD	IX,SP
044FDC ED22E8              A  1208    	LEA	HL,IX+%FFFFFFE8
044FDF F9                  A  1209    	LD	SP,HL
                           A  1210    ;   82	    char *target;
                           A  1211    ;   83	    uint8_t index = 0;
                           A  1212    .LINE 83
                           A  1213    
044FE0 DD36FC00            A  1214    	LD	(IX+%FFFFFFFC),%0
                           A  1215    ;   84	    bool escaped = false;
                           A  1216    .LINE 84
                           A  1217    
044FE4 DD36FB00            A  1218    	LD	(IX+%FFFFFFFB),%0
                           A  1219    ;   85	    bool terminated;
                           A  1220    ;   86	    tokenclass state;
                           A  1221    ;   87	
                           A  1222    ;   88	    // remove leading space
                           A  1223    ;   89	    while(*src) {
                           A  1224    .LINE 89
                           A  1225    
044FE8 18 1C               A  1226    	JR	L_41
044FEA                     A  1227    L_42:
                           A  1228    ;   90	        if(isspace(*src) != 0) src++;
                           A  1229    .LINE 90
                           A  1230    
044FEA DD2709              A  1231    	LD	HL,(IX+%9)
044FED 7E                  A  1232    	LD	A,(HL)
044FEE 47                  A  1233    	LD	B,A
044FEF 17ED62              A  1234    	SEXT	HL
044FF2 68                  A  1235    	LD	L,B
044FF3 E5                  A  1236    	PUSH	HL
044FF4 CD 04 61 04         A  1237    	CALL	_isspace
044FF8 C1                  A  1238    	POP	BC
044FF9 CD CF 60 04         A  1239    	CALL	__icmpzero
044FFD 28 0E               A  1240    	JR	Z,L_44
044FFF DD0709              A  1241    	LD	BC,(IX+%9)
045002 03                  A  1242    	INC	BC
045003 DD0F09              A  1243    	LD	(IX+%9),BC
                           A  1244    ;   91	        else break;
                           A  1245    .LINE 91
                           A  1246    
                           A  1247    ;   92	    }
045006                     A  1248    L_41:
                           A  1249    .LINE 92
                           A  1250    
045006 DD2709              A  1251    	LD	HL,(IX+%9)
045009 7E                  A  1252    	LD	A,(HL)
04500A B7                  A  1253    	OR	A,A
04500B 20 DD               A  1254    	JR	NZ,L_42
04500D                     A  1255    L_44:
                           A  1256    ;   93	    if(*src == 0) { // empty string
                           A  1257    .LINE 93
                           A  1258    
04500D DD2709              A  1259    	LD	HL,(IX+%9)
045010 7E                  A  1260    	LD	A,(HL)
045011 B7                  A  1261    	OR	A,A
045012 20 29               A  1262    	JR	NZ,L_45
                           A  1263    ;   94	        token->terminator = 0;
                           A  1264    .LINE 94
                           A  1265    
045014 AF                  A  1266    	XOR	A,A
045015 01840000            A  1267    	LD	BC,132
045019 DD3106              A  1268    	LD	IY,(IX+%6)
04501C CD EB 66 04         A  1269    	CALL	__bstiy
                           A  1270    ;   95	        token->start[0] = 0;
                           A  1271    .LINE 95
                           A  1272    
045020 FD360000            A  1273    	LD	(IY+%0),%0
                           A  1274    ;   96	        token->length = 0;
                           A  1275    .LINE 96
                           A  1276    
045024 AF                  A  1277    	XOR	A,A
045025 01800000            A  1278    	LD	BC,128
045029 CD EB 66 04         A  1279    	CALL	__bstiy
                           A  1280    ;   97	        token->next = NULL;
                           A  1281    .LINE 97
                           A  1282    
04502D B7                  A  1283    	OR	A,A
04502E ED62                A  1284    	SBC	HL,HL
045030 01810000            A  1285    	LD	BC,129
045034 CD E5 5A 04         A  1286    	CALL	__istiy
                           A  1287    ;   98	        return 0;
                           A  1288    .LINE 98
                           A  1289    
045038 AF                  A  1290    	XOR	A,A
045039 C3 09 52 04         A  1291    	JR	L_95
                           A  1292    ;   99	    }
04503D                     A  1293    L_45:
                           A  1294    .LINE 99
                           A  1295    
                           A  1296    ;  100	    // copy over the token itself, taki
                           A  1297    ;  101	    state = TOKEN_REGULAR;
                           A  1298    .LINE 101
                           A  1299    
04503D 01000000            A  1300    	LD	BC,0
045041 DD0FF7              A  1301    	LD	(IX+%FFFFFFF7),BC
                           A  1302    ;  102	    target = token->start;
                           A  1303    .LINE 102
                           A  1304    
045044 DD3106              A  1305    	LD	IY,(IX+%6)
045047 ED0300              A  1306    	LEA	BC,IY+%0
04504A DD0FFD              A  1307    	LD	(IX+%FFFFFFFD),BC
                           A  1308    ;  103	    while(true) {
04504D                     A  1309    L_82:
                           A  1310    .LINE 103
                           A  1311    
                           A  1312    ;  104	        terminated = false;
                           A  1313    .LINE 104
                           A  1314    
04504D DD36FA00            A  1315    	LD	(IX+%FFFFFFFA),%0
                           A  1316    ;  105	        switch(state) {
                           A  1317    .LINE 105
                           A  1318    
045051 DD27F7              A  1319    	LD	HL,(IX+%FFFFFFF7)
045054 CD 81 5A 04         A  1320    	CALL	__seqcaseD
045058 E9                  A  1321    	JP	(HL)
045059                     A  1322    L__28:
045059 0300                A  1323    	DW	3
04505B 0000                A  1324    	DW	0
04505D 00                  A  1325    	DB	0
04505E DB5004              A  1326    	DW24	L_60	
                           A  1327    
045061 6A5004              A  1328    	DW24	L_46	
                           A  1329    
045064 C05004              A  1330    	DW24	L_57	
                           A  1331    
045067 3E5104              A  1332    	DW24	L_75	
                           A  1333    
                           A  1334    ;  106	            case TOKEN_STRING:
04506A                     A  1335    L_46:
                           A  1336    .LINE 106
                           A  1337    
                           A  1338    ;  107	                switch(*src) {
                           A  1339    .LINE 107
                           A  1340    
04506A DD2709              A  1341    	LD	HL,(IX+%9)
04506D 7E                  A  1342    	LD	A,(HL)
04506E 47                  A  1343    	LD	B,A
04506F 17ED62              A  1344    	SEXT	HL
045072 68                  A  1345    	LD	L,B
045073 CD B2 63 04         A  1346    	CALL	__case8D
045077 E9                  A  1347    	JP	(HL)
045078                     A  1348    L__29:
045078 0200                A  1349    	DW	2
04507A 22                  A  1350    	DB	34
04507B A55004              A  1351    	DW24	L_52	
                           A  1352    
04507E 5C                  A  1353    	DB	92
04507F 855004              A  1354    	DW24	L_47	
                           A  1355    
045082 BA5004              A  1356    	DW24	L_55	
                           A  1357    
                           A  1358    ;  108	                    case '\\':
045085                     A  1359    L_47:
                           A  1360    .LINE 108
                           A  1361    
                           A  1362    ;  109	                        escaped = !esca
                           A  1363    .LINE 109
                           A  1364    
045085 DD7EFB              A  1365    	LD	A,(IX+%FFFFFFFB)
045088 B7                  A  1366    	OR	A,A
045089 20 09               A  1367    	JR	NZ,L_49
04508B 01010000            A  1368    	LD	BC,1
04508F DD0FF4              A  1369    	LD	(IX+%FFFFFFF4),BC
045092 18 07               A  1370    	JR	L_50
045094                     A  1371    L_49:
045094 01000000            A  1372    	LD	BC,0
045098 DD0FF4              A  1373    	LD	(IX+%FFFFFFF4),BC
04509B                     A  1374    L_50:
04509B DD7EF4              A  1375    	LD	A,(IX+%FFFFFFF4)
04509E DD77FB              A  1376    	LD	(IX+%FFFFFFFB),A
                           A  1377    ;  110	                        break;
                           A  1378    .LINE 110
                           A  1379    
0450A1 C3 3E 51 04         A  1380    	JR	L_75
                           A  1381    ;  111	                    case '\"':
0450A5                     A  1382    L_52:
                           A  1383    .LINE 111
                           A  1384    
                           A  1385    ;  112	                        if(!escaped) st
                           A  1386    .LINE 112
                           A  1387    
0450A5 DD7EFB              A  1388    	LD	A,(IX+%FFFFFFFB)
0450A8 B7                  A  1389    	OR	A,A
0450A9 20 07               A  1390    	JR	NZ,L_54
0450AB 01000000            A  1391    	LD	BC,0
0450AF DD0FF7              A  1392    	LD	(IX+%FFFFFFF7),BC
0450B2                     A  1393    L_54:
                           A  1394    ;  113	                        escaped = false
                           A  1395    .LINE 113
                           A  1396    
0450B2 DD36FB00            A  1397    	LD	(IX+%FFFFFFFB),%0
                           A  1398    ;  114	                        break;
                           A  1399    .LINE 114
                           A  1400    
0450B6 C3 3E 51 04         A  1401    	JR	L_75
                           A  1402    ;  115	                    default:
0450BA                     A  1403    L_55:
                           A  1404    .LINE 115
                           A  1405    
                           A  1406    ;  116	                        escaped = false
                           A  1407    .LINE 116
                           A  1408    
0450BA DD36FB00            A  1409    	LD	(IX+%FFFFFFFB),%0
                           A  1410    ;  117	                        break;
                           A  1411    .LINE 117
                           A  1412    
0450BE 18 7E               A  1413    	JR	L_75
                           A  1414    ;  118	                }
                           A  1415    ;  119	                break;
                           A  1416    ;  120	            case TOKEN_BRACKET:
0450C0                     A  1417    L_57:
                           A  1418    .LINE 120
                           A  1419    
                           A  1420    ;  121	                if(*src == ')') state =
                           A  1421    .LINE 121
                           A  1422    
0450C0 DD2709              A  1423    	LD	HL,(IX+%9)
0450C3 7E                  A  1424    	LD	A,(HL)
0450C4 47                  A  1425    	LD	B,A
0450C5 17ED62              A  1426    	SEXT	HL
0450C8 68                  A  1427    	LD	L,B
0450C9 01290000            A  1428    	LD	BC,41
0450CD B7                  A  1429    	OR	A,A
0450CE ED42                A  1430    	SBC	HL,BC
0450D0 20 6C               A  1431    	JR	NZ,L_75
0450D2 01000000            A  1432    	LD	BC,0
0450D6 DD0FF7              A  1433    	LD	(IX+%FFFFFFF7),BC
                           A  1434    ;  122	                break;
                           A  1435    .LINE 122
                           A  1436    
0450D9 18 63               A  1437    	JR	L_75
                           A  1438    ;  123	            case TOKEN_REGULAR:
0450DB                     A  1439    L_60:
                           A  1440    .LINE 123
                           A  1441    
                           A  1442    ;  124	                if(*src == '\"') state 
                           A  1443    .LINE 124
                           A  1444    
0450DB DD2709              A  1445    	LD	HL,(IX+%9)
0450DE 7E                  A  1446    	LD	A,(HL)
0450DF 47                  A  1447    	LD	B,A
0450E0 17ED62              A  1448    	SEXT	HL
0450E3 68                  A  1449    	LD	L,B
0450E4 01220000            A  1450    	LD	BC,34
0450E8 B7                  A  1451    	OR	A,A
0450E9 ED42                A  1452    	SBC	HL,BC
0450EB 20 07               A  1453    	JR	NZ,L_63
0450ED 01010000            A  1454    	LD	BC,1
0450F1 DD0FF7              A  1455    	LD	(IX+%FFFFFFF7),BC
0450F4                     A  1456    L_63:
                           A  1457    ;  125	                if(*src == '(') state =
                           A  1458    .LINE 125
                           A  1459    
0450F4 DD2709              A  1460    	LD	HL,(IX+%9)
0450F7 7E                  A  1461    	LD	A,(HL)
0450F8 47                  A  1462    	LD	B,A
0450F9 17ED62              A  1463    	SEXT	HL
0450FC 68                  A  1464    	LD	L,B
0450FD 01280000            A  1465    	LD	BC,40
045101 B7                  A  1466    	OR	A,A
045102 ED42                A  1467    	SBC	HL,BC
045104 20 07               A  1468    	JR	NZ,L_69
045106 01020000            A  1469    	LD	BC,2
04510A DD0FF7              A  1470    	LD	(IX+%FFFFFFF7),BC
04510D                     A  1471    L_69:
                           A  1472    ;  126	                terminated = ((*src == 
                           A  1473    .LINE 126
                           A  1474    
04510D DD2709              A  1475    	LD	HL,(IX+%9)
045110 7E                  A  1476    	LD	A,(HL)
045111 47                  A  1477    	LD	B,A
045112 17ED62              A  1478    	SEXT	HL
045115 68                  A  1479    	LD	L,B
045116 013B0000            A  1480    	LD	BC,59
04511A B7                  A  1481    	OR	A,A
04511B ED42                A  1482    	SBC	HL,BC
04511D 28 09               A  1483    	JR	Z,L_65
04511F DD2709              A  1484    	LD	HL,(IX+%9)
045122 7E                  A  1485    	LD	A,(HL)
045123 DDBE0C              A  1486    	CP	A,(IX+%C)
045126 20 09               A  1487    	JR	NZ,L_66
045128                     A  1488    L_65:
045128 01010000            A  1489    	LD	BC,1
04512C DD0FF1              A  1490    	LD	(IX+%FFFFFFF1),BC
04512F 18 07               A  1491    	JR	L_67
045131                     A  1492    L_66:
045131 01000000            A  1493    	LD	BC,0
045135 DD0FF1              A  1494    	LD	(IX+%FFFFFFF1),BC
045138                     A  1495    L_67:
045138 DD7EF1              A  1496    	LD	A,(IX+%FFFFFFF1)
04513B DD77FA              A  1497    	LD	(IX+%FFFFFFFA),A
                           A  1498    ;  127	                break;            
                           A  1499    ;  128	        }
04513E                     A  1500    L_75:
                           A  1501    .LINE 128
                           A  1502    
                           A  1503    ;  129	        terminated = terminated || (*sr
                           A  1504    .LINE 129
                           A  1505    
04513E DD7EFA              A  1506    	LD	A,(IX+%FFFFFFFA)
045141 B7                  A  1507    	OR	A,A
045142 20 07               A  1508    	JR	NZ,L_71
045144 DD2709              A  1509    	LD	HL,(IX+%9)
045147 7E                  A  1510    	LD	A,(HL)
045148 B7                  A  1511    	OR	A,A
045149 20 09               A  1512    	JR	NZ,L_72
04514B                     A  1513    L_71:
04514B 01010000            A  1514    	LD	BC,1
04514F DD0FEE              A  1515    	LD	(IX+%FFFFFFEE),BC
045152 18 07               A  1516    	JR	L_73
045154                     A  1517    L_72:
045154 01000000            A  1518    	LD	BC,0
045158 DD0FEE              A  1519    	LD	(IX+%FFFFFFEE),BC
04515B                     A  1520    L_73:
04515B DD7EEE              A  1521    	LD	A,(IX+%FFFFFFEE)
04515E DD77FA              A  1522    	LD	(IX+%FFFFFFFA),A
                           A  1523    ;  130	        if(terminated) {
                           A  1524    .LINE 130
                           A  1525    
045161 B7                  A  1526    	OR	A,A
045162 28 11               A  1527    	JR	Z,L_79
                           A  1528    ;  131	            token->terminator = *src;
                           A  1529    .LINE 131
                           A  1530    
045164 DD2709              A  1531    	LD	HL,(IX+%9)
045167 7E                  A  1532    	LD	A,(HL)
045168 01840000            A  1533    	LD	BC,132
04516C DD3106              A  1534    	LD	IY,(IX+%6)
04516F CD EB 66 04         A  1535    	CALL	__bstiy
                           A  1536    ;  132	            break;
                           A  1537    .LINE 132
                           A  1538    
045173 18 52               A  1539    	JR	L_88
                           A  1540    ;  133	        }
045175                     A  1541    L_79:
                           A  1542    .LINE 133
                           A  1543    
                           A  1544    ;  134	        *target++ = *src++;
                           A  1545    .LINE 134
                           A  1546    
045175 DD0709              A  1547    	LD	BC,(IX+%9)
045178 DD0FEB              A  1548    	LD	(IX+%FFFFFFEB),BC
04517B DD07FD              A  1549    	LD	BC,(IX+%FFFFFFFD)
04517E DD0FE8              A  1550    	LD	(IX+%FFFFFFE8),BC
045181 DD27EB              A  1551    	LD	HL,(IX+%FFFFFFEB)
045184 DD31E8              A  1552    	LD	IY,(IX+%FFFFFFE8)
045187 7E                  A  1553    	LD	A,(HL)
045188 FD7700              A  1554    	LD	(IY),A
04518B DD0709              A  1555    	LD	BC,(IX+%9)
04518E 03                  A  1556    	INC	BC
04518F DD0F09              A  1557    	LD	(IX+%9),BC
045192 DD07FD              A  1558    	LD	BC,(IX+%FFFFFFFD)
045195 03                  A  1559    	INC	BC
045196 DD0FFD              A  1560    	LD	(IX+%FFFFFFFD),BC
                           A  1561    ;  135	        index++;
                           A  1562    .LINE 135
                           A  1563    
045199 DD34FC              A  1564    	INC	(IX+%FFFFFFFC)
04519C C3 4D 50 04         A  1565    	JR	L_82
                           A  1566    ;  136	    }
                           A  1567    ;  137	    // remove trailing space
                           A  1568    ;  138	    while(index) {
0451A0                     A  1569    L_89:
                           A  1570    .LINE 138
                           A  1571    
                           A  1572    ;  139	        target--;
                           A  1573    .LINE 139
                           A  1574    
0451A0 DD07FD              A  1575    	LD	BC,(IX+%FFFFFFFD)
0451A3 0B                  A  1576    	DEC	BC
0451A4 DD0FFD              A  1577    	LD	(IX+%FFFFFFFD),BC
                           A  1578    ;  140	        if(isspace(*target) == 0) {
                           A  1579    .LINE 140
                           A  1580    
0451A7 C5E1                A  1581    	LD	HL,BC
0451A9 7E                  A  1582    	LD	A,(HL)
0451AA 47                  A  1583    	LD	B,A
0451AB 17ED62              A  1584    	SEXT	HL
0451AE 68                  A  1585    	LD	L,B
0451AF E5                  A  1586    	PUSH	HL
0451B0 CD 04 61 04         A  1587    	CALL	_isspace
0451B4 C1                  A  1588    	POP	BC
0451B5 CD CF 60 04         A  1589    	CALL	__icmpzero
0451B9 20 09               A  1590    	JR	NZ,L_87
                           A  1591    ;  141	            target++;
                           A  1592    .LINE 141
                           A  1593    
0451BB DD07FD              A  1594    	LD	BC,(IX+%FFFFFFFD)
0451BE 03                  A  1595    	INC	BC
0451BF DD0FFD              A  1596    	LD	(IX+%FFFFFFFD),BC
                           A  1597    ;  142	            break;
                           A  1598    .LINE 142
                           A  1599    
0451C2 18 09               A  1600    	JR	L_91
                           A  1601    ;  143	        }
0451C4                     A  1602    L_87:
                           A  1603    .LINE 143
                           A  1604    
                           A  1605    ;  144	        index--;
                           A  1606    .LINE 144
                           A  1607    
0451C4 DD35FC              A  1608    	DEC	(IX+%FFFFFFFC)
                           A  1609    ;  145	    }
0451C7                     A  1610    L_88:
                           A  1611    .LINE 145
                           A  1612    
0451C7 DD7EFC              A  1613    	LD	A,(IX+%FFFFFFFC)
0451CA B7                  A  1614    	OR	A,A
0451CB 20 D3               A  1615    	JR	NZ,L_89
0451CD                     A  1616    L_91:
                           A  1617    ;  146	    *target = 0;
                           A  1618    .LINE 146
                           A  1619    
0451CD DD27FD              A  1620    	LD	HL,(IX+%FFFFFFFD)
0451D0 3600                A  1621    	LD	(HL),%0
                           A  1622    ;  147	    if(*src == 0) token->next = NULL;
                           A  1623    .LINE 147
                           A  1624    
0451D2 DD2709              A  1625    	LD	HL,(IX+%9)
0451D5 7E                  A  1626    	LD	A,(HL)
0451D6 B7                  A  1627    	OR	A,A
0451D7 20 10               A  1628    	JR	NZ,L_93
0451D9 B7                  A  1629    	OR	A,A
0451DA ED62                A  1630    	SBC	HL,HL
0451DC 01810000            A  1631    	LD	BC,129
0451E0 DD3106              A  1632    	LD	IY,(IX+%6)
0451E3 CD E5 5A 04         A  1633    	CALL	__istiy
                           A  1634    ;  148	    else token->next = src+1;
                           A  1635    .LINE 148
                           A  1636    
0451E7 18 0F               A  1637    	JR	L_94
0451E9                     A  1638    L_93:
0451E9 DD2709              A  1639    	LD	HL,(IX+%9)
0451EC 23                  A  1640    	INC	HL
0451ED 01810000            A  1641    	LD	BC,129
0451F1 DD3106              A  1642    	LD	IY,(IX+%6)
0451F4 CD E5 5A 04         A  1643    	CALL	__istiy
0451F8                     A  1644    L_94:
                           A  1645    ;  149	    token->length = index;
                           A  1646    .LINE 149
                           A  1647    
0451F8 DD7EFC              A  1648    	LD	A,(IX+%FFFFFFFC)
0451FB 01800000            A  1649    	LD	BC,128
0451FF DD3106              A  1650    	LD	IY,(IX+%6)
045202 CD EB 66 04         A  1651    	CALL	__bstiy
                           A  1652    ;  150	    return index;
                           A  1653    .LINE 150
                           A  1654    
045206 DD7EFC              A  1655    	LD	A,(IX+%FFFFFFFC)
                           A  1656    ;  151	}
045209                     A  1657    L_95:
                           A  1658    .LINE 151
                           A  1659    
045209 DDF9                A  1660    	LD	SP,IX
04520B DDE1                A  1661    	POP	IX
04520D C9                  A  1662    	RET	
                           A  1663    
                           A  1664    
                           A  1665    ;**************************** _getLineToken ***
                           A  1666    ;Name                         Addr/Register   S
                           A  1667    ;_isspace                            IMPORT  --
                           A  1668    ;temp74                               IX-18    
                           A  1669    ;temp68                               IX-15    
                           A  1670    ;temp51                               IX-12    
                           A  1671    ;state                                 IX-9    
                           A  1672    ;terminated                            IX-6    
                           A  1673    ;escaped                               IX-5    
                           A  1674    ;index                                 IX-4    
                           A  1675    ;target                                IX-3    
                           A  1676    ;terminator                           IX+12    
                           A  1677    ;src                                   IX+9    
                           A  1678    ;token                                 IX+6    
                           A  1679    
                           A  1680    
                           A  1681    ; Stack Frame Size: 39 (bytes)
                           A  1682    ;       Spill Code: 0 (instruction)
                           A  1683    
                           A  1684    
                           A  1685    .ENDFUNC "getLineToken",151,"_getLineToken"
                           A  1686    ;  152	
                           A  1687    ;  153	uint8_t getOperatorToken(tokentype *tok
04520E                     A  1688    _getOperatorToken:
                           A  1689    .DEFINE "_getOperatorToken"
                           A  1690    
                           A  1691    .VALUE _getOperatorToken
                           A  1692    
                           A  1693    .CLASS 2
                           A  1694    
                           A  1695    .TYPE 76
                           A  1696    
                           A  1697    .ENDEF
                           A  1698    
                           A  1699    .BEGFUNC "getOperatorToken",153,"_getOperatorTo
                           A  1700    
                           A  1701    .LINE 153
                           A  1702    
                           A  1703    .DEFINE "token"
                           A  1704    
                           A  1705    .CLASS 65
                           A  1706    
                           A  1707    .VALUE 6
                           A  1708    
                           A  1709    .TAG "NONAME6"
                           A  1710    
                           A  1711    .TYPE 40
                           A  1712    
                           A  1713    .ENDEF
                           A  1714    
                           A  1715    .DEFINE "src"
                           A  1716    
                           A  1717    .CLASS 65
                           A  1718    
                           A  1719    .VALUE 9
                           A  1720    
                           A  1721    .TYPE 34
                           A  1722    
                           A  1723    .ENDEF
                           A  1724    
                           A  1725    .DEFINE "target"
                           A  1726    
                           A  1727    .CLASS 65
                           A  1728    
                           A  1729    .VALUE -3
                           A  1730    
                           A  1731    .TYPE 34
                           A  1732    
                           A  1733    .ENDEF
                           A  1734    
                           A  1735    .DEFINE "index"
                           A  1736    
                           A  1737    .CLASS 65
                           A  1738    
                           A  1739    .VALUE -4
                           A  1740    
                           A  1741    .TYPE 12
                           A  1742    
                           A  1743    .ENDEF
                           A  1744    
04520E DDE5                A  1745    	PUSH	IX
045210 DD210000 00         A  1746    	LD	IX,0
045215 DD39                A  1747    	ADD	IX,SP
045217 ED22F3              A  1748    	LEA	HL,IX+%FFFFFFF3
04521A F9                  A  1749    	LD	SP,HL
                           A  1750    ;  154	    char *target;
                           A  1751    ;  155	    uint8_t index = 0;
                           A  1752    .LINE 155
                           A  1753    
04521B DD36FC00            A  1754    	LD	(IX+%FFFFFFFC),%0
                           A  1755    ;  156	
                           A  1756    ;  157	    // remove leading space
                           A  1757    ;  158	    while(*src) {
                           A  1758    .LINE 158
                           A  1759    
04521F 18 1C               A  1760    	JR	L_99
045221                     A  1761    L_100:
                           A  1762    ;  159	        if(isspace(*src) != 0) src++;
                           A  1763    .LINE 159
                           A  1764    
045221 DD2709              A  1765    	LD	HL,(IX+%9)
045224 7E                  A  1766    	LD	A,(HL)
045225 47                  A  1767    	LD	B,A
045226 17ED62              A  1768    	SEXT	HL
045229 68                  A  1769    	LD	L,B
04522A E5                  A  1770    	PUSH	HL
04522B CD 04 61 04         A  1771    	CALL	_isspace
04522F C1                  A  1772    	POP	BC
045230 CD CF 60 04         A  1773    	CALL	__icmpzero
045234 28 0E               A  1774    	JR	Z,L_102
045236 DD0709              A  1775    	LD	BC,(IX+%9)
045239 03                  A  1776    	INC	BC
04523A DD0F09              A  1777    	LD	(IX+%9),BC
                           A  1778    ;  160	        else break;
                           A  1779    .LINE 160
                           A  1780    
                           A  1781    ;  161	    }
04523D                     A  1782    L_99:
                           A  1783    .LINE 161
                           A  1784    
04523D DD2709              A  1785    	LD	HL,(IX+%9)
045240 7E                  A  1786    	LD	A,(HL)
045241 B7                  A  1787    	OR	A,A
045242 20 DD               A  1788    	JR	NZ,L_100
045244                     A  1789    L_102:
                           A  1790    ;  162	    if(*src == 0) { // empty string
                           A  1791    .LINE 162
                           A  1792    
045244 DD2709              A  1793    	LD	HL,(IX+%9)
045247 7E                  A  1794    	LD	A,(HL)
045248 B7                  A  1795    	OR	A,A
045249 20 29               A  1796    	JR	NZ,L_103
                           A  1797    ;  163	        token->terminator = 0;
                           A  1798    .LINE 163
                           A  1799    
04524B AF                  A  1800    	XOR	A,A
04524C 01840000            A  1801    	LD	BC,132
045250 DD3106              A  1802    	LD	IY,(IX+%6)
045253 CD EB 66 04         A  1803    	CALL	__bstiy
                           A  1804    ;  164	        token->start[0] = 0;
                           A  1805    .LINE 164
                           A  1806    
045257 FD360000            A  1807    	LD	(IY+%0),%0
                           A  1808    ;  165	        token->length = 0;
                           A  1809    .LINE 165
                           A  1810    
04525B AF                  A  1811    	XOR	A,A
04525C 01800000            A  1812    	LD	BC,128
045260 CD EB 66 04         A  1813    	CALL	__bstiy
                           A  1814    ;  166	        token->next = NULL;
                           A  1815    .LINE 166
                           A  1816    
045264 B7                  A  1817    	OR	A,A
045265 ED62                A  1818    	SBC	HL,HL
045267 01810000            A  1819    	LD	BC,129
04526B CD E5 5A 04         A  1820    	CALL	__istiy
                           A  1821    ;  167	        return 0;
                           A  1822    .LINE 167
                           A  1823    
04526F AF                  A  1824    	XOR	A,A
045270 C3 BF 53 04         A  1825    	JR	L_132
                           A  1826    ;  168	    }
045274                     A  1827    L_103:
                           A  1828    .LINE 168
                           A  1829    
                           A  1830    ;  169	    // copy content
                           A  1831    ;  170	    target = token->start;
                           A  1832    .LINE 170
                           A  1833    
045274 DD3106              A  1834    	LD	IY,(IX+%6)
045277 ED0300              A  1835    	LEA	BC,IY+%0
04527A DD0FFD              A  1836    	LD	(IX+%FFFFFFFD),BC
                           A  1837    ;  171	    while(true) {
04527D                     A  1838    L_119:
                           A  1839    .LINE 171
                           A  1840    
                           A  1841    ;  172	        if((*src == 0) || (*src == '+')
                           A  1842    .LINE 172
                           A  1843    
04527D DD2709              A  1844    	LD	HL,(IX+%9)
045280 7E                  A  1845    	LD	A,(HL)
045281 B7                  A  1846    	OR	A,A
045282 28 48               A  1847    	JR	Z,L_113
045284 DD2709              A  1848    	LD	HL,(IX+%9)
045287 7E                  A  1849    	LD	A,(HL)
045288 47                  A  1850    	LD	B,A
045289 17ED62              A  1851    	SEXT	HL
04528C 68                  A  1852    	LD	L,B
04528D 012B0000            A  1853    	LD	BC,43
045291 B7                  A  1854    	OR	A,A
045292 ED42                A  1855    	SBC	HL,BC
045294 28 36               A  1856    	JR	Z,L_113
045296 DD2709              A  1857    	LD	HL,(IX+%9)
045299 7E                  A  1858    	LD	A,(HL)
04529A 47                  A  1859    	LD	B,A
04529B 17ED62              A  1860    	SEXT	HL
04529E 68                  A  1861    	LD	L,B
04529F 012D0000            A  1862    	LD	BC,45
0452A3 B7                  A  1863    	OR	A,A
0452A4 ED42                A  1864    	SBC	HL,BC
0452A6 28 24               A  1865    	JR	Z,L_113
0452A8 DD2709              A  1866    	LD	HL,(IX+%9)
0452AB 7E                  A  1867    	LD	A,(HL)
0452AC 47                  A  1868    	LD	B,A
0452AD 17ED62              A  1869    	SEXT	HL
0452B0 68                  A  1870    	LD	L,B
0452B1 013C0000            A  1871    	LD	BC,60
0452B5 B7                  A  1872    	OR	A,A
0452B6 ED42                A  1873    	SBC	HL,BC
0452B8 28 12               A  1874    	JR	Z,L_113
0452BA DD2709              A  1875    	LD	HL,(IX+%9)
0452BD 7E                  A  1876    	LD	A,(HL)
0452BE 47                  A  1877    	LD	B,A
0452BF 17ED62              A  1878    	SEXT	HL
0452C2 68                  A  1879    	LD	L,B
0452C3 013E0000            A  1880    	LD	BC,62
0452C7 B7                  A  1881    	OR	A,A
0452C8 ED42                A  1882    	SBC	HL,BC
0452CA 20 5F               A  1883    	JR	NZ,L_116
0452CC                     A  1884    L_113:
                           A  1885    ;  173	            if(((*src == '<') || (*src 
                           A  1886    .LINE 173
                           A  1887    
0452CC DD2709              A  1888    	LD	HL,(IX+%9)
0452CF 7E                  A  1889    	LD	A,(HL)
0452D0 47                  A  1890    	LD	B,A
0452D1 17ED62              A  1891    	SEXT	HL
0452D4 68                  A  1892    	LD	L,B
0452D5 013C0000            A  1893    	LD	BC,60
0452D9 B7                  A  1894    	OR	A,A
0452DA ED42                A  1895    	SBC	HL,BC
0452DC 28 12               A  1896    	JR	Z,L_111
0452DE DD2709              A  1897    	LD	HL,(IX+%9)
0452E1 7E                  A  1898    	LD	A,(HL)
0452E2 47                  A  1899    	LD	B,A
0452E3 17ED62              A  1900    	SEXT	HL
0452E6 68                  A  1901    	LD	L,B
0452E7 013E0000            A  1902    	LD	BC,62
0452EB B7                  A  1903    	OR	A,A
0452EC ED42                A  1904    	SBC	HL,BC
0452EE 20 2A               A  1905    	JR	NZ,L_112
0452F0                     A  1906    L_111:
                           A  1907    ;  174	                if((*(src+1) == *src)) 
                           A  1908    .LINE 174
                           A  1909    
0452F0 DD0709              A  1910    	LD	BC,(IX+%9)
0452F3 03                  A  1911    	INC	BC
0452F4 DD0FF9              A  1912    	LD	(IX+%FFFFFFF9),BC
0452F7 DD2709              A  1913    	LD	HL,(IX+%9)
0452FA DD31F9              A  1914    	LD	IY,(IX+%FFFFFFF9)
0452FD 7E                  A  1915    	LD	A,(HL)
0452FE FDBE00              A  1916    	CP	A,(IY)
045301 20 08               A  1917    	JR	NZ,L_110
045303 DD07F9              A  1918    	LD	BC,(IX+%FFFFFFF9)
045306 DD0F09              A  1919    	LD	(IX+%9),BC
                           A  1920    ;  175	                else {
                           A  1921    .LINE 175
                           A  1922    
045309 18 0F               A  1923    	JR	L_112
04530B                     A  1924    L_110:
                           A  1925    ;  176	                    token->terminator =
                           A  1926    .LINE 176
                           A  1927    
04530B 3E21                A  1928    	LD	A,%21
04530D 01840000            A  1929    	LD	BC,132
045311 DD3106              A  1930    	LD	IY,(IX+%6)
045314 CD EB 66 04         A  1931    	CALL	__bstiy
                           A  1932    ;  177	                    break;
                           A  1933    .LINE 177
                           A  1934    
045318 18 63               A  1935    	JR	L_125
                           A  1936    ;  178	                }
                           A  1937    ;  179	            }
04531A                     A  1938    L_112:
                           A  1939    .LINE 179
                           A  1940    
                           A  1941    ;  180	            token->terminator = *src;
                           A  1942    .LINE 180
                           A  1943    
04531A DD2709              A  1944    	LD	HL,(IX+%9)
04531D 7E                  A  1945    	LD	A,(HL)
04531E 01840000            A  1946    	LD	BC,132
045322 DD3106              A  1947    	LD	IY,(IX+%6)
045325 CD EB 66 04         A  1948    	CALL	__bstiy
                           A  1949    ;  181	            break;
                           A  1950    .LINE 181
                           A  1951    
045329 18 52               A  1952    	JR	L_125
                           A  1953    ;  182	        }
04532B                     A  1954    L_116:
                           A  1955    .LINE 182
                           A  1956    
                           A  1957    ;  183	        *target++ = *src++;
                           A  1958    .LINE 183
                           A  1959    
04532B DD0709              A  1960    	LD	BC,(IX+%9)
04532E DD0FF6              A  1961    	LD	(IX+%FFFFFFF6),BC
045331 DD07FD              A  1962    	LD	BC,(IX+%FFFFFFFD)
045334 DD0FF3              A  1963    	LD	(IX+%FFFFFFF3),BC
045337 DD27F6              A  1964    	LD	HL,(IX+%FFFFFFF6)
04533A DD31F3              A  1965    	LD	IY,(IX+%FFFFFFF3)
04533D 7E                  A  1966    	LD	A,(HL)
04533E FD7700              A  1967    	LD	(IY),A
045341 DD0709              A  1968    	LD	BC,(IX+%9)
045344 03                  A  1969    	INC	BC
045345 DD0F09              A  1970    	LD	(IX+%9),BC
045348 DD07FD              A  1971    	LD	BC,(IX+%FFFFFFFD)
04534B 03                  A  1972    	INC	BC
04534C DD0FFD              A  1973    	LD	(IX+%FFFFFFFD),BC
                           A  1974    ;  184	        index++;
                           A  1975    .LINE 184
                           A  1976    
04534F DD34FC              A  1977    	INC	(IX+%FFFFFFFC)
045352 C3 7D 52 04         A  1978    	JR	L_119
                           A  1979    ;  185	    }
                           A  1980    ;  186	    // remove trailing space
                           A  1981    ;  187	    while(index) {
045356                     A  1982    L_126:
                           A  1983    .LINE 187
                           A  1984    
                           A  1985    ;  188	        target--;
                           A  1986    .LINE 188
                           A  1987    
045356 DD07FD              A  1988    	LD	BC,(IX+%FFFFFFFD)
045359 0B                  A  1989    	DEC	BC
04535A DD0FFD              A  1990    	LD	(IX+%FFFFFFFD),BC
                           A  1991    ;  189	        if(isspace(*target) == 0) {
                           A  1992    .LINE 189
                           A  1993    
04535D C5E1                A  1994    	LD	HL,BC
04535F 7E                  A  1995    	LD	A,(HL)
045360 47                  A  1996    	LD	B,A
045361 17ED62              A  1997    	SEXT	HL
045364 68                  A  1998    	LD	L,B
045365 E5                  A  1999    	PUSH	HL
045366 CD 04 61 04         A  2000    	CALL	_isspace
04536A C1                  A  2001    	POP	BC
04536B CD CF 60 04         A  2002    	CALL	__icmpzero
04536F 20 09               A  2003    	JR	NZ,L_124
                           A  2004    ;  190	            target++;
                           A  2005    .LINE 190
                           A  2006    
045371 DD07FD              A  2007    	LD	BC,(IX+%FFFFFFFD)
045374 03                  A  2008    	INC	BC
045375 DD0FFD              A  2009    	LD	(IX+%FFFFFFFD),BC
                           A  2010    ;  191	            break;
                           A  2011    .LINE 191
                           A  2012    
045378 18 09               A  2013    	JR	L_128
                           A  2014    ;  192	        }
04537A                     A  2015    L_124:
                           A  2016    .LINE 192
                           A  2017    
                           A  2018    ;  193	        index--;
                           A  2019    .LINE 193
                           A  2020    
04537A DD35FC              A  2021    	DEC	(IX+%FFFFFFFC)
                           A  2022    ;  194	    }
04537D                     A  2023    L_125:
                           A  2024    .LINE 194
                           A  2025    
04537D DD7EFC              A  2026    	LD	A,(IX+%FFFFFFFC)
045380 B7                  A  2027    	OR	A,A
045381 20 D3               A  2028    	JR	NZ,L_126
045383                     A  2029    L_128:
                           A  2030    ;  195	    *target = 0;
                           A  2031    .LINE 195
                           A  2032    
045383 DD27FD              A  2033    	LD	HL,(IX+%FFFFFFFD)
045386 3600                A  2034    	LD	(HL),%0
                           A  2035    ;  196	    if(*src == 0) token->next = NULL;
                           A  2036    .LINE 196
                           A  2037    
045388 DD2709              A  2038    	LD	HL,(IX+%9)
04538B 7E                  A  2039    	LD	A,(HL)
04538C B7                  A  2040    	OR	A,A
04538D 20 10               A  2041    	JR	NZ,L_130
04538F B7                  A  2042    	OR	A,A
045390 ED62                A  2043    	SBC	HL,HL
045392 01810000            A  2044    	LD	BC,129
045396 DD3106              A  2045    	LD	IY,(IX+%6)
045399 CD E5 5A 04         A  2046    	CALL	__istiy
                           A  2047    ;  197	    else token->next = src+1;
                           A  2048    .LINE 197
                           A  2049    
04539D 18 0F               A  2050    	JR	L_131
04539F                     A  2051    L_130:
04539F DD2709              A  2052    	LD	HL,(IX+%9)
0453A2 23                  A  2053    	INC	HL
0453A3 01810000            A  2054    	LD	BC,129
0453A7 DD3106              A  2055    	LD	IY,(IX+%6)
0453AA CD E5 5A 04         A  2056    	CALL	__istiy
0453AE                     A  2057    L_131:
                           A  2058    ;  198	    token->length = index;
                           A  2059    .LINE 198
                           A  2060    
0453AE DD7EFC              A  2061    	LD	A,(IX+%FFFFFFFC)
0453B1 01800000            A  2062    	LD	BC,128
0453B5 DD3106              A  2063    	LD	IY,(IX+%6)
0453B8 CD EB 66 04         A  2064    	CALL	__bstiy
                           A  2065    ;  199	    return index;
                           A  2066    .LINE 199
                           A  2067    
0453BC DD7EFC              A  2068    	LD	A,(IX+%FFFFFFFC)
                           A  2069    ;  200	}
0453BF                     A  2070    L_132:
                           A  2071    .LINE 200
                           A  2072    
0453BF DDF9                A  2073    	LD	SP,IX
0453C1 DDE1                A  2074    	POP	IX
0453C3 C9                  A  2075    	RET	
                           A  2076    
                           A  2077    
                           A  2078    ;**************************** _getOperatorToken
                           A  2079    ;Name                         Addr/Register   S
                           A  2080    ;_isspace                            IMPORT  --
                           A  2081    ;G_0                                   IX-7    
                           A  2082    ;index                                 IX-4    
                           A  2083    ;target                                IX-3    
                           A  2084    ;src                                   IX+9    
                           A  2085    ;token                                 IX+6    
                           A  2086    
                           A  2087    
                           A  2088    ; Stack Frame Size: 25 (bytes)
                           A  2089    ;       Spill Code: 0 (instruction)
                           A  2090    
                           A  2091    
                           A  2092    .ENDFUNC "getOperatorToken",200,"_getOperatorTo
                           A  2093    ;  201	
                           A  2094    ;  202	
                           A  2095    ;  203	bool openFile(uint8_t *file, char *name
0453C4                     A  2096    _openFile:
                           A  2097    .DEFINE "_openFile"
                           A  2098    
                           A  2099    .VALUE _openFile
                           A  2100    
                           A  2101    .CLASS 2
                           A  2102    
                           A  2103    .TYPE 76
                           A  2104    
                           A  2105    .ENDEF
                           A  2106    
                           A  2107    .BEGFUNC "openFile",203,"_openFile"
                           A  2108    
                           A  2109    .LINE 203
                           A  2110    
                           A  2111    .DEFINE "file"
                           A  2112    
                           A  2113    .CLASS 65
                           A  2114    
                           A  2115    .VALUE 6
                           A  2116    
                           A  2117    .TYPE 44
                           A  2118    
                           A  2119    .ENDEF
                           A  2120    
                           A  2121    .DEFINE "name"
                           A  2122    
                           A  2123    .CLASS 65
                           A  2124    
                           A  2125    .VALUE 9
                           A  2126    
                           A  2127    .TYPE 34
                           A  2128    
                           A  2129    .ENDEF
                           A  2130    
                           A  2131    .DEFINE "mode"
                           A  2132    
                           A  2133    .CLASS 65
                           A  2134    
                           A  2135    .VALUE 12
                           A  2136    
                           A  2137    .TYPE 12
                           A  2138    
                           A  2139    .ENDEF
                           A  2140    
0453C4 DDE5                A  2141    	PUSH	IX
0453C6 DD210000 00         A  2142    	LD	IX,0
0453CB DD39                A  2143    	ADD	IX,SP
                           A  2144    ;  204	    *file = mos_fopen(name, mode);
                           A  2145    .LINE 204
                           A  2146    
0453CD DD4E0C              A  2147    	LD	C,(IX+%C)
0453D0 0600                A  2148    	LD	B,%0
0453D2 C5                  A  2149    	PUSH	BC
0453D3 DD0709              A  2150    	LD	BC,(IX+%9)
0453D6 C5                  A  2151    	PUSH	BC
0453D7 CD A4 03 04         A  2152    	CALL	_mos_fopen
0453DB C1                  A  2153    	POP	BC
0453DC C1                  A  2154    	POP	BC
0453DD DD2706              A  2155    	LD	HL,(IX+%6)
0453E0 77                  A  2156    	LD	(HL),A
                           A  2157    ;  205	
                           A  2158    ;  206	    if(*file) return true;
                           A  2159    .LINE 206
                           A  2160    
0453E1 DD2706              A  2161    	LD	HL,(IX+%6)
0453E4 7E                  A  2162    	LD	A,(HL)
0453E5 B7                  A  2163    	OR	A,A
0453E6 28 04               A  2164    	JR	Z,L_134
0453E8 3E01                A  2165    	LD	A,%1
0453EA 18 27               A  2166    	JR	L_135
0453EC                     A  2167    L_134:
                           A  2168    ;  207	    printf("Error opening \"%s\"\n\r", 
                           A  2169    .LINE 207
                           A  2170    
0453EC 01 88 5C 04         A  2171    	LD	BC,___print_uputch
0453F0 ED43 EF 81 04       A  2172    	LD	(___print_xputch),BC
0453F5 01 88 87 04         A  2173    	LD	BC,L__60
0453F9 C5                  A  2174    	PUSH	BC
0453FA CD FA 5A 04         A  2175    	CALL	___print_sendstring
0453FE C1                  A  2176    	POP	BC
0453FF DD0709              A  2177    	LD	BC,(IX+%9)
045402 C5                  A  2178    	PUSH	BC
045403 CD FA 5A 04         A  2179    	CALL	___print_sendstring
045407 C1                  A  2180    	POP	BC
045408 01 98 87 04         A  2181    	LD	BC,L__61
04540C C5                  A  2182    	PUSH	BC
04540D CD FA 5A 04         A  2183    	CALL	___print_sendstring
045411 C1                  A  2184    	POP	BC
                           A  2185    ;  208	    return false;
                           A  2186    .LINE 208
                           A  2187    
045412 AF                  A  2188    	XOR	A,A
                           A  2189    ;  209	}
045413                     A  2190    L_135:
                           A  2191    .LINE 209
                           A  2192    
045413 DDF9                A  2193    	LD	SP,IX
045415 DDE1                A  2194    	POP	IX
045417 C9                  A  2195    	RET	
                           A  2196    
                           A  2197    
                           A  2198    ;**************************** _openFile *******
                           A  2199    ;Name                         Addr/Register   S
                           A  2200    ;___print_sendstring                 IMPORT  --
                           A  2201    ;___print_xputch                     IMPORT    
                           A  2202    ;___print_uputch                     IMPORT  --
                           A  2203    ;_mos_fopen                          IMPORT  --
                           A  2204    ;mode                                 IX+12    
                           A  2205    ;name                                  IX+9    
                           A  2206    ;file                                  IX+6    
                           A  2207    
                           A  2208    
                           A  2209    ; Stack Frame Size: 15 (bytes)
                           A  2210    ;       Spill Code: 0 (instruction)
                           A  2211    
                           A  2212    
                           A  2213    .ENDFUNC "openFile",209,"_openFile"
                           A  2214    	SEGMENT STRSECT
048788                     A  2215    L__60:
048788 4572726F 72206F70   A  2216    	DB	"Error opening \""
048790 656E696E 672022 
048797 00                  A  2217    	DB	0
048798                     A  2218    L__61:
048798 22                  A  2219    	DB	"\""
048799 0A0D00              A  2220    	DB	10,13,0
                           A  2221    	SEGMENT CODE
                           A  2222    ;  210	
                           A  2223    ;  211	bool reOpenFile(uint8_t number, uint8_t
045418                     A  2224    _reOpenFile:
                           A  2225    .DEFINE "_reOpenFile"
                           A  2226    
                           A  2227    .VALUE _reOpenFile
                           A  2228    
                           A  2229    .CLASS 2
                           A  2230    
                           A  2231    .TYPE 76
                           A  2232    
                           A  2233    .ENDEF
                           A  2234    
                           A  2235    .BEGFUNC "reOpenFile",211,"_reOpenFile"
                           A  2236    
                           A  2237    .LINE 211
                           A  2238    
                           A  2239    .DEFINE "number"
                           A  2240    
                           A  2241    .CLASS 65
                           A  2242    
                           A  2243    .VALUE 6
                           A  2244    
                           A  2245    .TYPE 12
                           A  2246    
                           A  2247    .ENDEF
                           A  2248    
                           A  2249    .DEFINE "mode"
                           A  2250    
                           A  2251    .CLASS 65
                           A  2252    
                           A  2253    .VALUE 9
                           A  2254    
                           A  2255    .TYPE 12
                           A  2256    
                           A  2257    .ENDEF
                           A  2258    
045418 DDE5                A  2259    	PUSH	IX
04541A DD210000 00         A  2260    	LD	IX,0
04541F DD39                A  2261    	ADD	IX,SP
045421 C5                  A  2262    	PUSH	BC
045422 C5                  A  2263    	PUSH	BC
                           A  2264    ;  212	    if(filehandle[number]) mos_fclose(f
                           A  2265    .LINE 212
                           A  2266    
045423 DD7E06              A  2267    	LD	A,(IX+%6)
045426 B7ED62              A  2268    	UEXT	HL
045429 6F                  A  2269    	LD	L,A
04542A 01 46 8A 04         A  2270    	LD	BC,_filehandle
04542E 09                  A  2271    	ADD	HL,BC
04542F DD2FFD              A  2272    	LD	(IX+%FFFFFFFD),HL
045432 DD2FFA              A  2273    	LD	(IX+%FFFFFFFA),HL
045435 DD27FD              A  2274    	LD	HL,(IX+%FFFFFFFD)
045438 7E                  A  2275    	LD	A,(HL)
045439 B7                  A  2276    	OR	A,A
04543A 28 12               A  2277    	JR	Z,L_137
04543C DD07FD              A  2278    	LD	BC,(IX+%FFFFFFFD)
04543F DD0FFA              A  2279    	LD	(IX+%FFFFFFFA),BC
045442 DD27FD              A  2280    	LD	HL,(IX+%FFFFFFFD)
045445 4E                  A  2281    	LD	C,(HL)
045446 0600                A  2282    	LD	B,%0
045448 C5                  A  2283    	PUSH	BC
045449 CD BC 03 04         A  2284    	CALL	_mos_fclose
04544D C1                  A  2285    	POP	BC
04544E                     A  2286    L_137:
                           A  2287    ;  213	    return openFile(&filehandle[number]
                           A  2288    .LINE 213
                           A  2289    
04544E DD4E09              A  2290    	LD	C,(IX+%9)
045451 0600                A  2291    	LD	B,%0
045453 C5                  A  2292    	PUSH	BC
045454 DD7E06              A  2293    	LD	A,(IX+%6)
045457 B7ED62              A  2294    	UEXT	HL
04545A 6F                  A  2295    	LD	L,A
04545B 29                  A  2296    	ADD	HL,HL
04545C 29                  A  2297    	ADD	HL,HL
04545D 29                  A  2298    	ADD	HL,HL
04545E 29                  A  2299    	ADD	HL,HL
04545F 29                  A  2300    	ADD	HL,HL
045460 29                  A  2301    	ADD	HL,HL
045461 01 C6 88 04         A  2302    	LD	BC,_filename
045465 09                  A  2303    	ADD	HL,BC
045466 E5                  A  2304    	PUSH	HL
045467 DD07FA              A  2305    	LD	BC,(IX+%FFFFFFFA)
04546A C5                  A  2306    	PUSH	BC
04546B CD C4 53 04         A  2307    	CALL	_openFile
04546F C1                  A  2308    	POP	BC
045470 C1                  A  2309    	POP	BC
045471 C1                  A  2310    	POP	BC
                           A  2311    ;  214	}
                           A  2312    .LINE 214
                           A  2313    
045472 DDF9                A  2314    	LD	SP,IX
045474 DDE1                A  2315    	POP	IX
045476 C9                  A  2316    	RET	
                           A  2317    
                           A  2318    
                           A  2319    ;**************************** _reOpenFile *****
                           A  2320    ;Name                         Addr/Register   S
                           A  2321    ;_filename                           IMPORT    
                           A  2322    ;_openFile                           IMPORT  --
                           A  2323    ;_mos_fclose                         IMPORT  --
                           A  2324    ;_filehandle                         IMPORT    
                           A  2325    ;G_2                                   IX-6    
                           A  2326    ;G_1                                   IX-3    
                           A  2327    ;mode                                  IX+9    
                           A  2328    ;number                                IX+6    
                           A  2329    
                           A  2330    
                           A  2331    ; Stack Frame Size: 18 (bytes)
                           A  2332    ;       Spill Code: 0 (instruction)
                           A  2333    
                           A  2334    
                           A  2335    .ENDFUNC "reOpenFile",214,"_reOpenFile"
                           A  2336    ;  215	
                           A  2337    ;  216	void prepare_filenames(char *input_file
045477                     A  2338    _prepare_filenames:
                           A  2339    .DEFINE "_prepare_filenames"
                           A  2340    
                           A  2341    .VALUE _prepare_filenames
                           A  2342    
                           A  2343    .CLASS 2
                           A  2344    
                           A  2345    .TYPE 65
                           A  2346    
                           A  2347    .ENDEF
                           A  2348    
                           A  2349    .BEGFUNC "prepare_filenames",216,"_prepare_file
                           A  2350    
                           A  2351    .LINE 216
                           A  2352    
                           A  2353    .DEFINE "input_filename"
                           A  2354    
                           A  2355    .CLASS 65
                           A  2356    
                           A  2357    .VALUE 6
                           A  2358    
                           A  2359    .TYPE 34
                           A  2360    
                           A  2361    .ENDEF
                           A  2362    
045477 DDE5                A  2363    	PUSH	IX
045479 DD210000 00         A  2364    	LD	IX,0
04547E DD39                A  2365    	ADD	IX,SP
                           A  2366    ;  217	    // prepare filenames
                           A  2367    ;  218	    strcpy(filename[FILE_INPUT], input_
                           A  2368    .LINE 218
                           A  2369    
045480 DD0706              A  2370    	LD	BC,(IX+%6)
045483 C5                  A  2371    	PUSH	BC
045484 01 06 89 04         A  2372    	LD	BC,_filename+64
045488 C5                  A  2373    	PUSH	BC
045489 CD EE 63 04         A  2374    	CALL	_strcpy
04548D C1                  A  2375    	POP	BC
04548E C1                  A  2376    	POP	BC
                           A  2377    ;  219	    strcpy(filename[FILE_OUTPUT], input
                           A  2378    .LINE 219
                           A  2379    
04548F DD0706              A  2380    	LD	BC,(IX+%6)
045492 C5                  A  2381    	PUSH	BC
045493 01800000            A  2382    	LD	BC,128
045497 21 C6 88 04         A  2383    	LD	HL,_filename
04549B 09                  A  2384    	ADD	HL,BC
04549C E5                  A  2385    	PUSH	HL
04549D CD EE 63 04         A  2386    	CALL	_strcpy
0454A1 C1                  A  2387    	POP	BC
0454A2 C1                  A  2388    	POP	BC
                           A  2389    ;  220	    remove_ext(filename[FILE_OUTPUT], '
                           A  2390    .LINE 220
                           A  2391    
0454A3 012F0000            A  2392    	LD	BC,47
0454A7 C5                  A  2393    	PUSH	BC
0454A8 012E0000            A  2394    	LD	BC,46
0454AC C5                  A  2395    	PUSH	BC
0454AD 01800000            A  2396    	LD	BC,128
0454B1 21 C6 88 04         A  2397    	LD	HL,_filename
0454B5 09                  A  2398    	ADD	HL,BC
0454B6 E5                  A  2399    	PUSH	HL
0454B7 CD EA 4D 04         A  2400    	CALL	_remove_ext
0454BB C1                  A  2401    	POP	BC
0454BC C1                  A  2402    	POP	BC
0454BD C1                  A  2403    	POP	BC
                           A  2404    ;  221	    strcpy(filename[FILE_LOCAL_LABELS],
                           A  2405    .LINE 221
                           A  2406    
0454BE 01800000            A  2407    	LD	BC,128
0454C2 21 C6 88 04         A  2408    	LD	HL,_filename
0454C6 09                  A  2409    	ADD	HL,BC
0454C7 E5                  A  2410    	PUSH	HL
0454C8 01C00000            A  2411    	LD	BC,192
0454CC 21 C6 88 04         A  2412    	LD	HL,_filename
0454D0 09                  A  2413    	ADD	HL,BC
0454D1 E5                  A  2414    	PUSH	HL
0454D2 CD EE 63 04         A  2415    	CALL	_strcpy
0454D6 C1                  A  2416    	POP	BC
0454D7 C1                  A  2417    	POP	BC
                           A  2418    ;  222	    strcpy(filename[FILE_ANONYMOUS_LABE
                           A  2419    .LINE 222
                           A  2420    
0454D8 01800000            A  2421    	LD	BC,128
0454DC 21 C6 88 04         A  2422    	LD	HL,_filename
0454E0 09                  A  2423    	ADD	HL,BC
0454E1 E5                  A  2424    	PUSH	HL
0454E2 01000100            A  2425    	LD	BC,256
0454E6 21 C6 88 04         A  2426    	LD	HL,_filename
0454EA 09                  A  2427    	ADD	HL,BC
0454EB E5                  A  2428    	PUSH	HL
0454EC CD EE 63 04         A  2429    	CALL	_strcpy
0454F0 C1                  A  2430    	POP	BC
0454F1 C1                  A  2431    	POP	BC
                           A  2432    ;  223	    strcpy(filename[FILE_LISTING],filen
                           A  2433    .LINE 223
                           A  2434    
0454F2 01800000            A  2435    	LD	BC,128
0454F6 21 C6 88 04         A  2436    	LD	HL,_filename
0454FA 09                  A  2437    	ADD	HL,BC
0454FB E5                  A  2438    	PUSH	HL
0454FC 01400100            A  2439    	LD	BC,320
045500 21 C6 88 04         A  2440    	LD	HL,_filename
045504 09                  A  2441    	ADD	HL,BC
045505 E5                  A  2442    	PUSH	HL
045506 CD EE 63 04         A  2443    	CALL	_strcpy
04550A C1                  A  2444    	POP	BC
04550B C1                  A  2445    	POP	BC
                           A  2446    ;  224	    strcat(filename[FILE_OUTPUT], ".bin
                           A  2447    .LINE 224
                           A  2448    
04550C 01 9C 87 04         A  2449    	LD	BC,L__65
045510 C5                  A  2450    	PUSH	BC
045511 01800000            A  2451    	LD	BC,128
045515 21 C6 88 04         A  2452    	LD	HL,_filename
045519 09                  A  2453    	ADD	HL,BC
04551A E5                  A  2454    	PUSH	HL
04551B CD DC 64 04         A  2455    	CALL	_strcat
04551F C1                  A  2456    	POP	BC
045520 C1                  A  2457    	POP	BC
                           A  2458    ;  225	    strcat(filename[FILE_LOCAL_LABELS],
                           A  2459    .LINE 225
                           A  2460    
045521 01 A1 87 04         A  2461    	LD	BC,L__66
045525 C5                  A  2462    	PUSH	BC
045526 01C00000            A  2463    	LD	BC,192
04552A 21 C6 88 04         A  2464    	LD	HL,_filename
04552E 09                  A  2465    	ADD	HL,BC
04552F E5                  A  2466    	PUSH	HL
045530 CD DC 64 04         A  2467    	CALL	_strcat
045534 C1                  A  2468    	POP	BC
045535 C1                  A  2469    	POP	BC
                           A  2470    ;  226	    strcat(filename[FILE_ANONYMOUS_LABE
                           A  2471    .LINE 226
                           A  2472    
045536 01 AA 87 04         A  2473    	LD	BC,L__67
04553A C5                  A  2474    	PUSH	BC
04553B 01000100            A  2475    	LD	BC,256
04553F 21 C6 88 04         A  2476    	LD	HL,_filename
045543 09                  A  2477    	ADD	HL,BC
045544 E5                  A  2478    	PUSH	HL
045545 CD DC 64 04         A  2479    	CALL	_strcat
045549 C1                  A  2480    	POP	BC
04554A C1                  A  2481    	POP	BC
                           A  2482    ;  227	    strcat(filename[FILE_LISTING], ".ls
                           A  2483    .LINE 227
                           A  2484    
04554B 01 B4 87 04         A  2485    	LD	BC,L__68
04554F C5                  A  2486    	PUSH	BC
045550 01400100            A  2487    	LD	BC,320
045554 21 C6 88 04         A  2488    	LD	HL,_filename
045558 09                  A  2489    	ADD	HL,BC
045559 E5                  A  2490    	PUSH	HL
04555A CD DC 64 04         A  2491    	CALL	_strcat
04555E C1                  A  2492    	POP	BC
04555F C1                  A  2493    	POP	BC
                           A  2494    ;  228	}
                           A  2495    .LINE 228
                           A  2496    
045560 DDF9                A  2497    	LD	SP,IX
045562 DDE1                A  2498    	POP	IX
045564 C9                  A  2499    	RET	
                           A  2500    
                           A  2501    
                           A  2502    ;**************************** _prepare_filename
                           A  2503    ;Name                         Addr/Register   S
                           A  2504    ;_strcat                             IMPORT  --
                           A  2505    ;_remove_ext                         IMPORT  --
                           A  2506    ;_filename                           IMPORT    
                           A  2507    ;_strcpy                             IMPORT  --
                           A  2508    ;input_filename                        IX+6    
                           A  2509    
                           A  2510    
                           A  2511    ; Stack Frame Size: 9 (bytes)
                           A  2512    ;       Spill Code: 0 (instruction)
                           A  2513    
                           A  2514    
                           A  2515    .ENDFUNC "prepare_filenames",228,"_prepare_file
                           A  2516    	SEGMENT STRSECT
04879C                     A  2517    L__65:
04879C 2E62696E            A  2518    	DB	".bin"
0487A0 00                  A  2519    	DB	0
0487A1                     A  2520    L__66:
0487A1 2E6C636C 6C626C73   A  2521    	DB	".lcllbls"
0487A9 00                  A  2522    	DB	0
0487AA                     A  2523    L__67:
0487AA 2E616E6F 6E6C626C   A  2524    	DB	".anonlbls"
0487B2 73 
0487B3 00                  A  2525    	DB	0
0487B4                     A  2526    L__68:
0487B4 2E6C7374            A  2527    	DB	".lst"
0487B8 00                  A  2528    	DB	0
                           A  2529    	SEGMENT CODE
                           A  2530    ;  229	
                           A  2531    ;  230	void closeAllFiles() {
045565                     A  2532    _closeAllFiles:
                           A  2533    .DEFINE "_closeAllFiles"
                           A  2534    
                           A  2535    .VALUE _closeAllFiles
                           A  2536    
                           A  2537    .CLASS 2
                           A  2538    
                           A  2539    .TYPE 65
                           A  2540    
                           A  2541    .ENDEF
                           A  2542    
                           A  2543    .BEGFUNC "closeAllFiles",230,"_closeAllFiles"
                           A  2544    
045565 DDE5                A  2545    	PUSH	IX
045567 DD210000 00         A  2546    	LD	IX,0
04556C DD39                A  2547    	ADD	IX,SP
04556E ED22F1              A  2548    	LEA	HL,IX+%FFFFFFF1
045571 F9                  A  2549    	LD	SP,HL
                           A  2550    ;  231	   // Cleanup
                           A  2551    ;  232	    if(filehandle[FILE_INPUT]) mos_fclo
                           A  2552    .LINE 232
                           A  2553    
045572 01 46 8A 04         A  2554    	LD	BC,_filehandle
045576 03                  A  2555    	INC	BC
045577 DD0FFD              A  2556    	LD	(IX+%FFFFFFFD),BC
04557A C5E1                A  2557    	LD	HL,BC
04557C 7E                  A  2558    	LD	A,(HL)
04557D B7                  A  2559    	OR	A,A
04557E 28 0C               A  2560    	JR	Z,L_142
045580 DD27FD              A  2561    	LD	HL,(IX+%FFFFFFFD)
045583 4E                  A  2562    	LD	C,(HL)
045584 0600                A  2563    	LD	B,%0
045586 C5                  A  2564    	PUSH	BC
045587 CD BC 03 04         A  2565    	CALL	_mos_fclose
04558B C1                  A  2566    	POP	BC
04558C                     A  2567    L_142:
                           A  2568    ;  233	    if(filehandle[FILE_OUTPUT]) mos_fcl
                           A  2569    .LINE 233
                           A  2570    
04558C FD21 46 8A 04       A  2571    	LD	IY,_filehandle
045591 ED3302              A  2572    	LEA	IY,IY+%2
045594 DD3EFA              A  2573    	LD	(IX+%FFFFFFFA),IY
045597 DD27FA              A  2574    	LD	HL,(IX+%FFFFFFFA)
04559A 7E                  A  2575    	LD	A,(HL)
04559B B7                  A  2576    	OR	A,A
04559C 28 0C               A  2577    	JR	Z,L_144
04559E DD27FA              A  2578    	LD	HL,(IX+%FFFFFFFA)
0455A1 4E                  A  2579    	LD	C,(HL)
0455A2 0600                A  2580    	LD	B,%0
0455A4 C5                  A  2581    	PUSH	BC
0455A5 CD BC 03 04         A  2582    	CALL	_mos_fclose
0455A9 C1                  A  2583    	POP	BC
0455AA                     A  2584    L_144:
                           A  2585    ;  234	    if(filehandle[FILE_LOCAL_LABELS]) m
                           A  2586    .LINE 234
                           A  2587    
0455AA FD21 46 8A 04       A  2588    	LD	IY,_filehandle
0455AF ED3303              A  2589    	LEA	IY,IY+%3
0455B2 DD3EF7              A  2590    	LD	(IX+%FFFFFFF7),IY
0455B5 DD27F7              A  2591    	LD	HL,(IX+%FFFFFFF7)
0455B8 7E                  A  2592    	LD	A,(HL)
0455B9 B7                  A  2593    	OR	A,A
0455BA 28 0C               A  2594    	JR	Z,L_146
0455BC DD27F7              A  2595    	LD	HL,(IX+%FFFFFFF7)
0455BF 4E                  A  2596    	LD	C,(HL)
0455C0 0600                A  2597    	LD	B,%0
0455C2 C5                  A  2598    	PUSH	BC
0455C3 CD BC 03 04         A  2599    	CALL	_mos_fclose
0455C7 C1                  A  2600    	POP	BC
0455C8                     A  2601    L_146:
                           A  2602    ;  235	    if(filehandle[FILE_ANONYMOUS_LABELS
                           A  2603    .LINE 235
                           A  2604    
0455C8 FD21 46 8A 04       A  2605    	LD	IY,_filehandle
0455CD ED3304              A  2606    	LEA	IY,IY+%4
0455D0 DD3EF4              A  2607    	LD	(IX+%FFFFFFF4),IY
0455D3 DD27F4              A  2608    	LD	HL,(IX+%FFFFFFF4)
0455D6 7E                  A  2609    	LD	A,(HL)
0455D7 B7                  A  2610    	OR	A,A
0455D8 28 0C               A  2611    	JR	Z,L_148
0455DA DD27F4              A  2612    	LD	HL,(IX+%FFFFFFF4)
0455DD 4E                  A  2613    	LD	C,(HL)
0455DE 0600                A  2614    	LD	B,%0
0455E0 C5                  A  2615    	PUSH	BC
0455E1 CD BC 03 04         A  2616    	CALL	_mos_fclose
0455E5 C1                  A  2617    	POP	BC
0455E6                     A  2618    L_148:
                           A  2619    ;  236	    if(filehandle[FILE_LISTING]) mos_fc
                           A  2620    .LINE 236
                           A  2621    
0455E6 FD21 46 8A 04       A  2622    	LD	IY,_filehandle
0455EB ED3305              A  2623    	LEA	IY,IY+%5
0455EE DD3EF1              A  2624    	LD	(IX+%FFFFFFF1),IY
0455F1 DD27F1              A  2625    	LD	HL,(IX+%FFFFFFF1)
0455F4 7E                  A  2626    	LD	A,(HL)
0455F5 B7                  A  2627    	OR	A,A
0455F6 28 0C               A  2628    	JR	Z,L_149
0455F8 DD27F1              A  2629    	LD	HL,(IX+%FFFFFFF1)
0455FB 4E                  A  2630    	LD	C,(HL)
0455FC 0600                A  2631    	LD	B,%0
0455FE C5                  A  2632    	PUSH	BC
0455FF CD BC 03 04         A  2633    	CALL	_mos_fclose
045603 C1                  A  2634    	POP	BC
                           A  2635    ;  237	    //remove(filename[FILE_LOCAL_LABELS
                           A  2636    ;  238	    //remove(filename[FILE_ANONYMOUS_LA
                           A  2637    ;  239	}
045604                     A  2638    L_149:
                           A  2639    .LINE 239
                           A  2640    
045604 DDF9                A  2641    	LD	SP,IX
045606 DDE1                A  2642    	POP	IX
045608 C9                  A  2643    	RET	
                           A  2644    
                           A  2645    
                           A  2646    ;**************************** _closeAllFiles **
                           A  2647    ;Name                         Addr/Register   S
                           A  2648    ;_mos_fclose                         IMPORT  --
                           A  2649    ;_filehandle                         IMPORT    
                           A  2650    ;G_12                                 IX-15    
                           A  2651    ;G_11                                 IX-12    
                           A  2652    ;G_10                                  IX-9    
                           A  2653    ;G_9                                   IX-6    
                           A  2654    ;G_8                                   IX-3    
                           A  2655    
                           A  2656    
                           A  2657    ; Stack Frame Size: 21 (bytes)
                           A  2658    ;       Spill Code: 0 (instruction)
                           A  2659    
                           A  2660    
                           A  2661    .ENDFUNC "closeAllFiles",239,"_closeAllFiles"
                           A  2662    ;  240	
                           A  2663    ;  241	bool openfiles(void) {
045609                     A  2664    _openfiles:
                           A  2665    .DEFINE "_openfiles"
                           A  2666    
                           A  2667    .VALUE _openfiles
                           A  2668    
                           A  2669    .CLASS 2
                           A  2670    
                           A  2671    .TYPE 76
                           A  2672    
                           A  2673    .ENDEF
                           A  2674    
                           A  2675    .BEGFUNC "openfiles",241,"_openfiles"
                           A  2676    
                           A  2677    .LINE 241
                           A  2678    
                           A  2679    .DEFINE "status"
                           A  2680    
                           A  2681    .CLASS 65
                           A  2682    
                           A  2683    .VALUE -1
                           A  2684    
                           A  2685    .TYPE 12
                           A  2686    
                           A  2687    .ENDEF
                           A  2688    
045609 DDE5                A  2689    	PUSH	IX
04560B DD210000 00         A  2690    	LD	IX,0
045610 DD39                A  2691    	ADD	IX,SP
045612 ED22F0              A  2692    	LEA	HL,IX+%FFFFFFF0
045615 F9                  A  2693    	LD	SP,HL
                           A  2694    ;  242	    bool status = true;
                           A  2695    ;  243	
                           A  2696    ;  244	    status = status && openFile(&fileha
                           A  2697    .LINE 244
                           A  2698    
045616 01010000            A  2699    	LD	BC,1
04561A C5                  A  2700    	PUSH	BC
04561B 01 06 89 04         A  2701    	LD	BC,_filename+64
04561F C5                  A  2702    	PUSH	BC
045620 01 46 8A 04         A  2703    	LD	BC,_filehandle
045624 03                  A  2704    	INC	BC
045625 C5                  A  2705    	PUSH	BC
045626 CD C4 53 04         A  2706    	CALL	_openFile
04562A C1                  A  2707    	POP	BC
04562B C1                  A  2708    	POP	BC
04562C C1                  A  2709    	POP	BC
04562D B7                  A  2710    	OR	A,A
04562E 28 09               A  2711    	JR	Z,L_152
045630 01010000            A  2712    	LD	BC,1
045634 DD0FFC              A  2713    	LD	(IX+%FFFFFFFC),BC
045637 18 07               A  2714    	JR	L_153
045639                     A  2715    L_152:
045639 01000000            A  2716    	LD	BC,0
04563D DD0FFC              A  2717    	LD	(IX+%FFFFFFFC),BC
045640                     A  2718    L_153:
045640 DD7EFC              A  2719    	LD	A,(IX+%FFFFFFFC)
045643 DD77FF              A  2720    	LD	(IX+%FFFFFFFF),A
                           A  2721    ;  245	    status = status && openFile(&fileha
                           A  2722    .LINE 245
                           A  2723    
045646 B7                  A  2724    	OR	A,A
045647 28 27               A  2725    	JR	Z,L_157
045649 010A0000            A  2726    	LD	BC,10
04564D C5                  A  2727    	PUSH	BC
04564E 01800000            A  2728    	LD	BC,128
045652 21 C6 88 04         A  2729    	LD	HL,_filename
045656 09                  A  2730    	ADD	HL,BC
045657 E5                  A  2731    	PUSH	HL
045658 01 48 8A 04         A  2732    	LD	BC,_filehandle+2
04565C C5                  A  2733    	PUSH	BC
04565D CD C4 53 04         A  2734    	CALL	_openFile
045661 C1                  A  2735    	POP	BC
045662 C1                  A  2736    	POP	BC
045663 C1                  A  2737    	POP	BC
045664 B7                  A  2738    	OR	A,A
045665 28 09               A  2739    	JR	Z,L_157
045667 01010000            A  2740    	LD	BC,1
04566B DD0FF9              A  2741    	LD	(IX+%FFFFFFF9),BC
04566E 18 07               A  2742    	JR	L_158
045670                     A  2743    L_157:
045670 01000000            A  2744    	LD	BC,0
045674 DD0FF9              A  2745    	LD	(IX+%FFFFFFF9),BC
045677                     A  2746    L_158:
045677 DD7EF9              A  2747    	LD	A,(IX+%FFFFFFF9)
04567A DD77FF              A  2748    	LD	(IX+%FFFFFFFF),A
                           A  2749    ;  246	    status = status && openFile(&fileha
                           A  2750    .LINE 246
                           A  2751    
04567D B7                  A  2752    	OR	A,A
04567E 28 27               A  2753    	JR	Z,L_162
045680 010A0000            A  2754    	LD	BC,10
045684 C5                  A  2755    	PUSH	BC
045685 01C00000            A  2756    	LD	BC,192
045689 21 C6 88 04         A  2757    	LD	HL,_filename
04568D 09                  A  2758    	ADD	HL,BC
04568E E5                  A  2759    	PUSH	HL
04568F 01 49 8A 04         A  2760    	LD	BC,_filehandle+3
045693 C5                  A  2761    	PUSH	BC
045694 CD C4 53 04         A  2762    	CALL	_openFile
045698 C1                  A  2763    	POP	BC
045699 C1                  A  2764    	POP	BC
04569A C1                  A  2765    	POP	BC
04569B B7                  A  2766    	OR	A,A
04569C 28 09               A  2767    	JR	Z,L_162
04569E 01010000            A  2768    	LD	BC,1
0456A2 DD0FF6              A  2769    	LD	(IX+%FFFFFFF6),BC
0456A5 18 07               A  2770    	JR	L_163
0456A7                     A  2771    L_162:
0456A7 01000000            A  2772    	LD	BC,0
0456AB DD0FF6              A  2773    	LD	(IX+%FFFFFFF6),BC
0456AE                     A  2774    L_163:
0456AE DD7EF6              A  2775    	LD	A,(IX+%FFFFFFF6)
0456B1 DD77FF              A  2776    	LD	(IX+%FFFFFFFF),A
                           A  2777    ;  247	    status = status && openFile(&fileha
                           A  2778    .LINE 247
                           A  2779    
0456B4 B7                  A  2780    	OR	A,A
0456B5 28 27               A  2781    	JR	Z,L_167
0456B7 010A0000            A  2782    	LD	BC,10
0456BB C5                  A  2783    	PUSH	BC
0456BC 01000100            A  2784    	LD	BC,256
0456C0 21 C6 88 04         A  2785    	LD	HL,_filename
0456C4 09                  A  2786    	ADD	HL,BC
0456C5 E5                  A  2787    	PUSH	HL
0456C6 01 4A 8A 04         A  2788    	LD	BC,_filehandle+4
0456CA C5                  A  2789    	PUSH	BC
0456CB CD C4 53 04         A  2790    	CALL	_openFile
0456CF C1                  A  2791    	POP	BC
0456D0 C1                  A  2792    	POP	BC
0456D1 C1                  A  2793    	POP	BC
0456D2 B7                  A  2794    	OR	A,A
0456D3 28 09               A  2795    	JR	Z,L_167
0456D5 01010000            A  2796    	LD	BC,1
0456D9 DD0FF3              A  2797    	LD	(IX+%FFFFFFF3),BC
0456DC 18 07               A  2798    	JR	L_168
0456DE                     A  2799    L_167:
0456DE 01000000            A  2800    	LD	BC,0
0456E2 DD0FF3              A  2801    	LD	(IX+%FFFFFFF3),BC
0456E5                     A  2802    L_168:
0456E5 DD7EF3              A  2803    	LD	A,(IX+%FFFFFFF3)
0456E8 DD77FF              A  2804    	LD	(IX+%FFFFFFFF),A
                           A  2805    ;  248	    status = status && openFile(&fileha
                           A  2806    .LINE 248
                           A  2807    
0456EB B7                  A  2808    	OR	A,A
0456EC 28 27               A  2809    	JR	Z,L_172
0456EE 010A0000            A  2810    	LD	BC,10
0456F2 C5                  A  2811    	PUSH	BC
0456F3 01400100            A  2812    	LD	BC,320
0456F7 21 C6 88 04         A  2813    	LD	HL,_filename
0456FB 09                  A  2814    	ADD	HL,BC
0456FC E5                  A  2815    	PUSH	HL
0456FD 01 4B 8A 04         A  2816    	LD	BC,_filehandle+5
045701 C5                  A  2817    	PUSH	BC
045702 CD C4 53 04         A  2818    	CALL	_openFile
045706 C1                  A  2819    	POP	BC
045707 C1                  A  2820    	POP	BC
045708 C1                  A  2821    	POP	BC
045709 B7                  A  2822    	OR	A,A
04570A 28 09               A  2823    	JR	Z,L_172
04570C 01010000            A  2824    	LD	BC,1
045710 DD0FF0              A  2825    	LD	(IX+%FFFFFFF0),BC
045713 18 07               A  2826    	JR	L_173
045715                     A  2827    L_172:
045715 01000000            A  2828    	LD	BC,0
045719 DD0FF0              A  2829    	LD	(IX+%FFFFFFF0),BC
04571C                     A  2830    L_173:
04571C DD7EF0              A  2831    	LD	A,(IX+%FFFFFFF0)
04571F DD77FF              A  2832    	LD	(IX+%FFFFFFFF),A
                           A  2833    ;  249	    if(!status) closeAllFiles();
                           A  2834    .LINE 249
                           A  2835    
045722 B7                  A  2836    	OR	A,A
045723 20 04               A  2837    	JR	NZ,L_176
045725 CD 65 55 04         A  2838    	CALL	_closeAllFiles
045729                     A  2839    L_176:
                           A  2840    ;  250	    return status;
                           A  2841    .LINE 250
                           A  2842    
045729 DD7EFF              A  2843    	LD	A,(IX+%FFFFFFFF)
                           A  2844    ;  251	}
                           A  2845    .LINE 251
                           A  2846    
04572C DDF9                A  2847    	LD	SP,IX
04572E DDE1                A  2848    	POP	IX
045730 C9                  A  2849    	RET	
                           A  2850    
                           A  2851    
                           A  2852    ;**************************** _openfiles ******
                           A  2853    ;Name                         Addr/Register   S
                           A  2854    ;_closeAllFiles                      IMPORT  --
                           A  2855    ;_filehandle                         IMPORT    
                           A  2856    ;_filename                           IMPORT    
                           A  2857    ;_openFile                           IMPORT  --
                           A  2858    ;temp174                              IX-16    
                           A  2859    ;temp169                              IX-13    
                           A  2860    ;temp164                              IX-10    
                           A  2861    ;temp159                               IX-7    
                           A  2862    ;temp154                               IX-4    
                           A  2863    ;status                                IX-1    
                           A  2864    
                           A  2865    
                           A  2866    ; Stack Frame Size: 22 (bytes)
                           A  2867    ;       Spill Code: 0 (instruction)
                           A  2868    
                           A  2869    
                           A  2870    .ENDFUNC "openfiles",251,"_openfiles"
                           A  2871    ;  252	
                           A  2872    ;  253	
                           A  2873    ;  254	char *agon_fgets(char *s, int size, uin
045731                     A  2874    _agon_fgets:
                           A  2875    .DEFINE "_agon_fgets"
                           A  2876    
                           A  2877    .VALUE _agon_fgets
                           A  2878    
                           A  2879    .CLASS 2
                           A  2880    
                           A  2881    .TYPE 322
                           A  2882    
                           A  2883    .ENDEF
                           A  2884    
                           A  2885    .BEGFUNC "agon_fgets",254,"_agon_fgets"
                           A  2886    
                           A  2887    .LINE 254
                           A  2888    
                           A  2889    .DEFINE "s"
                           A  2890    
                           A  2891    .CLASS 65
                           A  2892    
                           A  2893    .VALUE 6
                           A  2894    
                           A  2895    .TYPE 34
                           A  2896    
                           A  2897    .ENDEF
                           A  2898    
                           A  2899    .DEFINE "size"
                           A  2900    
                           A  2901    .CLASS 65
                           A  2902    
                           A  2903    .VALUE 9
                           A  2904    
                           A  2905    .TYPE 4
                           A  2906    
                           A  2907    .ENDEF
                           A  2908    
                           A  2909    .DEFINE "fileid"
                           A  2910    
                           A  2911    .CLASS 65
                           A  2912    
                           A  2913    .VALUE 12
                           A  2914    
                           A  2915    .TYPE 12
                           A  2916    
                           A  2917    .ENDEF
                           A  2918    
                           A  2919    .DEFINE "cs"
                           A  2920    
                           A  2921    .CLASS 65
                           A  2922    
                           A  2923    .VALUE -3
                           A  2924    
                           A  2925    .TYPE 34
                           A  2926    
                           A  2927    .ENDEF
                           A  2928    
                           A  2929    .DEFINE "eof"
                           A  2930    
                           A  2931    .CLASS 65
                           A  2932    
                           A  2933    .VALUE -4
                           A  2934    
                           A  2935    .TYPE 12
                           A  2936    
                           A  2937    .ENDEF
                           A  2938    
                           A  2939    .DEFINE "c"
                           A  2940    
                           A  2941    .CLASS 65
                           A  2942    
                           A  2943    .VALUE -7
                           A  2944    
                           A  2945    .TYPE 4
                           A  2946    
                           A  2947    .ENDEF
                           A  2948    
045731 DDE5                A  2949    	PUSH	IX
045733 DD210000 00         A  2950    	LD	IX,0
045738 DD39                A  2951    	ADD	IX,SP
04573A ED22F3              A  2952    	LEA	HL,IX+%FFFFFFF3
04573D F9                  A  2953    	LD	SP,HL
                           A  2954    ;  255		int c;
                           A  2955    ;  256		char *cs;
                           A  2956    ;  257		bool eof;
                           A  2957    ;  258	    c = 0;
                           A  2958    .LINE 258
                           A  2959    
04573E 01000000            A  2960    	LD	BC,0
045742 DD0FF9              A  2961    	LD	(IX+%FFFFFFF9),BC
                           A  2962    ;  259		cs = s;
                           A  2963    .LINE 259
                           A  2964    
045745 DD0706              A  2965    	LD	BC,(IX+%6)
045748 DD0FFD              A  2966    	LD	(IX+%FFFFFFFD),BC
                           A  2967    ;  260	
                           A  2968    ;  261		do {
04574B                     A  2969    L_181:
                           A  2970    .LINE 261
                           A  2971    
                           A  2972    ;  262			eof = mos_feof(filehandle[filei
                           A  2973    .LINE 262
                           A  2974    
04574B DD7E0C              A  2975    	LD	A,(IX+%C)
04574E B7ED62              A  2976    	UEXT	HL
045751 6F                  A  2977    	LD	L,A
045752 01 46 8A 04         A  2978    	LD	BC,_filehandle
045756 09                  A  2979    	ADD	HL,BC
045757 4E                  A  2980    	LD	C,(HL)
045758 0600                A  2981    	LD	B,%0
04575A C5                  A  2982    	PUSH	BC
04575B CD FE 03 04         A  2983    	CALL	_mos_feof
04575F C1                  A  2984    	POP	BC
045760 DD77FC              A  2985    	LD	(IX+%FFFFFFFC),A
                           A  2986    ;  263			c = mos_fgetc(filehandle[fileid
                           A  2987    .LINE 263
                           A  2988    
045763 DD7E0C              A  2989    	LD	A,(IX+%C)
045766 B7ED62              A  2990    	UEXT	HL
045769 6F                  A  2991    	LD	L,A
04576A 01 46 8A 04         A  2992    	LD	BC,_filehandle
04576E 09                  A  2993    	ADD	HL,BC
04576F 4E                  A  2994    	LD	C,(HL)
045770 0600                A  2995    	LD	B,%0
045772 C5                  A  2996    	PUSH	BC
045773 CD D1 03 04         A  2997    	CALL	_mos_fgetc
045777 C1                  A  2998    	POP	BC
045778 47                  A  2999    	LD	B,A
045779 78                  A  3000    	LD	A,B
04577A 17ED62              A  3001    	SEXT	HL
04577D 68                  A  3002    	LD	L,B
04577E DD2FF9              A  3003    	LD	(IX+%FFFFFFF9),HL
                           A  3004    ;  264			if((*cs++ = c) == '\n') break;	
                           A  3005    .LINE 264
                           A  3006    
045781 DD07FD              A  3007    	LD	BC,(IX+%FFFFFFFD)
045784 DD0FF3              A  3008    	LD	(IX+%FFFFFFF3),BC
045787 DD7EF9              A  3009    	LD	A,(IX+%FFFFFFF9)
04578A C5E1                A  3010    	LD	HL,BC
04578C 77                  A  3011    	LD	(HL),A
04578D DD07FD              A  3012    	LD	BC,(IX+%FFFFFFFD)
045790 03                  A  3013    	INC	BC
045791 DD0FFD              A  3014    	LD	(IX+%FFFFFFFD),BC
045794 DD27F3              A  3015    	LD	HL,(IX+%FFFFFFF3)
045797 7E                  A  3016    	LD	A,(HL)
045798 47                  A  3017    	LD	B,A
045799 17ED62              A  3018    	SEXT	HL
04579C 68                  A  3019    	LD	L,B
04579D 010A0000            A  3020    	LD	BC,10
0457A1 B7                  A  3021    	OR	A,A
0457A2 ED42                A  3022    	SBC	HL,BC
0457A4 28 17               A  3023    	JR	Z,L_183
                           A  3024    ;  265		}
                           A  3025    ;  266		while(--size > 0 && !eof);
                           A  3026    .LINE 266
                           A  3027    
0457A6 DD0709              A  3028    	LD	BC,(IX+%9)
0457A9 0B                  A  3029    	DEC	BC
0457AA DD0F09              A  3030    	LD	(IX+%9),BC
0457AD B7                  A  3031    	OR	A,A
0457AE ED62                A  3032    	SBC	HL,HL
0457B0 B7                  A  3033    	OR	A,A
0457B1 ED42                A  3034    	SBC	HL,BC
0457B3 F2 BD 57 04         A  3035    	JP	P,L_183
0457B7 DD7EFC              A  3036    	LD	A,(IX+%FFFFFFFC)
0457BA B7                  A  3037    	OR	A,A
0457BB 28 8E               A  3038    	JR	Z,L_181
0457BD                     A  3039    L_183:
                           A  3040    ;  267		
                           A  3041    ;  268		*cs = '\0';
                           A  3042    .LINE 268
                           A  3043    
0457BD DD27FD              A  3044    	LD	HL,(IX+%FFFFFFFD)
0457C0 3600                A  3045    	LD	(HL),%0
                           A  3046    ;  269	
                           A  3047    ;  270		return (eof) ? NULL : s;
                           A  3048    .LINE 270
                           A  3049    
0457C2 DD7EFC              A  3050    	LD	A,(IX+%FFFFFFFC)
0457C5 B7                  A  3051    	OR	A,A
0457C6 28 09               A  3052    	JR	Z,L_186
0457C8 01000000            A  3053    	LD	BC,0
0457CC DD0FF6              A  3054    	LD	(IX+%FFFFFFF6),BC
0457CF 18 06               A  3055    	JR	L_187
0457D1                     A  3056    L_186:
0457D1 DD0706              A  3057    	LD	BC,(IX+%6)
0457D4 DD0FF6              A  3058    	LD	(IX+%FFFFFFF6),BC
0457D7                     A  3059    L_187:
0457D7 DD27F6              A  3060    	LD	HL,(IX+%FFFFFFF6)
                           A  3061    ;  271	}
                           A  3062    .LINE 271
                           A  3063    
0457DA DDF9                A  3064    	LD	SP,IX
0457DC DDE1                A  3065    	POP	IX
0457DE C9                  A  3066    	RET	
                           A  3067    
                           A  3068    
                           A  3069    ;**************************** _agon_fgets *****
                           A  3070    ;Name                         Addr/Register   S
                           A  3071    ;_mos_fgetc                          IMPORT  --
                           A  3072    ;_filehandle                         IMPORT    
                           A  3073    ;_mos_feof                           IMPORT  --
                           A  3074    ;temp184                              IX-10    
                           A  3075    ;c                                     IX-7    
                           A  3076    ;eof                                   IX-4    
                           A  3077    ;cs                                    IX-3    
                           A  3078    ;fileid                               IX+12    
                           A  3079    ;size                                  IX+9    
                           A  3080    ;s                                     IX+6    
                           A  3081    
                           A  3082    
                           A  3083    ; Stack Frame Size: 28 (bytes)
                           A  3084    ;       Spill Code: 0 (instruction)
                           A  3085    
                           A  3086    
                           A  3087    .ENDFUNC "agon_fgets",271,"_agon_fgets"
                           A  3088    ;  272	
                           A  3089    ;  273	int agon_fputs(char *s, uint8_t fileid)
0457DF                     A  3090    _agon_fputs:
                           A  3091    .DEFINE "_agon_fputs"
                           A  3092    
                           A  3093    .VALUE _agon_fputs
                           A  3094    
                           A  3095    .CLASS 2
                           A  3096    
                           A  3097    .TYPE 68
                           A  3098    
                           A  3099    .ENDEF
                           A  3100    
                           A  3101    .BEGFUNC "agon_fputs",273,"_agon_fputs"
                           A  3102    
                           A  3103    .LINE 273
                           A  3104    
                           A  3105    .DEFINE "s"
                           A  3106    
                           A  3107    .CLASS 65
                           A  3108    
                           A  3109    .VALUE 6
                           A  3110    
                           A  3111    .TYPE 34
                           A  3112    
                           A  3113    .ENDEF
                           A  3114    
                           A  3115    .DEFINE "fileid"
                           A  3116    
                           A  3117    .CLASS 65
                           A  3118    
                           A  3119    .VALUE 9
                           A  3120    
                           A  3121    .TYPE 12
                           A  3122    
                           A  3123    .ENDEF
                           A  3124    
                           A  3125    .DEFINE "number"
                           A  3126    
                           A  3127    .CLASS 65
                           A  3128    
                           A  3129    .VALUE -3
                           A  3130    
                           A  3131    .TYPE 4
                           A  3132    
                           A  3133    .ENDEF
                           A  3134    
0457DF DDE5                A  3135    	PUSH	IX
0457E1 DD210000 00         A  3136    	LD	IX,0
0457E6 DD39                A  3137    	ADD	IX,SP
0457E8 C5                  A  3138    	PUSH	BC
                           A  3139    ;  274	    int number = 0;
                           A  3140    .LINE 274
                           A  3141    
0457E9 01000000            A  3142    	LD	BC,0
0457ED DD0FFD              A  3143    	LD	(IX+%FFFFFFFD),BC
                           A  3144    ;  275	    while(*s) {
                           A  3145    .LINE 275
                           A  3146    
0457F0 18 2B               A  3147    	JR	L_191
0457F2                     A  3148    L_192:
                           A  3149    ;  276	        mos_fputc(filehandle[fileid], *
                           A  3150    .LINE 276
                           A  3151    
0457F2 DD2706              A  3152    	LD	HL,(IX+%6)
0457F5 4E                  A  3153    	LD	C,(HL)
0457F6 0600                A  3154    	LD	B,%0
0457F8 C5                  A  3155    	PUSH	BC
0457F9 DD7E09              A  3156    	LD	A,(IX+%9)
0457FC B7ED62              A  3157    	UEXT	HL
0457FF 6F                  A  3158    	LD	L,A
045800 01 46 8A 04         A  3159    	LD	BC,_filehandle
045804 09                  A  3160    	ADD	HL,BC
045805 4E                  A  3161    	LD	C,(HL)
045806 0600                A  3162    	LD	B,%0
045808 C5                  A  3163    	PUSH	BC
045809 CD E6 03 04         A  3164    	CALL	_mos_fputc
04580D C1                  A  3165    	POP	BC
04580E C1                  A  3166    	POP	BC
                           A  3167    ;  277	        number++;
                           A  3168    .LINE 277
                           A  3169    
04580F DD07FD              A  3170    	LD	BC,(IX+%FFFFFFFD)
045812 03                  A  3171    	INC	BC
045813 DD0FFD              A  3172    	LD	(IX+%FFFFFFFD),BC
                           A  3173    ;  278	        s++;
                           A  3174    .LINE 278
                           A  3175    
045816 DD0706              A  3176    	LD	BC,(IX+%6)
045819 03                  A  3177    	INC	BC
04581A DD0F06              A  3178    	LD	(IX+%6),BC
                           A  3179    ;  279	    }
04581D                     A  3180    L_191:
                           A  3181    .LINE 279
                           A  3182    
04581D DD2706              A  3183    	LD	HL,(IX+%6)
045820 7E                  A  3184    	LD	A,(HL)
045821 B7                  A  3185    	OR	A,A
045822 20 CE               A  3186    	JR	NZ,L_192
                           A  3187    ;  280	    return number;
                           A  3188    .LINE 280
                           A  3189    
045824 DD27FD              A  3190    	LD	HL,(IX+%FFFFFFFD)
                           A  3191    ;  281	}
                           A  3192    .LINE 281
                           A  3193    
045827 DDF9                A  3194    	LD	SP,IX
045829 DDE1                A  3195    	POP	IX
04582B C9                  A  3196    	RET	
                           A  3197    
                           A  3198    
                           A  3199    ;**************************** _agon_fputs *****
                           A  3200    ;Name                         Addr/Register   S
                           A  3201    ;_filehandle                         IMPORT    
                           A  3202    ;_mos_fputc                          IMPORT  --
                           A  3203    ;number                                IX-3    
                           A  3204    ;fileid                                IX+9    
                           A  3205    ;s                                     IX+6    
                           A  3206    
                           A  3207    
                           A  3208    ; Stack Frame Size: 15 (bytes)
                           A  3209    ;       Spill Code: 0 (instruction)
                           A  3210    
                           A  3211    
                           A  3212    .ENDFUNC "agon_fputs",281,"_agon_fputs"
                           A  3213    ;  282	
                           A  3214    ;  283	size_t agon_fwrite(void *ptr, size_t si
04582C                     A  3215    _agon_fwrite:
                           A  3216    .DEFINE "_agon_fwrite"
                           A  3217    
                           A  3218    .VALUE _agon_fwrite
                           A  3219    
                           A  3220    .CLASS 2
                           A  3221    
                           A  3222    .TYPE 78
                           A  3223    
                           A  3224    .ENDEF
                           A  3225    
                           A  3226    .BEGFUNC "agon_fwrite",283,"_agon_fwrite"
                           A  3227    
                           A  3228    .LINE 283
                           A  3229    
                           A  3230    .DEFINE "ptr"
                           A  3231    
                           A  3232    .CLASS 65
                           A  3233    
                           A  3234    .VALUE 6
                           A  3235    
                           A  3236    .TYPE 33
                           A  3237    
                           A  3238    .ENDEF
                           A  3239    
                           A  3240    .DEFINE "size"
                           A  3241    
                           A  3242    .CLASS 65
                           A  3243    
                           A  3244    .VALUE 9
                           A  3245    
                           A  3246    .TYPE 14
                           A  3247    
                           A  3248    .ENDEF
                           A  3249    
                           A  3250    .DEFINE "nmemb"
                           A  3251    
                           A  3252    .CLASS 65
                           A  3253    
                           A  3254    .VALUE 12
                           A  3255    
                           A  3256    .TYPE 14
                           A  3257    
                           A  3258    .ENDEF
                           A  3259    
                           A  3260    .DEFINE "fileid"
                           A  3261    
                           A  3262    .CLASS 65
                           A  3263    
                           A  3264    .VALUE 15
                           A  3265    
                           A  3266    .TYPE 12
                           A  3267    
                           A  3268    .ENDEF
                           A  3269    
                           A  3270    .DEFINE "n"
                           A  3271    
                           A  3272    .CLASS 65
                           A  3273    
                           A  3274    .VALUE -3
                           A  3275    
                           A  3276    .TYPE 14
                           A  3277    
                           A  3278    .ENDEF
                           A  3279    
                           A  3280    .DEFINE "s"
                           A  3281    
                           A  3282    .CLASS 65
                           A  3283    
                           A  3284    .VALUE -6
                           A  3285    
                           A  3286    .TYPE 14
                           A  3287    
                           A  3288    .ENDEF
                           A  3289    
                           A  3290    .DEFINE "result"
                           A  3291    
                           A  3292    .CLASS 65
                           A  3293    
                           A  3294    .VALUE -9
                           A  3295    
                           A  3296    .TYPE 14
                           A  3297    
                           A  3298    .ENDEF
                           A  3299    
                           A  3300    .DEFINE "t"
                           A  3301    
                           A  3302    .CLASS 65
                           A  3303    
                           A  3304    .VALUE -12
                           A  3305    
                           A  3306    .TYPE 34
                           A  3307    
                           A  3308    .ENDEF
                           A  3309    
04582C DDE5                A  3310    	PUSH	IX
04582E DD210000 00         A  3311    	LD	IX,0
045833 DD39                A  3312    	ADD	IX,SP
045835 ED22F4              A  3313    	LEA	HL,IX+%FFFFFFF4
045838 F9                  A  3314    	LD	SP,HL
                           A  3315    ;  284	    size_t n, s, result = 0;
                           A  3316    .LINE 284
                           A  3317    
045839 01000000            A  3318    	LD	BC,0
04583D DD0FF7              A  3319    	LD	(IX+%FFFFFFF7),BC
                           A  3320    ;  285	    char *t = (char *)ptr;
                           A  3321    .LINE 285
                           A  3322    
045840 DD0706              A  3323    	LD	BC,(IX+%6)
045843 DD0FF4              A  3324    	LD	(IX+%FFFFFFF4),BC
                           A  3325    ;  286	
                           A  3326    ;  287	    for(n = 0; n < nmemb; n++) {
                           A  3327    .LINE 287
                           A  3328    
045846 01000000            A  3329    	LD	BC,0
04584A DD0FFD              A  3330    	LD	(IX+%FFFFFFFD),BC
04584D 18 4D               A  3331    	JR	L_204
04584F                     A  3332    L_202:
                           A  3333    ;  288	        for(s = 0; s < size; s++) {
                           A  3334    .LINE 288
                           A  3335    
04584F 01000000            A  3336    	LD	BC,0
045853 DD0FFA              A  3337    	LD	(IX+%FFFFFFFA),BC
045856 18 32               A  3338    	JR	L_201
045858                     A  3339    L_199:
                           A  3340    ;  289	            mos_fputc(filehandle[fileid
                           A  3341    .LINE 289
                           A  3342    
045858 DD27F4              A  3343    	LD	HL,(IX+%FFFFFFF4)
04585B 4E                  A  3344    	LD	C,(HL)
04585C 0600                A  3345    	LD	B,%0
04585E C5                  A  3346    	PUSH	BC
04585F DD7E0F              A  3347    	LD	A,(IX+%F)
045862 B7ED62              A  3348    	UEXT	HL
045865 6F                  A  3349    	LD	L,A
045866 01 46 8A 04         A  3350    	LD	BC,_filehandle
04586A 09                  A  3351    	ADD	HL,BC
04586B 4E                  A  3352    	LD	C,(HL)
04586C 0600                A  3353    	LD	B,%0
04586E C5                  A  3354    	PUSH	BC
04586F CD E6 03 04         A  3355    	CALL	_mos_fputc
045873 C1                  A  3356    	POP	BC
045874 C1                  A  3357    	POP	BC
                           A  3358    ;  290	            t++;
                           A  3359    .LINE 290
                           A  3360    
045875 DD07F4              A  3361    	LD	BC,(IX+%FFFFFFF4)
045878 03                  A  3362    	INC	BC
045879 DD0FF4              A  3363    	LD	(IX+%FFFFFFF4),BC
                           A  3364    ;  291	            result++;
                           A  3365    .LINE 291
                           A  3366    
04587C DD07F7              A  3367    	LD	BC,(IX+%FFFFFFF7)
04587F 03                  A  3368    	INC	BC
045880 DD0FF7              A  3369    	LD	(IX+%FFFFFFF7),BC
045883 DD07FA              A  3370    	LD	BC,(IX+%FFFFFFFA)
045886 03                  A  3371    	INC	BC
045887 DD0FFA              A  3372    	LD	(IX+%FFFFFFFA),BC
                           A  3373    ;  292	        }
04588A                     A  3374    L_201:
                           A  3375    .LINE 292
                           A  3376    
04588A DD0709              A  3377    	LD	BC,(IX+%9)
04588D DD27FA              A  3378    	LD	HL,(IX+%FFFFFFFA)
045890 B7                  A  3379    	OR	A,A
045891 ED42                A  3380    	SBC	HL,BC
045893 38 C3               A  3381    	JR	C,L_199
045895 DD07FD              A  3382    	LD	BC,(IX+%FFFFFFFD)
045898 03                  A  3383    	INC	BC
045899 DD0FFD              A  3384    	LD	(IX+%FFFFFFFD),BC
                           A  3385    ;  293	    }
04589C                     A  3386    L_204:
                           A  3387    .LINE 293
                           A  3388    
04589C DD070C              A  3389    	LD	BC,(IX+%C)
04589F DD27FD              A  3390    	LD	HL,(IX+%FFFFFFFD)
0458A2 B7                  A  3391    	OR	A,A
0458A3 ED42                A  3392    	SBC	HL,BC
0458A5 38 A8               A  3393    	JR	C,L_202
                           A  3394    ;  294	    return result;
                           A  3395    .LINE 294
                           A  3396    
0458A7 DD27F7              A  3397    	LD	HL,(IX+%FFFFFFF7)
                           A  3398    ;  295	}
                           A  3399    .LINE 295
                           A  3400    
0458AA DDF9                A  3401    	LD	SP,IX
0458AC DDE1                A  3402    	POP	IX
0458AE C9                  A  3403    	RET	
                           A  3404    
                           A  3405    
                           A  3406    ;**************************** _agon_fwrite ****
                           A  3407    ;Name                         Addr/Register   S
                           A  3408    ;_filehandle                         IMPORT    
                           A  3409    ;_mos_fputc                          IMPORT  --
                           A  3410    ;t                                    IX-12    
                           A  3411    ;result                                IX-9    
                           A  3412    ;s                                     IX-6    
                           A  3413    ;n                                     IX-3    
                           A  3414    ;fileid                               IX+15    
                           A  3415    ;nmemb                                IX+12    
                           A  3416    ;size                                  IX+9    
                           A  3417    ;ptr                                   IX+6    
                           A  3418    
                           A  3419    
                           A  3420    ; Stack Frame Size: 30 (bytes)
                           A  3421    ;       Spill Code: 0 (instruction)
                           A  3422    
                           A  3423    
                           A  3424    .ENDFUNC "agon_fwrite",295,"_agon_fwrite"
                           A  3425    ;  296	
                           A  3426    ;  297	size_t agon_fread(void *ptr, size_t siz
0458AF                     A  3427    _agon_fread:
                           A  3428    .DEFINE "_agon_fread"
                           A  3429    
                           A  3430    .VALUE _agon_fread
                           A  3431    
                           A  3432    .CLASS 2
                           A  3433    
                           A  3434    .TYPE 78
                           A  3435    
                           A  3436    .ENDEF
                           A  3437    
                           A  3438    .BEGFUNC "agon_fread",297,"_agon_fread"
                           A  3439    
                           A  3440    .LINE 297
                           A  3441    
                           A  3442    .DEFINE "ptr"
                           A  3443    
                           A  3444    .CLASS 65
                           A  3445    
                           A  3446    .VALUE 6
                           A  3447    
                           A  3448    .TYPE 33
                           A  3449    
                           A  3450    .ENDEF
                           A  3451    
                           A  3452    .DEFINE "size"
                           A  3453    
                           A  3454    .CLASS 65
                           A  3455    
                           A  3456    .VALUE 9
                           A  3457    
                           A  3458    .TYPE 14
                           A  3459    
                           A  3460    .ENDEF
                           A  3461    
                           A  3462    .DEFINE "nmemb"
                           A  3463    
                           A  3464    .CLASS 65
                           A  3465    
                           A  3466    .VALUE 12
                           A  3467    
                           A  3468    .TYPE 14
                           A  3469    
                           A  3470    .ENDEF
                           A  3471    
                           A  3472    .DEFINE "fileid"
                           A  3473    
                           A  3474    .CLASS 65
                           A  3475    
                           A  3476    .VALUE 15
                           A  3477    
                           A  3478    .TYPE 12
                           A  3479    
                           A  3480    .ENDEF
                           A  3481    
                           A  3482    .DEFINE "result"
                           A  3483    
                           A  3484    .CLASS 65
                           A  3485    
                           A  3486    .VALUE -3
                           A  3487    
                           A  3488    .TYPE 14
                           A  3489    
                           A  3490    .ENDEF
                           A  3491    
                           A  3492    .DEFINE "s"
                           A  3493    
                           A  3494    .CLASS 65
                           A  3495    
                           A  3496    .VALUE -6
                           A  3497    
                           A  3498    .TYPE 14
                           A  3499    
                           A  3500    .ENDEF
                           A  3501    
                           A  3502    .DEFINE "n"
                           A  3503    
                           A  3504    .CLASS 65
                           A  3505    
                           A  3506    .VALUE -9
                           A  3507    
                           A  3508    .TYPE 14
                           A  3509    
                           A  3510    .ENDEF
                           A  3511    
                           A  3512    .DEFINE "t"
                           A  3513    
                           A  3514    .CLASS 65
                           A  3515    
                           A  3516    .VALUE -12
                           A  3517    
                           A  3518    .TYPE 34
                           A  3519    
                           A  3520    .ENDEF
                           A  3521    
0458AF DDE5                A  3522    	PUSH	IX
0458B1 DD210000 00         A  3523    	LD	IX,0
0458B6 DD39                A  3524    	ADD	IX,SP
0458B8 ED22F4              A  3525    	LEA	HL,IX+%FFFFFFF4
0458BB F9                  A  3526    	LD	SP,HL
                           A  3527    ;  298	    size_t n, s, result = 0;
                           A  3528    .LINE 298
                           A  3529    
0458BC 01000000            A  3530    	LD	BC,0
0458C0 DD0FFD              A  3531    	LD	(IX+%FFFFFFFD),BC
                           A  3532    ;  299	    char *t = (char *)ptr;
                           A  3533    .LINE 299
                           A  3534    
0458C3 DD0706              A  3535    	LD	BC,(IX+%6)
0458C6 DD0FF4              A  3536    	LD	(IX+%FFFFFFF4),BC
                           A  3537    ;  300	
                           A  3538    ;  301	    for(n = 0; n < nmemb; n++) {
                           A  3539    .LINE 301
                           A  3540    
0458C9 01000000            A  3541    	LD	BC,0
0458CD DD0FF7              A  3542    	LD	(IX+%FFFFFFF7),BC
0458D0 18 66               A  3543    	JR	L_218
0458D2                     A  3544    L_216:
                           A  3545    ;  302	        for(s = 0; s < size; s++) {
                           A  3546    .LINE 302
                           A  3547    
0458D2 01000000            A  3548    	LD	BC,0
0458D6 DD0FFA              A  3549    	LD	(IX+%FFFFFFFA),BC
0458D9 18 4B               A  3550    	JR	L_215
0458DB                     A  3551    L_213:
                           A  3552    ;  303	            *t = mos_fgetc(filehandle[f
                           A  3553    .LINE 303
                           A  3554    
0458DB DD7E0F              A  3555    	LD	A,(IX+%F)
0458DE B7ED62              A  3556    	UEXT	HL
0458E1 6F                  A  3557    	LD	L,A
0458E2 01 46 8A 04         A  3558    	LD	BC,_filehandle
0458E6 09                  A  3559    	ADD	HL,BC
0458E7 4E                  A  3560    	LD	C,(HL)
0458E8 0600                A  3561    	LD	B,%0
0458EA C5                  A  3562    	PUSH	BC
0458EB CD D1 03 04         A  3563    	CALL	_mos_fgetc
0458EF C1                  A  3564    	POP	BC
0458F0 DD27F4              A  3565    	LD	HL,(IX+%FFFFFFF4)
0458F3 77                  A  3566    	LD	(HL),A
                           A  3567    ;  304	                if(mos_feof(filehandle[
                           A  3568    .LINE 304
                           A  3569    
0458F4 DD7E0F              A  3570    	LD	A,(IX+%F)
0458F7 B7ED62              A  3571    	UEXT	HL
0458FA 6F                  A  3572    	LD	L,A
0458FB 01 46 8A 04         A  3573    	LD	BC,_filehandle
0458FF 09                  A  3574    	ADD	HL,BC
045900 4E                  A  3575    	LD	C,(HL)
045901 0600                A  3576    	LD	B,%0
045903 C5                  A  3577    	PUSH	BC
045904 CD FE 03 04         A  3578    	CALL	_mos_feof
045908 C1                  A  3579    	POP	BC
045909 B7                  A  3580    	OR	A,A
04590A 28 05               A  3581    	JR	Z,L_211
                           A  3582    ;  305	                return result;
                           A  3583    .LINE 305
                           A  3584    
04590C DD27FD              A  3585    	LD	HL,(IX+%FFFFFFFD)
04590F 18 35               A  3586    	JR	L_220
                           A  3587    ;  306	            }
045911                     A  3588    L_211:
                           A  3589    .LINE 306
                           A  3590    
                           A  3591    ;  307	            t++;
                           A  3592    .LINE 307
                           A  3593    
045911 DD07F4              A  3594    	LD	BC,(IX+%FFFFFFF4)
045914 03                  A  3595    	INC	BC
045915 DD0FF4              A  3596    	LD	(IX+%FFFFFFF4),BC
                           A  3597    ;  308	            result++;
                           A  3598    .LINE 308
                           A  3599    
045918 DD07FD              A  3600    	LD	BC,(IX+%FFFFFFFD)
04591B 03                  A  3601    	INC	BC
04591C DD0FFD              A  3602    	LD	(IX+%FFFFFFFD),BC
04591F DD07FA              A  3603    	LD	BC,(IX+%FFFFFFFA)
045922 03                  A  3604    	INC	BC
045923 DD0FFA              A  3605    	LD	(IX+%FFFFFFFA),BC
                           A  3606    ;  309	        }
045926                     A  3607    L_215:
                           A  3608    .LINE 309
                           A  3609    
045926 DD0709              A  3610    	LD	BC,(IX+%9)
045929 DD27FA              A  3611    	LD	HL,(IX+%FFFFFFFA)
04592C B7                  A  3612    	OR	A,A
04592D ED42                A  3613    	SBC	HL,BC
04592F 38 AA               A  3614    	JR	C,L_213
045931 DD07F7              A  3615    	LD	BC,(IX+%FFFFFFF7)
045934 03                  A  3616    	INC	BC
045935 DD0FF7              A  3617    	LD	(IX+%FFFFFFF7),BC
                           A  3618    ;  310	    }
045938                     A  3619    L_218:
                           A  3620    .LINE 310
                           A  3621    
045938 DD070C              A  3622    	LD	BC,(IX+%C)
04593B DD27F7              A  3623    	LD	HL,(IX+%FFFFFFF7)
04593E B7                  A  3624    	OR	A,A
04593F ED42                A  3625    	SBC	HL,BC
045941 38 8F               A  3626    	JR	C,L_216
                           A  3627    ;  311	    return result;
                           A  3628    .LINE 311
                           A  3629    
045943 DD27FD              A  3630    	LD	HL,(IX+%FFFFFFFD)
                           A  3631    ;  312	}
045946                     A  3632    L_220:
                           A  3633    .LINE 312
                           A  3634    
045946 DDF9                A  3635    	LD	SP,IX
045948 DDE1                A  3636    	POP	IX
04594A C9                  A  3637    	RET	
                           A  3638    
                           A  3639    
                           A  3640    ;**************************** _agon_fread *****
                           A  3641    ;Name                         Addr/Register   S
                           A  3642    ;_mos_feof                           IMPORT  --
                           A  3643    ;_filehandle                         IMPORT    
                           A  3644    ;_mos_fgetc                          IMPORT  --
                           A  3645    ;t                                    IX-12    
                           A  3646    ;n                                     IX-9    
                           A  3647    ;s                                     IX-6    
                           A  3648    ;result                                IX-3    
                           A  3649    ;fileid                               IX+15    
                           A  3650    ;nmemb                                IX+12    
                           A  3651    ;size                                  IX+9    
                           A  3652    ;ptr                                   IX+6    
                           A  3653    
                           A  3654    
                           A  3655    ; Stack Frame Size: 30 (bytes)
                           A  3656    ;       Spill Code: 0 (instruction)
                           A  3657    
                           A  3658    
                           A  3659    .ENDFUNC "agon_fread",312,"_agon_fread"
                           A  3660    ;  313	
                           A  3661    ;  314	int strcasecmp (char *s1, char *s2) {
04594B                     A  3662    _strcasecmp:
                           A  3663    .DEFINE "_strcasecmp"
                           A  3664    
                           A  3665    .VALUE _strcasecmp
                           A  3666    
                           A  3667    .CLASS 2
                           A  3668    
                           A  3669    .TYPE 68
                           A  3670    
                           A  3671    .ENDEF
                           A  3672    
                           A  3673    .BEGFUNC "strcasecmp",314,"_strcasecmp"
                           A  3674    
                           A  3675    .LINE 314
                           A  3676    
                           A  3677    .DEFINE "s1"
                           A  3678    
                           A  3679    .CLASS 65
                           A  3680    
                           A  3681    .VALUE 6
                           A  3682    
                           A  3683    .TYPE 34
                           A  3684    
                           A  3685    .ENDEF
                           A  3686    
                           A  3687    .DEFINE "s2"
                           A  3688    
                           A  3689    .CLASS 65
                           A  3690    
                           A  3691    .VALUE 9
                           A  3692    
                           A  3693    .TYPE 34
                           A  3694    
                           A  3695    .ENDEF
                           A  3696    
                           A  3697    .DEFINE "p1"
                           A  3698    
                           A  3699    .CLASS 65
                           A  3700    
                           A  3701    .VALUE -3
                           A  3702    
                           A  3703    .TYPE 204
                           A  3704    
                           A  3705    .ENDEF
                           A  3706    
                           A  3707    .DEFINE "p2"
                           A  3708    
                           A  3709    .CLASS 65
                           A  3710    
                           A  3711    .VALUE -6
                           A  3712    
                           A  3713    .TYPE 204
                           A  3714    
                           A  3715    .ENDEF
                           A  3716    
                           A  3717    .DEFINE "result"
                           A  3718    
                           A  3719    .CLASS 65
                           A  3720    
                           A  3721    .VALUE -9
                           A  3722    
                           A  3723    .TYPE 4
                           A  3724    
                           A  3725    .ENDEF
                           A  3726    
04594B DDE5                A  3727    	PUSH	IX
04594D DD210000 00         A  3728    	LD	IX,0
045952 DD39                A  3729    	ADD	IX,SP
045954 ED22ED              A  3730    	LEA	HL,IX+%FFFFFFED
045957 F9                  A  3731    	LD	SP,HL
                           A  3732    ;  315	  const unsigned char *p1 = (const unsi
                           A  3733    .LINE 315
                           A  3734    
045958 DD0706              A  3735    	LD	BC,(IX+%6)
04595B DD0FFD              A  3736    	LD	(IX+%FFFFFFFD),BC
                           A  3737    ;  316	  const unsigned char *p2 = (const unsi
                           A  3738    .LINE 316
                           A  3739    
04595E DD0709              A  3740    	LD	BC,(IX+%9)
045961 DD0FFA              A  3741    	LD	(IX+%FFFFFFFA),BC
                           A  3742    ;  317	  int result;
                           A  3743    ;  318	  if (p1 == p2)
                           A  3744    .LINE 318
                           A  3745    
045964 DD0709              A  3746    	LD	BC,(IX+%9)
045967 DD2706              A  3747    	LD	HL,(IX+%6)
04596A B7                  A  3748    	OR	A,A
04596B ED42                A  3749    	SBC	HL,BC
04596D 20 19               A  3750    	JR	NZ,L_225
                           A  3751    ;  319	    return 0;
                           A  3752    .LINE 319
                           A  3753    
04596F B7                  A  3754    	OR	A,A
045970 ED62                A  3755    	SBC	HL,HL
045972 18 5E               A  3756    	JR	L_229
                           A  3757    ;  320	  while ((result = tolower(*p1) - tolow
                           A  3758    .LINE 320
                           A  3759    
045974                     A  3760    L_226:
                           A  3761    ;  321	    if (*p1++ == '\0')
                           A  3762    .LINE 321
                           A  3763    
045974 DD07FD              A  3764    	LD	BC,(IX+%FFFFFFFD)
045977 DD0FF4              A  3765    	LD	(IX+%FFFFFFF4),BC
04597A DD07FD              A  3766    	LD	BC,(IX+%FFFFFFFD)
04597D 03                  A  3767    	INC	BC
04597E DD0FFD              A  3768    	LD	(IX+%FFFFFFFD),BC
045981 DD27F4              A  3769    	LD	HL,(IX+%FFFFFFF4)
045984 7E                  A  3770    	LD	A,(HL)
045985 B7                  A  3771    	OR	A,A
045986 28 47               A  3772    	JR	Z,L_228
                           A  3773    ;  322	      break;
045988                     A  3774    L_225:
                           A  3775    .LINE 322
                           A  3776    
045988 DD07FA              A  3777    	LD	BC,(IX+%FFFFFFFA)
04598B DD0FF1              A  3778    	LD	(IX+%FFFFFFF1),BC
04598E DD07FA              A  3779    	LD	BC,(IX+%FFFFFFFA)
045991 03                  A  3780    	INC	BC
045992 DD0FFA              A  3781    	LD	(IX+%FFFFFFFA),BC
045995 DD27FD              A  3782    	LD	HL,(IX+%FFFFFFFD)
045998 7E                  A  3783    	LD	A,(HL)
045999 B7ED62              A  3784    	UEXT	HL
04599C 6F                  A  3785    	LD	L,A
04599D E5                  A  3786    	PUSH	HL
04599E CD 4F 64 04         A  3787    	CALL	_tolower
0459A2 C1                  A  3788    	POP	BC
0459A3 E5C1                A  3789    	LD	BC,HL
0459A5 DD27F1              A  3790    	LD	HL,(IX+%FFFFFFF1)
0459A8 7E                  A  3791    	LD	A,(HL)
0459A9 B7ED62              A  3792    	UEXT	HL
0459AC 6F                  A  3793    	LD	L,A
0459AD E5                  A  3794    	PUSH	HL
0459AE DD0FEE              A  3795    	LD	(IX+%FFFFFFEE),BC
0459B1 DD77ED              A  3796    	LD	(IX+%FFFFFFED),A
0459B4 CD 4F 64 04         A  3797    	CALL	_tolower
0459B8 DD07EE              A  3798    	LD	BC,(IX+%FFFFFFEE)
0459BB DD7EED              A  3799    	LD	A,(IX+%FFFFFFED)
0459BE D1                  A  3800    	POP	DE
0459BF E5D1                A  3801    	LD	DE,HL
0459C1 C5E1                A  3802    	LD	HL,BC
0459C3 B7                  A  3803    	OR	A,A
0459C4 ED52                A  3804    	SBC	HL,DE
0459C6 DD2FF7              A  3805    	LD	(IX+%FFFFFFF7),HL
0459C9 CD CF 60 04         A  3806    	CALL	__icmpzero
0459CD 28 A5               A  3807    	JR	Z,L_226
0459CF                     A  3808    L_228:
                           A  3809    ;  323	  return result;
                           A  3810    .LINE 323
                           A  3811    
0459CF DD27F7              A  3812    	LD	HL,(IX+%FFFFFFF7)
0459D2                     A  3813    L_229:
                           A  3814    .LINE 324
                           A  3815    
0459D2 DDF9                A  3816    	LD	SP,IX
0459D4 DDE1                A  3817    	POP	IX
0459D6 C9                  A  3818    	RET	
                           A  3819    
                           A  3820    
                           A  3821    ;**************************** _strcasecmp *****
                           A  3822    ;Name                         Addr/Register   S
                           A  3823    ;_tolower                            IMPORT  --
                           A  3824    ;result                                IX-9    
                           A  3825    ;p2                                    IX-6    
                           A  3826    ;p1                                    IX-3    
                           A  3827    ;s2                                    IX+9    
                           A  3828    ;s1                                    IX+6    
                           A  3829    
                           A  3830    
                           A  3831    ; Stack Frame Size: 31 (bytes)
                           A  3832    ;       Spill Code: 0 (instruction)
                           A  3833    
                           A  3834    
                           A  3835    .ENDFUNC "strcasecmp",324,"_strcasecmp"
                           A  3836    	XREF _mos_feof:ROM
                           A  3837    	XREF _mos_fputc:ROM
                           A  3838    	XREF _mos_fgetc:ROM
                           A  3839    	XREF _mos_fclose:ROM
                           A  3840    	XREF _mos_fopen:ROM
                           A  3841    	XREF _global_errors:ROM
                           A  3842    	XREF _linenumber:ROM
                           A  3843    	XREF _filehandle:ROM
                           A  3844    	XREF _filename:ROM
                           A  3845    	XREF _tolower:ROM
                           A  3846    	XREF _isspace:ROM
                           A  3847    	XREF _strrchr:ROM
                           A  3848    	XREF _strcat:ROM
                           A  3849    	XREF _strcpy:ROM
                           A  3850    	XREF __u_itoa:ROM
                           A  3851    	XREF ___print_sendstring:ROM
                           A  3852    	XREF ___print_xputch:ROM
                           A  3853    	XREF ___print_uputch:ROM
                           A  3854    	XREF __istiy:ROM
                           A  3855    	XREF __bstiy:ROM
                           A  3856    	XREF __icmpzero:ROM
                           A  3857    	XREF __case8D:ROM
                           A  3858    	XREF __seqcaseD:ROM
                           A  3859    	XDEF _strcasecmp
                           A  3860    	XDEF _agon_fread
                           A  3861    	XDEF _agon_fwrite
                           A  3862    	XDEF _agon_fputs
                           A  3863    	XDEF _agon_fgets
                           A  3864    	XDEF _openfiles
                           A  3865    	XDEF _closeAllFiles
                           A  3866    	XDEF _prepare_filenames
                           A  3867    	XDEF _reOpenFile
                           A  3868    	XDEF _openFile
                           A  3869    	XDEF _getOperatorToken
                           A  3870    	XDEF _getLineToken
                           A  3871    	XDEF _split_suffix
                           A  3872    	XDEF _trimRight
                           A  3873    	XDEF _error
                           A  3874    	XDEF _notEmpty
                           A  3875    	XDEF _isEmpty
                           A  3876    	XDEF _remove_ext
                           A  3877    	END


Errors: 0
Warnings: 0
Lines Assembled: 3878
