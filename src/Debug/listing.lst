Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED01-Mar-23     16:39:41     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\listing.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",15
                           A    94    .DEFINE "reg"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "reg_index"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "indirect"
                           A   105    .VALUE 4
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "cc"
                           A   110    .VALUE 5
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "cc_index"
                           A   115    .VALUE 6
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "displacement"
                           A   120    .VALUE 7
                           A   121    .CLASS 8
                           A   122    .TYPE 3
                           A   123    .ENDEF
                           A   124    .DEFINE "displacement_provided"
                           A   125    .VALUE 9
                           A   126    .CLASS 8
                           A   127    .TYPE 12
                           A   128    .ENDEF
                           A   129    .DEFINE "immediate_provided"
                           A   130    .VALUE 10
                           A   131    .CLASS 8
                           A   132    .TYPE 12
                           A   133    .ENDEF
                           A   134    .DEFINE "immediate"
                           A   135    .VALUE 11
                           A   136    .CLASS 8
                           A   137    .TYPE 4
                           A   138    .ENDEF
                           A   139    .DEFINE "wasLabel"
                           A   140    .VALUE 14
                           A   141    .CLASS 8
                           A   142    .TYPE 12
                           A   143    .ENDEF
                           A   144    .ENDREC "NONAME0"
                           A   145    .BEGREC "NONAME1",4
                           A   146    .DEFINE "suffix"
                           A   147    .VALUE 0
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "prefix1"
                           A   152    .VALUE 1
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "prefix2"
                           A   157    .VALUE 2
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "opcode"
                           A   162    .VALUE 3
                           A   163    .CLASS 8
                           A   164    .TYPE 12
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME1"
                           A   167    .BEGREC "NONAME2",16
                           A   168    .DEFINE "operandA"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TYPE 4
                           A   172    .ENDEF
                           A   173    .DEFINE "operandB"
                           A   174    .VALUE 3
                           A   175    .CLASS 8
                           A   176    .TYPE 4
                           A   177    .ENDEF
                           A   178    .DEFINE "ddfdpermitted"
                           A   179    .VALUE 6
                           A   180    .CLASS 8
                           A   181    .TYPE 12
                           A   182    .ENDEF
                           A   183    .DEFINE "transformA"
                           A   184    .VALUE 7
                           A   185    .CLASS 8
                           A   186    .TYPE 4
                           A   187    .ENDEF
                           A   188    .DEFINE "transformB"
                           A   189    .VALUE 10
                           A   190    .CLASS 8
                           A   191    .TYPE 4
                           A   192    .ENDEF
                           A   193    .DEFINE "prefix"
                           A   194    .VALUE 13
                           A   195    .CLASS 8
                           A   196    .TYPE 12
                           A   197    .ENDEF
                           A   198    .DEFINE "opcode"
                           A   199    .VALUE 14
                           A   200    .CLASS 8
                           A   201    .TYPE 12
                           A   202    .ENDEF
                           A   203    .DEFINE "adl"
                           A   204    .VALUE 15
                           A   205    .CLASS 8
                           A   206    .TYPE 12
                           A   207    .ENDEF
                           A   208    .ENDREC "NONAME2"
                           A   209    .BEGREC "NONAME3",17
                           A   210    .DEFINE "name"
                           A   211    .VALUE 0
                           A   212    .CLASS 8
                           A   213    .DIM 8
                           A   214    .TYPE 98
                           A   215    .ENDEF
                           A   216    .DEFINE "type"
                           A   217    .VALUE 8
                           A   218    .CLASS 8
                           A   219    .TYPE 12
                           A   220    .ENDEF
                           A   221    .DEFINE "asmtype"
                           A   222    .VALUE 9
                           A   223    .CLASS 8
                           A   224    .TYPE 12
                           A   225    .ENDEF
                           A   226    .DEFINE "listnumber"
                           A   227    .VALUE 10
                           A   228    .CLASS 8
                           A   229    .TYPE 12
                           A   230    .ENDEF
                           A   231    .DEFINE "list"
                           A   232    .VALUE 11
                           A   233    .CLASS 8
                           A   234    .TAG "NONAME2"
                           A   235    .TYPE 40
                           A   236    .ENDEF
                           A   237    .DEFINE "asmargument"
                           A   238    .VALUE 14
                           A   239    .CLASS 8
                           A   240    .TYPE 4
                           A   241    .ENDEF
                           A   242    .ENDREC "NONAME3"
                           A   243    .BEGREC "NONAME4",6
                           A   244    .DEFINE "type"
                           A   245    .VALUE 0
                           A   246    .CLASS 8
                           A   247    .TYPE 4
                           A   248    .ENDEF
                           A   249    .DEFINE "match"
                           A   250    .VALUE 3
                           A   251    .CLASS 8
                           A   252    .TYPE 556
                           A   253    .ENDEF
                           A   254    .ENDREC "NONAME4"
                           A   255    .BEGREC "NONAME5",264
                           A   256    .DEFINE "current_instruction"
                           A   257    .VALUE 0
                           A   258    .CLASS 8
                           A   259    .TAG "NONAME3"
                           A   260    .TYPE 40
                           A   261    .ENDEF
                           A   262    .DEFINE "next"
                           A   263    .VALUE 3
                           A   264    .CLASS 8
                           A   265    .TYPE 34
                           A   266    .ENDEF
                           A   267    .DEFINE "label"
                           A   268    .VALUE 6
                           A   269    .CLASS 8
                           A   270    .DIM 32
                           A   271    .TYPE 98
                           A   272    .ENDEF
                           A   273    .DEFINE "mnemonic"
                           A   274    .VALUE 38
                           A   275    .CLASS 8
                           A   276    .DIM 16
                           A   277    .TYPE 98
                           A   278    .ENDEF
                           A   279    .DEFINE "suffix"
                           A   280    .VALUE 54
                           A   281    .CLASS 8
                           A   282    .DIM 16
                           A   283    .TYPE 98
                           A   284    .ENDEF
                           A   285    .DEFINE "operand1"
                           A   286    .VALUE 70
                           A   287    .CLASS 8
                           A   288    .DIM 32
                           A   289    .TYPE 98
                           A   290    .ENDEF
                           A   291    .DEFINE "operand2"
                           A   292    .VALUE 102
                           A   293    .CLASS 8
                           A   294    .DIM 32
                           A   295    .TYPE 98
                           A   296    .ENDEF
                           A   297    .DEFINE "comment"
                           A   298    .VALUE 134
                           A   299    .CLASS 8
                           A   300    .DIM 128
                           A   301    .TYPE 98
                           A   302    .ENDEF
                           A   303    .DEFINE "size"
                           A   304    .VALUE 262
                           A   305    .CLASS 8
                           A   306    .TYPE 13
                           A   307    .ENDEF
                           A   308    .ENDREC "NONAME5"
                           A   309    .BEGREC "NONAME6",133
                           A   310    .DEFINE "start"
                           A   311    .VALUE 0
                           A   312    .CLASS 8
                           A   313    .DIM 128
                           A   314    .TYPE 98
                           A   315    .ENDEF
                           A   316    .DEFINE "length"
                           A   317    .VALUE 128
                           A   318    .CLASS 8
                           A   319    .TYPE 12
                           A   320    .ENDEF
                           A   321    .DEFINE "next"
                           A   322    .VALUE 129
                           A   323    .CLASS 8
                           A   324    .TYPE 34
                           A   325    .ENDEF
                           A   326    .DEFINE "terminator"
                           A   327    .VALUE 132
                           A   328    .CLASS 8
                           A   329    .TYPE 2
                           A   330    .ENDEF
                           A   331    .ENDREC "NONAME6"
                           A   332    	SEGMENT BSS
06FA1F                     A   333    __listLine:
06FA1F                     A   334    	DS	128
                           A   335    .DEFINE "_listLine"
                           A   336    .ALIAS "__listLine"
                           A   337    .CLASS 83
                           A   338    .VALUE __listLine
                           A   339    .DIM 128
                           A   340    .TYPE 98
                           A   341    .ENDEF
06FA9F                     A   342    __listAddress:
06FA9F                     A   343    	DS	3
                           A   344    .DEFINE "_listAddress"
                           A   345    .ALIAS "__listAddress"
                           A   346    .CLASS 83
                           A   347    .VALUE __listAddress
                           A   348    .TYPE 14
                           A   349    .ENDEF
06FAA2                     A   350    __listObjects:
06FAA2                     A   351    	DS	256
                           A   352    .DEFINE "_listObjects"
                           A   353    .ALIAS "__listObjects"
                           A   354    .CLASS 83
                           A   355    .VALUE __listObjects
                           A   356    .DIM 256
                           A   357    .TYPE 108
                           A   358    .ENDEF
06FBA2                     A   359    __listObjectCount:
06FBA2                     A   360    	DS	1
                           A   361    .DEFINE "_listObjectCount"
                           A   362    .ALIAS "__listObjectCount"
                           A   363    .CLASS 83
                           A   364    .VALUE __listObjectCount
                           A   365    .TYPE 12
                           A   366    .ENDEF
                           A   367    	SEGMENT DATA
047EC5                     A   368    __listFirstline:
047EC5 01                  A   369    	DB	1
                           A   370    .DEFINE "_listFirstline"
                           A   371    .ALIAS "__listFirstline"
                           A   372    .CLASS 69
                           A   373    .VALUE __listFirstline
                           A   374    .TYPE 12
                           A   375    .ENDEF
047EC6                     A   376    __listHeader:
047EC6 50                  A   377    	DB	80
047EC7 43                  A   378    	DB	67
047EC8 20                  A   379    	DB	32
047EC9 20                  A   380    	DB	32
047ECA 20                  A   381    	DB	32
047ECB 20                  A   382    	DB	32
047ECC 20                  A   383    	DB	32
047ECD 20                  A   384    	DB	32
047ECE 4F                  A   385    	DB	79
047ECF 75                  A   386    	DB	117
047ED0 74                  A   387    	DB	116
047ED1 70                  A   388    	DB	112
047ED2 75                  A   389    	DB	117
047ED3 74                  A   390    	DB	116
047ED4 20                  A   391    	DB	32
047ED5 20                  A   392    	DB	32
047ED6 20                  A   393    	DB	32
047ED7 20                  A   394    	DB	32
047ED8 20                  A   395    	DB	32
047ED9 20                  A   396    	DB	32
047EDA 20                  A   397    	DB	32
047EDB 20                  A   398    	DB	32
047EDC 20                  A   399    	DB	32
047EDD 20                  A   400    	DB	32
047EDE 20                  A   401    	DB	32
047EDF 20                  A   402    	DB	32
047EE0 4C                  A   403    	DB	76
047EE1 69                  A   404    	DB	105
047EE2 6E                  A   405    	DB	110
047EE3 65                  A   406    	DB	101
047EE4 20                  A   407    	DB	32
047EE5 20                  A   408    	DB	32
047EE6 20                  A   409    	DB	32
047EE7 53                  A   410    	DB	83
047EE8 6F                  A   411    	DB	111
047EE9 75                  A   412    	DB	117
047EEA 72                  A   413    	DB	114
047EEB 63                  A   414    	DB	99
047EEC 65                  A   415    	DB	101
047EED 0A                  A   416    	DB	10
047EEE 0D                  A   417    	DB	13
047EEF 00                  A   418    	DB	0
                           A   419    .DEFINE "_listHeader"
                           A   420    .ALIAS "__listHeader"
                           A   421    .CLASS 69
                           A   422    .VALUE __listHeader
                           A   423    .DIM 42
                           A   424    .TYPE 98
                           A   425    .ENDEF
                           A   426    	SEGMENT BSS
06FBA3                     A   427    _buffer:
06FBA3                     A   428    	DS	160
                           A   429    .DEFINE "buffer"
                           A   430    .ALIAS "_buffer"
                           A   431    .CLASS 83
                           A   432    .VALUE _buffer
                           A   433    .DIM 160
                           A   434    .TYPE 98
                           A   435    .ENDEF
                           A   436    ;    1	#include <stdio.h>
                           A   437    ;    2	#include <string.h>
                           A   438    ;    3	#include "listing.h"
                           A   439    ;    4	#include "globals.h"
                           A   440    ;    5	#include "utils.h"
                           A   441    ;    6	#include "stdint.h"
                           A   442    ;    7	
                           A   443    ;    8	char _listLine[LINEMAX];
                           A   444    ;    9	uint24_t _listAddress;
                           A   445    ;   10	uint8_t _listObjects[256];
                           A   446    ;   11	uint8_t _listObjectCount;
                           A   447    ;   12	bool _listFirstline = true;
                           A   448    ;   13	
                           A   449    ;   14	char _listHeader[] = "PC      Output   
                           A   450    ;   15	
                           A   451    ;   16	char buffer[LINEMAX + 32];
                           A   452    	SEGMENT CODE
                           A   453    ;   17	
                           A   454    ;   18	void listInit(bool console) {
044244                     A   455    _listInit:
                           A   456    .DEFINE "_listInit"
                           A   457    
                           A   458    .VALUE _listInit
                           A   459    
                           A   460    .CLASS 2
                           A   461    
                           A   462    .TYPE 65
                           A   463    
                           A   464    .ENDEF
                           A   465    
                           A   466    .BEGFUNC "listInit",18,"_listInit"
                           A   467    
                           A   468    .LINE 18
                           A   469    
                           A   470    .DEFINE "console"
                           A   471    
                           A   472    .CLASS 65
                           A   473    
                           A   474    .VALUE 6
                           A   475    
                           A   476    .TYPE 12
                           A   477    
                           A   478    .ENDEF
                           A   479    
044244 DDE5                A   480    	PUSH	IX
044246 DD210000 00         A   481    	LD	IX,0
04424B DD39                A   482    	ADD	IX,SP
                           A   483    ;   19	    sprintf(buffer, "%s", _listHeader);
                           A   484    .LINE 19
                           A   485    
04424D 01 A3 FB 06         A   486    	LD	BC,_buffer
044251 ED43 67 FC 06       A   487    	LD	(___print_out),BC
044256 01 16 5A 04         A   488    	LD	BC,___print_sputch
04425A ED43 F0 7E 04       A   489    	LD	(___print_xputch),BC
04425F 01 C6 7E 04         A   490    	LD	BC,__listHeader
044263 C5                  A   491    	PUSH	BC
044264 CD 1D 58 04         A   492    	CALL	___print_sendstring
044268 C1                  A   493    	POP	BC
044269 01000000            A   494    	LD	BC,0
04426D C5                  A   495    	PUSH	BC
04426E CD 16 5A 04         A   496    	CALL	___print_sputch
044272 C1                  A   497    	POP	BC
                           A   498    ;   20	    agon_fputs(buffer, FILE_LISTING);
                           A   499    .LINE 20
                           A   500    
044273 01050000            A   501    	LD	BC,5
044277 C5                  A   502    	PUSH	BC
044278 01 A3 FB 06         A   503    	LD	BC,_buffer
04427C C5                  A   504    	PUSH	BC
04427D CD 17 55 04         A   505    	CALL	_agon_fputs
044281 C1                  A   506    	POP	BC
044282 C1                  A   507    	POP	BC
                           A   508    ;   21	    if(console) printf("%s", _listHeade
                           A   509    .LINE 21
                           A   510    
044283 DD7E06              A   511    	LD	A,(IX+%6)
044286 B7                  A   512    	OR	A,A
044287 28 13               A   513    	JR	Z,L_1
044289 01 D0 59 04         A   514    	LD	BC,___print_uputch
04428D ED43 F0 7E 04       A   515    	LD	(___print_xputch),BC
044292 01 C6 7E 04         A   516    	LD	BC,__listHeader
044296 C5                  A   517    	PUSH	BC
044297 CD 1D 58 04         A   518    	CALL	___print_sendstring
04429B C1                  A   519    	POP	BC
04429C                     A   520    L_1:
                           A   521    ;   22	    _listFirstline = false;
                           A   522    .LINE 22
                           A   523    
04429C AF                  A   524    	XOR	A,A
04429D 32 C5 7E 04         A   525    	LD	(__listFirstline),A
                           A   526    ;   23	    _listLine[0] = 0;
                           A   527    .LINE 23
                           A   528    
0442A1 AF                  A   529    	XOR	A,A
0442A2 32 1F FA 06         A   530    	LD	(__listLine),A
                           A   531    ;   24	    _listObjectCount = 0;
                           A   532    .LINE 24
                           A   533    
0442A6 AF                  A   534    	XOR	A,A
0442A7 32 A2 FB 06         A   535    	LD	(__listObjectCount),A
                           A   536    ;   25	}
                           A   537    .LINE 25
                           A   538    
0442AB DDF9                A   539    	LD	SP,IX
0442AD DDE1                A   540    	POP	IX
0442AF C9                  A   541    	RET	
                           A   542    
                           A   543    
                           A   544    ;**************************** _listInit *******
                           A   545    ;Name                         Addr/Register   S
                           A   546    ;__listObjectCount                   STATIC    
                           A   547    ;__listLine                          STATIC    
                           A   548    ;__listFirstline                     STATIC    
                           A   549    ;___print_uputch                     IMPORT  --
                           A   550    ;_agon_fputs                         IMPORT  --
                           A   551    ;__listHeader                        STATIC    
                           A   552    ;___print_sendstring                 IMPORT  --
                           A   553    ;___print_xputch                     IMPORT    
                           A   554    ;___print_sputch                     IMPORT  --
                           A   555    ;___print_out                        IMPORT    
                           A   556    ;_buffer                             STATIC    
                           A   557    ;console                               IX+6    
                           A   558    
                           A   559    
                           A   560    ; Stack Frame Size: 9 (bytes)
                           A   561    ;       Spill Code: 0 (instruction)
                           A   562    
                           A   563    
                           A   564    .ENDFUNC "listInit",25,"_listInit"
                           A   565    ;   26	
                           A   566    ;   27	void listStartLine(char *line) {
0442B0                     A   567    _listStartLine:
                           A   568    .DEFINE "_listStartLine"
                           A   569    
                           A   570    .VALUE _listStartLine
                           A   571    
                           A   572    .CLASS 2
                           A   573    
                           A   574    .TYPE 65
                           A   575    
                           A   576    .ENDEF
                           A   577    
                           A   578    .BEGFUNC "listStartLine",27,"_listStartLine"
                           A   579    
                           A   580    .LINE 27
                           A   581    
                           A   582    .DEFINE "line"
                           A   583    
                           A   584    .CLASS 65
                           A   585    
                           A   586    .VALUE 6
                           A   587    
                           A   588    .TYPE 34
                           A   589    
                           A   590    .ENDEF
                           A   591    
0442B0 DDE5                A   592    	PUSH	IX
0442B2 DD210000 00         A   593    	LD	IX,0
0442B7 DD39                A   594    	ADD	IX,SP
                           A   595    ;   28	    strcpy(_listLine, line);
                           A   596    .LINE 28
                           A   597    
0442B9 DD0706              A   598    	LD	BC,(IX+%6)
0442BC C5                  A   599    	PUSH	BC
0442BD 01 1F FA 06         A   600    	LD	BC,__listLine
0442C1 C5                  A   601    	PUSH	BC
0442C2 CD 09 61 04         A   602    	CALL	_strcpy
0442C6 C1                  A   603    	POP	BC
0442C7 C1                  A   604    	POP	BC
                           A   605    ;   29	    trimRight(_listLine);
                           A   606    .LINE 29
                           A   607    
0442C8 01 1F FA 06         A   608    	LD	BC,__listLine
0442CC C5                  A   609    	PUSH	BC
0442CD CD 4E 4C 04         A   610    	CALL	_trimRight
0442D1 C1                  A   611    	POP	BC
                           A   612    ;   30	    _listAddress = address;
                           A   613    .LINE 30
                           A   614    
0442D2 ED4B 56 87 04       A   615    	LD	BC,(_address)
0442D7 ED43 9F FA 06       A   616    	LD	(__listAddress),BC
                           A   617    ;   31	    _listObjectCount = 0;
                           A   618    .LINE 31
                           A   619    
0442DC AF                  A   620    	XOR	A,A
0442DD 32 A2 FB 06         A   621    	LD	(__listObjectCount),A
                           A   622    ;   32	}
                           A   623    .LINE 32
                           A   624    
0442E1 DDF9                A   625    	LD	SP,IX
0442E3 DDE1                A   626    	POP	IX
0442E5 C9                  A   627    	RET	
                           A   628    
                           A   629    
                           A   630    ;**************************** _listStartLine **
                           A   631    ;Name                         Addr/Register   S
                           A   632    ;__listObjectCount                   STATIC    
                           A   633    ;__listAddress                       STATIC    
                           A   634    ;_address                            IMPORT    
                           A   635    ;_trimRight                          IMPORT  --
                           A   636    ;__listLine                          STATIC    
                           A   637    ;_strcpy                             IMPORT  --
                           A   638    ;line                                  IX+6    
                           A   639    
                           A   640    
                           A   641    ; Stack Frame Size: 9 (bytes)
                           A   642    ;       Spill Code: 0 (instruction)
                           A   643    
                           A   644    
                           A   645    .ENDFUNC "listStartLine",32,"_listStartLine"
                           A   646    ;   33	
                           A   647    ;   34	void listEndLine(bool console) {
0442E6                     A   648    _listEndLine:
                           A   649    .DEFINE "_listEndLine"
                           A   650    
                           A   651    .VALUE _listEndLine
                           A   652    
                           A   653    .CLASS 2
                           A   654    
                           A   655    .TYPE 65
                           A   656    
                           A   657    .ENDEF
                           A   658    
                           A   659    .BEGFUNC "listEndLine",34,"_listEndLine"
                           A   660    
                           A   661    .LINE 34
                           A   662    
                           A   663    .DEFINE "console"
                           A   664    
                           A   665    .CLASS 65
                           A   666    
                           A   667    .VALUE 6
                           A   668    
                           A   669    .TYPE 12
                           A   670    
                           A   671    .ENDEF
                           A   672    
                           A   673    .DEFINE "lines"
                           A   674    
                           A   675    .CLASS 65
                           A   676    
                           A   677    .VALUE -1
                           A   678    
                           A   679    .TYPE 12
                           A   680    
                           A   681    .ENDEF
                           A   682    
                           A   683    .DEFINE "linemax"
                           A   684    
                           A   685    .CLASS 65
                           A   686    
                           A   687    .VALUE -2
                           A   688    
                           A   689    .TYPE 12
                           A   690    
                           A   691    .ENDEF
                           A   692    
                           A   693    .DEFINE "objectnum"
                           A   694    
                           A   695    .CLASS 65
                           A   696    
                           A   697    .VALUE -3
                           A   698    
                           A   699    .TYPE 12
                           A   700    
                           A   701    .ENDEF
                           A   702    
                           A   703    .DEFINE "i"
                           A   704    
                           A   705    .CLASS 65
                           A   706    
                           A   707    .VALUE -4
                           A   708    
                           A   709    .TYPE 12
                           A   710    
                           A   711    .ENDEF
                           A   712    
0442E6 DDE5                A   713    	PUSH	IX
0442E8 DD210000 00         A   714    	LD	IX,0
0442ED DD39                A   715    	ADD	IX,SP
0442EF C5                  A   716    	PUSH	BC
0442F0 3B                  A   717    	DEC	SP
                           A   718    ;   35	    uint8_t i, lines, objectnum;
                           A   719    ;   36	    uint8_t linemax;
                           A   720    ;   37	
                           A   721    ;   38	    linemax = (_listObjectCount / OBJEC
                           A   722    .LINE 38
                           A   723    
0442F1 3A A2 FB 06         A   724    	LD	A,(__listObjectCount)
0442F5 B7ED62              A   725    	UEXT	HL
0442F8 6F                  A   726    	LD	L,A
0442F9 01060000            A   727    	LD	BC,6
0442FD CD 52 60 04         A   728    	CALL	__idivs
044301 DD75FE              A   729    	LD	(IX+%FFFFFFFE),L
                           A   730    ;   39	    if(_listObjectCount % OBJECTS_PER_L
                           A   731    .LINE 39
                           A   732    
044304 3A A2 FB 06         A   733    	LD	A,(__listObjectCount)
044308 B7ED62              A   734    	UEXT	HL
04430B 6F                  A   735    	LD	L,A
04430C 01060000            A   736    	LD	BC,6
044310 CD 47 57 04         A   737    	CALL	__irems
044314 CD C5 5D 04         A   738    	CALL	__icmpzero
044318 28 03               A   739    	JR	Z,L_7
04431A DD34FE              A   740    	INC	(IX+%FFFFFFFE)
04431D                     A   741    L_7:
                           A   742    ;   40	    if(linemax == 0) linemax = 1;
                           A   743    .LINE 40
                           A   744    
04431D DD7EFE              A   745    	LD	A,(IX+%FFFFFFFE)
044320 B7                  A   746    	OR	A,A
044321 20 04               A   747    	JR	NZ,L_8
044323 DD36FE01            A   748    	LD	(IX+%FFFFFFFE),%1
044327                     A   749    L_8:
                           A   750    ;   41	
                           A   751    ;   42	    objectnum = 0;
                           A   752    .LINE 42
                           A   753    
044327 DD36FD00            A   754    	LD	(IX+%FFFFFFFD),%0
                           A   755    ;   43	    for(lines = 0; lines < linemax; lin
                           A   756    .LINE 43
                           A   757    
04432B DD36FF00            A   758    	LD	(IX+%FFFFFFFF),%0
04432F C3 D5 45 04         A   759    	JR	L_32
044333                     A   760    L_30:
                           A   761    ;   44	        if(lines == 0) {
                           A   762    .LINE 44
                           A   763    
044333 DD7EFF              A   764    	LD	A,(IX+%FFFFFFFF)
044336 B7                  A   765    	OR	A,A
044337 20 76               A   766    	JR	NZ,L_13
                           A   767    ;   45	            sprintf(buffer, "%06X  ",_l
                           A   768    .LINE 45
                           A   769    
044339 01 A3 FB 06         A   770    	LD	BC,_buffer
04433D ED43 67 FC 06       A   771    	LD	(___print_out),BC
044342 01 16 5A 04         A   772    	LD	BC,___print_sputch
044346 ED43 F0 7E 04       A   773    	LD	(___print_xputch),BC
04434B 3E06                A   774    	LD	A,%6
04434D 32 57 FC 06         A   775    	LD	(___print_fmt+5),A
044351 3E60                A   776    	LD	A,%60
044353 32 53 FC 06         A   777    	LD	(___print_fmt+1),A
044357 3E78                A   778    	LD	A,%78
044359 32 56 FC 06         A   779    	LD	(___print_fmt+4),A
04435D ED4B 9F FA 06       A   780    	LD	BC,(__listAddress)
044362 AF                  A   781    	XOR	A,A
044363 C5D1                A   782    	LD	DE,BC
044365 4F                  A   783    	LD	C,A
044366 0600                A   784    	LD	B,%0
044368 C5                  A   785    	PUSH	BC
044369 D5                  A   786    	PUSH	DE
04436A CD 56 5A 04         A   787    	CALL	__u_uitoa
04436E C1                  A   788    	POP	BC
04436F C1                  A   789    	POP	BC
044370 01 5E 84 04         A   790    	LD	BC,L__6
044374 C5                  A   791    	PUSH	BC
044375 CD 1D 58 04         A   792    	CALL	___print_sendstring
044379 C1                  A   793    	POP	BC
04437A 01000000            A   794    	LD	BC,0
04437E C5                  A   795    	PUSH	BC
04437F CD 16 5A 04         A   796    	CALL	___print_sputch
044383 C1                  A   797    	POP	BC
                           A   798    ;   46	            agon_fputs(buffer, FILE_LIS
                           A   799    .LINE 46
                           A   800    
044384 01050000            A   801    	LD	BC,5
044388 C5                  A   802    	PUSH	BC
044389 01 A3 FB 06         A   803    	LD	BC,_buffer
04438D C5                  A   804    	PUSH	BC
04438E CD 17 55 04         A   805    	CALL	_agon_fputs
044392 C1                  A   806    	POP	BC
044393 C1                  A   807    	POP	BC
                           A   808    ;   47	            if(console) printf("%s",buf
                           A   809    .LINE 47
                           A   810    
044394 DD7E06              A   811    	LD	A,(IX+%6)
044397 B7                  A   812    	OR	A,A
044398 28 64               A   813    	JR	Z,L_24
04439A 01 D0 59 04         A   814    	LD	BC,___print_uputch
04439E ED43 F0 7E 04       A   815    	LD	(___print_xputch),BC
0443A3 01 A3 FB 06         A   816    	LD	BC,_buffer
0443A7 C5                  A   817    	PUSH	BC
0443A8 CD 1D 58 04         A   818    	CALL	___print_sendstring
0443AC C1                  A   819    	POP	BC
                           A   820    ;   48	        }
                           A   821    ;   49	        else {
                           A   822    .LINE 49
                           A   823    
0443AD 18 4F               A   824    	JR	L_24
0443AF                     A   825    L_13:
                           A   826    ;   50	            sprintf(buffer, "        ")
                           A   827    .LINE 50
                           A   828    
0443AF 01 A3 FB 06         A   829    	LD	BC,_buffer
0443B3 ED43 67 FC 06       A   830    	LD	(___print_out),BC
0443B8 01 16 5A 04         A   831    	LD	BC,___print_sputch
0443BC ED43 F0 7E 04       A   832    	LD	(___print_xputch),BC
0443C1 01 61 84 04         A   833    	LD	BC,L__8
0443C5 C5                  A   834    	PUSH	BC
0443C6 CD 1D 58 04         A   835    	CALL	___print_sendstring
0443CA C1                  A   836    	POP	BC
0443CB 01000000            A   837    	LD	BC,0
0443CF C5                  A   838    	PUSH	BC
0443D0 CD 16 5A 04         A   839    	CALL	___print_sputch
0443D4 C1                  A   840    	POP	BC
                           A   841    ;   51	            agon_fputs(buffer, FILE_LIS
                           A   842    .LINE 51
                           A   843    
0443D5 01050000            A   844    	LD	BC,5
0443D9 C5                  A   845    	PUSH	BC
0443DA 01 A3 FB 06         A   846    	LD	BC,_buffer
0443DE C5                  A   847    	PUSH	BC
0443DF CD 17 55 04         A   848    	CALL	_agon_fputs
0443E3 C1                  A   849    	POP	BC
0443E4 C1                  A   850    	POP	BC
                           A   851    ;   52	            if(console) printf("%s",buf
                           A   852    .LINE 52
                           A   853    
0443E5 DD7E06              A   854    	LD	A,(IX+%6)
0443E8 B7                  A   855    	OR	A,A
0443E9 28 13               A   856    	JR	Z,L_24
0443EB 01 D0 59 04         A   857    	LD	BC,___print_uputch
0443EF ED43 F0 7E 04       A   858    	LD	(___print_xputch),BC
0443F4 01 A3 FB 06         A   859    	LD	BC,_buffer
0443F8 C5                  A   860    	PUSH	BC
0443F9 CD 1D 58 04         A   861    	CALL	___print_sendstring
0443FD C1                  A   862    	POP	BC
                           A   863    ;   53	        }
0443FE                     A   864    L_24:
                           A   865    .LINE 53
                           A   866    
                           A   867    ;   54	        for(i = 0; i < OBJECTS_PER_LINE
                           A   868    .LINE 54
                           A   869    
0443FE DD36FC00            A   870    	LD	(IX+%FFFFFFFC),%0
044402 C3 EE 44 04         A   871    	JR	L_23
044406                     A   872    L_21:
                           A   873    ;   55	            if(objectnum < _listObjectC
                           A   874    .LINE 55
                           A   875    
044406 DD7EFD              A   876    	LD	A,(IX+%FFFFFFFD)
044409 21 A2 FB 06         A   877    	LD	HL,__listObjectCount
04440D BE                  A   878    	CP	A,(HL)
04440E D2 9C 44 04         A   879    	JR	NC,L_20
                           A   880    ;   56	                sprintf(buffer, "%02X "
                           A   881    .LINE 56
                           A   882    
044412 01 A3 FB 06         A   883    	LD	BC,_buffer
044416 ED43 67 FC 06       A   884    	LD	(___print_out),BC
04441B 01 16 5A 04         A   885    	LD	BC,___print_sputch
04441F ED43 F0 7E 04       A   886    	LD	(___print_xputch),BC
044424 3E02                A   887    	LD	A,%2
044426 32 57 FC 06         A   888    	LD	(___print_fmt+5),A
04442A 3E60                A   889    	LD	A,%60
04442C 32 53 FC 06         A   890    	LD	(___print_fmt+1),A
044430 3E78                A   891    	LD	A,%78
044432 32 56 FC 06         A   892    	LD	(___print_fmt+4),A
044436 DD7EFD              A   893    	LD	A,(IX+%FFFFFFFD)
044439 B7ED62              A   894    	UEXT	HL
04443C 6F                  A   895    	LD	L,A
04443D 01 A2 FA 06         A   896    	LD	BC,__listObjects
044441 09                  A   897    	ADD	HL,BC
044442 7E                  A   898    	LD	A,(HL)
044443 B7ED62              A   899    	UEXT	HL
044446 6F                  A   900    	LD	L,A
044447 E5C1                A   901    	LD	BC,HL
044449 CD B0 60 04         A   902    	CALL	__itol
04444D C5D1                A   903    	LD	DE,BC
04444F 4F                  A   904    	LD	C,A
044450 0600                A   905    	LD	B,%0
044452 C5                  A   906    	PUSH	BC
044453 D5                  A   907    	PUSH	DE
044454 CD 56 5A 04         A   908    	CALL	__u_uitoa
044458 C1                  A   909    	POP	BC
044459 C1                  A   910    	POP	BC
04445A 01200000            A   911    	LD	BC,32
04445E C5                  A   912    	PUSH	BC
04445F CD 16 5A 04         A   913    	CALL	___print_sputch
044463 C1                  A   914    	POP	BC
044464 01000000            A   915    	LD	BC,0
044468 C5                  A   916    	PUSH	BC
044469 CD 16 5A 04         A   917    	CALL	___print_sputch
04446D C1                  A   918    	POP	BC
                           A   919    ;   57	                agon_fputs(buffer, FILE
                           A   920    .LINE 57
                           A   921    
04446E 01050000            A   922    	LD	BC,5
044472 C5                  A   923    	PUSH	BC
044473 01 A3 FB 06         A   924    	LD	BC,_buffer
044477 C5                  A   925    	PUSH	BC
044478 CD 17 55 04         A   926    	CALL	_agon_fputs
04447C C1                  A   927    	POP	BC
04447D C1                  A   928    	POP	BC
                           A   929    ;   58	                if(console) printf("%s"
                           A   930    .LINE 58
                           A   931    
04447E DD7E06              A   932    	LD	A,(IX+%6)
044481 B7                  A   933    	OR	A,A
044482 28 13               A   934    	JR	Z,L_17
044484 01 D0 59 04         A   935    	LD	BC,___print_uputch
044488 ED43 F0 7E 04       A   936    	LD	(___print_xputch),BC
04448D 01 A3 FB 06         A   937    	LD	BC,_buffer
044491 C5                  A   938    	PUSH	BC
044492 CD 1D 58 04         A   939    	CALL	___print_sendstring
044496 C1                  A   940    	POP	BC
044497                     A   941    L_17:
                           A   942    ;   59	                objectnum++;
                           A   943    .LINE 59
                           A   944    
044497 DD34FD              A   945    	INC	(IX+%FFFFFFFD)
                           A   946    ;   60	            }
                           A   947    ;   61	            else {
                           A   948    .LINE 61
                           A   949    
04449A 18 4F               A   950    	JR	L_22
04449C                     A   951    L_20:
                           A   952    ;   62	                sprintf(buffer, "   ");
                           A   953    .LINE 62
                           A   954    
04449C 01 A3 FB 06         A   955    	LD	BC,_buffer
0444A0 ED43 67 FC 06       A   956    	LD	(___print_out),BC
0444A5 01 16 5A 04         A   957    	LD	BC,___print_sputch
0444A9 ED43 F0 7E 04       A   958    	LD	(___print_xputch),BC
0444AE 01 6A 84 04         A   959    	LD	BC,L__12
0444B2 C5                  A   960    	PUSH	BC
0444B3 CD 1D 58 04         A   961    	CALL	___print_sendstring
0444B7 C1                  A   962    	POP	BC
0444B8 01000000            A   963    	LD	BC,0
0444BC C5                  A   964    	PUSH	BC
0444BD CD 16 5A 04         A   965    	CALL	___print_sputch
0444C1 C1                  A   966    	POP	BC
                           A   967    ;   63	                agon_fputs(buffer, FILE
                           A   968    .LINE 63
                           A   969    
0444C2 01050000            A   970    	LD	BC,5
0444C6 C5                  A   971    	PUSH	BC
0444C7 01 A3 FB 06         A   972    	LD	BC,_buffer
0444CB C5                  A   973    	PUSH	BC
0444CC CD 17 55 04         A   974    	CALL	_agon_fputs
0444D0 C1                  A   975    	POP	BC
0444D1 C1                  A   976    	POP	BC
                           A   977    ;   64	                if(console) printf("%s"
                           A   978    .LINE 64
                           A   979    
0444D2 DD7E06              A   980    	LD	A,(IX+%6)
0444D5 B7                  A   981    	OR	A,A
0444D6 28 13               A   982    	JR	Z,L_22
0444D8 01 D0 59 04         A   983    	LD	BC,___print_uputch
0444DC ED43 F0 7E 04       A   984    	LD	(___print_xputch),BC
0444E1 01 A3 FB 06         A   985    	LD	BC,_buffer
0444E5 C5                  A   986    	PUSH	BC
0444E6 CD 1D 58 04         A   987    	CALL	___print_sendstring
0444EA C1                  A   988    	POP	BC
                           A   989    ;   65	            }
                           A   990    ;   66	        }
0444EB                     A   991    L_22:
                           A   992    .LINE 66
                           A   993    
0444EB DD34FC              A   994    	INC	(IX+%FFFFFFFC)
0444EE                     A   995    L_23:
0444EE DD7EFC              A   996    	LD	A,(IX+%FFFFFFFC)
0444F1 FE06                A   997    	CP	A,%6
0444F3 DA 06 44 04         A   998    	JR	C,L_21
                           A   999    ;   67	        if(lines == 0) {
                           A  1000    .LINE 67
                           A  1001    
0444F7 DD7EFF              A  1002    	LD	A,(IX+%FFFFFFFF)
0444FA B7                  A  1003    	OR	A,A
0444FB C2 83 45 04         A  1004    	JR	NZ,L_28
                           A  1005    ;   68	            sprintf(buffer, "%04d   %s\
                           A  1006    .LINE 68
                           A  1007    
0444FF 01 A3 FB 06         A  1008    	LD	BC,_buffer
044503 ED43 67 FC 06       A  1009    	LD	(___print_out),BC
044508 01 16 5A 04         A  1010    	LD	BC,___print_sputch
04450C ED43 F0 7E 04       A  1011    	LD	(___print_xputch),BC
044511 3E04                A  1012    	LD	A,%4
044513 32 57 FC 06         A  1013    	LD	(___print_fmt+5),A
044517 3E40                A  1014    	LD	A,%40
044519 32 53 FC 06         A  1015    	LD	(___print_fmt+1),A
04451D ED4B 50 87 04       A  1016    	LD	BC,(_linenumber)
044522 AF                  A  1017    	XOR	A,A
044523 C5D1                A  1018    	LD	DE,BC
044525 4F                  A  1019    	LD	C,A
044526 0600                A  1020    	LD	B,%0
044528 C5                  A  1021    	PUSH	BC
044529 D5                  A  1022    	PUSH	DE
04452A CD 96 5A 04         A  1023    	CALL	__u_itoa
04452E C1                  A  1024    	POP	BC
04452F C1                  A  1025    	POP	BC
044530 01 6E 84 04         A  1026    	LD	BC,L__16
044534 C5                  A  1027    	PUSH	BC
044535 CD 1D 58 04         A  1028    	CALL	___print_sendstring
044539 C1                  A  1029    	POP	BC
04453A 01 1F FA 06         A  1030    	LD	BC,__listLine
04453E C5                  A  1031    	PUSH	BC
04453F CD 1D 58 04         A  1032    	CALL	___print_sendstring
044543 C1                  A  1033    	POP	BC
044544 01 72 84 04         A  1034    	LD	BC,L__17
044548 C5                  A  1035    	PUSH	BC
044549 CD 1D 58 04         A  1036    	CALL	___print_sendstring
04454D C1                  A  1037    	POP	BC
04454E 01000000            A  1038    	LD	BC,0
044552 C5                  A  1039    	PUSH	BC
044553 CD 16 5A 04         A  1040    	CALL	___print_sputch
044557 C1                  A  1041    	POP	BC
                           A  1042    ;   69	            agon_fputs(buffer, FILE_LIS
                           A  1043    .LINE 69
                           A  1044    
044558 01050000            A  1045    	LD	BC,5
04455C C5                  A  1046    	PUSH	BC
04455D 01 A3 FB 06         A  1047    	LD	BC,_buffer
044561 C5                  A  1048    	PUSH	BC
044562 CD 17 55 04         A  1049    	CALL	_agon_fputs
044566 C1                  A  1050    	POP	BC
044567 C1                  A  1051    	POP	BC
                           A  1052    ;   70	            if(console) printf("%s",buf
                           A  1053    .LINE 70
                           A  1054    
044568 DD7E06              A  1055    	LD	A,(IX+%6)
04456B B7                  A  1056    	OR	A,A
04456C 28 64               A  1057    	JR	Z,L_31
04456E 01 D0 59 04         A  1058    	LD	BC,___print_uputch
044572 ED43 F0 7E 04       A  1059    	LD	(___print_xputch),BC
044577 01 A3 FB 06         A  1060    	LD	BC,_buffer
04457B C5                  A  1061    	PUSH	BC
04457C CD 1D 58 04         A  1062    	CALL	___print_sendstring
044580 C1                  A  1063    	POP	BC
                           A  1064    ;   71	        }
                           A  1065    ;   72	        else {
                           A  1066    .LINE 72
                           A  1067    
044581 18 4F               A  1068    	JR	L_31
044583                     A  1069    L_28:
                           A  1070    ;   73	            sprintf(buffer, "\n\r");
                           A  1071    .LINE 73
                           A  1072    
044583 01 A3 FB 06         A  1073    	LD	BC,_buffer
044587 ED43 67 FC 06       A  1074    	LD	(___print_out),BC
04458C 01 16 5A 04         A  1075    	LD	BC,___print_sputch
044590 ED43 F0 7E 04       A  1076    	LD	(___print_xputch),BC
044595 01 75 84 04         A  1077    	LD	BC,L__19
044599 C5                  A  1078    	PUSH	BC
04459A CD 1D 58 04         A  1079    	CALL	___print_sendstring
04459E C1                  A  1080    	POP	BC
04459F 01000000            A  1081    	LD	BC,0
0445A3 C5                  A  1082    	PUSH	BC
0445A4 CD 16 5A 04         A  1083    	CALL	___print_sputch
0445A8 C1                  A  1084    	POP	BC
                           A  1085    ;   74	            agon_fputs(buffer, FILE_LIS
                           A  1086    .LINE 74
                           A  1087    
0445A9 01050000            A  1088    	LD	BC,5
0445AD C5                  A  1089    	PUSH	BC
0445AE 01 A3 FB 06         A  1090    	LD	BC,_buffer
0445B2 C5                  A  1091    	PUSH	BC
0445B3 CD 17 55 04         A  1092    	CALL	_agon_fputs
0445B7 C1                  A  1093    	POP	BC
0445B8 C1                  A  1094    	POP	BC
                           A  1095    ;   75	            if(console) printf("%s",buf
                           A  1096    .LINE 75
                           A  1097    
0445B9 DD7E06              A  1098    	LD	A,(IX+%6)
0445BC B7                  A  1099    	OR	A,A
0445BD 28 13               A  1100    	JR	Z,L_31
0445BF 01 D0 59 04         A  1101    	LD	BC,___print_uputch
0445C3 ED43 F0 7E 04       A  1102    	LD	(___print_xputch),BC
0445C8 01 A3 FB 06         A  1103    	LD	BC,_buffer
0445CC C5                  A  1104    	PUSH	BC
0445CD CD 1D 58 04         A  1105    	CALL	___print_sendstring
0445D1 C1                  A  1106    	POP	BC
                           A  1107    ;   76	        }
                           A  1108    ;   77	    }
0445D2                     A  1109    L_31:
                           A  1110    .LINE 77
                           A  1111    
0445D2 DD34FF              A  1112    	INC	(IX+%FFFFFFFF)
0445D5                     A  1113    L_32:
0445D5 DD7EFF              A  1114    	LD	A,(IX+%FFFFFFFF)
0445D8 DDBEFE              A  1115    	CP	A,(IX+%FFFFFFFE)
0445DB DA 33 43 04         A  1116    	JR	C,L_30
                           A  1117    ;   78	}
                           A  1118    .LINE 78
                           A  1119    
0445DF DDF9                A  1120    	LD	SP,IX
0445E1 DDE1                A  1121    	POP	IX
0445E3 C9                  A  1122    	RET	
                           A  1123    
                           A  1124    
                           A  1125    ;**************************** _listEndLine ****
                           A  1126    ;Name                         Addr/Register   S
                           A  1127    ;__listLine                          STATIC    
                           A  1128    ;_linenumber                         IMPORT    
                           A  1129    ;__u_itoa                            IMPORT  --
                           A  1130    ;__listObjects                       STATIC    
                           A  1131    ;___print_uputch                     IMPORT  --
                           A  1132    ;_agon_fputs                         IMPORT  --
                           A  1133    ;___print_sendstring                 IMPORT  --
                           A  1134    ;__listAddress                       STATIC    
                           A  1135    ;__u_uitoa                           IMPORT  --
                           A  1136    ;___print_fmt                        IMPORT    
                           A  1137    ;___print_xputch                     IMPORT    
                           A  1138    ;___print_sputch                     IMPORT  --
                           A  1139    ;___print_out                        IMPORT    
                           A  1140    ;_buffer                             STATIC    
                           A  1141    ;__listObjectCount                   STATIC    
                           A  1142    ;i                                     IX-4    
                           A  1143    ;objectnum                             IX-3    
                           A  1144    ;linemax                               IX-2    
                           A  1145    ;lines                                 IX-1    
                           A  1146    ;console                               IX+6    
                           A  1147    
                           A  1148    
                           A  1149    ; Stack Frame Size: 13 (bytes)
                           A  1150    ;       Spill Code: 0 (instruction)
                           A  1151    
                           A  1152    
                           A  1153    .ENDFUNC "listEndLine",78,"_listEndLine"
                           A  1154    	SEGMENT STRSECT
04845E                     A  1155    L__6:
04845E 2020                A  1156    	DB	"  "
048460 00                  A  1157    	DB	0
048461                     A  1158    L__8:
048461 20202020 20202020   A  1159    	DB	"        "
048469 00                  A  1160    	DB	0
04846A                     A  1161    L__12:
04846A 202020              A  1162    	DB	"   "
04846D 00                  A  1163    	DB	0
04846E                     A  1164    L__16:
04846E 202020              A  1165    	DB	"   "
048471 00                  A  1166    	DB	0
048472                     A  1167    L__17:
048472 0A0D00              A  1168    	DB	10,13,0
048475                     A  1169    L__19:
048475 0A0D00              A  1170    	DB	10,13,0
                           A  1171    	SEGMENT CODE
                           A  1172    ;   79	
                           A  1173    ;   80	void listEmit8bit(uint8_t value) {
0445E4                     A  1174    _listEmit8bit:
                           A  1175    .DEFINE "_listEmit8bit"
                           A  1176    
                           A  1177    .VALUE _listEmit8bit
                           A  1178    
                           A  1179    .CLASS 2
                           A  1180    
                           A  1181    .TYPE 65
                           A  1182    
                           A  1183    .ENDEF
                           A  1184    
                           A  1185    .BEGFUNC "listEmit8bit",80,"_listEmit8bit"
                           A  1186    
                           A  1187    .LINE 80
                           A  1188    
                           A  1189    .DEFINE "value"
                           A  1190    
                           A  1191    .CLASS 65
                           A  1192    
                           A  1193    .VALUE 6
                           A  1194    
                           A  1195    .TYPE 12
                           A  1196    
                           A  1197    .ENDEF
                           A  1198    
0445E4 DDE5                A  1199    	PUSH	IX
0445E6 DD210000 00         A  1200    	LD	IX,0
0445EB DD39                A  1201    	ADD	IX,SP
                           A  1202    ;   81	    _listObjects[_listObjectCount++] = 
                           A  1203    .LINE 81
                           A  1204    
0445ED 3A A2 FB 06         A  1205    	LD	A,(__listObjectCount)
0445F1 B7ED62              A  1206    	UEXT	HL
0445F4 6F                  A  1207    	LD	L,A
0445F5 01 A2 FA 06         A  1208    	LD	BC,__listObjects
0445F9 09                  A  1209    	ADD	HL,BC
0445FA DD7E06              A  1210    	LD	A,(IX+%6)
0445FD 77                  A  1211    	LD	(HL),A
0445FE 3A A2 FB 06         A  1212    	LD	A,(__listObjectCount)
044602 3C                  A  1213    	INC	A
044603 32 A2 FB 06         A  1214    	LD	(__listObjectCount),A
                           A  1215    .LINE 82
                           A  1216    
044607 DDF9                A  1217    	LD	SP,IX
044609 DDE1                A  1218    	POP	IX
04460B C9                  A  1219    	RET	
                           A  1220    
                           A  1221    
                           A  1222    ;**************************** _listEmit8bit ***
                           A  1223    ;Name                         Addr/Register   S
                           A  1224    ;__listObjectCount                   STATIC    
                           A  1225    ;__listObjects                       STATIC    
                           A  1226    ;value                                 IX+6    
                           A  1227    
                           A  1228    
                           A  1229    ; Stack Frame Size: 9 (bytes)
                           A  1230    ;       Spill Code: 0 (instruction)
                           A  1231    
                           A  1232    
                           A  1233    .ENDFUNC "listEmit8bit",82,"_listEmit8bit"
                           A  1234    	XREF _agon_fputs:ROM
                           A  1235    	XREF _trimRight:ROM
                           A  1236    	XREF _address:ROM
                           A  1237    	XREF _linenumber:ROM
                           A  1238    	XREF _strcpy:ROM
                           A  1239    	XREF __u_uitoa:ROM
                           A  1240    	XREF __u_itoa:ROM
                           A  1241    	XREF ___print_sendstring:ROM
                           A  1242    	XREF ___print_xputch:ROM
                           A  1243    	XREF ___print_sputch:ROM
                           A  1244    	XREF ___print_uputch:ROM
                           A  1245    	XREF ___print_out:ROM
                           A  1246    	XREF ___print_fmt:ROM
                           A  1247    	XREF __idivs:ROM
                           A  1248    	XREF __irems:ROM
                           A  1249    	XREF __itol:ROM
                           A  1250    	XREF __icmpzero:ROM
                           A  1251    	XDEF _listEmit8bit
                           A  1252    	XDEF _listEndLine
                           A  1253    	XDEF _listStartLine
                           A  1254    	XDEF _listInit
                           A  1255    	XDEF _buffer
                           A  1256    	XDEF __listHeader
                           A  1257    	XDEF __listFirstline
                           A  1258    	XDEF __listObjectCount
                           A  1259    	XDEF __listObjects
                           A  1260    	XDEF __listAddress
                           A  1261    	XDEF __listLine
                           A  1262    	END


Errors: 0
Warnings: 0
Lines Assembled: 1263
