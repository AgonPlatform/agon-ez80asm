Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED01-Mar-23     16:29:18     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\listing.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",16
                           A    94    .DEFINE "reg"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "reg_index"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "indirect"
                           A   105    .VALUE 4
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "cc"
                           A   110    .VALUE 5
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "cc_index"
                           A   115    .VALUE 6
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "displacement"
                           A   120    .VALUE 7
                           A   121    .CLASS 8
                           A   122    .TYPE 3
                           A   123    .ENDEF
                           A   124    .DEFINE "displacement_provided"
                           A   125    .VALUE 9
                           A   126    .CLASS 8
                           A   127    .TYPE 12
                           A   128    .ENDEF
                           A   129    .DEFINE "immediate_provided"
                           A   130    .VALUE 10
                           A   131    .CLASS 8
                           A   132    .TYPE 12
                           A   133    .ENDEF
                           A   134    .DEFINE "immediate"
                           A   135    .VALUE 11
                           A   136    .CLASS 8
                           A   137    .TYPE 5
                           A   138    .ENDEF
                           A   139    .DEFINE "wasLabel"
                           A   140    .VALUE 15
                           A   141    .CLASS 8
                           A   142    .TYPE 12
                           A   143    .ENDEF
                           A   144    .ENDREC "NONAME0"
                           A   145    .BEGREC "NONAME1",4
                           A   146    .DEFINE "suffix"
                           A   147    .VALUE 0
                           A   148    .CLASS 8
                           A   149    .TYPE 12
                           A   150    .ENDEF
                           A   151    .DEFINE "prefix1"
                           A   152    .VALUE 1
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "prefix2"
                           A   157    .VALUE 2
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "opcode"
                           A   162    .VALUE 3
                           A   163    .CLASS 8
                           A   164    .TYPE 12
                           A   165    .ENDEF
                           A   166    .ENDREC "NONAME1"
                           A   167    .BEGREC "NONAME2",16
                           A   168    .DEFINE "operandA"
                           A   169    .VALUE 0
                           A   170    .CLASS 8
                           A   171    .TYPE 4
                           A   172    .ENDEF
                           A   173    .DEFINE "operandB"
                           A   174    .VALUE 3
                           A   175    .CLASS 8
                           A   176    .TYPE 4
                           A   177    .ENDEF
                           A   178    .DEFINE "ddfdpermitted"
                           A   179    .VALUE 6
                           A   180    .CLASS 8
                           A   181    .TYPE 12
                           A   182    .ENDEF
                           A   183    .DEFINE "transformA"
                           A   184    .VALUE 7
                           A   185    .CLASS 8
                           A   186    .TYPE 4
                           A   187    .ENDEF
                           A   188    .DEFINE "transformB"
                           A   189    .VALUE 10
                           A   190    .CLASS 8
                           A   191    .TYPE 4
                           A   192    .ENDEF
                           A   193    .DEFINE "prefix"
                           A   194    .VALUE 13
                           A   195    .CLASS 8
                           A   196    .TYPE 12
                           A   197    .ENDEF
                           A   198    .DEFINE "opcode"
                           A   199    .VALUE 14
                           A   200    .CLASS 8
                           A   201    .TYPE 12
                           A   202    .ENDEF
                           A   203    .DEFINE "adl"
                           A   204    .VALUE 15
                           A   205    .CLASS 8
                           A   206    .TYPE 12
                           A   207    .ENDEF
                           A   208    .ENDREC "NONAME2"
                           A   209    .BEGREC "NONAME3",17
                           A   210    .DEFINE "name"
                           A   211    .VALUE 0
                           A   212    .CLASS 8
                           A   213    .DIM 8
                           A   214    .TYPE 98
                           A   215    .ENDEF
                           A   216    .DEFINE "type"
                           A   217    .VALUE 8
                           A   218    .CLASS 8
                           A   219    .TYPE 12
                           A   220    .ENDEF
                           A   221    .DEFINE "asmtype"
                           A   222    .VALUE 9
                           A   223    .CLASS 8
                           A   224    .TYPE 12
                           A   225    .ENDEF
                           A   226    .DEFINE "listnumber"
                           A   227    .VALUE 10
                           A   228    .CLASS 8
                           A   229    .TYPE 12
                           A   230    .ENDEF
                           A   231    .DEFINE "list"
                           A   232    .VALUE 11
                           A   233    .CLASS 8
                           A   234    .TAG "NONAME2"
                           A   235    .TYPE 40
                           A   236    .ENDEF
                           A   237    .DEFINE "asmargument"
                           A   238    .VALUE 14
                           A   239    .CLASS 8
                           A   240    .TYPE 4
                           A   241    .ENDEF
                           A   242    .ENDREC "NONAME3"
                           A   243    .BEGREC "NONAME4",6
                           A   244    .DEFINE "type"
                           A   245    .VALUE 0
                           A   246    .CLASS 8
                           A   247    .TYPE 4
                           A   248    .ENDEF
                           A   249    .DEFINE "match"
                           A   250    .VALUE 3
                           A   251    .CLASS 8
                           A   252    .TYPE 556
                           A   253    .ENDEF
                           A   254    .ENDREC "NONAME4"
                           A   255    .BEGREC "NONAME5",264
                           A   256    .DEFINE "current_instruction"
                           A   257    .VALUE 0
                           A   258    .CLASS 8
                           A   259    .TAG "NONAME3"
                           A   260    .TYPE 40
                           A   261    .ENDEF
                           A   262    .DEFINE "next"
                           A   263    .VALUE 3
                           A   264    .CLASS 8
                           A   265    .TYPE 34
                           A   266    .ENDEF
                           A   267    .DEFINE "label"
                           A   268    .VALUE 6
                           A   269    .CLASS 8
                           A   270    .DIM 32
                           A   271    .TYPE 98
                           A   272    .ENDEF
                           A   273    .DEFINE "mnemonic"
                           A   274    .VALUE 38
                           A   275    .CLASS 8
                           A   276    .DIM 16
                           A   277    .TYPE 98
                           A   278    .ENDEF
                           A   279    .DEFINE "suffix"
                           A   280    .VALUE 54
                           A   281    .CLASS 8
                           A   282    .DIM 16
                           A   283    .TYPE 98
                           A   284    .ENDEF
                           A   285    .DEFINE "operand1"
                           A   286    .VALUE 70
                           A   287    .CLASS 8
                           A   288    .DIM 32
                           A   289    .TYPE 98
                           A   290    .ENDEF
                           A   291    .DEFINE "operand2"
                           A   292    .VALUE 102
                           A   293    .CLASS 8
                           A   294    .DIM 32
                           A   295    .TYPE 98
                           A   296    .ENDEF
                           A   297    .DEFINE "comment"
                           A   298    .VALUE 134
                           A   299    .CLASS 8
                           A   300    .DIM 128
                           A   301    .TYPE 98
                           A   302    .ENDEF
                           A   303    .DEFINE "size"
                           A   304    .VALUE 262
                           A   305    .CLASS 8
                           A   306    .TYPE 13
                           A   307    .ENDEF
                           A   308    .ENDREC "NONAME5"
                           A   309    .BEGREC "NONAME6",133
                           A   310    .DEFINE "start"
                           A   311    .VALUE 0
                           A   312    .CLASS 8
                           A   313    .DIM 128
                           A   314    .TYPE 98
                           A   315    .ENDEF
                           A   316    .DEFINE "length"
                           A   317    .VALUE 128
                           A   318    .CLASS 8
                           A   319    .TYPE 12
                           A   320    .ENDEF
                           A   321    .DEFINE "next"
                           A   322    .VALUE 129
                           A   323    .CLASS 8
                           A   324    .TYPE 34
                           A   325    .ENDEF
                           A   326    .DEFINE "terminator"
                           A   327    .VALUE 132
                           A   328    .CLASS 8
                           A   329    .TYPE 2
                           A   330    .ENDEF
                           A   331    .ENDREC "NONAME6"
                           A   332    	SEGMENT BSS
06FD65                     A   333    __listLine:
06FD65                     A   334    	DS	128
                           A   335    .DEFINE "_listLine"
                           A   336    .ALIAS "__listLine"
                           A   337    .CLASS 83
                           A   338    .VALUE __listLine
                           A   339    .DIM 128
                           A   340    .TYPE 98
                           A   341    .ENDEF
06FDE5                     A   342    __listAddress:
06FDE5                     A   343    	DS	4*1
                           A   344    .DEFINE "_listAddress"
                           A   345    .ALIAS "__listAddress"
                           A   346    .CLASS 83
                           A   347    .VALUE __listAddress
                           A   348    .TYPE 15
                           A   349    .ENDEF
06FDE9                     A   350    __listObjects:
06FDE9                     A   351    	DS	256
                           A   352    .DEFINE "_listObjects"
                           A   353    .ALIAS "__listObjects"
                           A   354    .CLASS 83
                           A   355    .VALUE __listObjects
                           A   356    .DIM 256
                           A   357    .TYPE 108
                           A   358    .ENDEF
06FEE9                     A   359    __listObjectCount:
06FEE9                     A   360    	DS	1
                           A   361    .DEFINE "_listObjectCount"
                           A   362    .ALIAS "__listObjectCount"
                           A   363    .CLASS 83
                           A   364    .VALUE __listObjectCount
                           A   365    .TYPE 12
                           A   366    .ENDEF
                           A   367    	SEGMENT DATA
0481C4                     A   368    __listFirstline:
0481C4 01                  A   369    	DB	1
                           A   370    .DEFINE "_listFirstline"
                           A   371    .ALIAS "__listFirstline"
                           A   372    .CLASS 69
                           A   373    .VALUE __listFirstline
                           A   374    .TYPE 12
                           A   375    .ENDEF
0481C5                     A   376    __listHeader:
0481C5 50                  A   377    	DB	80
0481C6 43                  A   378    	DB	67
0481C7 20                  A   379    	DB	32
0481C8 20                  A   380    	DB	32
0481C9 20                  A   381    	DB	32
0481CA 20                  A   382    	DB	32
0481CB 20                  A   383    	DB	32
0481CC 20                  A   384    	DB	32
0481CD 4F                  A   385    	DB	79
0481CE 75                  A   386    	DB	117
0481CF 74                  A   387    	DB	116
0481D0 70                  A   388    	DB	112
0481D1 75                  A   389    	DB	117
0481D2 74                  A   390    	DB	116
0481D3 20                  A   391    	DB	32
0481D4 20                  A   392    	DB	32
0481D5 20                  A   393    	DB	32
0481D6 20                  A   394    	DB	32
0481D7 20                  A   395    	DB	32
0481D8 20                  A   396    	DB	32
0481D9 20                  A   397    	DB	32
0481DA 20                  A   398    	DB	32
0481DB 20                  A   399    	DB	32
0481DC 20                  A   400    	DB	32
0481DD 20                  A   401    	DB	32
0481DE 20                  A   402    	DB	32
0481DF 4C                  A   403    	DB	76
0481E0 69                  A   404    	DB	105
0481E1 6E                  A   405    	DB	110
0481E2 65                  A   406    	DB	101
0481E3 20                  A   407    	DB	32
0481E4 20                  A   408    	DB	32
0481E5 20                  A   409    	DB	32
0481E6 53                  A   410    	DB	83
0481E7 6F                  A   411    	DB	111
0481E8 75                  A   412    	DB	117
0481E9 72                  A   413    	DB	114
0481EA 63                  A   414    	DB	99
0481EB 65                  A   415    	DB	101
0481EC 0A                  A   416    	DB	10
0481ED 0D                  A   417    	DB	13
0481EE 00                  A   418    	DB	0
                           A   419    .DEFINE "_listHeader"
                           A   420    .ALIAS "__listHeader"
                           A   421    .CLASS 69
                           A   422    .VALUE __listHeader
                           A   423    .DIM 42
                           A   424    .TYPE 98
                           A   425    .ENDEF
                           A   426    	SEGMENT BSS
06FEEA                     A   427    _buffer:
06FEEA                     A   428    	DS	160
                           A   429    .DEFINE "buffer"
                           A   430    .ALIAS "_buffer"
                           A   431    .CLASS 83
                           A   432    .VALUE _buffer
                           A   433    .DIM 160
                           A   434    .TYPE 98
                           A   435    .ENDEF
                           A   436    ;    1	#include <stdio.h>
                           A   437    ;    2	#include <string.h>
                           A   438    ;    3	#include "listing.h"
                           A   439    ;    4	#include "globals.h"
                           A   440    ;    5	#include "utils.h"
                           A   441    ;    6	#include "stdint.h"
                           A   442    ;    7	
                           A   443    ;    8	char _listLine[LINEMAX];
                           A   444    ;    9	uint32_t _listAddress;
                           A   445    ;   10	uint8_t _listObjects[256];
                           A   446    ;   11	uint8_t _listObjectCount;
                           A   447    ;   12	bool _listFirstline = true;
                           A   448    ;   13	
                           A   449    ;   14	char _listHeader[] = "PC      Output   
                           A   450    ;   15	
                           A   451    ;   16	char buffer[LINEMAX + 32];
                           A   452    	SEGMENT CODE
                           A   453    ;   17	
                           A   454    ;   18	void listInit(bool console) {
044475                     A   455    _listInit:
                           A   456    .DEFINE "_listInit"
                           A   457    
                           A   458    .VALUE _listInit
                           A   459    
                           A   460    .CLASS 2
                           A   461    
                           A   462    .TYPE 65
                           A   463    
                           A   464    .ENDEF
                           A   465    
                           A   466    .BEGFUNC "listInit",18,"_listInit"
                           A   467    
                           A   468    .LINE 18
                           A   469    
                           A   470    .DEFINE "console"
                           A   471    
                           A   472    .CLASS 65
                           A   473    
                           A   474    .VALUE 6
                           A   475    
                           A   476    .TYPE 12
                           A   477    
                           A   478    .ENDEF
                           A   479    
044475 DDE5                A   480    	PUSH	IX
044477 DD210000 00         A   481    	LD	IX,0
04447C DD39                A   482    	ADD	IX,SP
                           A   483    ;   19	    sprintf(buffer, "%s", _listHeader);
                           A   484    .LINE 19
                           A   485    
04447E 01 EA FE 06         A   486    	LD	BC,_buffer
044482 ED43 AE FF 06       A   487    	LD	(___print_out),BC
044487 01 CE 5C 04         A   488    	LD	BC,___print_sputch
04448B ED43 EF 81 04       A   489    	LD	(___print_xputch),BC
044490 01 C5 81 04         A   490    	LD	BC,__listHeader
044494 C5                  A   491    	PUSH	BC
044495 CD FA 5A 04         A   492    	CALL	___print_sendstring
044499 C1                  A   493    	POP	BC
04449A 01000000            A   494    	LD	BC,0
04449E C5                  A   495    	PUSH	BC
04449F CD CE 5C 04         A   496    	CALL	___print_sputch
0444A3 C1                  A   497    	POP	BC
                           A   498    ;   20	    agon_fputs(buffer, FILE_LISTING);
                           A   499    .LINE 20
                           A   500    
0444A4 01050000            A   501    	LD	BC,5
0444A8 C5                  A   502    	PUSH	BC
0444A9 01 EA FE 06         A   503    	LD	BC,_buffer
0444AD C5                  A   504    	PUSH	BC
0444AE CD DF 57 04         A   505    	CALL	_agon_fputs
0444B2 C1                  A   506    	POP	BC
0444B3 C1                  A   507    	POP	BC
                           A   508    ;   21	    if(console) printf("%s", _listHeade
                           A   509    .LINE 21
                           A   510    
0444B4 DD7E06              A   511    	LD	A,(IX+%6)
0444B7 B7                  A   512    	OR	A,A
0444B8 28 13               A   513    	JR	Z,L_1
0444BA 01 88 5C 04         A   514    	LD	BC,___print_uputch
0444BE ED43 EF 81 04       A   515    	LD	(___print_xputch),BC
0444C3 01 C5 81 04         A   516    	LD	BC,__listHeader
0444C7 C5                  A   517    	PUSH	BC
0444C8 CD FA 5A 04         A   518    	CALL	___print_sendstring
0444CC C1                  A   519    	POP	BC
0444CD                     A   520    L_1:
                           A   521    ;   22	    _listFirstline = false;
                           A   522    .LINE 22
                           A   523    
0444CD AF                  A   524    	XOR	A,A
0444CE 32 C4 81 04         A   525    	LD	(__listFirstline),A
                           A   526    ;   23	    _listLine[0] = 0;
                           A   527    .LINE 23
                           A   528    
0444D2 AF                  A   529    	XOR	A,A
0444D3 32 65 FD 06         A   530    	LD	(__listLine),A
                           A   531    ;   24	    _listObjectCount = 0;
                           A   532    .LINE 24
                           A   533    
0444D7 AF                  A   534    	XOR	A,A
0444D8 32 E9 FE 06         A   535    	LD	(__listObjectCount),A
                           A   536    ;   25	}
                           A   537    .LINE 25
                           A   538    
0444DC DDF9                A   539    	LD	SP,IX
0444DE DDE1                A   540    	POP	IX
0444E0 C9                  A   541    	RET	
                           A   542    
                           A   543    
                           A   544    ;**************************** _listInit *******
                           A   545    ;Name                         Addr/Register   S
                           A   546    ;__listObjectCount                   STATIC    
                           A   547    ;__listLine                          STATIC    
                           A   548    ;__listFirstline                     STATIC    
                           A   549    ;___print_uputch                     IMPORT  --
                           A   550    ;_agon_fputs                         IMPORT  --
                           A   551    ;__listHeader                        STATIC    
                           A   552    ;___print_sendstring                 IMPORT  --
                           A   553    ;___print_xputch                     IMPORT    
                           A   554    ;___print_sputch                     IMPORT  --
                           A   555    ;___print_out                        IMPORT    
                           A   556    ;_buffer                             STATIC    
                           A   557    ;console                               IX+6    
                           A   558    
                           A   559    
                           A   560    ; Stack Frame Size: 9 (bytes)
                           A   561    ;       Spill Code: 0 (instruction)
                           A   562    
                           A   563    
                           A   564    .ENDFUNC "listInit",25,"_listInit"
                           A   565    ;   26	
                           A   566    ;   27	void listStartLine(char *line) {
0444E1                     A   567    _listStartLine:
                           A   568    .DEFINE "_listStartLine"
                           A   569    
                           A   570    .VALUE _listStartLine
                           A   571    
                           A   572    .CLASS 2
                           A   573    
                           A   574    .TYPE 65
                           A   575    
                           A   576    .ENDEF
                           A   577    
                           A   578    .BEGFUNC "listStartLine",27,"_listStartLine"
                           A   579    
                           A   580    .LINE 27
                           A   581    
                           A   582    .DEFINE "line"
                           A   583    
                           A   584    .CLASS 65
                           A   585    
                           A   586    .VALUE 6
                           A   587    
                           A   588    .TYPE 34
                           A   589    
                           A   590    .ENDEF
                           A   591    
0444E1 DDE5                A   592    	PUSH	IX
0444E3 DD210000 00         A   593    	LD	IX,0
0444E8 DD39                A   594    	ADD	IX,SP
                           A   595    ;   28	    strcpy(_listLine, line);
                           A   596    .LINE 28
                           A   597    
0444EA DD0706              A   598    	LD	BC,(IX+%6)
0444ED C5                  A   599    	PUSH	BC
0444EE 01 65 FD 06         A   600    	LD	BC,__listLine
0444F2 C5                  A   601    	PUSH	BC
0444F3 CD EE 63 04         A   602    	CALL	_strcpy
0444F7 C1                  A   603    	POP	BC
0444F8 C1                  A   604    	POP	BC
                           A   605    ;   29	    trimRight(_listLine);
                           A   606    .LINE 29
                           A   607    
0444F9 01 65 FD 06         A   608    	LD	BC,__listLine
0444FD C5                  A   609    	PUSH	BC
0444FE CD 16 4F 04         A   610    	CALL	_trimRight
044502 C1                  A   611    	POP	BC
                           A   612    ;   30	    _listAddress = address;
                           A   613    .LINE 30
                           A   614    
044503 ED4B 55 8A 04       A   615    	LD	BC,(_address)
044508 3A 58 8A 04         A   616    	LD	A,(_address+3)
04450C ED43 E5 FD 06       A   617    	LD	(__listAddress),BC
044511 32 E8 FD 06         A   618    	LD	(__listAddress+3),A
                           A   619    ;   31	    _listObjectCount = 0;
                           A   620    .LINE 31
                           A   621    
044515 AF                  A   622    	XOR	A,A
044516 32 E9 FE 06         A   623    	LD	(__listObjectCount),A
                           A   624    ;   32	}
                           A   625    .LINE 32
                           A   626    
04451A DDF9                A   627    	LD	SP,IX
04451C DDE1                A   628    	POP	IX
04451E C9                  A   629    	RET	
                           A   630    
                           A   631    
                           A   632    ;**************************** _listStartLine **
                           A   633    ;Name                         Addr/Register   S
                           A   634    ;__listObjectCount                   STATIC    
                           A   635    ;__listAddress                       STATIC    
                           A   636    ;_address                            IMPORT    
                           A   637    ;_trimRight                          IMPORT  --
                           A   638    ;__listLine                          STATIC    
                           A   639    ;_strcpy                             IMPORT  --
                           A   640    ;line                                  IX+6    
                           A   641    
                           A   642    
                           A   643    ; Stack Frame Size: 9 (bytes)
                           A   644    ;       Spill Code: 0 (instruction)
                           A   645    
                           A   646    
                           A   647    .ENDFUNC "listStartLine",32,"_listStartLine"
                           A   648    ;   33	
                           A   649    ;   34	void listEndLine(bool console) {
04451F                     A   650    _listEndLine:
                           A   651    .DEFINE "_listEndLine"
                           A   652    
                           A   653    .VALUE _listEndLine
                           A   654    
                           A   655    .CLASS 2
                           A   656    
                           A   657    .TYPE 65
                           A   658    
                           A   659    .ENDEF
                           A   660    
                           A   661    .BEGFUNC "listEndLine",34,"_listEndLine"
                           A   662    
                           A   663    .LINE 34
                           A   664    
                           A   665    .DEFINE "console"
                           A   666    
                           A   667    .CLASS 65
                           A   668    
                           A   669    .VALUE 6
                           A   670    
                           A   671    .TYPE 12
                           A   672    
                           A   673    .ENDEF
                           A   674    
                           A   675    .DEFINE "lines"
                           A   676    
                           A   677    .CLASS 65
                           A   678    
                           A   679    .VALUE -1
                           A   680    
                           A   681    .TYPE 12
                           A   682    
                           A   683    .ENDEF
                           A   684    
                           A   685    .DEFINE "linemax"
                           A   686    
                           A   687    .CLASS 65
                           A   688    
                           A   689    .VALUE -2
                           A   690    
                           A   691    .TYPE 12
                           A   692    
                           A   693    .ENDEF
                           A   694    
                           A   695    .DEFINE "objectnum"
                           A   696    
                           A   697    .CLASS 65
                           A   698    
                           A   699    .VALUE -3
                           A   700    
                           A   701    .TYPE 12
                           A   702    
                           A   703    .ENDEF
                           A   704    
                           A   705    .DEFINE "i"
                           A   706    
                           A   707    .CLASS 65
                           A   708    
                           A   709    .VALUE -4
                           A   710    
                           A   711    .TYPE 12
                           A   712    
                           A   713    .ENDEF
                           A   714    
04451F DDE5                A   715    	PUSH	IX
044521 DD210000 00         A   716    	LD	IX,0
044526 DD39                A   717    	ADD	IX,SP
044528 C5                  A   718    	PUSH	BC
044529 3B                  A   719    	DEC	SP
                           A   720    ;   35	    uint8_t i, lines, objectnum;
                           A   721    ;   36	    uint8_t linemax;
                           A   722    ;   37	
                           A   723    ;   38	    linemax = (_listObjectCount / OBJEC
                           A   724    .LINE 38
                           A   725    
04452A 3A E9 FE 06         A   726    	LD	A,(__listObjectCount)
04452E B7ED62              A   727    	UEXT	HL
044531 6F                  A   728    	LD	L,A
044532 01060000            A   729    	LD	BC,6
044536 CD 5C 63 04         A   730    	CALL	__idivs
04453A DD75FE              A   731    	LD	(IX+%FFFFFFFE),L
                           A   732    ;   39	    if(_listObjectCount % OBJECTS_PER_L
                           A   733    .LINE 39
                           A   734    
04453D 3A E9 FE 06         A   735    	LD	A,(__listObjectCount)
044541 B7ED62              A   736    	UEXT	HL
044544 6F                  A   737    	LD	L,A
044545 01060000            A   738    	LD	BC,6
044549 CD 24 5A 04         A   739    	CALL	__irems
04454D CD CF 60 04         A   740    	CALL	__icmpzero
044551 28 03               A   741    	JR	Z,L_7
044553 DD34FE              A   742    	INC	(IX+%FFFFFFFE)
044556                     A   743    L_7:
                           A   744    ;   40	    if(linemax == 0) linemax = 1;
                           A   745    .LINE 40
                           A   746    
044556 DD7EFE              A   747    	LD	A,(IX+%FFFFFFFE)
044559 B7                  A   748    	OR	A,A
04455A 20 04               A   749    	JR	NZ,L_8
04455C DD36FE01            A   750    	LD	(IX+%FFFFFFFE),%1
044560                     A   751    L_8:
                           A   752    ;   41	
                           A   753    ;   42	    objectnum = 0;
                           A   754    .LINE 42
                           A   755    
044560 DD36FD00            A   756    	LD	(IX+%FFFFFFFD),%0
                           A   757    ;   43	    for(lines = 0; lines < linemax; lin
                           A   758    .LINE 43
                           A   759    
044564 DD36FF00            A   760    	LD	(IX+%FFFFFFFF),%0
044568 C3 0F 48 04         A   761    	JR	L_32
04456C                     A   762    L_30:
                           A   763    ;   44	        if(lines == 0) {
                           A   764    .LINE 44
                           A   765    
04456C DD7EFF              A   766    	LD	A,(IX+%FFFFFFFF)
04456F B7                  A   767    	OR	A,A
044570 20 77               A   768    	JR	NZ,L_13
                           A   769    ;   45	            sprintf(buffer, "%06X  ",_l
                           A   770    .LINE 45
                           A   771    
044572 01 EA FE 06         A   772    	LD	BC,_buffer
044576 ED43 AE FF 06       A   773    	LD	(___print_out),BC
04457B 01 CE 5C 04         A   774    	LD	BC,___print_sputch
04457F ED43 EF 81 04       A   775    	LD	(___print_xputch),BC
044584 3E06                A   776    	LD	A,%6
044586 32 9E FF 06         A   777    	LD	(___print_fmt+5),A
04458A 3E60                A   778    	LD	A,%60
04458C 32 9A FF 06         A   779    	LD	(___print_fmt+1),A
044590 3E78                A   780    	LD	A,%78
044592 32 9D FF 06         A   781    	LD	(___print_fmt+4),A
044596 3A E8 FD 06         A   782    	LD	A,(__listAddress+3)
04459A 4F                  A   783    	LD	C,A
04459B 0600                A   784    	LD	B,%0
04459D C5                  A   785    	PUSH	BC
04459E ED4B E5 FD 06       A   786    	LD	BC,(__listAddress)
0445A3 C5                  A   787    	PUSH	BC
0445A4 CD 0E 5D 04         A   788    	CALL	__u_uitoa
0445A8 C1                  A   789    	POP	BC
0445A9 C1                  A   790    	POP	BC
0445AA 01 5D 87 04         A   791    	LD	BC,L__6
0445AE C5                  A   792    	PUSH	BC
0445AF CD FA 5A 04         A   793    	CALL	___print_sendstring
0445B3 C1                  A   794    	POP	BC
0445B4 01000000            A   795    	LD	BC,0
0445B8 C5                  A   796    	PUSH	BC
0445B9 CD CE 5C 04         A   797    	CALL	___print_sputch
0445BD C1                  A   798    	POP	BC
                           A   799    ;   46	            agon_fputs(buffer, FILE_LIS
                           A   800    .LINE 46
                           A   801    
0445BE 01050000            A   802    	LD	BC,5
0445C2 C5                  A   803    	PUSH	BC
0445C3 01 EA FE 06         A   804    	LD	BC,_buffer
0445C7 C5                  A   805    	PUSH	BC
0445C8 CD DF 57 04         A   806    	CALL	_agon_fputs
0445CC C1                  A   807    	POP	BC
0445CD C1                  A   808    	POP	BC
                           A   809    ;   47	            if(console) printf("%s",buf
                           A   810    .LINE 47
                           A   811    
0445CE DD7E06              A   812    	LD	A,(IX+%6)
0445D1 B7                  A   813    	OR	A,A
0445D2 28 64               A   814    	JR	Z,L_24
0445D4 01 88 5C 04         A   815    	LD	BC,___print_uputch
0445D8 ED43 EF 81 04       A   816    	LD	(___print_xputch),BC
0445DD 01 EA FE 06         A   817    	LD	BC,_buffer
0445E1 C5                  A   818    	PUSH	BC
0445E2 CD FA 5A 04         A   819    	CALL	___print_sendstring
0445E6 C1                  A   820    	POP	BC
                           A   821    ;   48	        }
                           A   822    ;   49	        else {
                           A   823    .LINE 49
                           A   824    
0445E7 18 4F               A   825    	JR	L_24
0445E9                     A   826    L_13:
                           A   827    ;   50	            sprintf(buffer, "        ")
                           A   828    .LINE 50
                           A   829    
0445E9 01 EA FE 06         A   830    	LD	BC,_buffer
0445ED ED43 AE FF 06       A   831    	LD	(___print_out),BC
0445F2 01 CE 5C 04         A   832    	LD	BC,___print_sputch
0445F6 ED43 EF 81 04       A   833    	LD	(___print_xputch),BC
0445FB 01 60 87 04         A   834    	LD	BC,L__8
0445FF C5                  A   835    	PUSH	BC
044600 CD FA 5A 04         A   836    	CALL	___print_sendstring
044604 C1                  A   837    	POP	BC
044605 01000000            A   838    	LD	BC,0
044609 C5                  A   839    	PUSH	BC
04460A CD CE 5C 04         A   840    	CALL	___print_sputch
04460E C1                  A   841    	POP	BC
                           A   842    ;   51	            agon_fputs(buffer, FILE_LIS
                           A   843    .LINE 51
                           A   844    
04460F 01050000            A   845    	LD	BC,5
044613 C5                  A   846    	PUSH	BC
044614 01 EA FE 06         A   847    	LD	BC,_buffer
044618 C5                  A   848    	PUSH	BC
044619 CD DF 57 04         A   849    	CALL	_agon_fputs
04461D C1                  A   850    	POP	BC
04461E C1                  A   851    	POP	BC
                           A   852    ;   52	            if(console) printf("%s",buf
                           A   853    .LINE 52
                           A   854    
04461F DD7E06              A   855    	LD	A,(IX+%6)
044622 B7                  A   856    	OR	A,A
044623 28 13               A   857    	JR	Z,L_24
044625 01 88 5C 04         A   858    	LD	BC,___print_uputch
044629 ED43 EF 81 04       A   859    	LD	(___print_xputch),BC
04462E 01 EA FE 06         A   860    	LD	BC,_buffer
044632 C5                  A   861    	PUSH	BC
044633 CD FA 5A 04         A   862    	CALL	___print_sendstring
044637 C1                  A   863    	POP	BC
                           A   864    ;   53	        }
044638                     A   865    L_24:
                           A   866    .LINE 53
                           A   867    
                           A   868    ;   54	        for(i = 0; i < OBJECTS_PER_LINE
                           A   869    .LINE 54
                           A   870    
044638 DD36FC00            A   871    	LD	(IX+%FFFFFFFC),%0
04463C C3 28 47 04         A   872    	JR	L_23
044640                     A   873    L_21:
                           A   874    ;   55	            if(objectnum < _listObjectC
                           A   875    .LINE 55
                           A   876    
044640 DD7EFD              A   877    	LD	A,(IX+%FFFFFFFD)
044643 21 E9 FE 06         A   878    	LD	HL,__listObjectCount
044647 BE                  A   879    	CP	A,(HL)
044648 D2 D6 46 04         A   880    	JR	NC,L_20
                           A   881    ;   56	                sprintf(buffer, "%02X "
                           A   882    .LINE 56
                           A   883    
04464C 01 EA FE 06         A   884    	LD	BC,_buffer
044650 ED43 AE FF 06       A   885    	LD	(___print_out),BC
044655 01 CE 5C 04         A   886    	LD	BC,___print_sputch
044659 ED43 EF 81 04       A   887    	LD	(___print_xputch),BC
04465E 3E02                A   888    	LD	A,%2
044660 32 9E FF 06         A   889    	LD	(___print_fmt+5),A
044664 3E60                A   890    	LD	A,%60
044666 32 9A FF 06         A   891    	LD	(___print_fmt+1),A
04466A 3E78                A   892    	LD	A,%78
04466C 32 9D FF 06         A   893    	LD	(___print_fmt+4),A
044670 DD7EFD              A   894    	LD	A,(IX+%FFFFFFFD)
044673 B7ED62              A   895    	UEXT	HL
044676 6F                  A   896    	LD	L,A
044677 01 E9 FD 06         A   897    	LD	BC,__listObjects
04467B 09                  A   898    	ADD	HL,BC
04467C 7E                  A   899    	LD	A,(HL)
04467D B7ED62              A   900    	UEXT	HL
044680 6F                  A   901    	LD	L,A
044681 E5C1                A   902    	LD	BC,HL
044683 CD 95 63 04         A   903    	CALL	__itol
044687 C5D1                A   904    	LD	DE,BC
044689 4F                  A   905    	LD	C,A
04468A 0600                A   906    	LD	B,%0
04468C C5                  A   907    	PUSH	BC
04468D D5                  A   908    	PUSH	DE
04468E CD 0E 5D 04         A   909    	CALL	__u_uitoa
044692 C1                  A   910    	POP	BC
044693 C1                  A   911    	POP	BC
044694 01200000            A   912    	LD	BC,32
044698 C5                  A   913    	PUSH	BC
044699 CD CE 5C 04         A   914    	CALL	___print_sputch
04469D C1                  A   915    	POP	BC
04469E 01000000            A   916    	LD	BC,0
0446A2 C5                  A   917    	PUSH	BC
0446A3 CD CE 5C 04         A   918    	CALL	___print_sputch
0446A7 C1                  A   919    	POP	BC
                           A   920    ;   57	                agon_fputs(buffer, FILE
                           A   921    .LINE 57
                           A   922    
0446A8 01050000            A   923    	LD	BC,5
0446AC C5                  A   924    	PUSH	BC
0446AD 01 EA FE 06         A   925    	LD	BC,_buffer
0446B1 C5                  A   926    	PUSH	BC
0446B2 CD DF 57 04         A   927    	CALL	_agon_fputs
0446B6 C1                  A   928    	POP	BC
0446B7 C1                  A   929    	POP	BC
                           A   930    ;   58	                if(console) printf("%s"
                           A   931    .LINE 58
                           A   932    
0446B8 DD7E06              A   933    	LD	A,(IX+%6)
0446BB B7                  A   934    	OR	A,A
0446BC 28 13               A   935    	JR	Z,L_17
0446BE 01 88 5C 04         A   936    	LD	BC,___print_uputch
0446C2 ED43 EF 81 04       A   937    	LD	(___print_xputch),BC
0446C7 01 EA FE 06         A   938    	LD	BC,_buffer
0446CB C5                  A   939    	PUSH	BC
0446CC CD FA 5A 04         A   940    	CALL	___print_sendstring
0446D0 C1                  A   941    	POP	BC
0446D1                     A   942    L_17:
                           A   943    ;   59	                objectnum++;
                           A   944    .LINE 59
                           A   945    
0446D1 DD34FD              A   946    	INC	(IX+%FFFFFFFD)
                           A   947    ;   60	            }
                           A   948    ;   61	            else {
                           A   949    .LINE 61
                           A   950    
0446D4 18 4F               A   951    	JR	L_22
0446D6                     A   952    L_20:
                           A   953    ;   62	                sprintf(buffer, "   ");
                           A   954    .LINE 62
                           A   955    
0446D6 01 EA FE 06         A   956    	LD	BC,_buffer
0446DA ED43 AE FF 06       A   957    	LD	(___print_out),BC
0446DF 01 CE 5C 04         A   958    	LD	BC,___print_sputch
0446E3 ED43 EF 81 04       A   959    	LD	(___print_xputch),BC
0446E8 01 69 87 04         A   960    	LD	BC,L__12
0446EC C5                  A   961    	PUSH	BC
0446ED CD FA 5A 04         A   962    	CALL	___print_sendstring
0446F1 C1                  A   963    	POP	BC
0446F2 01000000            A   964    	LD	BC,0
0446F6 C5                  A   965    	PUSH	BC
0446F7 CD CE 5C 04         A   966    	CALL	___print_sputch
0446FB C1                  A   967    	POP	BC
                           A   968    ;   63	                agon_fputs(buffer, FILE
                           A   969    .LINE 63
                           A   970    
0446FC 01050000            A   971    	LD	BC,5
044700 C5                  A   972    	PUSH	BC
044701 01 EA FE 06         A   973    	LD	BC,_buffer
044705 C5                  A   974    	PUSH	BC
044706 CD DF 57 04         A   975    	CALL	_agon_fputs
04470A C1                  A   976    	POP	BC
04470B C1                  A   977    	POP	BC
                           A   978    ;   64	                if(console) printf("%s"
                           A   979    .LINE 64
                           A   980    
04470C DD7E06              A   981    	LD	A,(IX+%6)
04470F B7                  A   982    	OR	A,A
044710 28 13               A   983    	JR	Z,L_22
044712 01 88 5C 04         A   984    	LD	BC,___print_uputch
044716 ED43 EF 81 04       A   985    	LD	(___print_xputch),BC
04471B 01 EA FE 06         A   986    	LD	BC,_buffer
04471F C5                  A   987    	PUSH	BC
044720 CD FA 5A 04         A   988    	CALL	___print_sendstring
044724 C1                  A   989    	POP	BC
                           A   990    ;   65	            }
                           A   991    ;   66	        }
044725                     A   992    L_22:
                           A   993    .LINE 66
                           A   994    
044725 DD34FC              A   995    	INC	(IX+%FFFFFFFC)
044728                     A   996    L_23:
044728 DD7EFC              A   997    	LD	A,(IX+%FFFFFFFC)
04472B FE06                A   998    	CP	A,%6
04472D DA 40 46 04         A   999    	JR	C,L_21
                           A  1000    ;   67	        if(lines == 0) {
                           A  1001    .LINE 67
                           A  1002    
044731 DD7EFF              A  1003    	LD	A,(IX+%FFFFFFFF)
044734 B7                  A  1004    	OR	A,A
044735 C2 BD 47 04         A  1005    	JR	NZ,L_28
                           A  1006    ;   68	            sprintf(buffer, "%04d   %s\
                           A  1007    .LINE 68
                           A  1008    
044739 01 EA FE 06         A  1009    	LD	BC,_buffer
04473D ED43 AE FF 06       A  1010    	LD	(___print_out),BC
044742 01 CE 5C 04         A  1011    	LD	BC,___print_sputch
044746 ED43 EF 81 04       A  1012    	LD	(___print_xputch),BC
04474B 3E04                A  1013    	LD	A,%4
04474D 32 9E FF 06         A  1014    	LD	(___print_fmt+5),A
044751 3E40                A  1015    	LD	A,%40
044753 32 9A FF 06         A  1016    	LD	(___print_fmt+1),A
044757 ED4B 4F 8A 04       A  1017    	LD	BC,(_linenumber)
04475C AF                  A  1018    	XOR	A,A
04475D C5D1                A  1019    	LD	DE,BC
04475F 4F                  A  1020    	LD	C,A
044760 0600                A  1021    	LD	B,%0
044762 C5                  A  1022    	PUSH	BC
044763 D5                  A  1023    	PUSH	DE
044764 CD 62 5D 04         A  1024    	CALL	__u_itoa
044768 C1                  A  1025    	POP	BC
044769 C1                  A  1026    	POP	BC
04476A 01 6D 87 04         A  1027    	LD	BC,L__16
04476E C5                  A  1028    	PUSH	BC
04476F CD FA 5A 04         A  1029    	CALL	___print_sendstring
044773 C1                  A  1030    	POP	BC
044774 01 65 FD 06         A  1031    	LD	BC,__listLine
044778 C5                  A  1032    	PUSH	BC
044779 CD FA 5A 04         A  1033    	CALL	___print_sendstring
04477D C1                  A  1034    	POP	BC
04477E 01 71 87 04         A  1035    	LD	BC,L__17
044782 C5                  A  1036    	PUSH	BC
044783 CD FA 5A 04         A  1037    	CALL	___print_sendstring
044787 C1                  A  1038    	POP	BC
044788 01000000            A  1039    	LD	BC,0
04478C C5                  A  1040    	PUSH	BC
04478D CD CE 5C 04         A  1041    	CALL	___print_sputch
044791 C1                  A  1042    	POP	BC
                           A  1043    ;   69	            agon_fputs(buffer, FILE_LIS
                           A  1044    .LINE 69
                           A  1045    
044792 01050000            A  1046    	LD	BC,5
044796 C5                  A  1047    	PUSH	BC
044797 01 EA FE 06         A  1048    	LD	BC,_buffer
04479B C5                  A  1049    	PUSH	BC
04479C CD DF 57 04         A  1050    	CALL	_agon_fputs
0447A0 C1                  A  1051    	POP	BC
0447A1 C1                  A  1052    	POP	BC
                           A  1053    ;   70	            if(console) printf("%s",buf
                           A  1054    .LINE 70
                           A  1055    
0447A2 DD7E06              A  1056    	LD	A,(IX+%6)
0447A5 B7                  A  1057    	OR	A,A
0447A6 28 64               A  1058    	JR	Z,L_31
0447A8 01 88 5C 04         A  1059    	LD	BC,___print_uputch
0447AC ED43 EF 81 04       A  1060    	LD	(___print_xputch),BC
0447B1 01 EA FE 06         A  1061    	LD	BC,_buffer
0447B5 C5                  A  1062    	PUSH	BC
0447B6 CD FA 5A 04         A  1063    	CALL	___print_sendstring
0447BA C1                  A  1064    	POP	BC
                           A  1065    ;   71	        }
                           A  1066    ;   72	        else {
                           A  1067    .LINE 72
                           A  1068    
0447BB 18 4F               A  1069    	JR	L_31
0447BD                     A  1070    L_28:
                           A  1071    ;   73	            sprintf(buffer, "\n\r");
                           A  1072    .LINE 73
                           A  1073    
0447BD 01 EA FE 06         A  1074    	LD	BC,_buffer
0447C1 ED43 AE FF 06       A  1075    	LD	(___print_out),BC
0447C6 01 CE 5C 04         A  1076    	LD	BC,___print_sputch
0447CA ED43 EF 81 04       A  1077    	LD	(___print_xputch),BC
0447CF 01 74 87 04         A  1078    	LD	BC,L__19
0447D3 C5                  A  1079    	PUSH	BC
0447D4 CD FA 5A 04         A  1080    	CALL	___print_sendstring
0447D8 C1                  A  1081    	POP	BC
0447D9 01000000            A  1082    	LD	BC,0
0447DD C5                  A  1083    	PUSH	BC
0447DE CD CE 5C 04         A  1084    	CALL	___print_sputch
0447E2 C1                  A  1085    	POP	BC
                           A  1086    ;   74	            agon_fputs(buffer, FILE_LIS
                           A  1087    .LINE 74
                           A  1088    
0447E3 01050000            A  1089    	LD	BC,5
0447E7 C5                  A  1090    	PUSH	BC
0447E8 01 EA FE 06         A  1091    	LD	BC,_buffer
0447EC C5                  A  1092    	PUSH	BC
0447ED CD DF 57 04         A  1093    	CALL	_agon_fputs
0447F1 C1                  A  1094    	POP	BC
0447F2 C1                  A  1095    	POP	BC
                           A  1096    ;   75	            if(console) printf("%s",buf
                           A  1097    .LINE 75
                           A  1098    
0447F3 DD7E06              A  1099    	LD	A,(IX+%6)
0447F6 B7                  A  1100    	OR	A,A
0447F7 28 13               A  1101    	JR	Z,L_31
0447F9 01 88 5C 04         A  1102    	LD	BC,___print_uputch
0447FD ED43 EF 81 04       A  1103    	LD	(___print_xputch),BC
044802 01 EA FE 06         A  1104    	LD	BC,_buffer
044806 C5                  A  1105    	PUSH	BC
044807 CD FA 5A 04         A  1106    	CALL	___print_sendstring
04480B C1                  A  1107    	POP	BC
                           A  1108    ;   76	        }
                           A  1109    ;   77	    }
04480C                     A  1110    L_31:
                           A  1111    .LINE 77
                           A  1112    
04480C DD34FF              A  1113    	INC	(IX+%FFFFFFFF)
04480F                     A  1114    L_32:
04480F DD7EFF              A  1115    	LD	A,(IX+%FFFFFFFF)
044812 DDBEFE              A  1116    	CP	A,(IX+%FFFFFFFE)
044815 DA 6C 45 04         A  1117    	JR	C,L_30
                           A  1118    ;   78	}
                           A  1119    .LINE 78
                           A  1120    
044819 DDF9                A  1121    	LD	SP,IX
04481B DDE1                A  1122    	POP	IX
04481D C9                  A  1123    	RET	
                           A  1124    
                           A  1125    
                           A  1126    ;**************************** _listEndLine ****
                           A  1127    ;Name                         Addr/Register   S
                           A  1128    ;__listLine                          STATIC    
                           A  1129    ;_linenumber                         IMPORT    
                           A  1130    ;__u_itoa                            IMPORT  --
                           A  1131    ;__listObjects                       STATIC    
                           A  1132    ;___print_uputch                     IMPORT  --
                           A  1133    ;_agon_fputs                         IMPORT  --
                           A  1134    ;___print_sendstring                 IMPORT  --
                           A  1135    ;__listAddress                       STATIC    
                           A  1136    ;__u_uitoa                           IMPORT  --
                           A  1137    ;___print_fmt                        IMPORT    
                           A  1138    ;___print_xputch                     IMPORT    
                           A  1139    ;___print_sputch                     IMPORT  --
                           A  1140    ;___print_out                        IMPORT    
                           A  1141    ;_buffer                             STATIC    
                           A  1142    ;__listObjectCount                   STATIC    
                           A  1143    ;i                                     IX-4    
                           A  1144    ;objectnum                             IX-3    
                           A  1145    ;linemax                               IX-2    
                           A  1146    ;lines                                 IX-1    
                           A  1147    ;console                               IX+6    
                           A  1148    
                           A  1149    
                           A  1150    ; Stack Frame Size: 13 (bytes)
                           A  1151    ;       Spill Code: 0 (instruction)
                           A  1152    
                           A  1153    
                           A  1154    .ENDFUNC "listEndLine",78,"_listEndLine"
                           A  1155    	SEGMENT STRSECT
04875D                     A  1156    L__6:
04875D 2020                A  1157    	DB	"  "
04875F 00                  A  1158    	DB	0
048760                     A  1159    L__8:
048760 20202020 20202020   A  1160    	DB	"        "
048768 00                  A  1161    	DB	0
048769                     A  1162    L__12:
048769 202020              A  1163    	DB	"   "
04876C 00                  A  1164    	DB	0
04876D                     A  1165    L__16:
04876D 202020              A  1166    	DB	"   "
048770 00                  A  1167    	DB	0
048771                     A  1168    L__17:
048771 0A0D00              A  1169    	DB	10,13,0
048774                     A  1170    L__19:
048774 0A0D00              A  1171    	DB	10,13,0
                           A  1172    	SEGMENT CODE
                           A  1173    ;   79	
                           A  1174    ;   80	void listEmit8bit(uint8_t value) {
04481E                     A  1175    _listEmit8bit:
                           A  1176    .DEFINE "_listEmit8bit"
                           A  1177    
                           A  1178    .VALUE _listEmit8bit
                           A  1179    
                           A  1180    .CLASS 2
                           A  1181    
                           A  1182    .TYPE 65
                           A  1183    
                           A  1184    .ENDEF
                           A  1185    
                           A  1186    .BEGFUNC "listEmit8bit",80,"_listEmit8bit"
                           A  1187    
                           A  1188    .LINE 80
                           A  1189    
                           A  1190    .DEFINE "value"
                           A  1191    
                           A  1192    .CLASS 65
                           A  1193    
                           A  1194    .VALUE 6
                           A  1195    
                           A  1196    .TYPE 12
                           A  1197    
                           A  1198    .ENDEF
                           A  1199    
04481E DDE5                A  1200    	PUSH	IX
044820 DD210000 00         A  1201    	LD	IX,0
044825 DD39                A  1202    	ADD	IX,SP
                           A  1203    ;   81	    _listObjects[_listObjectCount++] = 
                           A  1204    .LINE 81
                           A  1205    
044827 3A E9 FE 06         A  1206    	LD	A,(__listObjectCount)
04482B B7ED62              A  1207    	UEXT	HL
04482E 6F                  A  1208    	LD	L,A
04482F 01 E9 FD 06         A  1209    	LD	BC,__listObjects
044833 09                  A  1210    	ADD	HL,BC
044834 DD7E06              A  1211    	LD	A,(IX+%6)
044837 77                  A  1212    	LD	(HL),A
044838 3A E9 FE 06         A  1213    	LD	A,(__listObjectCount)
04483C 3C                  A  1214    	INC	A
04483D 32 E9 FE 06         A  1215    	LD	(__listObjectCount),A
                           A  1216    .LINE 82
                           A  1217    
044841 DDF9                A  1218    	LD	SP,IX
044843 DDE1                A  1219    	POP	IX
044845 C9                  A  1220    	RET	
                           A  1221    
                           A  1222    
                           A  1223    ;**************************** _listEmit8bit ***
                           A  1224    ;Name                         Addr/Register   S
                           A  1225    ;__listObjectCount                   STATIC    
                           A  1226    ;__listObjects                       STATIC    
                           A  1227    ;value                                 IX+6    
                           A  1228    
                           A  1229    
                           A  1230    ; Stack Frame Size: 9 (bytes)
                           A  1231    ;       Spill Code: 0 (instruction)
                           A  1232    
                           A  1233    
                           A  1234    .ENDFUNC "listEmit8bit",82,"_listEmit8bit"
                           A  1235    	XREF _agon_fputs:ROM
                           A  1236    	XREF _trimRight:ROM
                           A  1237    	XREF _address:ROM
                           A  1238    	XREF _linenumber:ROM
                           A  1239    	XREF _strcpy:ROM
                           A  1240    	XREF __u_uitoa:ROM
                           A  1241    	XREF __u_itoa:ROM
                           A  1242    	XREF ___print_sendstring:ROM
                           A  1243    	XREF ___print_xputch:ROM
                           A  1244    	XREF ___print_sputch:ROM
                           A  1245    	XREF ___print_uputch:ROM
                           A  1246    	XREF ___print_out:ROM
                           A  1247    	XREF ___print_fmt:ROM
                           A  1248    	XREF __idivs:ROM
                           A  1249    	XREF __irems:ROM
                           A  1250    	XREF __itol:ROM
                           A  1251    	XREF __icmpzero:ROM
                           A  1252    	XDEF _listEmit8bit
                           A  1253    	XDEF _listEndLine
                           A  1254    	XDEF _listStartLine
                           A  1255    	XDEF _listInit
                           A  1256    	XDEF _buffer
                           A  1257    	XDEF __listHeader
                           A  1258    	XDEF __listFirstline
                           A  1259    	XDEF __listObjectCount
                           A  1260    	XDEF __listObjects
                           A  1261    	XDEF __listAddress
                           A  1262    	XDEF __listLine
                           A  1263    	END


Errors: 0
Warnings: 0
Lines Assembled: 1264
