Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED01-Mar-23     16:39:41     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\assemble.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",6
                           A    94    .DEFINE "quot"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "rem"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 4
                           A   103    .ENDEF
                           A   104    .ENDREC "NONAME0"
                           A   105    .BEGREC "NONAME1",8
                           A   106    .DEFINE "quot"
                           A   107    .VALUE 0
                           A   108    .CLASS 8
                           A   109    .TYPE 5
                           A   110    .ENDEF
                           A   111    .DEFINE "rem"
                           A   112    .VALUE 4
                           A   113    .CLASS 8
                           A   114    .TYPE 5
                           A   115    .ENDEF
                           A   116    .ENDREC "NONAME1"
                           A   117    .BEGREC "header",6
                           A   118    .DEFINE "s"
                           A   119    .VALUE 0
                           A   120    .CLASS 11
                           A   121    .TAG "NONAME2"
                           A   122    .TYPE 8
                           A   123    .ENDEF
                           A   124    .DEFINE "x"
                           A   125    .VALUE 0
                           A   126    .CLASS 11
                           A   127    .TYPE 2
                           A   128    .ENDEF
                           A   129    .ENDREC "header"
                           A   130    .BEGREC "NONAME2",6
                           A   131    .DEFINE "ptr"
                           A   132    .VALUE 0
                           A   133    .CLASS 8
                           A   134    .TAG "header"
                           A   135    .TYPE 40
                           A   136    .ENDEF
                           A   137    .DEFINE "size"
                           A   138    .VALUE 3
                           A   139    .CLASS 8
                           A   140    .TYPE 14
                           A   141    .ENDEF
                           A   142    .ENDREC "NONAME2"
                           A   143    .BEGREC "NONAME3",15
                           A   144    .DEFINE "reg"
                           A   145    .VALUE 0
                           A   146    .CLASS 8
                           A   147    .TYPE 4
                           A   148    .ENDEF
                           A   149    .DEFINE "reg_index"
                           A   150    .VALUE 3
                           A   151    .CLASS 8
                           A   152    .TYPE 12
                           A   153    .ENDEF
                           A   154    .DEFINE "indirect"
                           A   155    .VALUE 4
                           A   156    .CLASS 8
                           A   157    .TYPE 12
                           A   158    .ENDEF
                           A   159    .DEFINE "cc"
                           A   160    .VALUE 5
                           A   161    .CLASS 8
                           A   162    .TYPE 12
                           A   163    .ENDEF
                           A   164    .DEFINE "cc_index"
                           A   165    .VALUE 6
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "displacement"
                           A   170    .VALUE 7
                           A   171    .CLASS 8
                           A   172    .TYPE 3
                           A   173    .ENDEF
                           A   174    .DEFINE "displacement_provided"
                           A   175    .VALUE 9
                           A   176    .CLASS 8
                           A   177    .TYPE 12
                           A   178    .ENDEF
                           A   179    .DEFINE "immediate_provided"
                           A   180    .VALUE 10
                           A   181    .CLASS 8
                           A   182    .TYPE 12
                           A   183    .ENDEF
                           A   184    .DEFINE "immediate"
                           A   185    .VALUE 11
                           A   186    .CLASS 8
                           A   187    .TYPE 4
                           A   188    .ENDEF
                           A   189    .DEFINE "wasLabel"
                           A   190    .VALUE 14
                           A   191    .CLASS 8
                           A   192    .TYPE 12
                           A   193    .ENDEF
                           A   194    .ENDREC "NONAME3"
                           A   195    .BEGREC "NONAME4",4
                           A   196    .DEFINE "suffix"
                           A   197    .VALUE 0
                           A   198    .CLASS 8
                           A   199    .TYPE 12
                           A   200    .ENDEF
                           A   201    .DEFINE "prefix1"
                           A   202    .VALUE 1
                           A   203    .CLASS 8
                           A   204    .TYPE 12
                           A   205    .ENDEF
                           A   206    .DEFINE "prefix2"
                           A   207    .VALUE 2
                           A   208    .CLASS 8
                           A   209    .TYPE 12
                           A   210    .ENDEF
                           A   211    .DEFINE "opcode"
                           A   212    .VALUE 3
                           A   213    .CLASS 8
                           A   214    .TYPE 12
                           A   215    .ENDEF
                           A   216    .ENDREC "NONAME4"
                           A   217    .BEGREC "NONAME5",16
                           A   218    .DEFINE "operandA"
                           A   219    .VALUE 0
                           A   220    .CLASS 8
                           A   221    .TYPE 4
                           A   222    .ENDEF
                           A   223    .DEFINE "operandB"
                           A   224    .VALUE 3
                           A   225    .CLASS 8
                           A   226    .TYPE 4
                           A   227    .ENDEF
                           A   228    .DEFINE "ddfdpermitted"
                           A   229    .VALUE 6
                           A   230    .CLASS 8
                           A   231    .TYPE 12
                           A   232    .ENDEF
                           A   233    .DEFINE "transformA"
                           A   234    .VALUE 7
                           A   235    .CLASS 8
                           A   236    .TYPE 4
                           A   237    .ENDEF
                           A   238    .DEFINE "transformB"
                           A   239    .VALUE 10
                           A   240    .CLASS 8
                           A   241    .TYPE 4
                           A   242    .ENDEF
                           A   243    .DEFINE "prefix"
                           A   244    .VALUE 13
                           A   245    .CLASS 8
                           A   246    .TYPE 12
                           A   247    .ENDEF
                           A   248    .DEFINE "opcode"
                           A   249    .VALUE 14
                           A   250    .CLASS 8
                           A   251    .TYPE 12
                           A   252    .ENDEF
                           A   253    .DEFINE "adl"
                           A   254    .VALUE 15
                           A   255    .CLASS 8
                           A   256    .TYPE 12
                           A   257    .ENDEF
                           A   258    .ENDREC "NONAME5"
                           A   259    .BEGREC "NONAME6",17
                           A   260    .DEFINE "name"
                           A   261    .VALUE 0
                           A   262    .CLASS 8
                           A   263    .DIM 8
                           A   264    .TYPE 98
                           A   265    .ENDEF
                           A   266    .DEFINE "type"
                           A   267    .VALUE 8
                           A   268    .CLASS 8
                           A   269    .TYPE 12
                           A   270    .ENDEF
                           A   271    .DEFINE "asmtype"
                           A   272    .VALUE 9
                           A   273    .CLASS 8
                           A   274    .TYPE 12
                           A   275    .ENDEF
                           A   276    .DEFINE "listnumber"
                           A   277    .VALUE 10
                           A   278    .CLASS 8
                           A   279    .TYPE 12
                           A   280    .ENDEF
                           A   281    .DEFINE "list"
                           A   282    .VALUE 11
                           A   283    .CLASS 8
                           A   284    .TAG "NONAME5"
                           A   285    .TYPE 40
                           A   286    .ENDEF
                           A   287    .DEFINE "asmargument"
                           A   288    .VALUE 14
                           A   289    .CLASS 8
                           A   290    .TYPE 4
                           A   291    .ENDEF
                           A   292    .ENDREC "NONAME6"
                           A   293    .BEGREC "NONAME7",6
                           A   294    .DEFINE "type"
                           A   295    .VALUE 0
                           A   296    .CLASS 8
                           A   297    .TYPE 4
                           A   298    .ENDEF
                           A   299    .DEFINE "match"
                           A   300    .VALUE 3
                           A   301    .CLASS 8
                           A   302    .TYPE 556
                           A   303    .ENDEF
                           A   304    .ENDREC "NONAME7"
                           A   305    .BEGREC "NONAME8",6
                           A   306    .DEFINE "name"
                           A   307    .VALUE 0
                           A   308    .CLASS 8
                           A   309    .TYPE 34
                           A   310    .ENDEF
                           A   311    .DEFINE "address"
                           A   312    .VALUE 3
                           A   313    .CLASS 8
                           A   314    .TYPE 4
                           A   315    .ENDEF
                           A   316    .ENDREC "NONAME8"
                           A   317    .BEGREC "NONAME9",4
                           A   318    .DEFINE "defined"
                           A   319    .VALUE 0
                           A   320    .CLASS 8
                           A   321    .TYPE 12
                           A   322    .ENDEF
                           A   323    .DEFINE "address"
                           A   324    .VALUE 1
                           A   325    .CLASS 8
                           A   326    .TYPE 4
                           A   327    .ENDEF
                           A   328    .ENDREC "NONAME9"
                           A   329    .BEGREC "NONAME10",264
                           A   330    .DEFINE "current_instruction"
                           A   331    .VALUE 0
                           A   332    .CLASS 8
                           A   333    .TAG "NONAME6"
                           A   334    .TYPE 40
                           A   335    .ENDEF
                           A   336    .DEFINE "next"
                           A   337    .VALUE 3
                           A   338    .CLASS 8
                           A   339    .TYPE 34
                           A   340    .ENDEF
                           A   341    .DEFINE "label"
                           A   342    .VALUE 6
                           A   343    .CLASS 8
                           A   344    .DIM 32
                           A   345    .TYPE 98
                           A   346    .ENDEF
                           A   347    .DEFINE "mnemonic"
                           A   348    .VALUE 38
                           A   349    .CLASS 8
                           A   350    .DIM 16
                           A   351    .TYPE 98
                           A   352    .ENDEF
                           A   353    .DEFINE "suffix"
                           A   354    .VALUE 54
                           A   355    .CLASS 8
                           A   356    .DIM 16
                           A   357    .TYPE 98
                           A   358    .ENDEF
                           A   359    .DEFINE "operand1"
                           A   360    .VALUE 70
                           A   361    .CLASS 8
                           A   362    .DIM 32
                           A   363    .TYPE 98
                           A   364    .ENDEF
                           A   365    .DEFINE "operand2"
                           A   366    .VALUE 102
                           A   367    .CLASS 8
                           A   368    .DIM 32
                           A   369    .TYPE 98
                           A   370    .ENDEF
                           A   371    .DEFINE "comment"
                           A   372    .VALUE 134
                           A   373    .CLASS 8
                           A   374    .DIM 128
                           A   375    .TYPE 98
                           A   376    .ENDEF
                           A   377    .DEFINE "size"
                           A   378    .VALUE 262
                           A   379    .CLASS 8
                           A   380    .TYPE 13
                           A   381    .ENDEF
                           A   382    .ENDREC "NONAME10"
                           A   383    .BEGREC "NONAME11",133
                           A   384    .DEFINE "start"
                           A   385    .VALUE 0
                           A   386    .CLASS 8
                           A   387    .DIM 128
                           A   388    .TYPE 98
                           A   389    .ENDEF
                           A   390    .DEFINE "length"
                           A   391    .VALUE 128
                           A   392    .CLASS 8
                           A   393    .TYPE 12
                           A   394    .ENDEF
                           A   395    .DEFINE "next"
                           A   396    .VALUE 129
                           A   397    .CLASS 8
                           A   398    .TYPE 34
                           A   399    .ENDEF
                           A   400    .DEFINE "terminator"
                           A   401    .VALUE 132
                           A   402    .CLASS 8
                           A   403    .TYPE 2
                           A   404    .ENDEF
                           A   405    .ENDREC "NONAME11"
                           A   406    .BEGREC "NONAME12",67
                           A   407    .DEFINE "linenumber"
                           A   408    .VALUE 0
                           A   409    .CLASS 8
                           A   410    .TYPE 13
                           A   411    .ENDEF
                           A   412    .DEFINE "fp"
                           A   413    .VALUE 2
                           A   414    .CLASS 8
                           A   415    .TYPE 12
                           A   416    .ENDEF
                           A   417    .DEFINE "filename"
                           A   418    .VALUE 3
                           A   419    .CLASS 8
                           A   420    .DIM 64
                           A   421    .TYPE 98
                           A   422    .ENDEF
                           A   423    .ENDREC "NONAME12"
                           A   424    ;    1	#include <stdio.h>
                           A   425    ;    2	#include <string.h>
                           A   426    ;    3	#include <stdlib.h>
                           A   427    ;    4	#include <ctype.h>
                           A   428    ;    5	#include <stdint.h>
                           A   429    ;    6	#include <stdarg.h>
                           A   430    ;    7	#include "assemble.h"
                           A   431    ;    8	#include "globals.h"
                           A   432    ;    9	#include "utils.h"
                           A   433    ;   10	#include "label.h"
                           A   434    ;   11	#include "str2num.h"
                           A   435    ;   12	#include "listing.h"
                           A   436    ;   13	#include "filestack.h"
                           A   437    ;   14	#include "stdint.h"
                           A   438    ;   15	#include "mos-interface.h"
                           A   439    ;   16	
                           A   440    ;   17	void empty_operand(operand *op) {
040442                     A   441    _empty_operand:
                           A   442    .DEFINE "_empty_operand"
                           A   443    
                           A   444    .VALUE _empty_operand
                           A   445    
                           A   446    .CLASS 2
                           A   447    
                           A   448    .TYPE 65
                           A   449    
                           A   450    .ENDEF
                           A   451    
                           A   452    .BEGFUNC "empty_operand",17,"_empty_operand"
                           A   453    
                           A   454    .LINE 17
                           A   455    
                           A   456    .DEFINE "op"
                           A   457    
                           A   458    .CLASS 65
                           A   459    
                           A   460    .VALUE 6
                           A   461    
                           A   462    .TAG "NONAME3"
                           A   463    
                           A   464    .TYPE 40
                           A   465    
                           A   466    .ENDEF
                           A   467    
040442 DDE5                A   468    	PUSH	IX
040444 DD210000 00         A   469    	LD	IX,0
040449 DD39                A   470    	ADD	IX,SP
                           A   471    ;   18	    op->reg = R_NONE;
                           A   472    .LINE 18
                           A   473    
04044B 01000000            A   474    	LD	BC,0
04044F DD3106              A   475    	LD	IY,(IX+%6)
040452 FD0F00              A   476    	LD	(IY+%0),BC
                           A   477    ;   19	    op->reg_index = 0;
                           A   478    .LINE 19
                           A   479    
040455 FD360300            A   480    	LD	(IY+%3),%0
                           A   481    ;   20	    op->cc = false;
                           A   482    .LINE 20
                           A   483    
040459 FD360500            A   484    	LD	(IY+%5),%0
                           A   485    ;   21	    op->cc_index = 0;
                           A   486    .LINE 21
                           A   487    
04045D FD360600            A   488    	LD	(IY+%6),%0
                           A   489    ;   22	    op->displacement = 0;
                           A   490    .LINE 22
                           A   491    
040461 FD360700            A   492    	LD	(IY+%7),%0
040465 FD360800            A   493    	LD	(IY+%8),%0
                           A   494    ;   23	    op->displacement_provided = false;
                           A   495    .LINE 23
                           A   496    
040469 FD360900            A   497    	LD	(IY+%9),%0
                           A   498    ;   24	    op->immediate = 0;
                           A   499    .LINE 24
                           A   500    
04046D FD0F0B              A   501    	LD	(IY+%B),BC
                           A   502    ;   25	    op->immediate_provided = false;
                           A   503    .LINE 25
                           A   504    
040470 FD360A00            A   505    	LD	(IY+%A),%0
                           A   506    ;   26	    op->wasLabel = false;
                           A   507    .LINE 26
                           A   508    
040474 FD360E00            A   509    	LD	(IY+%E),%0
                           A   510    ;   27	}
                           A   511    .LINE 27
                           A   512    
040478 DDF9                A   513    	LD	SP,IX
04047A DDE1                A   514    	POP	IX
04047C C9                  A   515    	RET	
                           A   516    
                           A   517    
                           A   518    ;**************************** _empty_operand **
                           A   519    ;Name                         Addr/Register   S
                           A   520    ;op                                    IX+6    
                           A   521    
                           A   522    
                           A   523    ; Stack Frame Size: 9 (bytes)
                           A   524    ;       Spill Code: 0 (instruction)
                           A   525    
                           A   526    
                           A   527    .ENDFUNC "empty_operand",27,"_empty_operand"
                           A   528    ;   28	
                           A   529    ;   29	void advanceLocalLabel(void) {
04047D                     A   530    _advanceLocalLabel:
                           A   531    .DEFINE "_advanceLocalLabel"
                           A   532    
                           A   533    .VALUE _advanceLocalLabel
                           A   534    
                           A   535    .CLASS 2
                           A   536    
                           A   537    .TYPE 65
                           A   538    
                           A   539    .ENDEF
                           A   540    
                           A   541    .BEGFUNC "advanceLocalLabel",29,"_advanceLocalL
                           A   542    
04047D DDE5                A   543    	PUSH	IX
04047F DD210000 00         A   544    	LD	IX,0
040484 DD39                A   545    	ADD	IX,SP
                           A   546    ;   30	    if(currentline.label[0] == '@') {
                           A   547    .LINE 30
                           A   548    
040486 3A 65 87 04         A   549    	LD	A,(_currentline+6)
04048A 47                  A   550    	LD	B,A
04048B 17ED62              A   551    	SEXT	HL
04048E 68                  A   552    	LD	L,B
04048F 01400000            A   553    	LD	BC,64
040493 B7                  A   554    	OR	A,A
040494 ED42                A   555    	SBC	HL,BC
040496 20 18               A   556    	JR	NZ,L_3
                           A   557    ;   31	        if(currentline.label[1] == '@')
                           A   558    .LINE 31
                           A   559    
040498 21 65 87 04         A   560    	LD	HL,_currentline+6
04049C 23                  A   561    	INC	HL
04049D 7E                  A   562    	LD	A,(HL)
04049E 47                  A   563    	LD	B,A
04049F 17ED62              A   564    	SEXT	HL
0404A2 68                  A   565    	LD	L,B
0404A3 01400000            A   566    	LD	BC,64
0404A7 B7                  A   567    	OR	A,A
0404A8 ED42                A   568    	SBC	HL,BC
0404AA 20 04               A   569    	JR	NZ,L_3
                           A   570    ;   32	            readAnonymousLabel();
                           A   571    .LINE 32
                           A   572    
0404AC CD 20 3D 04         A   573    	CALL	_readAnonymousLabel
                           A   574    ;   33	        }
                           A   575    ;   34	    }
                           A   576    ;   35	}
0404B0                     A   577    L_3:
                           A   578    .LINE 35
                           A   579    
0404B0 DDF9                A   580    	LD	SP,IX
0404B2 DDE1                A   581    	POP	IX
0404B4 C9                  A   582    	RET	
                           A   583    
                           A   584    
                           A   585    ;**************************** _advanceLocalLabe
                           A   586    ;Name                         Addr/Register   S
                           A   587    ;_readAnonymousLabel                 IMPORT  --
                           A   588    ;_currentline                        IMPORT    
                           A   589    
                           A   590    
                           A   591    ; Stack Frame Size: 6 (bytes)
                           A   592    ;       Spill Code: 0 (instruction)
                           A   593    
                           A   594    
                           A   595    .ENDFUNC "advanceLocalLabel",35,"_advanceLocalL
                           A   596    ;   36	
                           A   597    ;   37	// Get the ascii value from a single 'x
                           A   598    ;   38	uint8_t getAsciiValue(char *string) {
0404B5                     A   599    _getAsciiValue:
                           A   600    .DEFINE "_getAsciiValue"
                           A   601    
                           A   602    .VALUE _getAsciiValue
                           A   603    
                           A   604    .CLASS 2
                           A   605    
                           A   606    .TYPE 76
                           A   607    
                           A   608    .ENDEF
                           A   609    
                           A   610    .BEGFUNC "getAsciiValue",38,"_getAsciiValue"
                           A   611    
                           A   612    .LINE 38
                           A   613    
                           A   614    .DEFINE "string"
                           A   615    
                           A   616    .CLASS 65
                           A   617    
                           A   618    .VALUE 6
                           A   619    
                           A   620    .TYPE 34
                           A   621    
                           A   622    .ENDEF
                           A   623    
                           A   624    .DEFINE "len"
                           A   625    
                           A   626    .CLASS 65
                           A   627    
                           A   628    .VALUE -1
                           A   629    
                           A   630    .TYPE 12
                           A   631    
                           A   632    .ENDEF
                           A   633    
0404B5 DDE5                A   634    	PUSH	IX
0404B7 DD210000 00         A   635    	LD	IX,0
0404BC DD39                A   636    	ADD	IX,SP
0404BE 3B                  A   637    	DEC	SP
                           A   638    ;   39	    uint8_t len = strlen(string);
                           A   639    .LINE 39
                           A   640    
0404BF DD0706              A   641    	LD	BC,(IX+%6)
0404C2 C5                  A   642    	PUSH	BC
0404C3 CD 41 5A 04         A   643    	CALL	_strlen
0404C7 C1                  A   644    	POP	BC
0404C8 DD75FF              A   645    	LD	(IX+%FFFFFFFF),L
                           A   646    ;   40	
                           A   647    ;   41	    if((len == 3) || (len == 4)) {
                           A   648    .LINE 41
                           A   649    
0404CB DD7EFF              A   650    	LD	A,(IX+%FFFFFFFF)
0404CE FE03                A   651    	CP	A,%3
0404D0 28 09               A   652    	JR	Z,L_19
0404D2 DD7EFF              A   653    	LD	A,(IX+%FFFFFFFF)
0404D5 FE04                A   654    	CP	A,%4
0404D7 C2 8F 05 04         A   655    	JR	NZ,L_20
0404DB                     A   656    L_19:
                           A   657    ;   42	        if(*string == '\'') {
                           A   658    .LINE 42
                           A   659    
0404DB DD2706              A   660    	LD	HL,(IX+%6)
0404DE 7E                  A   661    	LD	A,(HL)
0404DF 47                  A   662    	LD	B,A
0404E0 17ED62              A   663    	SEXT	HL
0404E3 68                  A   664    	LD	L,B
0404E4 01270000            A   665    	LD	BC,39
0404E8 B7                  A   666    	OR	A,A
0404E9 ED42                A   667    	SBC	HL,BC
0404EB C2 8F 05 04         A   668    	JR	NZ,L_20
                           A   669    ;   43	            if((len == 4) && (string[3]
                           A   670    .LINE 43
                           A   671    
0404EF DD7EFF              A   672    	LD	A,(IX+%FFFFFFFF)
0404F2 FE04                A   673    	CP	A,%4
0404F4 20 76               A   674    	JR	NZ,L_17
0404F6 DD3106              A   675    	LD	IY,(IX+%6)
0404F9 ED2303              A   676    	LEA	HL,IY+%3
0404FC 7E                  A   677    	LD	A,(HL)
0404FD 47                  A   678    	LD	B,A
0404FE 17ED62              A   679    	SEXT	HL
040501 68                  A   680    	LD	L,B
040502 01270000            A   681    	LD	BC,39
040506 B7                  A   682    	OR	A,A
040507 ED42                A   683    	SBC	HL,BC
040509 20 61               A   684    	JR	NZ,L_17
04050B DD2706              A   685    	LD	HL,(IX+%6)
04050E 23                  A   686    	INC	HL
04050F 7E                  A   687    	LD	A,(HL)
040510 47                  A   688    	LD	B,A
040511 17ED62              A   689    	SEXT	HL
040514 68                  A   690    	LD	L,B
040515 015C0000            A   691    	LD	BC,92
040519 B7                  A   692    	OR	A,A
04051A ED42                A   693    	SBC	HL,BC
04051C 20 4E               A   694    	JR	NZ,L_17
                           A   695    ;   44	                switch(string[2]) {
                           A   696    .LINE 44
                           A   697    
04051E DD3106              A   698    	LD	IY,(IX+%6)
040521 ED2302              A   699    	LEA	HL,IY+%2
040524 7E                  A   700    	LD	A,(HL)
040525 47                  A   701    	LD	B,A
040526 17ED62              A   702    	SEXT	HL
040529 68                  A   703    	LD	L,B
04052A CD B7 60 04         A   704    	CALL	__case8D
04052E E9                  A   705    	JP	(HL)
04052F                     A   706    L__10:
04052F 0700                A   707    	DW	7
040531 22                  A   708    	DB	34
040532 640504              A   709    	DW24	L_12	
                           A   710    
040535 27                  A   711    	DB	39
040536 680504              A   712    	DW24	L_13	
                           A   713    
040539 5C                  A   714    	DB	92
04053A 600504              A   715    	DW24	L_11	
                           A   716    
04053D 62                  A   717    	DB	98
04053E 5C0504              A   718    	DW24	L_10	
                           A   719    
040541 6E                  A   720    	DB	110
040542 500504              A   721    	DW24	L_7	
                           A   722    
040545 72                  A   723    	DB	114
040546 540504              A   724    	DW24	L_8	
                           A   725    
040549 74                  A   726    	DB	116
04054A 580504              A   727    	DW24	L_9	
                           A   728    
04054D 6C0504              A   729    	DW24	L_17	
                           A   730    
                           A   731    ;   45	                    case 'n': return '\
040550                     A   732    L_7:
                           A   733    .LINE 45
                           A   734    
040550 3E0A                A   735    	LD	A,%A
040552 18 48               A   736    	JR	L_21
                           A   737    ;   46	                    case 'r': return '\
040554                     A   738    L_8:
                           A   739    .LINE 46
                           A   740    
040554 3E0D                A   741    	LD	A,%D
040556 18 44               A   742    	JR	L_21
                           A   743    ;   47	                    case 't': return '\
040558                     A   744    L_9:
                           A   745    .LINE 47
                           A   746    
040558 3E09                A   747    	LD	A,%9
04055A 18 40               A   748    	JR	L_21
                           A   749    ;   48	                    case 'b': return '\
04055C                     A   750    L_10:
                           A   751    .LINE 48
                           A   752    
04055C 3E08                A   753    	LD	A,%8
04055E 18 3C               A   754    	JR	L_21
                           A   755    ;   49	                    case '\\': return '
040560                     A   756    L_11:
                           A   757    .LINE 49
                           A   758    
040560 3E5C                A   759    	LD	A,%5C
040562 18 38               A   760    	JR	L_21
                           A   761    ;   50	                    case '\"': return '
040564                     A   762    L_12:
                           A   763    .LINE 50
                           A   764    
040564 3E22                A   765    	LD	A,%22
040566 18 34               A   766    	JR	L_21
                           A   767    ;   51	                    case '\'': return '
040568                     A   768    L_13:
                           A   769    .LINE 51
                           A   770    
040568 3E27                A   771    	LD	A,%27
04056A 18 30               A   772    	JR	L_21
                           A   773    ;   52	                }
                           A   774    ;   53	            }
04056C                     A   775    L_17:
                           A   776    .LINE 53
                           A   777    
                           A   778    ;   54	            if((len == 3) && (string[2]
                           A   779    .LINE 54
                           A   780    
04056C DD7EFF              A   781    	LD	A,(IX+%FFFFFFFF)
04056F FE03                A   782    	CP	A,%3
040571 20 1C               A   783    	JR	NZ,L_20
040573 DD3106              A   784    	LD	IY,(IX+%6)
040576 ED2302              A   785    	LEA	HL,IY+%2
040579 7E                  A   786    	LD	A,(HL)
04057A 47                  A   787    	LD	B,A
04057B 17ED62              A   788    	SEXT	HL
04057E 68                  A   789    	LD	L,B
04057F 01270000            A   790    	LD	BC,39
040583 B7                  A   791    	OR	A,A
040584 ED42                A   792    	SBC	HL,BC
040586 20 07               A   793    	JR	NZ,L_20
                           A   794    ;   55	                return string[1];
                           A   795    .LINE 55
                           A   796    
040588 DD2706              A   797    	LD	HL,(IX+%6)
04058B 23                  A   798    	INC	HL
04058C 7E                  A   799    	LD	A,(HL)
04058D 18 0D               A   800    	JR	L_21
                           A   801    ;   56	            }
                           A   802    ;   57	        }
                           A   803    ;   58	    }
04058F                     A   804    L_20:
                           A   805    .LINE 58
                           A   806    
                           A   807    ;   59	    error(message[ERROR_ASCIIFORMAT]);
                           A   808    .LINE 59
                           A   809    
04058F 21 AE 64 04         A   810    	LD	HL,_message+108
040593 ED07                A   811    	LD	BC,(HL)
040595 C5                  A   812    	PUSH	BC
040596 CD DC 4B 04         A   813    	CALL	_error
04059A C1                  A   814    	POP	BC
                           A   815    ;   60	    return 0;
                           A   816    .LINE 60
                           A   817    
04059B AF                  A   818    	XOR	A,A
                           A   819    ;   61	}
04059C                     A   820    L_21:
                           A   821    .LINE 61
                           A   822    
04059C DDF9                A   823    	LD	SP,IX
04059E DDE1                A   824    	POP	IX
0405A0 C9                  A   825    	RET	
                           A   826    
                           A   827    
                           A   828    ;**************************** _getAsciiValue **
                           A   829    ;Name                         Addr/Register   S
                           A   830    ;_message                            IMPORT  un
                           A   831    ;_error                              IMPORT  --
                           A   832    ;_strlen                             IMPORT  --
                           A   833    ;len                                   IX-1    
                           A   834    ;string                                IX+6    
                           A   835    
                           A   836    
                           A   837    ; Stack Frame Size: 10 (bytes)
                           A   838    ;       Spill Code: 0 (instruction)
                           A   839    
                           A   840    
                           A   841    .ENDFUNC "getAsciiValue",61,"_getAsciiValue"
                           A   842    ;   62	
                           A   843    ;   63	// Get the value from a sequence of 0-n
                           A   844    ;   64	// Examples:
                           A   845    ;   65	// labela+5
                           A   846    ;   66	// labelb-1
                           A   847    ;   67	// labela+labelb+offset1-1
                           A   848    ;   68	// The string should not contain any sp
                           A   849    ;   69	int24_t getLabelValue(char *string) {
0405A1                     A   850    _getLabelValue:
                           A   851    .DEFINE "_getLabelValue"
                           A   852    
                           A   853    .VALUE _getLabelValue
                           A   854    
                           A   855    .CLASS 2
                           A   856    
                           A   857    .TYPE 68
                           A   858    
                           A   859    .ENDEF
                           A   860    
                           A   861    .BEGFUNC "getLabelValue",69,"_getLabelValue"
                           A   862    
                           A   863    .LINE 69
                           A   864    
                           A   865    .DEFINE "string"
                           A   866    
                           A   867    .CLASS 65
                           A   868    
                           A   869    .VALUE 6
                           A   870    
                           A   871    .TYPE 34
                           A   872    
                           A   873    .ENDEF
                           A   874    
                           A   875    .DEFINE "total"
                           A   876    
                           A   877    .CLASS 65
                           A   878    
                           A   879    .VALUE -3
                           A   880    
                           A   881    .TYPE 4
                           A   882    
                           A   883    .ENDEF
                           A   884    
                           A   885    .DEFINE "operator"
                           A   886    
                           A   887    .CLASS 65
                           A   888    
                           A   889    .VALUE -4
                           A   890    
                           A   891    .TYPE 2
                           A   892    
                           A   893    .ENDEF
                           A   894    
                           A   895    .DEFINE "tmp"
                           A   896    
                           A   897    .CLASS 65
                           A   898    
                           A   899    .VALUE -7
                           A   900    
                           A   901    .TYPE 4
                           A   902    
                           A   903    .ENDEF
                           A   904    
                           A   905    .DEFINE "ptr"
                           A   906    
                           A   907    .CLASS 65
                           A   908    
                           A   909    .VALUE -10
                           A   910    
                           A   911    .TYPE 34
                           A   912    
                           A   913    .ENDEF
                           A   914    
                           A   915    .DEFINE "lbl"
                           A   916    
                           A   917    .CLASS 65
                           A   918    
                           A   919    .VALUE -16
                           A   920    
                           A   921    .TAG "NONAME8"
                           A   922    
                           A   923    .TYPE 40
                           A   924    
                           A   925    .ENDEF
                           A   926    
                           A   927    .DEFINE "token"
                           A   928    
                           A   929    .CLASS 65
                           A   930    
                           A   931    .VALUE -149
                           A   932    
                           A   933    .TAG "NONAME11"
                           A   934    
                           A   935    .TYPE 8
                           A   936    
                           A   937    .ENDEF
                           A   938    
0405A1 DDE5                A   939    	PUSH	IX
0405A3 DD210000 00         A   940    	LD	IX,0
0405A8 DD39                A   941    	ADD	IX,SP
0405AA 216BFFFF            A   942    	LD	HL,-149
0405AE 39                  A   943    	ADD	HL,SP
0405AF F9                  A   944    	LD	SP,HL
                           A   945    ;   70	    int24_t total, tmp;
                           A   946    ;   71	    char operator, *ptr;
                           A   947    ;   72	    label *lbl;
                           A   948    ;   73	    tokentype token;
                           A   949    ;   74	
                           A   950    ;   75	    ptr = string;
                           A   951    .LINE 75
                           A   952    
0405B0 DD0706              A   953    	LD	BC,(IX+%6)
0405B3 DD0FF6              A   954    	LD	(IX+%FFFFFFF6),BC
                           A   955    ;   76	    total = 0;
                           A   956    .LINE 76
                           A   957    
0405B6 01000000            A   958    	LD	BC,0
0405BA DD0FFD              A   959    	LD	(IX+%FFFFFFFD),BC
                           A   960    ;   77	    operator = '+'; // previous operand
                           A   961    .LINE 77
                           A   962    
0405BD DD36FC2B            A   963    	LD	(IX+%FFFFFFFC),%2B
                           A   964    ;   78	    while(ptr) {
                           A   965    .LINE 78
                           A   966    
0405C1 C3 EF 06 04         A   967    	JR	L_42
0405C5                     A   968    L_43:
                           A   969    ;   79	        tmp = 0;
                           A   970    .LINE 79
                           A   971    
0405C5 01000000            A   972    	LD	BC,0
0405C9 DD0FF9              A   973    	LD	(IX+%FFFFFFF9),BC
                           A   974    ;   80	        getOperatorToken(&token, ptr);
                           A   975    .LINE 80
                           A   976    
0405CC DD07F6              A   977    	LD	BC,(IX+%FFFFFFF6)
0405CF C5                  A   978    	PUSH	BC
0405D0 DDE5E1              A   979    	LD	HL,IX
0405D3 016BFFFF            A   980    	LD	BC,-149
0405D7 09                  A   981    	ADD	HL,BC
0405D8 E5C1                A   982    	LD	BC,HL
0405DA C5                  A   983    	PUSH	BC
0405DB CD 46 4F 04         A   984    	CALL	_getOperatorToken
0405DF C1                  A   985    	POP	BC
0405E0 C1                  A   986    	POP	BC
                           A   987    ;   81	        if(notEmpty(token.start)) {
                           A   988    .LINE 81
                           A   989    
0405E1 DDE5E1              A   990    	LD	HL,IX
0405E4 016BFFFF            A   991    	LD	BC,-149
0405E8 09                  A   992    	ADD	HL,BC
0405E9 E5C1                A   993    	LD	BC,HL
0405EB C5                  A   994    	PUSH	BC
0405EC CD C2 4B 04         A   995    	CALL	_notEmpty
0405F0 C1                  A   996    	POP	BC
0405F1 B7                  A   997    	OR	A,A
0405F2 CA 78 06 04         A   998    	JR	Z,L_30
                           A   999    ;   82	            lbl = findLabel(token.start
                           A  1000    .LINE 82
                           A  1001    
0405F6 DDE5E1              A  1002    	LD	HL,IX
0405F9 016BFFFF            A  1003    	LD	BC,-149
0405FD 09                  A  1004    	ADD	HL,BC
0405FE E5C1                A  1005    	LD	BC,HL
040600 C5                  A  1006    	PUSH	BC
040601 CD 65 41 04         A  1007    	CALL	_findLabel
040605 C1                  A  1008    	POP	BC
040606 DD2FF0              A  1009    	LD	(IX+%FFFFFFF0),HL
                           A  1010    ;   83	            if(lbl) tmp = lbl->address;
                           A  1011    .LINE 83
                           A  1012    
040609 CD C5 5D 04         A  1013    	CALL	__icmpzero
04060D 28 0B               A  1014    	JR	Z,L_27
04060F DD31F0              A  1015    	LD	IY,(IX+%FFFFFFF0)
040612 FD0703              A  1016    	LD	BC,(IY+%3)
040615 DD0FF9              A  1017    	LD	(IX+%FFFFFFF9),BC
                           A  1018    ;   84	            else {
                           A  1019    .LINE 84
                           A  1020    
040618 18 5E               A  1021    	JR	L_30
04061A                     A  1022    L_27:
                           A  1023    ;   85	                if(token.start[0] == '\
                           A  1024    .LINE 85
                           A  1025    
04061A DDE5E1              A  1026    	LD	HL,IX
04061D 016BFFFF            A  1027    	LD	BC,-149
040621 09                  A  1028    	ADD	HL,BC
040622 DD2FF3              A  1029    	LD	(IX+%FFFFFFF3),HL
040625 7E                  A  1030    	LD	A,(HL)
040626 47                  A  1031    	LD	B,A
040627 17ED62              A  1032    	SEXT	HL
04062A 68                  A  1033    	LD	L,B
04062B 01270000            A  1034    	LD	BC,39
04062F B7                  A  1035    	OR	A,A
040630 ED42                A  1036    	SBC	HL,BC
040632 20 12               A  1037    	JR	NZ,L_25
040634 DD07F3              A  1038    	LD	BC,(IX+%FFFFFFF3)
040637 C5                  A  1039    	PUSH	BC
040638 CD B5 04 04         A  1040    	CALL	_getAsciiValue
04063C C1                  A  1041    	POP	BC
04063D B7ED62              A  1042    	UEXT	HL
040640 6F                  A  1043    	LD	L,A
040641 DD2FF9              A  1044    	LD	(IX+%FFFFFFF9),HL
                           A  1045    ;   86	                else {
                           A  1046    .LINE 86
                           A  1047    
040644 18 32               A  1048    	JR	L_30
040646                     A  1049    L_25:
                           A  1050    ;   87	                    tmp = str2num(token
                           A  1051    .LINE 87
                           A  1052    
040646 01000000            A  1053    	LD	BC,0
04064A C5                  A  1054    	PUSH	BC
04064B DD07F3              A  1055    	LD	BC,(IX+%FFFFFFF3)
04064E C5                  A  1056    	PUSH	BC
04064F CD AB 47 04         A  1057    	CALL	_str2num
040653 C1                  A  1058    	POP	BC
040654 C1                  A  1059    	POP	BC
040655 DD2FF9              A  1060    	LD	(IX+%FFFFFFF9),HL
                           A  1061    ;   88	                    if(err_str2num && (
                           A  1062    .LINE 88
                           A  1063    
040658 3A 43 FC 06         A  1064    	LD	A,(_err_str2num)
04065C B7                  A  1065    	OR	A,A
04065D 28 19               A  1066    	JR	Z,L_30
04065F 01020000            A  1067    	LD	BC,2
040663 2A 53 87 04         A  1068    	LD	HL,(_pass)
040667 B7                  A  1069    	OR	A,A
040668 ED42                A  1070    	SBC	HL,BC
04066A 20 0C               A  1071    	JR	NZ,L_30
04066C 21 4E 64 04         A  1072    	LD	HL,_message+12
040670 ED07                A  1073    	LD	BC,(HL)
040672 C5                  A  1074    	PUSH	BC
040673 CD DC 4B 04         A  1075    	CALL	_error
040677 C1                  A  1076    	POP	BC
                           A  1077    ;   89	                }
                           A  1078    ;   90	            }
                           A  1079    ;   91	        }
040678                     A  1080    L_30:
                           A  1081    .LINE 91
                           A  1082    
                           A  1083    ;   92	        if(operator == '!') error(messa
                           A  1084    .LINE 92
                           A  1085    
040678 DD7EFC              A  1086    	LD	A,(IX+%FFFFFFFC)
04067B FE21                A  1087    	CP	A,%21
04067D 20 0C               A  1088    	JR	NZ,L_32
04067F 21 B4 64 04         A  1089    	LD	HL,_message+114
040683 ED07                A  1090    	LD	BC,(HL)
040685 C5                  A  1091    	PUSH	BC
040686 CD DC 4B 04         A  1092    	CALL	_error
04068A C1                  A  1093    	POP	BC
04068B                     A  1094    L_32:
                           A  1095    ;   93	        if(operator == '+') total += tm
                           A  1096    .LINE 93
                           A  1097    
04068B DD7EFC              A  1098    	LD	A,(IX+%FFFFFFFC)
04068E FE2B                A  1099    	CP	A,%2B
040690 20 0A               A  1100    	JR	NZ,L_34
040692 DD07F9              A  1101    	LD	BC,(IX+%FFFFFFF9)
040695 DD27FD              A  1102    	LD	HL,(IX+%FFFFFFFD)
040698 09                  A  1103    	ADD	HL,BC
040699 DD2FFD              A  1104    	LD	(IX+%FFFFFFFD),HL
04069C                     A  1105    L_34:
                           A  1106    ;   94	        if(operator == '-') total -= tm
                           A  1107    .LINE 94
                           A  1108    
04069C DD7EFC              A  1109    	LD	A,(IX+%FFFFFFFC)
04069F FE2D                A  1110    	CP	A,%2D
0406A1 20 0C               A  1111    	JR	NZ,L_36
0406A3 DD07F9              A  1112    	LD	BC,(IX+%FFFFFFF9)
0406A6 DD27FD              A  1113    	LD	HL,(IX+%FFFFFFFD)
0406A9 B7                  A  1114    	OR	A,A
0406AA ED42                A  1115    	SBC	HL,BC
0406AC DD2FFD              A  1116    	LD	(IX+%FFFFFFFD),HL
0406AF                     A  1117    L_36:
                           A  1118    ;   95	        if(operator == '<') total = tot
                           A  1119    .LINE 95
                           A  1120    
0406AF DD7EFC              A  1121    	LD	A,(IX+%FFFFFFFC)
0406B2 FE3C                A  1122    	CP	A,%3C
0406B4 20 0D               A  1123    	JR	NZ,L_38
0406B6 DD27FD              A  1124    	LD	HL,(IX+%FFFFFFFD)
0406B9 DD07F9              A  1125    	LD	BC,(IX+%FFFFFFF9)
0406BC CD 2B 61 04         A  1126    	CALL	__ishl
0406C0 DD2FFD              A  1127    	LD	(IX+%FFFFFFFD),HL
0406C3                     A  1128    L_38:
                           A  1129    ;   96	        if(operator == '>') total = tot
                           A  1130    .LINE 96
                           A  1131    
0406C3 DD7EFC              A  1132    	LD	A,(IX+%FFFFFFFC)
0406C6 FE3E                A  1133    	CP	A,%3E
0406C8 20 0D               A  1134    	JR	NZ,L_39
0406CA DD27FD              A  1135    	LD	HL,(IX+%FFFFFFFD)
0406CD DD07F9              A  1136    	LD	BC,(IX+%FFFFFFF9)
0406D0 CD 87 57 04         A  1137    	CALL	__ishrs
0406D4 DD2FFD              A  1138    	LD	(IX+%FFFFFFFD),HL
0406D7                     A  1139    L_39:
                           A  1140    ;   97	        operator = token.terminator;
                           A  1141    .LINE 97
                           A  1142    
0406D7 DD7EEF              A  1143    	LD	A,(IX+%FFFFFFEF)
0406DA DD77FC              A  1144    	LD	(IX+%FFFFFFFC),A
                           A  1145    ;   98	
                           A  1146    ;   99	        if(operator) ptr = token.next;
                           A  1147    .LINE 99
                           A  1148    
0406DD B7                  A  1149    	OR	A,A
0406DE 28 08               A  1150    	JR	Z,L_41
0406E0 DD07EC              A  1151    	LD	BC,(IX+%FFFFFFEC)
0406E3 DD0FF6              A  1152    	LD	(IX+%FFFFFFF6),BC
                           A  1153    ;  100	        else ptr = NULL;
                           A  1154    .LINE 100
                           A  1155    
0406E6 18 07               A  1156    	JR	L_42
0406E8                     A  1157    L_41:
0406E8 01000000            A  1158    	LD	BC,0
0406EC DD0FF6              A  1159    	LD	(IX+%FFFFFFF6),BC
                           A  1160    ;  101	    }
0406EF                     A  1161    L_42:
                           A  1162    .LINE 101
                           A  1163    
0406EF DD27F6              A  1164    	LD	HL,(IX+%FFFFFFF6)
0406F2 CD C5 5D 04         A  1165    	CALL	__icmpzero
0406F6 C2 C5 05 04         A  1166    	JR	NZ,L_43
                           A  1167    ;  102	    return total;
                           A  1168    .LINE 102
                           A  1169    
0406FA DD27FD              A  1170    	LD	HL,(IX+%FFFFFFFD)
                           A  1171    ;  103	}
                           A  1172    .LINE 103
                           A  1173    
0406FD DDF9                A  1174    	LD	SP,IX
0406FF DDE1                A  1175    	POP	IX
040701 C9                  A  1176    	RET	
                           A  1177    
                           A  1178    
                           A  1179    ;**************************** _getLabelValue **
                           A  1180    ;Name                         Addr/Register   S
                           A  1181    ;_message                            IMPORT  un
                           A  1182    ;_error                              IMPORT  --
                           A  1183    ;_pass                               IMPORT    
                           A  1184    ;_err_str2num                        IMPORT    
                           A  1185    ;_str2num                            IMPORT  --
                           A  1186    ;_findLabel                          IMPORT  --
                           A  1187    ;_notEmpty                           IMPORT  --
                           A  1188    ;_getOperatorToken                   IMPORT  --
                           A  1189    ;token                               IX-149    
                           A  1190    ;lbl                                  IX-16    
                           A  1191    ;G_1                                  IX-13    
                           A  1192    ;ptr                                  IX-10    
                           A  1193    ;tmp                                   IX-7    
                           A  1194    ;operator                              IX-4    
                           A  1195    ;total                                 IX-3    
                           A  1196    ;string                                IX+6    
                           A  1197    
                           A  1198    
                           A  1199    ; Stack Frame Size: 158 (bytes)
                           A  1200    ;       Spill Code: 0 (instruction)
                           A  1201    
                           A  1202    
                           A  1203    .ENDFUNC "getLabelValue",103,"_getLabelValue"
                           A  1204    ;  104	
                           A  1205    ;  105	// parses the given string to the opera
                           A  1206    ;  106	// will destruct parts of the original 
                           A  1207    ;  107	void parse_operand(char *string, operan
040702                     A  1208    _parse_operand:
                           A  1209    .DEFINE "_parse_operand"
                           A  1210    
                           A  1211    .VALUE _parse_operand
                           A  1212    
                           A  1213    .CLASS 2
                           A  1214    
                           A  1215    .TYPE 65
                           A  1216    
                           A  1217    .ENDEF
                           A  1218    
                           A  1219    .BEGFUNC "parse_operand",107,"_parse_operand"
                           A  1220    
                           A  1221    .LINE 107
                           A  1222    
                           A  1223    .DEFINE "string"
                           A  1224    
                           A  1225    .CLASS 65
                           A  1226    
                           A  1227    .VALUE 6
                           A  1228    
                           A  1229    .TYPE 34
                           A  1230    
                           A  1231    .ENDEF
                           A  1232    
                           A  1233    .DEFINE "operand"
                           A  1234    
                           A  1235    .CLASS 65
                           A  1236    
                           A  1237    .VALUE 9
                           A  1238    
                           A  1239    .TAG "NONAME3"
                           A  1240    
                           A  1241    .TYPE 40
                           A  1242    
                           A  1243    .ENDEF
                           A  1244    
                           A  1245    .DEFINE "ptr"
                           A  1246    
                           A  1247    .CLASS 65
                           A  1248    
                           A  1249    .VALUE -3
                           A  1250    
                           A  1251    .TYPE 34
                           A  1252    
                           A  1253    .ENDEF
                           A  1254    
                           A  1255    .DEFINE "len"
                           A  1256    
                           A  1257    .CLASS 65
                           A  1258    
                           A  1259    .VALUE -4
                           A  1260    
                           A  1261    .TYPE 12
                           A  1262    
                           A  1263    .ENDEF
                           A  1264    
040702 DDE5                A  1265    	PUSH	IX
040704 DD210000 00         A  1266    	LD	IX,0
040709 DD39                A  1267    	ADD	IX,SP
04070B ED22CC              A  1268    	LEA	HL,IX+%FFFFFFCC
04070E F9                  A  1269    	LD	SP,HL
                           A  1270    ;  108	    char *ptr = string;
                           A  1271    .LINE 108
                           A  1272    
04070F DD0706              A  1273    	LD	BC,(IX+%6)
040712 DD0FFD              A  1274    	LD	(IX+%FFFFFFFD),BC
                           A  1275    ;  109	    uint8_t len = strlen(string);
                           A  1276    .LINE 109
                           A  1277    
040715 DD0706              A  1278    	LD	BC,(IX+%6)
040718 C5                  A  1279    	PUSH	BC
040719 CD 41 5A 04         A  1280    	CALL	_strlen
04071D C1                  A  1281    	POP	BC
04071E DD75FC              A  1282    	LD	(IX+%FFFFFFFC),L
                           A  1283    ;  110	
                           A  1284    ;  111	    // direct or indirect
                           A  1285    ;  112	    if(*ptr == '(') {
                           A  1286    .LINE 112
                           A  1287    
040721 DD2706              A  1288    	LD	HL,(IX+%6)
040724 7E                  A  1289    	LD	A,(HL)
040725 47                  A  1290    	LD	B,A
040726 17ED62              A  1291    	SEXT	HL
040729 68                  A  1292    	LD	L,B
04072A 01280000            A  1293    	LD	BC,40
04072E B7                  A  1294    	OR	A,A
04072F ED42                A  1295    	SBC	HL,BC
040731 20 41               A  1296    	JR	NZ,L_51
                           A  1297    ;  113	        operand->indirect = true;
                           A  1298    .LINE 113
                           A  1299    
040733 DD3109              A  1300    	LD	IY,(IX+%9)
040736 FD360401            A  1301    	LD	(IY+%4),%1
                           A  1302    ;  114	        // find closing bracket or erro
                           A  1303    ;  115	        if(string[len-1] == ')') string
                           A  1304    .LINE 115
                           A  1305    
04073A DD7EFC              A  1306    	LD	A,(IX+%FFFFFFFC)
04073D B7ED62              A  1307    	UEXT	HL
040740 6F                  A  1308    	LD	L,A
040741 DD0706              A  1309    	LD	BC,(IX+%6)
040744 09                  A  1310    	ADD	HL,BC
040745 2B                  A  1311    	DEC	HL
040746 DD2FF9              A  1312    	LD	(IX+%FFFFFFF9),HL
040749 7E                  A  1313    	LD	A,(HL)
04074A 47                  A  1314    	LD	B,A
04074B 17ED62              A  1315    	SEXT	HL
04074E 68                  A  1316    	LD	L,B
04074F 01290000            A  1317    	LD	BC,41
040753 B7                  A  1318    	OR	A,A
040754 ED42                A  1319    	SBC	HL,BC
040756 20 07               A  1320    	JR	NZ,L_47
040758 DD27F9              A  1321    	LD	HL,(IX+%FFFFFFF9)
04075B 3600                A  1322    	LD	(HL),%0
                           A  1323    ;  116	        else error(message[ERROR_CLOSIN
                           A  1324    .LINE 116
                           A  1325    
04075D 18 0C               A  1326    	JR	L_48
04075F                     A  1327    L_47:
04075F 21 48 64 04         A  1328    	LD	HL,_message+6
040763 ED07                A  1329    	LD	BC,(HL)
040765 C5                  A  1330    	PUSH	BC
040766 CD DC 4B 04         A  1331    	CALL	_error
04076A C1                  A  1332    	POP	BC
04076B                     A  1333    L_48:
                           A  1334    ;  117	        ptr = &string[1];
                           A  1335    .LINE 117
                           A  1336    
04076B DD0706              A  1337    	LD	BC,(IX+%6)
04076E 03                  A  1338    	INC	BC
04076F DD0FFD              A  1339    	LD	(IX+%FFFFFFFD),BC
                           A  1340    ;  118	    }
                           A  1341    ;  119	    else {
                           A  1342    .LINE 119
                           A  1343    
040772 18 2E               A  1344    	JR	L_171
040774                     A  1345    L_51:
                           A  1346    ;  120	        operand->indirect = false;
                           A  1347    .LINE 120
                           A  1348    
040774 DD3109              A  1349    	LD	IY,(IX+%9)
040777 FD360400            A  1350    	LD	(IY+%4),%0
                           A  1351    ;  121	        // should not find a closing br
                           A  1352    ;  122	        if(string[len-1] == ')') error(
                           A  1353    .LINE 122
                           A  1354    
04077B DD7EFC              A  1355    	LD	A,(IX+%FFFFFFFC)
04077E B7ED62              A  1356    	UEXT	HL
040781 6F                  A  1357    	LD	L,A
040782 DD0706              A  1358    	LD	BC,(IX+%6)
040785 09                  A  1359    	ADD	HL,BC
040786 2B                  A  1360    	DEC	HL
040787 7E                  A  1361    	LD	A,(HL)
040788 47                  A  1362    	LD	B,A
040789 17ED62              A  1363    	SEXT	HL
04078C 68                  A  1364    	LD	L,B
04078D 01290000            A  1365    	LD	BC,41
040791 B7                  A  1366    	OR	A,A
040792 ED42                A  1367    	SBC	HL,BC
040794 20 0C               A  1368    	JR	NZ,L_171
040796 21 45 64 04         A  1369    	LD	HL,_message+3
04079A ED07                A  1370    	LD	BC,(HL)
04079C C5                  A  1371    	PUSH	BC
04079D CD DC 4B 04         A  1372    	CALL	_error
0407A1 C1                  A  1373    	POP	BC
                           A  1374    ;  123	    }
0407A2                     A  1375    L_171:
                           A  1376    .LINE 123
                           A  1377    
                           A  1378    ;  124	
                           A  1379    ;  125	    switch(tolower(*ptr++)) {
                           A  1380    .LINE 125
                           A  1381    
0407A2 DD07FD              A  1382    	LD	BC,(IX+%FFFFFFFD)
0407A5 DD0FF6              A  1383    	LD	(IX+%FFFFFFF6),BC
0407A8 DD07FD              A  1384    	LD	BC,(IX+%FFFFFFFD)
0407AB 03                  A  1385    	INC	BC
0407AC DD0FFD              A  1386    	LD	(IX+%FFFFFFFD),BC
0407AF DD27F6              A  1387    	LD	HL,(IX+%FFFFFFF6)
0407B2 7E                  A  1388    	LD	A,(HL)
0407B3 47                  A  1389    	LD	B,A
0407B4 17ED62              A  1390    	SEXT	HL
0407B7 68                  A  1391    	LD	L,B
0407B8 E5                  A  1392    	PUSH	HL
0407B9 CD 6D 61 04         A  1393    	CALL	_tolower
0407BD C1                  A  1394    	POP	BC
0407BE CD B7 60 04         A  1395    	CALL	__case8D
0407C2 E9                  A  1396    	JP	(HL)
0407C3                     A  1397    L__30:
0407C3 0F00                A  1398    	DW	15
0407C5 00                  A  1399    	DB	0
0407C6 DB0D04              A  1400    	DW24	L_176	
                           A  1401    
0407C9 61                  A  1402    	DB	97
0407CA 040804              A  1403    	DW24	L_54	
                           A  1404    
0407CD 62                  A  1405    	DB	98
0407CE 8F0804              A  1406    	DW24	L_67	
                           A  1407    
0407D1 63                  A  1408    	DB	99
0407D2 FE0804              A  1409    	DW24	L_75	
                           A  1410    
0407D5 64                  A  1411    	DB	100
0407D6 3C0904              A  1412    	DW24	L_80	
                           A  1413    
0407D9 65                  A  1414    	DB	101
0407DA AA0904              A  1415    	DW24	L_90	
                           A  1416    
0407DD 68                  A  1417    	DB	104
0407DE E00904              A  1418    	DW24	L_95	
                           A  1419    
0407E1 69                  A  1420    	DB	105
0407E2 4F0A04              A  1421    	DW24	L_103	
                           A  1422    
0407E5 6C                  A  1423    	DB	108
0407E6 530C04              A  1424    	DW24	L_136	
                           A  1425    
0407E9 6D                  A  1426    	DB	109
0407EA 890C04              A  1427    	DW24	L_141	
                           A  1428    
0407ED 6E                  A  1429    	DB	110
0407EE D30C04              A  1430    	DW24	L_147	
                           A  1431    
0407F1 70                  A  1432    	DB	112
0407F2 1F0D04              A  1433    	DW24	L_153	
                           A  1434    
0407F5 72                  A  1435    	DB	114
0407F6 7E0D04              A  1436    	DW24	L_160	
                           A  1437    
0407F9 73                  A  1438    	DB	115
0407FA 970D04              A  1439    	DW24	L_163	
                           A  1440    
0407FD 7A                  A  1441    	DB	122
0407FE C70D04              A  1442    	DW24	L_167	
                           A  1443    
040801 DB0D04              A  1444    	DW24	L_176	
                           A  1445    
                           A  1446    ;  126	        case 0: // empty operand
                           A  1447    ;  127	            break;
                           A  1448    ;  128	        case 'a':
040804                     A  1449    L_54:
                           A  1450    .LINE 128
                           A  1451    
                           A  1452    ;  129	            switch(tolower(*ptr++)) {
                           A  1453    .LINE 129
                           A  1454    
040804 DD07FD              A  1455    	LD	BC,(IX+%FFFFFFFD)
040807 DD0FF3              A  1456    	LD	(IX+%FFFFFFF3),BC
04080A DD07FD              A  1457    	LD	BC,(IX+%FFFFFFFD)
04080D 03                  A  1458    	INC	BC
04080E DD0FFD              A  1459    	LD	(IX+%FFFFFFFD),BC
040811 DD27F3              A  1460    	LD	HL,(IX+%FFFFFFF3)
040814 7E                  A  1461    	LD	A,(HL)
040815 47                  A  1462    	LD	B,A
040816 17ED62              A  1463    	SEXT	HL
040819 68                  A  1464    	LD	L,B
04081A E5                  A  1465    	PUSH	HL
04081B CD 6D 61 04         A  1466    	CALL	_tolower
04081F C1                  A  1467    	POP	BC
040820 CD B7 60 04         A  1468    	CALL	__case8D
040824 E9                  A  1469    	JP	(HL)
040825                     A  1470    L__31:
040825 0200                A  1471    	DW	2
040827 00                  A  1472    	DB	0
040828 320804              A  1473    	DW24	L_56	
                           A  1474    
04082B 66                  A  1475    	DB	102
04082C 440804              A  1476    	DW24	L_57	
                           A  1477    
04082F DB0D04              A  1478    	DW24	L_176	
                           A  1479    
                           A  1480    ;  130	                case 0:
040832                     A  1481    L_56:
                           A  1482    .LINE 130
                           A  1483    
                           A  1484    ;  131	                    operand->reg = R_A;
                           A  1485    .LINE 131
                           A  1486    
040832 01010000            A  1487    	LD	BC,1
040836 DD3109              A  1488    	LD	IY,(IX+%9)
040839 FD0F00              A  1489    	LD	(IY+%0),BC
                           A  1490    ;  132	                    operand->reg_index 
                           A  1491    .LINE 132
                           A  1492    
04083C FD360307            A  1493    	LD	(IY+%3),%7
                           A  1494    ;  133	                    return;
                           A  1495    .LINE 133
                           A  1496    
040840 C3 17 0E 04         A  1497    	JR	L_177
                           A  1498    ;  134	                case 'f':
040844                     A  1499    L_57:
                           A  1500    .LINE 134
                           A  1501    
                           A  1502    ;  135	                    switch(tolower(*ptr
                           A  1503    .LINE 135
                           A  1504    
040844 DD07FD              A  1505    	LD	BC,(IX+%FFFFFFFD)
040847 DD0FF0              A  1506    	LD	(IX+%FFFFFFF0),BC
04084A C5E1                A  1507    	LD	HL,BC
04084C 7E                  A  1508    	LD	A,(HL)
04084D 47                  A  1509    	LD	B,A
04084E 17ED62              A  1510    	SEXT	HL
040851 68                  A  1511    	LD	L,B
040852 E5                  A  1512    	PUSH	HL
040853 CD 6D 61 04         A  1513    	CALL	_tolower
040857 C1                  A  1514    	POP	BC
040858 CD B7 60 04         A  1515    	CALL	__case8D
04085C E9                  A  1516    	JP	(HL)
04085D                     A  1517    L__32:
04085D 0200                A  1518    	DW	2
04085F 00                  A  1519    	DB	0
040860 6A0804              A  1520    	DW24	L_59	
                           A  1521    
040863 27                  A  1522    	DB	39
040864 6A0804              A  1523    	DW24	L_60	
                           A  1524    
040867 DB0D04              A  1525    	DW24	L_176	
                           A  1526    
                           A  1527    ;  136	                        case 0:
04086A                     A  1528    L_59:
                           A  1529    .LINE 136
                           A  1530    
                           A  1531    ;  137	                        case '\'':
04086A                     A  1532    L_60:
                           A  1533    .LINE 137
                           A  1534    
                           A  1535    ;  138	                            operand->re
                           A  1536    .LINE 138
                           A  1537    
04086A 010C0000            A  1538    	LD	BC,12
04086E DD3109              A  1539    	LD	IY,(IX+%9)
040871 FD0F00              A  1540    	LD	(IY+%0),BC
                           A  1541    ;  139	                            operand->re
                           A  1542    .LINE 139
                           A  1543    
040874 FD360303            A  1544    	LD	(IY+%3),%3
                           A  1545    ;  140	                            if(operand-
                           A  1546    .LINE 140
                           A  1547    
040878 FD7E04              A  1548    	LD	A,(IY+%4)
04087B B7                  A  1549    	OR	A,A
04087C CA 17 0E 04         A  1550    	JR	Z,L_177
040880 ED4B 42 64 04       A  1551    	LD	BC,(_message)
040885 C5                  A  1552    	PUSH	BC
040886 CD DC 4B 04         A  1553    	CALL	_error
04088A C1                  A  1554    	POP	BC
                           A  1555    ;  141	                            return;
                           A  1556    .LINE 141
                           A  1557    
04088B C3 17 0E 04         A  1558    	JR	L_177
                           A  1559    ;  142	                        default:
                           A  1560    ;  143	                            break;
                           A  1561    ;  144	                    }
                           A  1562    ;  145	                    break;
                           A  1563    ;  146	                default:
                           A  1564    ;  147	                    break;
                           A  1565    ;  148	            }
                           A  1566    ;  149	            break;
                           A  1567    ;  150	        case 'b':
04088F                     A  1568    L_67:
                           A  1569    .LINE 150
                           A  1570    
                           A  1571    ;  151	            switch(tolower(*ptr++)) {
                           A  1572    .LINE 151
                           A  1573    
04088F DD07FD              A  1574    	LD	BC,(IX+%FFFFFFFD)
040892 DD0FED              A  1575    	LD	(IX+%FFFFFFED),BC
040895 DD07FD              A  1576    	LD	BC,(IX+%FFFFFFFD)
040898 03                  A  1577    	INC	BC
040899 DD0FFD              A  1578    	LD	(IX+%FFFFFFFD),BC
04089C DD27ED              A  1579    	LD	HL,(IX+%FFFFFFED)
04089F 7E                  A  1580    	LD	A,(HL)
0408A0 47                  A  1581    	LD	B,A
0408A1 17ED62              A  1582    	SEXT	HL
0408A4 68                  A  1583    	LD	L,B
0408A5 E5                  A  1584    	PUSH	HL
0408A6 CD 6D 61 04         A  1585    	CALL	_tolower
0408AA C1                  A  1586    	POP	BC
0408AB CD B7 60 04         A  1587    	CALL	__case8D
0408AF E9                  A  1588    	JP	(HL)
0408B0                     A  1589    L__34:
0408B0 0200                A  1590    	DW	2
0408B2 00                  A  1591    	DB	0
0408B3 BD0804              A  1592    	DW24	L_69	
                           A  1593    
0408B6 63                  A  1594    	DB	99
0408B7 CF0804              A  1595    	DW24	L_70	
                           A  1596    
0408BA DB0D04              A  1597    	DW24	L_176	
                           A  1598    
                           A  1599    ;  152	                case 0:
0408BD                     A  1600    L_69:
                           A  1601    .LINE 152
                           A  1602    
                           A  1603    ;  153	                    operand->reg = R_B;
                           A  1604    .LINE 153
                           A  1605    
0408BD 01020000            A  1606    	LD	BC,2
0408C1 DD3109              A  1607    	LD	IY,(IX+%9)
0408C4 FD0F00              A  1608    	LD	(IY+%0),BC
                           A  1609    ;  154	                    operand->reg_index 
                           A  1610    .LINE 154
                           A  1611    
0408C7 FD360300            A  1612    	LD	(IY+%3),%0
                           A  1613    ;  155	                    return;
                           A  1614    .LINE 155
                           A  1615    
0408CB C3 17 0E 04         A  1616    	JR	L_177
                           A  1617    ;  156	                case 'c':
0408CF                     A  1618    L_70:
                           A  1619    .LINE 156
                           A  1620    
                           A  1621    ;  157	                    if(tolower(*ptr == 
                           A  1622    .LINE 157
                           A  1623    
0408CF DD27FD              A  1624    	LD	HL,(IX+%FFFFFFFD)
0408D2 7E                  A  1625    	LD	A,(HL)
0408D3 B7                  A  1626    	OR	A,A
0408D4 20 04               A  1627    	JR	NZ,L__36
0408D6 3E01                A  1628    	LD	A,%1
0408D8 18 01               A  1629    	JR	L__37
0408DA                     A  1630    L__36:
0408DA AF                  A  1631    	XOR	A,A
0408DB                     A  1632    L__37:
0408DB 4F                  A  1633    	LD	C,A
0408DC 0600                A  1634    	LD	B,%0
0408DE C5                  A  1635    	PUSH	BC
0408DF CD 6D 61 04         A  1636    	CALL	_tolower
0408E3 C1                  A  1637    	POP	BC
0408E4 CD C5 5D 04         A  1638    	CALL	__icmpzero
0408E8 CA DB 0D 04         A  1639    	JR	Z,L_176
                           A  1640    ;  158	                        operand->reg = 
                           A  1641    .LINE 158
                           A  1642    
0408EC 01080000            A  1643    	LD	BC,8
0408F0 DD3109              A  1644    	LD	IY,(IX+%9)
0408F3 FD0F00              A  1645    	LD	(IY+%0),BC
                           A  1646    ;  159	                        operand->reg_in
                           A  1647    .LINE 159
                           A  1648    
0408F6 FD360300            A  1649    	LD	(IY+%3),%0
                           A  1650    ;  160	                        return;
                           A  1651    .LINE 160
                           A  1652    
0408FA C3 17 0E 04         A  1653    	JR	L_177
                           A  1654    ;  161	                    }
                           A  1655    .LINE 161
                           A  1656    
                           A  1657    ;  162	                    break;
                           A  1658    .LINE 162
                           A  1659    
                           A  1660    ;  163	                default:
                           A  1661    ;  164	                    break;
                           A  1662    ;  165	            }
                           A  1663    ;  166	            break;
                           A  1664    ;  167	        case 'c':
0408FE                     A  1665    L_75:
                           A  1666    .LINE 167
                           A  1667    
                           A  1668    ;  168	            switch(tolower(*ptr++)) {
                           A  1669    .LINE 168
                           A  1670    
0408FE DD07FD              A  1671    	LD	BC,(IX+%FFFFFFFD)
040901 DD0FEA              A  1672    	LD	(IX+%FFFFFFEA),BC
040904 DD07FD              A  1673    	LD	BC,(IX+%FFFFFFFD)
040907 03                  A  1674    	INC	BC
040908 DD0FFD              A  1675    	LD	(IX+%FFFFFFFD),BC
04090B DD27EA              A  1676    	LD	HL,(IX+%FFFFFFEA)
04090E 7E                  A  1677    	LD	A,(HL)
04090F 47                  A  1678    	LD	B,A
040910 17ED62              A  1679    	SEXT	HL
040913 68                  A  1680    	LD	L,B
040914 E5                  A  1681    	PUSH	HL
040915 CD 6D 61 04         A  1682    	CALL	_tolower
040919 C1                  A  1683    	POP	BC
04091A CD C5 5D 04         A  1684    	CALL	__icmpzero
04091E C2 DB 0D 04         A  1685    	JR	NZ,L_176
                           A  1686    ;  169	                case 0:
                           A  1687    .LINE 169
                           A  1688    
                           A  1689    ;  170	                    operand->reg = R_C;
                           A  1690    .LINE 170
                           A  1691    
040922 01030000            A  1692    	LD	BC,3
040926 DD3109              A  1693    	LD	IY,(IX+%9)
040929 FD0F00              A  1694    	LD	(IY+%0),BC
                           A  1695    ;  171	                    operand->reg_index 
                           A  1696    .LINE 171
                           A  1697    
04092C FD360301            A  1698    	LD	(IY+%3),%1
                           A  1699    ;  172	                    operand->cc = true;
                           A  1700    .LINE 172
                           A  1701    
040930 FD360501            A  1702    	LD	(IY+%5),%1
                           A  1703    ;  173	                    operand->cc_index =
                           A  1704    .LINE 173
                           A  1705    
040934 FD360603            A  1706    	LD	(IY+%6),%3
                           A  1707    ;  174	                    return;
                           A  1708    .LINE 174
                           A  1709    
040938 C3 17 0E 04         A  1710    	JR	L_177
                           A  1711    ;  175	                default:
                           A  1712    ;  176	                    break;
                           A  1713    ;  177	            }
                           A  1714    ;  178	            break;
                           A  1715    ;  179	        case 'd':
04093C                     A  1716    L_80:
                           A  1717    .LINE 179
                           A  1718    
                           A  1719    ;  180	            switch(tolower(*ptr++)) {
                           A  1720    .LINE 180
                           A  1721    
04093C DD07FD              A  1722    	LD	BC,(IX+%FFFFFFFD)
04093F DD0FE7              A  1723    	LD	(IX+%FFFFFFE7),BC
040942 DD07FD              A  1724    	LD	BC,(IX+%FFFFFFFD)
040945 03                  A  1725    	INC	BC
040946 DD0FFD              A  1726    	LD	(IX+%FFFFFFFD),BC
040949 DD27E7              A  1727    	LD	HL,(IX+%FFFFFFE7)
04094C 7E                  A  1728    	LD	A,(HL)
04094D 47                  A  1729    	LD	B,A
04094E 17ED62              A  1730    	SEXT	HL
040951 68                  A  1731    	LD	L,B
040952 E5                  A  1732    	PUSH	HL
040953 CD 6D 61 04         A  1733    	CALL	_tolower
040957 C1                  A  1734    	POP	BC
040958 CD B7 60 04         A  1735    	CALL	__case8D
04095C E9                  A  1736    	JP	(HL)
04095D                     A  1737    L__39:
04095D 0200                A  1738    	DW	2
04095F 00                  A  1739    	DB	0
040960 6A0904              A  1740    	DW24	L_82	
                           A  1741    
040963 65                  A  1742    	DB	101
040964 7C0904              A  1743    	DW24	L_83	
                           A  1744    
040967 DB0D04              A  1745    	DW24	L_176	
                           A  1746    
                           A  1747    ;  181	                case 0:
04096A                     A  1748    L_82:
                           A  1749    .LINE 181
                           A  1750    
                           A  1751    ;  182	                    operand->reg = R_D;
                           A  1752    .LINE 182
                           A  1753    
04096A 01040000            A  1754    	LD	BC,4
04096E DD3109              A  1755    	LD	IY,(IX+%9)
040971 FD0F00              A  1756    	LD	(IY+%0),BC
                           A  1757    ;  183	                    operand->reg_index 
                           A  1758    .LINE 183
                           A  1759    
040974 FD360302            A  1760    	LD	(IY+%3),%2
                           A  1761    ;  184	                    return;
                           A  1762    .LINE 184
                           A  1763    
040978 C3 17 0E 04         A  1764    	JR	L_177
                           A  1765    ;  185	                case 'e':
04097C                     A  1766    L_83:
                           A  1767    .LINE 185
                           A  1768    
                           A  1769    ;  186	                    switch(tolower(*ptr
                           A  1770    .LINE 186
                           A  1771    
04097C DD07FD              A  1772    	LD	BC,(IX+%FFFFFFFD)
04097F DD0FE4              A  1773    	LD	(IX+%FFFFFFE4),BC
040982 C5E1                A  1774    	LD	HL,BC
040984 7E                  A  1775    	LD	A,(HL)
040985 47                  A  1776    	LD	B,A
040986 17ED62              A  1777    	SEXT	HL
040989 68                  A  1778    	LD	L,B
04098A E5                  A  1779    	PUSH	HL
04098B CD 6D 61 04         A  1780    	CALL	_tolower
04098F C1                  A  1781    	POP	BC
040990 CD C5 5D 04         A  1782    	CALL	__icmpzero
040994 C2 DB 0D 04         A  1783    	JR	NZ,L_176
                           A  1784    ;  187	                        case 0:
                           A  1785    .LINE 187
                           A  1786    
                           A  1787    ;  188	                            operand->re
                           A  1788    .LINE 188
                           A  1789    
040998 01090000            A  1790    	LD	BC,9
04099C DD3109              A  1791    	LD	IY,(IX+%9)
04099F FD0F00              A  1792    	LD	(IY+%0),BC
                           A  1793    ;  189	                            operand->re
                           A  1794    .LINE 189
                           A  1795    
0409A2 FD360301            A  1796    	LD	(IY+%3),%1
                           A  1797    ;  190	                            return;
                           A  1798    .LINE 190
                           A  1799    
0409A6 C3 17 0E 04         A  1800    	JR	L_177
                           A  1801    ;  191	                        default:
                           A  1802    ;  192	                            break;
                           A  1803    ;  193	                    }
                           A  1804    ;  194	                    break;
                           A  1805    ;  195	                default:
                           A  1806    ;  196	                    break;
                           A  1807    ;  197	            }
                           A  1808    ;  198	            break;
                           A  1809    ;  199	        case 'e':
0409AA                     A  1810    L_90:
                           A  1811    .LINE 199
                           A  1812    
                           A  1813    ;  200	            switch(tolower(*ptr++)) {
                           A  1814    .LINE 200
                           A  1815    
0409AA DD07FD              A  1816    	LD	BC,(IX+%FFFFFFFD)
0409AD DD0FE1              A  1817    	LD	(IX+%FFFFFFE1),BC
0409B0 DD07FD              A  1818    	LD	BC,(IX+%FFFFFFFD)
0409B3 03                  A  1819    	INC	BC
0409B4 DD0FFD              A  1820    	LD	(IX+%FFFFFFFD),BC
0409B7 DD27E1              A  1821    	LD	HL,(IX+%FFFFFFE1)
0409BA 7E                  A  1822    	LD	A,(HL)
0409BB 47                  A  1823    	LD	B,A
0409BC 17ED62              A  1824    	SEXT	HL
0409BF 68                  A  1825    	LD	L,B
0409C0 E5                  A  1826    	PUSH	HL
0409C1 CD 6D 61 04         A  1827    	CALL	_tolower
0409C5 C1                  A  1828    	POP	BC
0409C6 CD C5 5D 04         A  1829    	CALL	__icmpzero
0409CA C2 DB 0D 04         A  1830    	JR	NZ,L_176
                           A  1831    ;  201	                case 0:
                           A  1832    .LINE 201
                           A  1833    
                           A  1834    ;  202	                    operand->reg = R_E;
                           A  1835    .LINE 202
                           A  1836    
0409CE 01050000            A  1837    	LD	BC,5
0409D2 DD3109              A  1838    	LD	IY,(IX+%9)
0409D5 FD0F00              A  1839    	LD	(IY+%0),BC
                           A  1840    ;  203	                    operand->reg_index 
                           A  1841    .LINE 203
                           A  1842    
0409D8 FD360303            A  1843    	LD	(IY+%3),%3
                           A  1844    ;  204	                    return;
                           A  1845    .LINE 204
                           A  1846    
0409DC C3 17 0E 04         A  1847    	JR	L_177
                           A  1848    ;  205	                default:
                           A  1849    ;  206	                    break;
                           A  1850    ;  207	            }
                           A  1851    ;  208	            break;
                           A  1852    ;  209	        case 'h':
0409E0                     A  1853    L_95:
                           A  1854    .LINE 209
                           A  1855    
                           A  1856    ;  210	            switch(tolower(*ptr++)) {
                           A  1857    .LINE 210
                           A  1858    
0409E0 DD07FD              A  1859    	LD	BC,(IX+%FFFFFFFD)
0409E3 DD0FDE              A  1860    	LD	(IX+%FFFFFFDE),BC
0409E6 DD07FD              A  1861    	LD	BC,(IX+%FFFFFFFD)
0409E9 03                  A  1862    	INC	BC
0409EA DD0FFD              A  1863    	LD	(IX+%FFFFFFFD),BC
0409ED DD27DE              A  1864    	LD	HL,(IX+%FFFFFFDE)
0409F0 7E                  A  1865    	LD	A,(HL)
0409F1 47                  A  1866    	LD	B,A
0409F2 17ED62              A  1867    	SEXT	HL
0409F5 68                  A  1868    	LD	L,B
0409F6 E5                  A  1869    	PUSH	HL
0409F7 CD 6D 61 04         A  1870    	CALL	_tolower
0409FB C1                  A  1871    	POP	BC
0409FC CD B7 60 04         A  1872    	CALL	__case8D
040A00 E9                  A  1873    	JP	(HL)
040A01                     A  1874    L__40:
040A01 0200                A  1875    	DW	2
040A03 00                  A  1876    	DB	0
040A04 0E0A04              A  1877    	DW24	L_97	
                           A  1878    
040A07 6C                  A  1879    	DB	108
040A08 200A04              A  1880    	DW24	L_98	
                           A  1881    
040A0B DB0D04              A  1882    	DW24	L_176	
                           A  1883    
                           A  1884    ;  211	                case 0:
040A0E                     A  1885    L_97:
                           A  1886    .LINE 211
                           A  1887    
                           A  1888    ;  212	                    operand->reg = R_H;
                           A  1889    .LINE 212
                           A  1890    
040A0E 01060000            A  1891    	LD	BC,6
040A12 DD3109              A  1892    	LD	IY,(IX+%9)
040A15 FD0F00              A  1893    	LD	(IY+%0),BC
                           A  1894    ;  213	                    operand->reg_index 
                           A  1895    .LINE 213
                           A  1896    
040A18 FD360304            A  1897    	LD	(IY+%3),%4
                           A  1898    ;  214	                    return;
                           A  1899    .LINE 214
                           A  1900    
040A1C C3 17 0E 04         A  1901    	JR	L_177
                           A  1902    ;  215	                case 'l':
040A20                     A  1903    L_98:
                           A  1904    .LINE 215
                           A  1905    
                           A  1906    ;  216	                    if(tolower(*ptr == 
                           A  1907    .LINE 216
                           A  1908    
040A20 DD27FD              A  1909    	LD	HL,(IX+%FFFFFFFD)
040A23 7E                  A  1910    	LD	A,(HL)
040A24 B7                  A  1911    	OR	A,A
040A25 20 04               A  1912    	JR	NZ,L__42
040A27 3E01                A  1913    	LD	A,%1
040A29 18 01               A  1914    	JR	L__43
040A2B                     A  1915    L__42:
040A2B AF                  A  1916    	XOR	A,A
040A2C                     A  1917    L__43:
040A2C 4F                  A  1918    	LD	C,A
040A2D 0600                A  1919    	LD	B,%0
040A2F C5                  A  1920    	PUSH	BC
040A30 CD 6D 61 04         A  1921    	CALL	_tolower
040A34 C1                  A  1922    	POP	BC
040A35 CD C5 5D 04         A  1923    	CALL	__icmpzero
040A39 CA DB 0D 04         A  1924    	JR	Z,L_176
                           A  1925    ;  217	                        operand->reg = 
                           A  1926    .LINE 217
                           A  1927    
040A3D 010A0000            A  1928    	LD	BC,10
040A41 DD3109              A  1929    	LD	IY,(IX+%9)
040A44 FD0F00              A  1930    	LD	(IY+%0),BC
                           A  1931    ;  218	                        operand->reg_in
                           A  1932    .LINE 218
                           A  1933    
040A47 FD360302            A  1934    	LD	(IY+%3),%2
                           A  1935    ;  219	                        return;
                           A  1936    .LINE 219
                           A  1937    
040A4B C3 17 0E 04         A  1938    	JR	L_177
                           A  1939    ;  220	                    }
                           A  1940    .LINE 220
                           A  1941    
                           A  1942    ;  221	                    break;
                           A  1943    .LINE 221
                           A  1944    
                           A  1945    ;  222	                default:
                           A  1946    ;  223	                    break;
                           A  1947    ;  224	            }
                           A  1948    ;  225	            break;
                           A  1949    ;  226	        case 'i':
040A4F                     A  1950    L_103:
                           A  1951    .LINE 226
                           A  1952    
                           A  1953    ;  227	            switch(tolower(*ptr++)) {
                           A  1954    .LINE 227
                           A  1955    
040A4F DD07FD              A  1956    	LD	BC,(IX+%FFFFFFFD)
040A52 DD0FDB              A  1957    	LD	(IX+%FFFFFFDB),BC
040A55 DD07FD              A  1958    	LD	BC,(IX+%FFFFFFFD)
040A58 03                  A  1959    	INC	BC
040A59 DD0FFD              A  1960    	LD	(IX+%FFFFFFFD),BC
040A5C DD27DB              A  1961    	LD	HL,(IX+%FFFFFFDB)
040A5F 7E                  A  1962    	LD	A,(HL)
040A60 47                  A  1963    	LD	B,A
040A61 17ED62              A  1964    	SEXT	HL
040A64 68                  A  1965    	LD	L,B
040A65 E5                  A  1966    	PUSH	HL
040A66 CD 6D 61 04         A  1967    	CALL	_tolower
040A6A C1                  A  1968    	POP	BC
040A6B CD B7 60 04         A  1969    	CALL	__case8D
040A6F E9                  A  1970    	JP	(HL)
040A70                     A  1971    L__45:
040A70 0300                A  1972    	DW	3
040A72 00                  A  1973    	DB	0
040A73 810A04              A  1974    	DW24	L_105	
                           A  1975    
040A76 78                  A  1976    	DB	120
040A77 930A04              A  1977    	DW24	L_106	
                           A  1978    
040A7A 79                  A  1979    	DB	121
040A7B 730B04              A  1980    	DW24	L_120	
                           A  1981    
040A7E DB0D04              A  1982    	DW24	L_176	
                           A  1983    
                           A  1984    ;  228	                case 0:
040A81                     A  1985    L_105:
                           A  1986    .LINE 228
                           A  1987    
                           A  1988    ;  229	                    operand->reg = R_I;
                           A  1989    .LINE 229
                           A  1990    
040A81 01150000            A  1991    	LD	BC,21
040A85 DD3109              A  1992    	LD	IY,(IX+%9)
040A88 FD0F00              A  1993    	LD	(IY+%0),BC
                           A  1994    ;  230	                    operand->reg_index 
                           A  1995    .LINE 230
                           A  1996    
040A8B FD360300            A  1997    	LD	(IY+%3),%0
                           A  1998    ;  231	                    return;
                           A  1999    .LINE 231
                           A  2000    
040A8F C3 17 0E 04         A  2001    	JR	L_177
                           A  2002    ;  232	                case 'x':
040A93                     A  2003    L_106:
                           A  2004    .LINE 232
                           A  2005    
                           A  2006    ;  233	                    switch(tolower(*ptr
                           A  2007    .LINE 233
                           A  2008    
040A93 DD07FD              A  2009    	LD	BC,(IX+%FFFFFFFD)
040A96 DD0FD8              A  2010    	LD	(IX+%FFFFFFD8),BC
040A99 DD07FD              A  2011    	LD	BC,(IX+%FFFFFFFD)
040A9C 03                  A  2012    	INC	BC
040A9D DD0FFD              A  2013    	LD	(IX+%FFFFFFFD),BC
040AA0 DD27D8              A  2014    	LD	HL,(IX+%FFFFFFD8)
040AA3 7E                  A  2015    	LD	A,(HL)
040AA4 47                  A  2016    	LD	B,A
040AA5 17ED62              A  2017    	SEXT	HL
040AA8 68                  A  2018    	LD	L,B
040AA9 E5                  A  2019    	PUSH	HL
040AAA CD 6D 61 04         A  2020    	CALL	_tolower
040AAE C1                  A  2021    	POP	BC
040AAF CD B7 60 04         A  2022    	CALL	__case8D
040AB3 E9                  A  2023    	JP	(HL)
040AB4                     A  2024    L__46:
040AB4 0500                A  2025    	DW	5
040AB6 00                  A  2026    	DB	0
040AB7 CD0A04              A  2027    	DW24	L_108	
                           A  2028    
040ABA 2B                  A  2029    	DB	43
040ABB FB0A04              A  2030    	DW24	L_111	
                           A  2031    
040ABE 2D                  A  2032    	DB	45
040ABF FB0A04              A  2033    	DW24	L_112	
                           A  2034    
040AC2 68                  A  2035    	DB	104
040AC3 DF0A04              A  2036    	DW24	L_109	
                           A  2037    
040AC6 6C                  A  2038    	DB	108
040AC7 ED0A04              A  2039    	DW24	L_110	
                           A  2040    
040ACA DB0D04              A  2041    	DW24	L_176	
                           A  2042    
                           A  2043    ;  234	                        case 0:
040ACD                     A  2044    L_108:
                           A  2045    .LINE 234
                           A  2046    
                           A  2047    ;  235	                            operand->re
                           A  2048    .LINE 235
                           A  2049    
040ACD 010D0000            A  2050    	LD	BC,13
040AD1 DD3109              A  2051    	LD	IY,(IX+%9)
040AD4 FD0F00              A  2052    	LD	(IY+%0),BC
                           A  2053    ;  236	                            operand->re
                           A  2054    .LINE 236
                           A  2055    
040AD7 FD360302            A  2056    	LD	(IY+%3),%2
                           A  2057    ;  237	                            return;
                           A  2058    .LINE 237
                           A  2059    
040ADB C3 17 0E 04         A  2060    	JR	L_177
                           A  2061    ;  238	                        case 'h':
040ADF                     A  2062    L_109:
                           A  2063    .LINE 238
                           A  2064    
                           A  2065    ;  239	                            operand->re
                           A  2066    .LINE 239
                           A  2067    
040ADF 010F0000            A  2068    	LD	BC,15
040AE3 DD3109              A  2069    	LD	IY,(IX+%9)
040AE6 FD0F00              A  2070    	LD	(IY+%0),BC
                           A  2071    ;  240	                            return;
                           A  2072    .LINE 240
                           A  2073    
040AE9 C3 17 0E 04         A  2074    	JR	L_177
                           A  2075    ;  241	                        case 'l':
040AED                     A  2076    L_110:
                           A  2077    .LINE 241
                           A  2078    
                           A  2079    ;  242	                            operand->re
                           A  2080    .LINE 242
                           A  2081    
040AED 01100000            A  2082    	LD	BC,16
040AF1 DD3109              A  2083    	LD	IY,(IX+%9)
040AF4 FD0F00              A  2084    	LD	(IY+%0),BC
                           A  2085    ;  243	                            return;
                           A  2086    .LINE 243
                           A  2087    
040AF7 C3 17 0E 04         A  2088    	JR	L_177
                           A  2089    ;  244	                        case '+':
040AFB                     A  2090    L_111:
                           A  2091    .LINE 244
                           A  2092    
                           A  2093    ;  245	                        case '-':
040AFB                     A  2094    L_112:
                           A  2095    .LINE 245
                           A  2096    
                           A  2097    ;  246	                            if(isdigit(
                           A  2098    .LINE 246
                           A  2099    
040AFB DD27FD              A  2100    	LD	HL,(IX+%FFFFFFFD)
040AFE 7E                  A  2101    	LD	A,(HL)
040AFF 47                  A  2102    	LD	B,A
040B00 17ED62              A  2103    	SEXT	HL
040B03 68                  A  2104    	LD	L,B
040B04 E5                  A  2105    	PUSH	HL
040B05 CD D1 5D 04         A  2106    	CALL	_isdigit
040B09 C1                  A  2107    	POP	BC
040B0A CD C5 5D 04         A  2108    	CALL	__icmpzero
040B0E CA DB 0D 04         A  2109    	JR	Z,L_176
                           A  2110    ;  247	                                operand
                           A  2111    .LINE 247
                           A  2112    
040B12 010D0000            A  2113    	LD	BC,13
040B16 DD3109              A  2114    	LD	IY,(IX+%9)
040B19 FD0F00              A  2115    	LD	(IY+%0),BC
                           A  2116    ;  248	                                operand
                           A  2117    .LINE 248
                           A  2118    
040B1C FD360901            A  2119    	LD	(IY+%9),%1
                           A  2120    ;  249	                                if(*(pt
                           A  2121    .LINE 249
                           A  2122    
040B20 DD27FD              A  2123    	LD	HL,(IX+%FFFFFFFD)
040B23 2B                  A  2124    	DEC	HL
040B24 7E                  A  2125    	LD	A,(HL)
040B25 47                  A  2126    	LD	B,A
040B26 17ED62              A  2127    	SEXT	HL
040B29 68                  A  2128    	LD	L,B
040B2A 012D0000            A  2129    	LD	BC,45
040B2E B7                  A  2130    	OR	A,A
040B2F ED42                A  2131    	SBC	HL,BC
040B31 20 22               A  2132    	JR	NZ,L_114
040B33 01010000            A  2133    	LD	BC,1
040B37 C5                  A  2134    	PUSH	BC
040B38 DD07FD              A  2135    	LD	BC,(IX+%FFFFFFFD)
040B3B C5                  A  2136    	PUSH	BC
040B3C CD AB 47 04         A  2137    	CALL	_str2num
040B40 C1                  A  2138    	POP	BC
040B41 C1                  A  2139    	POP	BC
040B42 CD 2F 57 04         A  2140    	CALL	__sneg
040B46 DD3109              A  2141    	LD	IY,(IX+%9)
040B49 E5C1                A  2142    	LD	BC,HL
040B4B FD7107              A  2143    	LD	(IY+%7),C
040B4E FD7008              A  2144    	LD	(IY+%8),B
                           A  2145    ;  250	                                else op
                           A  2146    .LINE 250
                           A  2147    
040B51 C3 17 0E 04         A  2148    	JR	L_177
040B55                     A  2149    L_114:
040B55 01010000            A  2150    	LD	BC,1
040B59 C5                  A  2151    	PUSH	BC
040B5A DD07FD              A  2152    	LD	BC,(IX+%FFFFFFFD)
040B5D C5                  A  2153    	PUSH	BC
040B5E CD AB 47 04         A  2154    	CALL	_str2num
040B62 C1                  A  2155    	POP	BC
040B63 C1                  A  2156    	POP	BC
040B64 DD3109              A  2157    	LD	IY,(IX+%9)
040B67 E5C1                A  2158    	LD	BC,HL
040B69 FD7107              A  2159    	LD	(IY+%7),C
040B6C FD7008              A  2160    	LD	(IY+%8),B
                           A  2161    ;  251	                                return;
                           A  2162    .LINE 251
                           A  2163    
040B6F C3 17 0E 04         A  2164    	JR	L_177
                           A  2165    ;  252	                            }
                           A  2166    .LINE 252
                           A  2167    
                           A  2168    ;  253	                            break;
                           A  2169    .LINE 253
                           A  2170    
                           A  2171    ;  254	                        default:
                           A  2172    ;  255	                            break;
                           A  2173    ;  256	                    }
                           A  2174    ;  257	                    break;
                           A  2175    ;  258	                case 'y':
040B73                     A  2176    L_120:
                           A  2177    .LINE 258
                           A  2178    
                           A  2179    ;  259	                    switch(tolower(*ptr
                           A  2180    .LINE 259
                           A  2181    
040B73 DD07FD              A  2182    	LD	BC,(IX+%FFFFFFFD)
040B76 DD0FD5              A  2183    	LD	(IX+%FFFFFFD5),BC
040B79 DD07FD              A  2184    	LD	BC,(IX+%FFFFFFFD)
040B7C 03                  A  2185    	INC	BC
040B7D DD0FFD              A  2186    	LD	(IX+%FFFFFFFD),BC
040B80 DD27D5              A  2187    	LD	HL,(IX+%FFFFFFD5)
040B83 7E                  A  2188    	LD	A,(HL)
040B84 47                  A  2189    	LD	B,A
040B85 17ED62              A  2190    	SEXT	HL
040B88 68                  A  2191    	LD	L,B
040B89 E5                  A  2192    	PUSH	HL
040B8A CD 6D 61 04         A  2193    	CALL	_tolower
040B8E C1                  A  2194    	POP	BC
040B8F CD B7 60 04         A  2195    	CALL	__case8D
040B93 E9                  A  2196    	JP	(HL)
040B94                     A  2197    L__49:
040B94 0500                A  2198    	DW	5
040B96 00                  A  2199    	DB	0
040B97 AD0B04              A  2200    	DW24	L_122	
                           A  2201    
040B9A 2B                  A  2202    	DB	43
040B9B DB0B04              A  2203    	DW24	L_125	
                           A  2204    
040B9E 2D                  A  2205    	DB	45
040B9F DB0B04              A  2206    	DW24	L_126	
                           A  2207    
040BA2 68                  A  2208    	DB	104
040BA3 BF0B04              A  2209    	DW24	L_123	
                           A  2210    
040BA6 6C                  A  2211    	DB	108
040BA7 CD0B04              A  2212    	DW24	L_124	
                           A  2213    
040BAA DB0D04              A  2214    	DW24	L_176	
                           A  2215    
                           A  2216    ;  260	                        case 0:
040BAD                     A  2217    L_122:
                           A  2218    .LINE 260
                           A  2219    
                           A  2220    ;  261	                            operand->re
                           A  2221    .LINE 261
                           A  2222    
040BAD 010E0000            A  2223    	LD	BC,14
040BB1 DD3109              A  2224    	LD	IY,(IX+%9)
040BB4 FD0F00              A  2225    	LD	(IY+%0),BC
                           A  2226    ;  262	                            operand->re
                           A  2227    .LINE 262
                           A  2228    
040BB7 FD360302            A  2229    	LD	(IY+%3),%2
                           A  2230    ;  263	                            return;
                           A  2231    .LINE 263
                           A  2232    
040BBB C3 17 0E 04         A  2233    	JR	L_177
                           A  2234    ;  264	                        case 'h':
040BBF                     A  2235    L_123:
                           A  2236    .LINE 264
                           A  2237    
                           A  2238    ;  265	                            operand->re
                           A  2239    .LINE 265
                           A  2240    
040BBF 01110000            A  2241    	LD	BC,17
040BC3 DD3109              A  2242    	LD	IY,(IX+%9)
040BC6 FD0F00              A  2243    	LD	(IY+%0),BC
                           A  2244    ;  266	                            return;
                           A  2245    .LINE 266
                           A  2246    
040BC9 C3 17 0E 04         A  2247    	JR	L_177
                           A  2248    ;  267	                        case 'l':
040BCD                     A  2249    L_124:
                           A  2250    .LINE 267
                           A  2251    
                           A  2252    ;  268	                            operand->re
                           A  2253    .LINE 268
                           A  2254    
040BCD 01120000            A  2255    	LD	BC,18
040BD1 DD3109              A  2256    	LD	IY,(IX+%9)
040BD4 FD0F00              A  2257    	LD	(IY+%0),BC
                           A  2258    ;  269	                            return;
                           A  2259    .LINE 269
                           A  2260    
040BD7 C3 17 0E 04         A  2261    	JR	L_177
                           A  2262    ;  270	                        case '+':
040BDB                     A  2263    L_125:
                           A  2264    .LINE 270
                           A  2265    
                           A  2266    ;  271	                        case '-':
040BDB                     A  2267    L_126:
                           A  2268    .LINE 271
                           A  2269    
                           A  2270    ;  272	                            if(isdigit(
                           A  2271    .LINE 272
                           A  2272    
040BDB DD27FD              A  2273    	LD	HL,(IX+%FFFFFFFD)
040BDE 7E                  A  2274    	LD	A,(HL)
040BDF 47                  A  2275    	LD	B,A
040BE0 17ED62              A  2276    	SEXT	HL
040BE3 68                  A  2277    	LD	L,B
040BE4 E5                  A  2278    	PUSH	HL
040BE5 CD D1 5D 04         A  2279    	CALL	_isdigit
040BE9 C1                  A  2280    	POP	BC
040BEA CD C5 5D 04         A  2281    	CALL	__icmpzero
040BEE CA DB 0D 04         A  2282    	JR	Z,L_176
                           A  2283    ;  273	                                operand
                           A  2284    .LINE 273
                           A  2285    
040BF2 010E0000            A  2286    	LD	BC,14
040BF6 DD3109              A  2287    	LD	IY,(IX+%9)
040BF9 FD0F00              A  2288    	LD	(IY+%0),BC
                           A  2289    ;  274	                                operand
                           A  2290    .LINE 274
                           A  2291    
040BFC FD360901            A  2292    	LD	(IY+%9),%1
                           A  2293    ;  275	                                if(*(pt
                           A  2294    .LINE 275
                           A  2295    
040C00 DD27FD              A  2296    	LD	HL,(IX+%FFFFFFFD)
040C03 2B                  A  2297    	DEC	HL
040C04 7E                  A  2298    	LD	A,(HL)
040C05 47                  A  2299    	LD	B,A
040C06 17ED62              A  2300    	SEXT	HL
040C09 68                  A  2301    	LD	L,B
040C0A 012D0000            A  2302    	LD	BC,45
040C0E B7                  A  2303    	OR	A,A
040C0F ED42                A  2304    	SBC	HL,BC
040C11 20 22               A  2305    	JR	NZ,L_128
040C13 01010000            A  2306    	LD	BC,1
040C17 C5                  A  2307    	PUSH	BC
040C18 DD07FD              A  2308    	LD	BC,(IX+%FFFFFFFD)
040C1B C5                  A  2309    	PUSH	BC
040C1C CD AB 47 04         A  2310    	CALL	_str2num
040C20 C1                  A  2311    	POP	BC
040C21 C1                  A  2312    	POP	BC
040C22 CD 2F 57 04         A  2313    	CALL	__sneg
040C26 DD3109              A  2314    	LD	IY,(IX+%9)
040C29 E5C1                A  2315    	LD	BC,HL
040C2B FD7107              A  2316    	LD	(IY+%7),C
040C2E FD7008              A  2317    	LD	(IY+%8),B
                           A  2318    ;  276	                                else op
                           A  2319    .LINE 276
                           A  2320    
040C31 C3 17 0E 04         A  2321    	JR	L_177
040C35                     A  2322    L_128:
040C35 01010000            A  2323    	LD	BC,1
040C39 C5                  A  2324    	PUSH	BC
040C3A DD07FD              A  2325    	LD	BC,(IX+%FFFFFFFD)
040C3D C5                  A  2326    	PUSH	BC
040C3E CD AB 47 04         A  2327    	CALL	_str2num
040C42 C1                  A  2328    	POP	BC
040C43 C1                  A  2329    	POP	BC
040C44 DD3109              A  2330    	LD	IY,(IX+%9)
040C47 E5C1                A  2331    	LD	BC,HL
040C49 FD7107              A  2332    	LD	(IY+%7),C
040C4C FD7008              A  2333    	LD	(IY+%8),B
                           A  2334    ;  277	                                return;
                           A  2335    .LINE 277
                           A  2336    
040C4F C3 17 0E 04         A  2337    	JR	L_177
                           A  2338    ;  278	                            }
                           A  2339    .LINE 278
                           A  2340    
                           A  2341    ;  279	                            break;
                           A  2342    .LINE 279
                           A  2343    
                           A  2344    ;  280	                        default:
                           A  2345    ;  281	                            break;
                           A  2346    ;  282	                    }
                           A  2347    ;  283	                    break;
                           A  2348    ;  284	                default:
                           A  2349    ;  285	                    break;
                           A  2350    ;  286	            }
                           A  2351    ;  287	            break;
                           A  2352    ;  288	        case 'l':
040C53                     A  2353    L_136:
                           A  2354    .LINE 288
                           A  2355    
                           A  2356    ;  289	            switch(tolower(*ptr++)) {
                           A  2357    .LINE 289
                           A  2358    
040C53 DD07FD              A  2359    	LD	BC,(IX+%FFFFFFFD)
040C56 DD0FD2              A  2360    	LD	(IX+%FFFFFFD2),BC
040C59 DD07FD              A  2361    	LD	BC,(IX+%FFFFFFFD)
040C5C 03                  A  2362    	INC	BC
040C5D DD0FFD              A  2363    	LD	(IX+%FFFFFFFD),BC
040C60 DD27D2              A  2364    	LD	HL,(IX+%FFFFFFD2)
040C63 7E                  A  2365    	LD	A,(HL)
040C64 47                  A  2366    	LD	B,A
040C65 17ED62              A  2367    	SEXT	HL
040C68 68                  A  2368    	LD	L,B
040C69 E5                  A  2369    	PUSH	HL
040C6A CD 6D 61 04         A  2370    	CALL	_tolower
040C6E C1                  A  2371    	POP	BC
040C6F CD C5 5D 04         A  2372    	CALL	__icmpzero
040C73 C2 DB 0D 04         A  2373    	JR	NZ,L_176
                           A  2374    ;  290	                case 0:
                           A  2375    .LINE 290
                           A  2376    
                           A  2377    ;  291	                    operand->reg = R_L;
                           A  2378    .LINE 291
                           A  2379    
040C77 01070000            A  2380    	LD	BC,7
040C7B DD3109              A  2381    	LD	IY,(IX+%9)
040C7E FD0F00              A  2382    	LD	(IY+%0),BC
                           A  2383    ;  292	                    operand->reg_index 
                           A  2384    .LINE 292
                           A  2385    
040C81 FD360305            A  2386    	LD	(IY+%3),%5
                           A  2387    ;  293	                    return;
                           A  2388    .LINE 293
                           A  2389    
040C85 C3 17 0E 04         A  2390    	JR	L_177
                           A  2391    ;  294	                default:
                           A  2392    ;  295	                    break;
                           A  2393    ;  296	            }
                           A  2394    ;  297	            break;
                           A  2395    ;  298	        case 'm':
040C89                     A  2396    L_141:
                           A  2397    .LINE 298
                           A  2398    
                           A  2399    ;  299	            if((tolower(*ptr) == 'b') &
                           A  2400    .LINE 299
                           A  2401    
040C89 DD27FD              A  2402    	LD	HL,(IX+%FFFFFFFD)
040C8C 7E                  A  2403    	LD	A,(HL)
040C8D 47                  A  2404    	LD	B,A
040C8E 17ED62              A  2405    	SEXT	HL
040C91 68                  A  2406    	LD	L,B
040C92 E5                  A  2407    	PUSH	HL
040C93 CD 6D 61 04         A  2408    	CALL	_tolower
040C97 C1                  A  2409    	POP	BC
040C98 01620000            A  2410    	LD	BC,98
040C9C B7                  A  2411    	OR	A,A
040C9D ED42                A  2412    	SBC	HL,BC
040C9F 20 1A               A  2413    	JR	NZ,L_145
040CA1 DD27FD              A  2414    	LD	HL,(IX+%FFFFFFFD)
040CA4 23                  A  2415    	INC	HL
040CA5 7E                  A  2416    	LD	A,(HL)
040CA6 B7                  A  2417    	OR	A,A
040CA7 20 12               A  2418    	JR	NZ,L_145
                           A  2419    ;  300	                operand->reg = R_MB;
                           A  2420    .LINE 300
                           A  2421    
040CA9 01140000            A  2422    	LD	BC,20
040CAD DD3109              A  2423    	LD	IY,(IX+%9)
040CB0 FD0F00              A  2424    	LD	(IY+%0),BC
                           A  2425    ;  301	                operand->reg_index = R_
                           A  2426    .LINE 301
                           A  2427    
040CB3 FD360300            A  2428    	LD	(IY+%3),%0
                           A  2429    ;  302	                return;
                           A  2430    .LINE 302
                           A  2431    
040CB7 C3 17 0E 04         A  2432    	JR	L_177
                           A  2433    ;  303	            }
040CBB                     A  2434    L_145:
                           A  2435    .LINE 303
                           A  2436    
                           A  2437    ;  304	            if((*ptr == 0)) {
                           A  2438    .LINE 304
                           A  2439    
040CBB DD27FD              A  2440    	LD	HL,(IX+%FFFFFFFD)
040CBE 7E                  A  2441    	LD	A,(HL)
040CBF B7                  A  2442    	OR	A,A
040CC0 C2 DB 0D 04         A  2443    	JR	NZ,L_176
                           A  2444    ;  305	                operand->cc = true;
                           A  2445    .LINE 305
                           A  2446    
040CC4 DD3109              A  2447    	LD	IY,(IX+%9)
040CC7 FD360501            A  2448    	LD	(IY+%5),%1
                           A  2449    ;  306	                operand->cc_index = CC_
                           A  2450    .LINE 306
                           A  2451    
040CCB FD360607            A  2452    	LD	(IY+%6),%7
                           A  2453    ;  307	                return;
                           A  2454    .LINE 307
                           A  2455    
040CCF C3 17 0E 04         A  2456    	JR	L_177
                           A  2457    ;  308	            }
                           A  2458    .LINE 308
                           A  2459    
                           A  2460    ;  309	            break;
                           A  2461    .LINE 309
                           A  2462    
                           A  2463    ;  310	        case 'n':
040CD3                     A  2464    L_147:
                           A  2465    .LINE 310
                           A  2466    
                           A  2467    ;  311	            switch(tolower(*ptr++)) {
                           A  2468    .LINE 311
                           A  2469    
040CD3 DD07FD              A  2470    	LD	BC,(IX+%FFFFFFFD)
040CD6 DD0FCF              A  2471    	LD	(IX+%FFFFFFCF),BC
040CD9 DD07FD              A  2472    	LD	BC,(IX+%FFFFFFFD)
040CDC 03                  A  2473    	INC	BC
040CDD DD0FFD              A  2474    	LD	(IX+%FFFFFFFD),BC
040CE0 DD27CF              A  2475    	LD	HL,(IX+%FFFFFFCF)
040CE3 7E                  A  2476    	LD	A,(HL)
040CE4 47                  A  2477    	LD	B,A
040CE5 17ED62              A  2478    	SEXT	HL
040CE8 68                  A  2479    	LD	L,B
040CE9 E5                  A  2480    	PUSH	HL
040CEA CD 6D 61 04         A  2481    	CALL	_tolower
040CEE C1                  A  2482    	POP	BC
040CEF CD B7 60 04         A  2483    	CALL	__case8D
040CF3 E9                  A  2484    	JP	(HL)
040CF4                     A  2485    L__55:
040CF4 0200                A  2486    	DW	2
040CF6 63                  A  2487    	DB	99
040CF7 010D04              A  2488    	DW24	L_149	
                           A  2489    
040CFA 7A                  A  2490    	DB	122
040CFB 100D04              A  2491    	DW24	L_150	
                           A  2492    
040CFE DB0D04              A  2493    	DW24	L_176	
                           A  2494    
                           A  2495    ;  312	                case 'c':   // NC
040D01                     A  2496    L_149:
                           A  2497    .LINE 312
                           A  2498    
                           A  2499    ;  313	                    operand->cc = true;
                           A  2500    .LINE 313
                           A  2501    
040D01 DD3109              A  2502    	LD	IY,(IX+%9)
040D04 FD360501            A  2503    	LD	(IY+%5),%1
                           A  2504    ;  314	                    operand->cc_index =
                           A  2505    .LINE 314
                           A  2506    
040D08 FD360602            A  2507    	LD	(IY+%6),%2
                           A  2508    ;  315	                    return;
                           A  2509    .LINE 315
                           A  2510    
040D0C C3 17 0E 04         A  2511    	JR	L_177
                           A  2512    ;  316	                case 'z':   // NZ
040D10                     A  2513    L_150:
                           A  2514    .LINE 316
                           A  2515    
                           A  2516    ;  317	                    operand->cc = true;
                           A  2517    .LINE 317
                           A  2518    
040D10 DD3109              A  2519    	LD	IY,(IX+%9)
040D13 FD360501            A  2520    	LD	(IY+%5),%1
                           A  2521    ;  318	                    operand->cc_index =
                           A  2522    .LINE 318
                           A  2523    
040D17 FD360600            A  2524    	LD	(IY+%6),%0
                           A  2525    ;  319	                    return;
                           A  2526    .LINE 319
                           A  2527    
040D1B C3 17 0E 04         A  2528    	JR	L_177
                           A  2529    ;  320	                default:
                           A  2530    ;  321	                    break;
                           A  2531    ;  322	            }
                           A  2532    ;  323	            break;
                           A  2533    ;  324	        case 'p':
040D1F                     A  2534    L_153:
                           A  2535    .LINE 324
                           A  2536    
                           A  2537    ;  325	            switch(tolower(*ptr++)) {
                           A  2538    .LINE 325
                           A  2539    
040D1F DD07FD              A  2540    	LD	BC,(IX+%FFFFFFFD)
040D22 DD0FCC              A  2541    	LD	(IX+%FFFFFFCC),BC
040D25 DD07FD              A  2542    	LD	BC,(IX+%FFFFFFFD)
040D28 03                  A  2543    	INC	BC
040D29 DD0FFD              A  2544    	LD	(IX+%FFFFFFFD),BC
040D2C DD27CC              A  2545    	LD	HL,(IX+%FFFFFFCC)
040D2F 7E                  A  2546    	LD	A,(HL)
040D30 47                  A  2547    	LD	B,A
040D31 17ED62              A  2548    	SEXT	HL
040D34 68                  A  2549    	LD	L,B
040D35 E5                  A  2550    	PUSH	HL
040D36 CD 6D 61 04         A  2551    	CALL	_tolower
040D3A C1                  A  2552    	POP	BC
040D3B CD B7 60 04         A  2553    	CALL	__case8D
040D3F E9                  A  2554    	JP	(HL)
040D40                     A  2555    L__56:
040D40 0300                A  2556    	DW	3
040D42 00                  A  2557    	DB	0
040D43 510D04              A  2558    	DW24	L_155	
                           A  2559    
040D46 65                  A  2560    	DB	101
040D47 600D04              A  2561    	DW24	L_156	
                           A  2562    
040D4A 6F                  A  2563    	DB	111
040D4B 6F0D04              A  2564    	DW24	L_157	
                           A  2565    
040D4E DB0D04              A  2566    	DW24	L_176	
                           A  2567    
                           A  2568    ;  326	                case 0:
040D51                     A  2569    L_155:
                           A  2570    .LINE 326
                           A  2571    
                           A  2572    ;  327	                    operand->cc = true;
                           A  2573    .LINE 327
                           A  2574    
040D51 DD3109              A  2575    	LD	IY,(IX+%9)
040D54 FD360501            A  2576    	LD	(IY+%5),%1
                           A  2577    ;  328	                    operand->cc_index =
                           A  2578    .LINE 328
                           A  2579    
040D58 FD360606            A  2580    	LD	(IY+%6),%6
                           A  2581    ;  329	                    return;
                           A  2582    .LINE 329
                           A  2583    
040D5C C3 17 0E 04         A  2584    	JR	L_177
                           A  2585    ;  330	                case 'e':
040D60                     A  2586    L_156:
                           A  2587    .LINE 330
                           A  2588    
                           A  2589    ;  331	                    operand->cc = true;
                           A  2590    .LINE 331
                           A  2591    
040D60 DD3109              A  2592    	LD	IY,(IX+%9)
040D63 FD360501            A  2593    	LD	(IY+%5),%1
                           A  2594    ;  332	                    operand->cc_index =
                           A  2595    .LINE 332
                           A  2596    
040D67 FD360605            A  2597    	LD	(IY+%6),%5
                           A  2598    ;  333	                    return;
                           A  2599    .LINE 333
                           A  2600    
040D6B C3 17 0E 04         A  2601    	JR	L_177
                           A  2602    ;  334	                case 'o':
040D6F                     A  2603    L_157:
                           A  2604    .LINE 334
                           A  2605    
                           A  2606    ;  335	                    operand->cc = true;
                           A  2607    .LINE 335
                           A  2608    
040D6F DD3109              A  2609    	LD	IY,(IX+%9)
040D72 FD360501            A  2610    	LD	(IY+%5),%1
                           A  2611    ;  336	                    operand->cc_index =
                           A  2612    .LINE 336
                           A  2613    
040D76 FD360604            A  2614    	LD	(IY+%6),%4
                           A  2615    ;  337	                    return;
                           A  2616    .LINE 337
                           A  2617    
040D7A C3 17 0E 04         A  2618    	JR	L_177
                           A  2619    ;  338	                default:
                           A  2620    ;  339	                    break;
                           A  2621    ;  340	            }
                           A  2622    ;  341	            break;
                           A  2623    ;  342	        case 'r':
040D7E                     A  2624    L_160:
                           A  2625    .LINE 342
                           A  2626    
                           A  2627    ;  343	            if(*ptr == 0) {
                           A  2628    .LINE 343
                           A  2629    
040D7E DD27FD              A  2630    	LD	HL,(IX+%FFFFFFFD)
040D81 7E                  A  2631    	LD	A,(HL)
040D82 B7                  A  2632    	OR	A,A
040D83 20 56               A  2633    	JR	NZ,L_176
                           A  2634    ;  344	                operand->reg = R_R;
                           A  2635    .LINE 344
                           A  2636    
040D85 01130000            A  2637    	LD	BC,19
040D89 DD3109              A  2638    	LD	IY,(IX+%9)
040D8C FD0F00              A  2639    	LD	(IY+%0),BC
                           A  2640    ;  345	                operand->reg_index = R_
                           A  2641    .LINE 345
                           A  2642    
040D8F FD360300            A  2643    	LD	(IY+%3),%0
                           A  2644    ;  346	                return;
                           A  2645    .LINE 346
                           A  2646    
040D93 C3 17 0E 04         A  2647    	JR	L_177
                           A  2648    ;  347	            }
                           A  2649    .LINE 347
                           A  2650    
                           A  2651    ;  348	            break;
                           A  2652    .LINE 348
                           A  2653    
                           A  2654    ;  349	        case 's':
040D97                     A  2655    L_163:
                           A  2656    .LINE 349
                           A  2657    
                           A  2658    ;  350	            if((tolower(*ptr) == 'p') &
                           A  2659    .LINE 350
                           A  2660    
040D97 DD27FD              A  2661    	LD	HL,(IX+%FFFFFFFD)
040D9A 7E                  A  2662    	LD	A,(HL)
040D9B 47                  A  2663    	LD	B,A
040D9C 17ED62              A  2664    	SEXT	HL
040D9F 68                  A  2665    	LD	L,B
040DA0 E5                  A  2666    	PUSH	HL
040DA1 CD 6D 61 04         A  2667    	CALL	_tolower
040DA5 C1                  A  2668    	POP	BC
040DA6 01700000            A  2669    	LD	BC,112
040DAA B7                  A  2670    	OR	A,A
040DAB ED42                A  2671    	SBC	HL,BC
040DAD 20 2C               A  2672    	JR	NZ,L_176
040DAF DD27FD              A  2673    	LD	HL,(IX+%FFFFFFFD)
040DB2 23                  A  2674    	INC	HL
040DB3 7E                  A  2675    	LD	A,(HL)
040DB4 B7                  A  2676    	OR	A,A
040DB5 20 24               A  2677    	JR	NZ,L_176
                           A  2678    ;  351	                operand->reg = R_SP;
                           A  2679    .LINE 351
                           A  2680    
040DB7 010B0000            A  2681    	LD	BC,11
040DBB DD3109              A  2682    	LD	IY,(IX+%9)
040DBE FD0F00              A  2683    	LD	(IY+%0),BC
                           A  2684    ;  352	                operand->reg_index = R_
                           A  2685    .LINE 352
                           A  2686    
040DC1 FD360303            A  2687    	LD	(IY+%3),%3
                           A  2688    ;  353	                return;
                           A  2689    .LINE 353
                           A  2690    
040DC5 18 50               A  2691    	JR	L_177
                           A  2692    ;  354	            }
                           A  2693    .LINE 354
                           A  2694    
                           A  2695    ;  355	            break;
                           A  2696    .LINE 355
                           A  2697    
                           A  2698    ;  356	        case 'z':
040DC7                     A  2699    L_167:
                           A  2700    .LINE 356
                           A  2701    
                           A  2702    ;  357	            if(*ptr == 0) {
                           A  2703    .LINE 357
                           A  2704    
040DC7 DD27FD              A  2705    	LD	HL,(IX+%FFFFFFFD)
040DCA 7E                  A  2706    	LD	A,(HL)
040DCB B7                  A  2707    	OR	A,A
040DCC 20 0D               A  2708    	JR	NZ,L_176
                           A  2709    ;  358	                operand->cc = true;
                           A  2710    .LINE 358
                           A  2711    
040DCE 3E01                A  2712    	LD	A,%1
040DD0 DD3109              A  2713    	LD	IY,(IX+%9)
040DD3 FD7705              A  2714    	LD	(IY+%5),A
                           A  2715    ;  359	                operand->cc_index = CC_
                           A  2716    .LINE 359
                           A  2717    
040DD6 FD7706              A  2718    	LD	(IY+%6),A
                           A  2719    ;  360	                return;
                           A  2720    .LINE 360
                           A  2721    
040DD9 18 3C               A  2722    	JR	L_177
                           A  2723    ;  361	            }
                           A  2724    .LINE 361
                           A  2725    
                           A  2726    ;  362	            break;
                           A  2727    ;  363	        default:
                           A  2728    ;  364	            break;
                           A  2729    ;  365	    }
040DDB                     A  2730    L_176:
                           A  2731    .LINE 365
                           A  2732    
                           A  2733    ;  366	    if(*string) {
                           A  2734    .LINE 366
                           A  2735    
040DDB DD2706              A  2736    	LD	HL,(IX+%6)
040DDE 7E                  A  2737    	LD	A,(HL)
040DDF B7                  A  2738    	OR	A,A
040DE0 28 35               A  2739    	JR	Z,L_177
                           A  2740    ;  367	        if(operand->indirect) operand->
                           A  2741    .LINE 367
                           A  2742    
040DE2 DD3109              A  2743    	LD	IY,(IX+%9)
040DE5 FD7E04              A  2744    	LD	A,(IY+%4)
040DE8 B7                  A  2745    	OR	A,A
040DE9 28 12               A  2746    	JR	Z,L_173
040DEB DD0706              A  2747    	LD	BC,(IX+%6)
040DEE 03                  A  2748    	INC	BC
040DEF C5                  A  2749    	PUSH	BC
040DF0 CD A1 05 04         A  2750    	CALL	_getLabelValue
040DF4 C1                  A  2751    	POP	BC
040DF5 DD3109              A  2752    	LD	IY,(IX+%9)
040DF8 FD2F0B              A  2753    	LD	(IY+%B),HL
                           A  2754    ;  368	        else operand->immediate = getLa
                           A  2755    .LINE 368
                           A  2756    
040DFB 18 0F               A  2757    	JR	L_174
040DFD                     A  2758    L_173:
040DFD DD0706              A  2759    	LD	BC,(IX+%6)
040E00 C5                  A  2760    	PUSH	BC
040E01 CD A1 05 04         A  2761    	CALL	_getLabelValue
040E05 C1                  A  2762    	POP	BC
040E06 DD3109              A  2763    	LD	IY,(IX+%9)
040E09 FD2F0B              A  2764    	LD	(IY+%B),HL
040E0C                     A  2765    L_174:
                           A  2766    ;  369	        operand->immediate_provided = t
                           A  2767    .LINE 369
                           A  2768    
040E0C 3E01                A  2769    	LD	A,%1
040E0E DD3109              A  2770    	LD	IY,(IX+%9)
040E11 FD770A              A  2771    	LD	(IY+%A),A
                           A  2772    ;  370	        operand->wasLabel = true;
                           A  2773    .LINE 370
                           A  2774    
040E14 FD770E              A  2775    	LD	(IY+%E),A
                           A  2776    ;  371	    }
                           A  2777    ;  372	}
040E17                     A  2778    L_177:
                           A  2779    .LINE 372
                           A  2780    
040E17 DDF9                A  2781    	LD	SP,IX
040E19 DDE1                A  2782    	POP	IX
040E1B C9                  A  2783    	RET	
                           A  2784    
                           A  2785    
                           A  2786    ;**************************** _parse_operand **
                           A  2787    ;Name                         Addr/Register   S
                           A  2788    ;_str2num                            IMPORT  --
                           A  2789    ;_isdigit                            IMPORT  --
                           A  2790    ;_tolower                            IMPORT  --
                           A  2791    ;_message                            IMPORT  un
                           A  2792    ;_error                              IMPORT  --
                           A  2793    ;_strlen                             IMPORT  --
                           A  2794    ;G_3                                   IX-7    
                           A  2795    ;len                                   IX-4    
                           A  2796    ;ptr                                   IX-3    
                           A  2797    ;operand                               IX+9    
                           A  2798    ;string                                IX+6    
                           A  2799    
                           A  2800    
                           A  2801    ; Stack Frame Size: 64 (bytes)
                           A  2802    ;       Spill Code: 0 (instruction)
                           A  2803    
                           A  2804    
                           A  2805    .ENDFUNC "parse_operand",372,"_parse_operand"
                           A  2806    ;  373	
                           A  2807    ;  374	void parseLine(char *src) {
040E1C                     A  2808    _parseLine:
                           A  2809    .DEFINE "_parseLine"
                           A  2810    
                           A  2811    .VALUE _parseLine
                           A  2812    
                           A  2813    .CLASS 2
                           A  2814    
                           A  2815    .TYPE 65
                           A  2816    
                           A  2817    .ENDEF
                           A  2818    
                           A  2819    .BEGFUNC "parseLine",374,"_parseLine"
                           A  2820    
                           A  2821    .LINE 374
                           A  2822    
                           A  2823    .DEFINE "src"
                           A  2824    
                           A  2825    .CLASS 65
                           A  2826    
                           A  2827    .VALUE 6
                           A  2828    
                           A  2829    .TYPE 34
                           A  2830    
                           A  2831    .ENDEF
                           A  2832    
                           A  2833    .DEFINE "state"
                           A  2834    
                           A  2835    .CLASS 65
                           A  2836    
                           A  2837    .VALUE -1
                           A  2838    
                           A  2839    .TYPE 12
                           A  2840    
                           A  2841    .ENDEF
                           A  2842    
                           A  2843    .DEFINE "argcount"
                           A  2844    
                           A  2845    .CLASS 65
                           A  2846    
                           A  2847    .VALUE -2
                           A  2848    
                           A  2849    .TYPE 12
                           A  2850    
                           A  2851    .ENDEF
                           A  2852    
                           A  2853    .DEFINE "x"
                           A  2854    
                           A  2855    .CLASS 65
                           A  2856    
                           A  2857    .VALUE -3
                           A  2858    
                           A  2859    .TYPE 12
                           A  2860    
                           A  2861    .ENDEF
                           A  2862    
                           A  2863    .DEFINE "done"
                           A  2864    
                           A  2865    .CLASS 65
                           A  2866    
                           A  2867    .VALUE -4
                           A  2868    
                           A  2869    .TYPE 12
                           A  2870    
                           A  2871    .ENDEF
                           A  2872    
                           A  2873    .DEFINE "token"
                           A  2874    
                           A  2875    .CLASS 65
                           A  2876    
                           A  2877    .VALUE -140
                           A  2878    
                           A  2879    .TAG "NONAME11"
                           A  2880    
                           A  2881    .TYPE 8
                           A  2882    
                           A  2883    .ENDEF
                           A  2884    
040E1C DDE5                A  2885    	PUSH	IX
040E1E DD210000 00         A  2886    	LD	IX,0
040E23 DD39                A  2887    	ADD	IX,SP
040E25 2174FFFF            A  2888    	LD	HL,-140
040E29 39                  A  2889    	ADD	HL,SP
040E2A F9                  A  2890    	LD	SP,HL
                           A  2891    ;  375	    uint8_t x;
                           A  2892    ;  376	    bool done;
                           A  2893    ;  377	    uint8_t state;
                           A  2894    ;  378	    uint8_t argcount = 0;
                           A  2895    .LINE 378
                           A  2896    
040E2B DD36FE00            A  2897    	LD	(IX+%FFFFFFFE),%0
                           A  2898    ;  379	    tokentype token;
                           A  2899    ;  380	
                           A  2900    ;  381	    // default current line items
                           A  2901    ;  382	    currentline.current_instruction = N
                           A  2902    .LINE 382
                           A  2903    
040E2F 01000000            A  2904    	LD	BC,0
040E33 ED43 5F 87 04       A  2905    	LD	(_currentline),BC
                           A  2906    ;  383	    currentline.next = NULL;
                           A  2907    .LINE 383
                           A  2908    
040E38 ED43 62 87 04       A  2909    	LD	(_currentline+3),BC
                           A  2910    ;  384	    currentline.label[0] = 0;
                           A  2911    .LINE 384
                           A  2912    
040E3D AF                  A  2913    	XOR	A,A
040E3E 32 65 87 04         A  2914    	LD	(_currentline+6),A
                           A  2915    ;  385	    currentline.mnemonic[0] = 0;
                           A  2916    .LINE 385
                           A  2917    
040E42 AF                  A  2918    	XOR	A,A
040E43 32 85 87 04         A  2919    	LD	(_currentline+38),A
                           A  2920    ;  386	    currentline.suffix[0] = 0;
                           A  2921    .LINE 386
                           A  2922    
040E47 AF                  A  2923    	XOR	A,A
040E48 32 95 87 04         A  2924    	LD	(_currentline+54),A
                           A  2925    ;  387	    currentline.operand1[0] = 0;
                           A  2926    .LINE 387
                           A  2927    
040E4C AF                  A  2928    	XOR	A,A
040E4D 32 A5 87 04         A  2929    	LD	(_currentline+70),A
                           A  2930    ;  388	    currentline.operand2[0] = 0;
                           A  2931    .LINE 388
                           A  2932    
040E51 AF                  A  2933    	XOR	A,A
040E52 32 C5 87 04         A  2934    	LD	(_currentline+102),A
                           A  2935    ;  389	    currentline.comment[0] = 0;
                           A  2936    .LINE 389
                           A  2937    
040E56 AF                  A  2938    	XOR	A,A
040E57 32 E5 87 04         A  2939    	LD	(_currentline+134),A
                           A  2940    ;  390	    currentline.size = 0;
                           A  2941    .LINE 390
                           A  2942    
040E5B 21 65 88 04         A  2943    	LD	HL,_currentline+262
040E5F 3600                A  2944    	LD	(HL),%0
040E61 23                  A  2945    	INC	HL
040E62 3600                A  2946    	LD	(HL),%0
                           A  2947    ;  391	
                           A  2948    ;  392	    empty_operand(&operand1);
                           A  2949    .LINE 392
                           A  2950    
040E64 01 67 88 04         A  2951    	LD	BC,_operand1
040E68 C5                  A  2952    	PUSH	BC
040E69 CD 42 04 04         A  2953    	CALL	_empty_operand
040E6D C1                  A  2954    	POP	BC
                           A  2955    ;  393	    empty_operand(&operand2);
                           A  2956    .LINE 393
                           A  2957    
040E6E 01 76 88 04         A  2958    	LD	BC,_operand2
040E72 C5                  A  2959    	PUSH	BC
040E73 CD 42 04 04         A  2960    	CALL	_empty_operand
040E77 C1                  A  2961    	POP	BC
                           A  2962    ;  394	
                           A  2963    ;  395	    state = PS_START;
                           A  2964    .LINE 395
                           A  2965    
040E78 DD36FF00            A  2966    	LD	(IX+%FFFFFFFF),%0
                           A  2967    ;  396	    done = false;
                           A  2968    .LINE 396
                           A  2969    
040E7C DD36FC00            A  2970    	LD	(IX+%FFFFFFFC),%0
                           A  2971    ;  397	    while(!done) {
                           A  2972    .LINE 397
                           A  2973    
040E80 C3 0E 12 04         A  2974    	JR	L_227
040E84                     A  2975    L_228:
                           A  2976    ;  398	        switch(state) {
                           A  2977    .LINE 398
                           A  2978    
040E84 DD7EFF              A  2979    	LD	A,(IX+%FFFFFFFF)
040E87 B7ED62              A  2980    	UEXT	HL
040E8A 6F                  A  2981    	LD	L,A
040E8B CD A4 57 04         A  2982    	CALL	__seqcaseD
040E8F E9                  A  2983    	JP	(HL)
040E90                     A  2984    L__64:
040E90 0800                A  2985    	DW	8
040E92 0000                A  2986    	DW	0
040E94 00                  A  2987    	DB	0
040E95 B00E04              A  2988    	DW24	L_178	
                           A  2989    
040E98 790F04              A  2990    	DW24	L_192	
                           A  2991    
040E9B DB0F04              A  2992    	DW24	L_199	
                           A  2993    
040E9E 021104              A  2994    	DW24	L_213	
                           A  2995    
040EA1 0E1204              A  2996    	DW24	L_227	
                           A  2997    
040EA4 DF1104              A  2998    	DW24	L_224	
                           A  2999    
040EA7 0A1204              A  3000    	DW24	L_226	
                           A  3001    
040EAA FB1104              A  3002    	DW24	L_225	
                           A  3003    
040EAD 0E1204              A  3004    	DW24	L_227	
                           A  3005    
                           A  3006    ;  399	            case PS_START:
040EB0                     A  3007    L_178:
                           A  3008    .LINE 399
                           A  3009    
                           A  3010    ;  400	                if((isspace(*src) == 0)
                           A  3011    .LINE 400
                           A  3012    
040EB0 DD2706              A  3013    	LD	HL,(IX+%6)
040EB3 7E                  A  3014    	LD	A,(HL)
040EB4 47                  A  3015    	LD	B,A
040EB5 17ED62              A  3016    	SEXT	HL
040EB8 68                  A  3017    	LD	L,B
040EB9 E5                  A  3018    	PUSH	HL
040EBA CD FA 5D 04         A  3019    	CALL	_isspace
040EBE C1                  A  3020    	POP	BC
040EBF CD C5 5D 04         A  3021    	CALL	__icmpzero
040EC3 20 6C               A  3022    	JR	NZ,L_185
040EC5 DD2706              A  3023    	LD	HL,(IX+%6)
040EC8 7E                  A  3024    	LD	A,(HL)
040EC9 47                  A  3025    	LD	B,A
040ECA 17ED62              A  3026    	SEXT	HL
040ECD 68                  A  3027    	LD	L,B
040ECE 012E0000            A  3028    	LD	BC,46
040ED2 B7                  A  3029    	OR	A,A
040ED3 ED42                A  3030    	SBC	HL,BC
040ED5 28 5A               A  3031    	JR	Z,L_185
                           A  3032    ;  401	                    getLineToken(&token
                           A  3033    .LINE 401
                           A  3034    
040ED7 013A0000            A  3035    	LD	BC,58
040EDB C5                  A  3036    	PUSH	BC
040EDC DD0706              A  3037    	LD	BC,(IX+%6)
040EDF C5                  A  3038    	PUSH	BC
040EE0 DDE5E1              A  3039    	LD	HL,IX
040EE3 0174FFFF            A  3040    	LD	BC,-140
040EE7 09                  A  3041    	ADD	HL,BC
040EE8 E5C1                A  3042    	LD	BC,HL
040EEA C5                  A  3043    	PUSH	BC
040EEB CD 0B 4D 04         A  3044    	CALL	_getLineToken
040EEF C1                  A  3045    	POP	BC
040EF0 C1                  A  3046    	POP	BC
040EF1 C1                  A  3047    	POP	BC
                           A  3048    ;  402	                    switch(token.termin
                           A  3049    .LINE 402
                           A  3050    
040EF2 DD7EF8              A  3051    	LD	A,(IX+%FFFFFFF8)
040EF5 17ED62              A  3052    	SEXT	HL
040EF8 DD6EF8              A  3053    	LD	L,(IX+%FFFFFFF8)
040EFB CD B7 60 04         A  3054    	CALL	__case8D
040EFF E9                  A  3055    	JP	(HL)
040F00                     A  3056    L__67:
040F00 0200                A  3057    	DW	2
040F02 3A                  A  3058    	DB	58
040F03 0D0F04              A  3059    	DW24	L_180	
                           A  3060    
040F06 3B                  A  3061    	DB	59
040F07 150F04              A  3062    	DW24	L_181	
                           A  3063    
040F0A 1D0F04              A  3064    	DW24	L_182	
                           A  3065    
                           A  3066    ;  403	                        case ':':
040F0D                     A  3067    L_180:
                           A  3068    .LINE 403
                           A  3069    
                           A  3070    ;  404	                            state = PS_
                           A  3071    .LINE 404
                           A  3072    
040F0D DD36FF01            A  3073    	LD	(IX+%FFFFFFFF),%1
                           A  3074    ;  405	                            break;
                           A  3075    .LINE 405
                           A  3076    
040F11 C3 0E 12 04         A  3077    	JR	L_227
                           A  3078    ;  406	                        case ';':
040F15                     A  3079    L_181:
                           A  3080    .LINE 406
                           A  3081    
                           A  3082    ;  407	                            state = PS_
                           A  3083    .LINE 407
                           A  3084    
040F15 DD36FF05            A  3085    	LD	(IX+%FFFFFFFF),%5
                           A  3086    ;  408	                            break;
                           A  3087    .LINE 408
                           A  3088    
040F19 C3 0E 12 04         A  3089    	JR	L_227
                           A  3090    ;  409	                        default:
040F1D                     A  3091    L_182:
                           A  3092    .LINE 409
                           A  3093    
                           A  3094    ;  410	                            error(messa
                           A  3095    .LINE 410
                           A  3096    
040F1D 21 4E 64 04         A  3097    	LD	HL,_message+12
040F21 ED07                A  3098    	LD	BC,(HL)
040F23 C5                  A  3099    	PUSH	BC
040F24 CD DC 4B 04         A  3100    	CALL	_error
040F28 C1                  A  3101    	POP	BC
                           A  3102    ;  411	                            state = PS_
                           A  3103    .LINE 411
                           A  3104    
040F29 DD36FF07            A  3105    	LD	(IX+%FFFFFFFF),%7
                           A  3106    ;  412	                            break;
                           A  3107    .LINE 412
                           A  3108    
040F2D C3 0E 12 04         A  3109    	JR	L_227
                           A  3110    ;  413	                    }
                           A  3111    ;  414	                    break;
                           A  3112    ;  415	                }
040F31                     A  3113    L_185:
                           A  3114    .LINE 415
                           A  3115    
                           A  3116    ;  416	                x = getLineToken(&token
                           A  3117    .LINE 416
                           A  3118    
040F31 01200000            A  3119    	LD	BC,32
040F35 C5                  A  3120    	PUSH	BC
040F36 DD0706              A  3121    	LD	BC,(IX+%6)
040F39 C5                  A  3122    	PUSH	BC
040F3A DDE5E1              A  3123    	LD	HL,IX
040F3D 0174FFFF            A  3124    	LD	BC,-140
040F41 09                  A  3125    	ADD	HL,BC
040F42 E5C1                A  3126    	LD	BC,HL
040F44 C5                  A  3127    	PUSH	BC
040F45 CD 0B 4D 04         A  3128    	CALL	_getLineToken
040F49 C1                  A  3129    	POP	BC
040F4A C1                  A  3130    	POP	BC
040F4B C1                  A  3131    	POP	BC
040F4C DD77FD              A  3132    	LD	(IX+%FFFFFFFD),A
                           A  3133    ;  417	                if(x) state = PS_COMMAN
                           A  3134    .LINE 417
                           A  3135    
040F4F B7                  A  3136    	OR	A,A
040F50 28 08               A  3137    	JR	Z,L_190
040F52 DD36FF02            A  3138    	LD	(IX+%FFFFFFFF),%2
                           A  3139    ;  418	                else {
                           A  3140    .LINE 418
                           A  3141    
040F56 C3 0E 12 04         A  3142    	JR	L_227
040F5A                     A  3143    L_190:
                           A  3144    ;  419	                    if(token.terminator
                           A  3145    .LINE 419
                           A  3146    
040F5A DD7EF8              A  3147    	LD	A,(IX+%FFFFFFF8)
040F5D B7                  A  3148    	OR	A,A
040F5E 20 08               A  3149    	JR	NZ,L_188
                           A  3150    ;  420	                        state = PS_DONE
                           A  3151    .LINE 420
                           A  3152    
040F60 DD36FF06            A  3153    	LD	(IX+%FFFFFFFF),%6
                           A  3154    ;  421	                        break;
                           A  3155    .LINE 421
                           A  3156    
040F64 C3 0E 12 04         A  3157    	JR	L_227
                           A  3158    ;  422	                    }
040F68                     A  3159    L_188:
                           A  3160    .LINE 422
                           A  3161    
                           A  3162    ;  423	                    if(token.terminator
                           A  3163    .LINE 423
                           A  3164    
040F68 DD7EF8              A  3165    	LD	A,(IX+%FFFFFFF8)
040F6B FE3B                A  3166    	CP	A,%3B
040F6D C2 0E 12 04         A  3167    	JR	NZ,L_227
                           A  3168    ;  424	                        state = PS_COMM
                           A  3169    .LINE 424
                           A  3170    
040F71 DD36FF05            A  3171    	LD	(IX+%FFFFFFFF),%5
                           A  3172    ;  425	                        break;
                           A  3173    .LINE 425
                           A  3174    
040F75 C3 0E 12 04         A  3175    	JR	L_227
                           A  3176    ;  426	                    }
                           A  3177    ;  427	                }
                           A  3178    .LINE 427
                           A  3179    
                           A  3180    ;  428	                break;
                           A  3181    .LINE 428
                           A  3182    
                           A  3183    ;  429	            case PS_LABEL:
040F79                     A  3184    L_192:
                           A  3185    .LINE 429
                           A  3186    
                           A  3187    ;  430	                strcpy(currentline.labe
                           A  3188    .LINE 430
                           A  3189    
040F79 DDE5E1              A  3190    	LD	HL,IX
040F7C 0174FFFF            A  3191    	LD	BC,-140
040F80 09                  A  3192    	ADD	HL,BC
040F81 E5C1                A  3193    	LD	BC,HL
040F83 C5                  A  3194    	PUSH	BC
040F84 01 65 87 04         A  3195    	LD	BC,_currentline+6
040F88 C5                  A  3196    	PUSH	BC
040F89 CD 09 61 04         A  3197    	CALL	_strcpy
040F8D C1                  A  3198    	POP	BC
040F8E C1                  A  3199    	POP	BC
                           A  3200    ;  431	                advanceLocalLabel();
                           A  3201    .LINE 431
                           A  3202    
040F8F CD 7D 04 04         A  3203    	CALL	_advanceLocalLabel
                           A  3204    ;  432	                x = getLineToken(&token
                           A  3205    .LINE 432
                           A  3206    
040F93 01200000            A  3207    	LD	BC,32
040F97 C5                  A  3208    	PUSH	BC
040F98 DD07F5              A  3209    	LD	BC,(IX+%FFFFFFF5)
040F9B C5                  A  3210    	PUSH	BC
040F9C DDE5E1              A  3211    	LD	HL,IX
040F9F 0174FFFF            A  3212    	LD	BC,-140
040FA3 09                  A  3213    	ADD	HL,BC
040FA4 E5C1                A  3214    	LD	BC,HL
040FA6 C5                  A  3215    	PUSH	BC
040FA7 CD 0B 4D 04         A  3216    	CALL	_getLineToken
040FAB C1                  A  3217    	POP	BC
040FAC C1                  A  3218    	POP	BC
040FAD C1                  A  3219    	POP	BC
040FAE DD77FD              A  3220    	LD	(IX+%FFFFFFFD),A
                           A  3221    ;  433	                if(x) state = PS_COMMAN
                           A  3222    .LINE 433
                           A  3223    
040FB1 B7                  A  3224    	OR	A,A
040FB2 28 08               A  3225    	JR	Z,L_197
040FB4 DD36FF02            A  3226    	LD	(IX+%FFFFFFFF),%2
                           A  3227    ;  434	                else {
                           A  3228    .LINE 434
                           A  3229    
040FB8 C3 0E 12 04         A  3230    	JR	L_227
040FBC                     A  3231    L_197:
                           A  3232    ;  435	                    if(token.terminator
                           A  3233    .LINE 435
                           A  3234    
040FBC DD7EF8              A  3235    	LD	A,(IX+%FFFFFFF8)
040FBF B7                  A  3236    	OR	A,A
040FC0 20 08               A  3237    	JR	NZ,L_195
                           A  3238    ;  436	                        state = PS_DONE
                           A  3239    .LINE 436
                           A  3240    
040FC2 DD36FF06            A  3241    	LD	(IX+%FFFFFFFF),%6
                           A  3242    ;  437	                        break;
                           A  3243    .LINE 437
                           A  3244    
040FC6 C3 0E 12 04         A  3245    	JR	L_227
                           A  3246    ;  438	                    }
040FCA                     A  3247    L_195:
                           A  3248    .LINE 438
                           A  3249    
                           A  3250    ;  439	                    if(token.terminator
                           A  3251    .LINE 439
                           A  3252    
040FCA DD7EF8              A  3253    	LD	A,(IX+%FFFFFFF8)
040FCD FE3B                A  3254    	CP	A,%3B
040FCF C2 0E 12 04         A  3255    	JR	NZ,L_227
                           A  3256    ;  440	                        state = PS_COMM
                           A  3257    .LINE 440
                           A  3258    
040FD3 DD36FF05            A  3259    	LD	(IX+%FFFFFFFF),%5
                           A  3260    ;  441	                        break;
                           A  3261    .LINE 441
                           A  3262    
040FD7 C3 0E 12 04         A  3263    	JR	L_227
                           A  3264    ;  442	                    }
                           A  3265    ;  443	                }
                           A  3266    .LINE 443
                           A  3267    
                           A  3268    ;  444	                break;
                           A  3269    .LINE 444
                           A  3270    
                           A  3271    ;  445	            case PS_COMMAND:
040FDB                     A  3272    L_199:
                           A  3273    .LINE 445
                           A  3274    
                           A  3275    ;  446	                if(token.start[0] == '.
                           A  3276    .LINE 446
                           A  3277    
040FDB DDE5E1              A  3278    	LD	HL,IX
040FDE 0174FFFF            A  3279    	LD	BC,-140
040FE2 09                  A  3280    	ADD	HL,BC
040FE3 DD2FF9              A  3281    	LD	(IX+%FFFFFFF9),HL
040FE6 7E                  A  3282    	LD	A,(HL)
040FE7 47                  A  3283    	LD	B,A
040FE8 17ED62              A  3284    	SEXT	HL
040FEB 68                  A  3285    	LD	L,B
040FEC 012E0000            A  3286    	LD	BC,46
040FF0 B7                  A  3287    	OR	A,A
040FF1 ED42                A  3288    	SBC	HL,BC
040FF3 20 12               A  3289    	JR	NZ,L_201
040FF5 DD07F9              A  3290    	LD	BC,(IX+%FFFFFFF9)
040FF8 03                  A  3291    	INC	BC
040FF9 C5                  A  3292    	PUSH	BC
040FFA 01 85 87 04         A  3293    	LD	BC,_currentline+38
040FFE C5                  A  3294    	PUSH	BC
040FFF CD 09 61 04         A  3295    	CALL	_strcpy
041003 C1                  A  3296    	POP	BC
041004 C1                  A  3297    	POP	BC
                           A  3298    ;  447	                else split_suffix(curre
                           A  3299    .LINE 447
                           A  3300    
041005 18 15               A  3301    	JR	L_202
041007                     A  3302    L_201:
041007 DD07F9              A  3303    	LD	BC,(IX+%FFFFFFF9)
04100A C5                  A  3304    	PUSH	BC
04100B 01 95 87 04         A  3305    	LD	BC,_currentline+54
04100F C5                  A  3306    	PUSH	BC
041010 01 85 87 04         A  3307    	LD	BC,_currentline+38
041014 C5                  A  3308    	PUSH	BC
041015 CD 9C 4C 04         A  3309    	CALL	_split_suffix
041019 C1                  A  3310    	POP	BC
04101A C1                  A  3311    	POP	BC
04101B C1                  A  3312    	POP	BC
04101C                     A  3313    L_202:
                           A  3314    ;  448	
                           A  3315    ;  449	                currentline.current_ins
                           A  3316    .LINE 449
                           A  3317    
04101C 01 85 87 04         A  3318    	LD	BC,_currentline+38
041020 C5                  A  3319    	PUSH	BC
041021 CD 7E 37 04         A  3320    	CALL	_instruction_table_lookup
041025 C1                  A  3321    	POP	BC
041026 22 5F 87 04         A  3322    	LD	(_currentline),HL
                           A  3323    ;  450	                if(currentline.current_
                           A  3324    .LINE 450
                           A  3325    
04102A CD C5 5D 04         A  3326    	CALL	__icmpzero
04102E 20 14               A  3327    	JR	NZ,L_205
                           A  3328    ;  451	                    error(message[ERROR
                           A  3329    .LINE 451
                           A  3330    
041030 21 54 64 04         A  3331    	LD	HL,_message+18
041034 ED07                A  3332    	LD	BC,(HL)
041036 C5                  A  3333    	PUSH	BC
041037 CD DC 4B 04         A  3334    	CALL	_error
04103B C1                  A  3335    	POP	BC
                           A  3336    ;  452	                    state = PS_ERROR;
                           A  3337    .LINE 452
                           A  3338    
04103C DD36FF07            A  3339    	LD	(IX+%FFFFFFFF),%7
                           A  3340    ;  453	                    break;
                           A  3341    .LINE 453
                           A  3342    
041040 C3 0E 12 04         A  3343    	JR	L_227
                           A  3344    ;  454	                }
041044                     A  3345    L_205:
                           A  3346    .LINE 454
                           A  3347    
                           A  3348    ;  455	                if(currentline.current_
                           A  3349    .LINE 455
                           A  3350    
041044 FD2A 5F 87 04       A  3351    	LD	IY,(_currentline)
041049 FD7E08              A  3352    	LD	A,(IY+%8)
04104C FE01                A  3353    	CP	A,%1
04104E 20 10               A  3354    	JR	NZ,L_207
                           A  3355    ;  456	                    currentline.next = 
                           A  3356    .LINE 456
                           A  3357    
041050 DD07F5              A  3358    	LD	BC,(IX+%FFFFFFF5)
041053 ED43 62 87 04       A  3359    	LD	(_currentline+3),BC
                           A  3360    ;  457	                    state = PS_DONE;
                           A  3361    .LINE 457
                           A  3362    
041058 DD36FF06            A  3363    	LD	(IX+%FFFFFFFF),%6
                           A  3364    ;  458	                    break;
                           A  3365    .LINE 458
                           A  3366    
04105C C3 0E 12 04         A  3367    	JR	L_227
                           A  3368    ;  459	                }
041060                     A  3369    L_207:
                           A  3370    .LINE 459
                           A  3371    
                           A  3372    ;  460	                if(token.start[0] == '.
                           A  3373    .LINE 460
                           A  3374    
041060 2174FFFF            A  3375    	LD	HL,-140
041064 DDE5C1              A  3376    	LD	BC,IX
041067 09                  A  3377    	ADD	HL,BC
041068 7E                  A  3378    	LD	A,(HL)
041069 47                  A  3379    	LD	B,A
04106A 17ED62              A  3380    	SEXT	HL
04106D 68                  A  3381    	LD	L,B
04106E 012E0000            A  3382    	LD	BC,46
041072 B7                  A  3383    	OR	A,A
041073 ED42                A  3384    	SBC	HL,BC
041075 20 19               A  3385    	JR	NZ,L_211
                           A  3386    ;  461	                    error(message[ERROR
                           A  3387    .LINE 461
                           A  3388    
041077 21 54 64 04         A  3389    	LD	HL,_message+18
04107B ED07                A  3390    	LD	BC,(HL)
04107D C5                  A  3391    	PUSH	BC
04107E CD DC 4B 04         A  3392    	CALL	_error
041082 C1                  A  3393    	POP	BC
                           A  3394    ;  462	                    currentline.mnemoni
                           A  3395    .LINE 462
                           A  3396    
041083 AF                  A  3397    	XOR	A,A
041084 32 85 87 04         A  3398    	LD	(_currentline+38),A
                           A  3399    ;  463	                    state = PS_ERROR;  
                           A  3400    .LINE 463
                           A  3401    
041088 DD36FF07            A  3402    	LD	(IX+%FFFFFFFF),%7
                           A  3403    ;  464	                    break;
                           A  3404    .LINE 464
                           A  3405    
04108C C3 0E 12 04         A  3406    	JR	L_227
                           A  3407    ;  465	                }
041090                     A  3408    L_211:
                           A  3409    .LINE 465
                           A  3410    
                           A  3411    ;  466	                // Valid EZ80 instructi
                           A  3412    ;  467	                switch(token.terminator
                           A  3413    .LINE 467
                           A  3414    
041090 DD7EF8              A  3415    	LD	A,(IX+%FFFFFFF8)
041093 17ED62              A  3416    	SEXT	HL
041096 DD6EF8              A  3417    	LD	L,(IX+%FFFFFFF8)
041099 CD B7 60 04         A  3418    	CALL	__case8D
04109D E9                  A  3419    	JP	(HL)
04109E                     A  3420    L__78:
04109E 0200                A  3421    	DW	2
0410A0 00                  A  3422    	DB	0
0410A1 CE1004              A  3423    	DW24	L_209	
                           A  3424    
0410A4 3B                  A  3425    	DB	59
0410A5 AB1004              A  3426    	DW24	L_208	
                           A  3427    
0410A8 DF1004              A  3428    	DW24	L_210	
                           A  3429    
                           A  3430    ;  468	                    case ';':
0410AB                     A  3431    L_208:
                           A  3432    .LINE 468
                           A  3433    
                           A  3434    ;  469	                        getLineToken(&t
                           A  3435    .LINE 469
                           A  3436    
0410AB 01000000            A  3437    	LD	BC,0
0410AF C5                  A  3438    	PUSH	BC
0410B0 DD07F5              A  3439    	LD	BC,(IX+%FFFFFFF5)
0410B3 C5                  A  3440    	PUSH	BC
0410B4 DDE5E1              A  3441    	LD	HL,IX
0410B7 0174FFFF            A  3442    	LD	BC,-140
0410BB 09                  A  3443    	ADD	HL,BC
0410BC E5C1                A  3444    	LD	BC,HL
0410BE C5                  A  3445    	PUSH	BC
0410BF CD 0B 4D 04         A  3446    	CALL	_getLineToken
0410C3 C1                  A  3447    	POP	BC
0410C4 C1                  A  3448    	POP	BC
0410C5 C1                  A  3449    	POP	BC
                           A  3450    ;  470	                        state = PS_COMM
                           A  3451    .LINE 470
                           A  3452    
0410C6 DD36FF05            A  3453    	LD	(IX+%FFFFFFFF),%5
                           A  3454    ;  471	                        break;
                           A  3455    .LINE 471
                           A  3456    
0410CA C3 0E 12 04         A  3457    	JR	L_227
                           A  3458    ;  472	                    case 0:
0410CE                     A  3459    L_209:
                           A  3460    .LINE 472
                           A  3461    
                           A  3462    ;  473	                        currentline.nex
                           A  3463    .LINE 473
                           A  3464    
0410CE 01000000            A  3465    	LD	BC,0
0410D2 ED43 62 87 04       A  3466    	LD	(_currentline+3),BC
                           A  3467    ;  474	                        state = PS_DONE
                           A  3468    .LINE 474
                           A  3469    
0410D7 DD36FF06            A  3470    	LD	(IX+%FFFFFFFF),%6
                           A  3471    ;  475	                        break;
                           A  3472    .LINE 475
                           A  3473    
0410DB C3 0E 12 04         A  3474    	JR	L_227
                           A  3475    ;  476	                    default:
0410DF                     A  3476    L_210:
                           A  3477    .LINE 476
                           A  3478    
                           A  3479    ;  477	                        getLineToken(&t
                           A  3480    .LINE 477
                           A  3481    
0410DF 012C0000            A  3482    	LD	BC,44
0410E3 C5                  A  3483    	PUSH	BC
0410E4 DD07F5              A  3484    	LD	BC,(IX+%FFFFFFF5)
0410E7 C5                  A  3485    	PUSH	BC
0410E8 DDE5E1              A  3486    	LD	HL,IX
0410EB 0174FFFF            A  3487    	LD	BC,-140
0410EF 09                  A  3488    	ADD	HL,BC
0410F0 E5C1                A  3489    	LD	BC,HL
0410F2 C5                  A  3490    	PUSH	BC
0410F3 CD 0B 4D 04         A  3491    	CALL	_getLineToken
0410F7 C1                  A  3492    	POP	BC
0410F8 C1                  A  3493    	POP	BC
0410F9 C1                  A  3494    	POP	BC
                           A  3495    ;  478	                        state = PS_OP1;
                           A  3496    .LINE 478
                           A  3497    
0410FA DD36FF03            A  3498    	LD	(IX+%FFFFFFFF),%3
                           A  3499    ;  479	                        break;
                           A  3500    .LINE 479
                           A  3501    
0410FE C3 0E 12 04         A  3502    	JR	L_227
                           A  3503    ;  480	                }                
                           A  3504    ;  481	                break;
                           A  3505    ;  482	            case PS_OP1:
041102                     A  3506    L_213:
                           A  3507    .LINE 482
                           A  3508    
                           A  3509    ;  483	                argcount++;
                           A  3510    .LINE 483
                           A  3511    
041102 DD34FE              A  3512    	INC	(IX+%FFFFFFFE)
                           A  3513    ;  484	                if(argcount == 1) {
                           A  3514    .LINE 484
                           A  3515    
041105 DD7EFE              A  3516    	LD	A,(IX+%FFFFFFFE)
041108 FE01                A  3517    	CP	A,%1
04110A 20 28               A  3518    	JR	NZ,L_216
                           A  3519    ;  485	                    strcpy(currentline.
                           A  3520    .LINE 485
                           A  3521    
04110C DDE5E1              A  3522    	LD	HL,IX
04110F 0174FFFF            A  3523    	LD	BC,-140
041113 09                  A  3524    	ADD	HL,BC
041114 E5C1                A  3525    	LD	BC,HL
041116 C5                  A  3526    	PUSH	BC
041117 01 A5 87 04         A  3527    	LD	BC,_currentline+70
04111B C5                  A  3528    	PUSH	BC
04111C CD 09 61 04         A  3529    	CALL	_strcpy
041120 C1                  A  3530    	POP	BC
041121 C1                  A  3531    	POP	BC
                           A  3532    ;  486	                    parse_operand(curre
                           A  3533    .LINE 486
                           A  3534    
041122 01 67 88 04         A  3535    	LD	BC,_operand1
041126 C5                  A  3536    	PUSH	BC
041127 01 A5 87 04         A  3537    	LD	BC,_currentline+70
04112B C5                  A  3538    	PUSH	BC
04112C CD 02 07 04         A  3539    	CALL	_parse_operand
041130 C1                  A  3540    	POP	BC
041131 C1                  A  3541    	POP	BC
                           A  3542    ;  487	                }
                           A  3543    ;  488	                else {
                           A  3544    .LINE 488
                           A  3545    
041132 18 26               A  3546    	JR	L_222
041134                     A  3547    L_216:
                           A  3548    ;  489	                    strcpy(currentline.
                           A  3549    .LINE 489
                           A  3550    
041134 DDE5E1              A  3551    	LD	HL,IX
041137 0174FFFF            A  3552    	LD	BC,-140
04113B 09                  A  3553    	ADD	HL,BC
04113C E5C1                A  3554    	LD	BC,HL
04113E C5                  A  3555    	PUSH	BC
04113F 01 C5 87 04         A  3556    	LD	BC,_currentline+102
041143 C5                  A  3557    	PUSH	BC
041144 CD 09 61 04         A  3558    	CALL	_strcpy
041148 C1                  A  3559    	POP	BC
041149 C1                  A  3560    	POP	BC
                           A  3561    ;  490	                    parse_operand(curre
                           A  3562    .LINE 490
                           A  3563    
04114A 01 76 88 04         A  3564    	LD	BC,_operand2
04114E C5                  A  3565    	PUSH	BC
04114F 01 C5 87 04         A  3566    	LD	BC,_currentline+102
041153 C5                  A  3567    	PUSH	BC
041154 CD 02 07 04         A  3568    	CALL	_parse_operand
041158 C1                  A  3569    	POP	BC
041159 C1                  A  3570    	POP	BC
                           A  3571    ;  491	                }
04115A                     A  3572    L_222:
                           A  3573    .LINE 491
                           A  3574    
                           A  3575    ;  492	                switch(token.terminator
                           A  3576    .LINE 492
                           A  3577    
04115A DD7EF8              A  3578    	LD	A,(IX+%FFFFFFF8)
04115D 17ED62              A  3579    	SEXT	HL
041160 DD6EF8              A  3580    	LD	L,(IX+%FFFFFFF8)
041163 CD B7 60 04         A  3581    	CALL	__case8D
041167 E9                  A  3582    	JP	(HL)
041168                     A  3583    L__80:
041168 0300                A  3584    	DW	3
04116A 00                  A  3585    	DB	0
04116B 9A1104              A  3586    	DW24	L_218	
                           A  3587    
04116E 2C                  A  3588    	DB	44
04116F A91104              A  3589    	DW24	L_219	
                           A  3590    
041172 3B                  A  3591    	DB	59
041173 791104              A  3592    	DW24	L_217	
                           A  3593    
041176 0E1204              A  3594    	DW24	L_227	
                           A  3595    
                           A  3596    ;  493	                    case ';':
041179                     A  3597    L_217:
                           A  3598    .LINE 493
                           A  3599    
                           A  3600    ;  494	                        getLineToken(&t
                           A  3601    .LINE 494
                           A  3602    
041179 01000000            A  3603    	LD	BC,0
04117D C5                  A  3604    	PUSH	BC
04117E DD07F5              A  3605    	LD	BC,(IX+%FFFFFFF5)
041181 C5                  A  3606    	PUSH	BC
041182 DDE5E1              A  3607    	LD	HL,IX
041185 0174FFFF            A  3608    	LD	BC,-140
041189 09                  A  3609    	ADD	HL,BC
04118A E5C1                A  3610    	LD	BC,HL
04118C C5                  A  3611    	PUSH	BC
04118D CD 0B 4D 04         A  3612    	CALL	_getLineToken
041191 C1                  A  3613    	POP	BC
041192 C1                  A  3614    	POP	BC
041193 C1                  A  3615    	POP	BC
                           A  3616    ;  495	                        state = PS_COMM
                           A  3617    .LINE 495
                           A  3618    
041194 DD36FF05            A  3619    	LD	(IX+%FFFFFFFF),%5
                           A  3620    ;  496	                        break;
                           A  3621    .LINE 496
                           A  3622    
041198 18 74               A  3623    	JR	L_227
                           A  3624    ;  497	                    case 0:
04119A                     A  3625    L_218:
                           A  3626    .LINE 497
                           A  3627    
                           A  3628    ;  498	                        currentline.nex
                           A  3629    .LINE 498
                           A  3630    
04119A 01000000            A  3631    	LD	BC,0
04119E ED43 62 87 04       A  3632    	LD	(_currentline+3),BC
                           A  3633    ;  499	                        state = PS_DONE
                           A  3634    .LINE 499
                           A  3635    
0411A3 DD36FF06            A  3636    	LD	(IX+%FFFFFFFF),%6
                           A  3637    ;  500	                        break;
                           A  3638    .LINE 500
                           A  3639    
0411A7 18 65               A  3640    	JR	L_227
                           A  3641    ;  501	                    case ',':
0411A9                     A  3642    L_219:
                           A  3643    .LINE 501
                           A  3644    
                           A  3645    ;  502	                        if(argcount == 
                           A  3646    .LINE 502
                           A  3647    
0411A9 DD7EFE              A  3648    	LD	A,(IX+%FFFFFFFE)
0411AC FE02                A  3649    	CP	A,%2
0411AE 20 12               A  3650    	JR	NZ,L_221
                           A  3651    ;  503	                            error(messa
                           A  3652    .LINE 503
                           A  3653    
0411B0 21 99 64 04         A  3654    	LD	HL,_message+87
0411B4 ED07                A  3655    	LD	BC,(HL)
0411B6 C5                  A  3656    	PUSH	BC
0411B7 CD DC 4B 04         A  3657    	CALL	_error
0411BB C1                  A  3658    	POP	BC
                           A  3659    ;  504	                            state = PS_
                           A  3660    .LINE 504
                           A  3661    
0411BC DD36FF07            A  3662    	LD	(IX+%FFFFFFFF),%7
                           A  3663    ;  505	                            break;
                           A  3664    .LINE 505
                           A  3665    
0411C0 18 4C               A  3666    	JR	L_227
                           A  3667    ;  506	                        }
0411C2                     A  3668    L_221:
                           A  3669    .LINE 506
                           A  3670    
                           A  3671    ;  507	                        getLineToken(&t
                           A  3672    .LINE 507
                           A  3673    
0411C2 012C0000            A  3674    	LD	BC,44
0411C6 C5                  A  3675    	PUSH	BC
0411C7 DD07F5              A  3676    	LD	BC,(IX+%FFFFFFF5)
0411CA C5                  A  3677    	PUSH	BC
0411CB DDE5E1              A  3678    	LD	HL,IX
0411CE 0174FFFF            A  3679    	LD	BC,-140
0411D2 09                  A  3680    	ADD	HL,BC
0411D3 E5C1                A  3681    	LD	BC,HL
0411D5 C5                  A  3682    	PUSH	BC
0411D6 CD 0B 4D 04         A  3683    	CALL	_getLineToken
0411DA C1                  A  3684    	POP	BC
0411DB C1                  A  3685    	POP	BC
0411DC C1                  A  3686    	POP	BC
                           A  3687    ;  508	                        break;
                           A  3688    .LINE 508
                           A  3689    
0411DD 18 2F               A  3690    	JR	L_227
                           A  3691    ;  509	                }
                           A  3692    ;  510	                break;
                           A  3693    ;  511	            case PS_COMMENT:
0411DF                     A  3694    L_224:
                           A  3695    .LINE 511
                           A  3696    
                           A  3697    ;  512	                strcpy(currentline.comm
                           A  3698    .LINE 512
                           A  3699    
0411DF DDE5E1              A  3700    	LD	HL,IX
0411E2 0174FFFF            A  3701    	LD	BC,-140
0411E6 09                  A  3702    	ADD	HL,BC
0411E7 E5C1                A  3703    	LD	BC,HL
0411E9 C5                  A  3704    	PUSH	BC
0411EA 01 E5 87 04         A  3705    	LD	BC,_currentline+134
0411EE C5                  A  3706    	PUSH	BC
0411EF CD 09 61 04         A  3707    	CALL	_strcpy
0411F3 C1                  A  3708    	POP	BC
0411F4 C1                  A  3709    	POP	BC
                           A  3710    ;  513	                state = PS_DONE;
                           A  3711    .LINE 513
                           A  3712    
0411F5 DD36FF06            A  3713    	LD	(IX+%FFFFFFFF),%6
                           A  3714    ;  514	                break;
                           A  3715    .LINE 514
                           A  3716    
0411F9 18 13               A  3717    	JR	L_227
                           A  3718    ;  515	            case PS_ERROR:
0411FB                     A  3719    L_225:
                           A  3720    .LINE 515
                           A  3721    
                           A  3722    ;  516	                //error(message[ERROR_P
                           A  3723    ;  517	                currentline.next = NULL
                           A  3724    .LINE 517
                           A  3725    
0411FB 01000000            A  3726    	LD	BC,0
0411FF ED43 62 87 04       A  3727    	LD	(_currentline+3),BC
                           A  3728    ;  518	                state = PS_DONE;
                           A  3729    .LINE 518
                           A  3730    
041204 DD36FF06            A  3731    	LD	(IX+%FFFFFFFF),%6
                           A  3732    ;  519	                break;
                           A  3733    .LINE 519
                           A  3734    
041208 18 04               A  3735    	JR	L_227
                           A  3736    ;  520	            case PS_DONE:
04120A                     A  3737    L_226:
                           A  3738    .LINE 520
                           A  3739    
                           A  3740    ;  521	                done = true;
                           A  3741    .LINE 521
                           A  3742    
04120A DD36FC01            A  3743    	LD	(IX+%FFFFFFFC),%1
                           A  3744    ;  522	                break;
                           A  3745    ;  523	        }
                           A  3746    ;  524	    }
04120E                     A  3747    L_227:
                           A  3748    .LINE 524
                           A  3749    
04120E DD7EFC              A  3750    	LD	A,(IX+%FFFFFFFC)
041211 B7                  A  3751    	OR	A,A
041212 CA 84 0E 04         A  3752    	JR	Z,L_228
                           A  3753    ;  525	}
                           A  3754    .LINE 525
                           A  3755    
041216 DDF9                A  3756    	LD	SP,IX
041218 DDE1                A  3757    	POP	IX
04121A C9                  A  3758    	RET	
                           A  3759    
                           A  3760    
                           A  3761    ;**************************** _parseLine ******
                           A  3762    ;Name                         Addr/Register   S
                           A  3763    ;_instruction_table_lookup           IMPORT  --
                           A  3764    ;_split_suffix                       IMPORT  --
                           A  3765    ;_strcpy                             IMPORT  --
                           A  3766    ;_message                            IMPORT  un
                           A  3767    ;_error                              IMPORT  --
                           A  3768    ;_getLineToken                       IMPORT  --
                           A  3769    ;_isspace                            IMPORT  --
                           A  3770    ;_operand2                           IMPORT    
                           A  3771    ;_operand1                           IMPORT    
                           A  3772    ;_currentline                        IMPORT    
                           A  3773    ;token                               IX-140    
                           A  3774    ;G_4                                   IX-7    
                           A  3775    ;done                                  IX-4    
                           A  3776    ;x                                     IX-3    
                           A  3777    ;argcount                              IX-2    
                           A  3778    ;state                                 IX-1    
                           A  3779    ;src                                   IX+6    
                           A  3780    
                           A  3781    
                           A  3782    ; Stack Frame Size: 149 (bytes)
                           A  3783    ;       Spill Code: 0 (instruction)
                           A  3784    
                           A  3785    
                           A  3786    .ENDFUNC "parseLine",525,"_parseLine"
                           A  3787    ;  526	
                           A  3788    ;  527	void definelabel(int24_t num){
04121B                     A  3789    _definelabel:
                           A  3790    .DEFINE "_definelabel"
                           A  3791    
                           A  3792    .VALUE _definelabel
                           A  3793    
                           A  3794    .CLASS 2
                           A  3795    
                           A  3796    .TYPE 65
                           A  3797    
                           A  3798    .ENDEF
                           A  3799    
                           A  3800    .BEGFUNC "definelabel",527,"_definelabel"
                           A  3801    
                           A  3802    .LINE 527
                           A  3803    
                           A  3804    .DEFINE "num"
                           A  3805    
                           A  3806    .CLASS 65
                           A  3807    
                           A  3808    .VALUE 6
                           A  3809    
                           A  3810    .TYPE 4
                           A  3811    
                           A  3812    .ENDEF
                           A  3813    
04121B DDE5                A  3814    	PUSH	IX
04121D DD210000 00         A  3815    	LD	IX,0
041222 DD39                A  3816    	ADD	IX,SP
041224 C5                  A  3817    	PUSH	BC
                           A  3818    ;  528	    if(strlen(currentline.label)) {
                           A  3819    .LINE 528
                           A  3820    
041225 01 65 87 04         A  3821    	LD	BC,_currentline+6
041229 C5                  A  3822    	PUSH	BC
04122A CD 41 5A 04         A  3823    	CALL	_strlen
04122E C1                  A  3824    	POP	BC
04122F CD C5 5D 04         A  3825    	CALL	__icmpzero
041233 28 7C               A  3826    	JR	Z,L_238
                           A  3827    ;  529	        if(currentline.label[0] == '@')
                           A  3828    .LINE 529
                           A  3829    
041235 01 65 87 04         A  3830    	LD	BC,_currentline+6
041239 DD0FFD              A  3831    	LD	(IX+%FFFFFFFD),BC
04123C C5E1                A  3832    	LD	HL,BC
04123E 7E                  A  3833    	LD	A,(HL)
04123F 47                  A  3834    	LD	B,A
041240 17ED62              A  3835    	SEXT	HL
041243 68                  A  3836    	LD	L,B
041244 01400000            A  3837    	LD	BC,64
041248 B7                  A  3838    	OR	A,A
041249 ED42                A  3839    	SBC	HL,BC
04124B 20 3D               A  3840    	JR	NZ,L_236
                           A  3841    ;  530	            if(currentline.label[1] == 
                           A  3842    .LINE 530
                           A  3843    
04124D DD27FD              A  3844    	LD	HL,(IX+%FFFFFFFD)
041250 23                  A  3845    	INC	HL
041251 7E                  A  3846    	LD	A,(HL)
041252 47                  A  3847    	LD	B,A
041253 17ED62              A  3848    	SEXT	HL
041256 68                  A  3849    	LD	L,B
041257 01400000            A  3850    	LD	BC,64
04125B B7                  A  3851    	OR	A,A
04125C ED42                A  3852    	SBC	HL,BC
04125E 20 0B               A  3853    	JR	NZ,L_232
                           A  3854    ;  531	                writeAnonymousLabel(num
                           A  3855    .LINE 531
                           A  3856    
041260 DD0706              A  3857    	LD	BC,(IX+%6)
041263 C5                  A  3858    	PUSH	BC
041264 CD F8 3C 04         A  3859    	CALL	_writeAnonymousLabel
041268 C1                  A  3860    	POP	BC
                           A  3861    ;  532	                return;
                           A  3862    .LINE 532
                           A  3863    
041269 18 46               A  3864    	JR	L_238
                           A  3865    ;  533	            }
04126B                     A  3866    L_232:
                           A  3867    .LINE 533
                           A  3868    
                           A  3869    ;  534	            if(insertLocalLabel(current
                           A  3870    .LINE 534
                           A  3871    
04126B DD0706              A  3872    	LD	BC,(IX+%6)
04126E C5                  A  3873    	PUSH	BC
04126F DD07FD              A  3874    	LD	BC,(IX+%FFFFFFFD)
041272 C5                  A  3875    	PUSH	BC
041273 CD 8B 3D 04         A  3876    	CALL	_insertLocalLabel
041277 C1                  A  3877    	POP	BC
041278 C1                  A  3878    	POP	BC
041279 B7                  A  3879    	OR	A,A
04127A 20 35               A  3880    	JR	NZ,L_238
                           A  3881    ;  535	                error(message[ERROR_CRE
                           A  3882    .LINE 535
                           A  3883    
04127C 21 9F 64 04         A  3884    	LD	HL,_message+93
041280 ED07                A  3885    	LD	BC,(HL)
041282 C5                  A  3886    	PUSH	BC
041283 CD DC 4B 04         A  3887    	CALL	_error
041287 C1                  A  3888    	POP	BC
                           A  3889    ;  536	                return;
                           A  3890    .LINE 536
                           A  3891    
041288 18 27               A  3892    	JR	L_238
                           A  3893    ;  537	            }
                           A  3894    ;  538	        }
                           A  3895    ;  539	        else {
04128A                     A  3896    L_236:
                           A  3897    .LINE 539
                           A  3898    
                           A  3899    ;  540	            if(insertGlobalLabel(curren
                           A  3900    .LINE 540
                           A  3901    
04128A DD0706              A  3902    	LD	BC,(IX+%6)
04128D C5                  A  3903    	PUSH	BC
04128E DD07FD              A  3904    	LD	BC,(IX+%FFFFFFFD)
041291 C5                  A  3905    	PUSH	BC
041292 CD 6F 3F 04         A  3906    	CALL	_insertGlobalLabel
041296 C1                  A  3907    	POP	BC
041297 C1                  A  3908    	POP	BC
041298 B7                  A  3909    	OR	A,A
041299 20 0E               A  3910    	JR	NZ,L_234
                           A  3911    ;  541	                error(message[ERROR_CRE
                           A  3912    .LINE 541
                           A  3913    
04129B 21 9F 64 04         A  3914    	LD	HL,_message+93
04129F ED07                A  3915    	LD	BC,(HL)
0412A1 C5                  A  3916    	PUSH	BC
0412A2 CD DC 4B 04         A  3917    	CALL	_error
0412A6 C1                  A  3918    	POP	BC
                           A  3919    ;  542	                return;
                           A  3920    .LINE 542
                           A  3921    
0412A7 18 08               A  3922    	JR	L_238
                           A  3923    ;  543	            }
0412A9                     A  3924    L_234:
                           A  3925    .LINE 543
                           A  3926    
                           A  3927    ;  544	            writeLocalLabels();
                           A  3928    .LINE 544
                           A  3929    
0412A9 CD D0 3A 04         A  3930    	CALL	_writeLocalLabels
                           A  3931    ;  545	            clearLocalLabels();
                           A  3932    .LINE 545
                           A  3933    
0412AD CD D7 39 04         A  3934    	CALL	_clearLocalLabels
                           A  3935    ;  546	        }
                           A  3936    ;  547	    }
                           A  3937    ;  548	}
0412B1                     A  3938    L_238:
                           A  3939    .LINE 548
                           A  3940    
0412B1 DDF9                A  3941    	LD	SP,IX
0412B3 DDE1                A  3942    	POP	IX
0412B5 C9                  A  3943    	RET	
                           A  3944    
                           A  3945    
                           A  3946    ;**************************** _definelabel ****
                           A  3947    ;Name                         Addr/Register   S
                           A  3948    ;_clearLocalLabels                   IMPORT  --
                           A  3949    ;_writeLocalLabels                   IMPORT  --
                           A  3950    ;_insertGlobalLabel                  IMPORT  --
                           A  3951    ;_message                            IMPORT  un
                           A  3952    ;_error                              IMPORT  --
                           A  3953    ;_insertLocalLabel                   IMPORT  --
                           A  3954    ;_writeAnonymousLabel                IMPORT  --
                           A  3955    ;_currentline                        IMPORT    
                           A  3956    ;_strlen                             IMPORT  --
                           A  3957    ;G_6                                   IX-3    
                           A  3958    ;num                                   IX+6    
                           A  3959    
                           A  3960    
                           A  3961    ; Stack Frame Size: 12 (bytes)
                           A  3962    ;       Spill Code: 0 (instruction)
                           A  3963    
                           A  3964    
                           A  3965    .ENDFUNC "definelabel",548,"_definelabel"
                           A  3966    ;  549	
                           A  3967    ;  550	void refreshlocalLabels(void) {
0412B6                     A  3968    _refreshlocalLabels:
                           A  3969    .DEFINE "_refreshlocalLabels"
                           A  3970    
                           A  3971    .VALUE _refreshlocalLabels
                           A  3972    
                           A  3973    .CLASS 2
                           A  3974    
                           A  3975    .TYPE 65
                           A  3976    
                           A  3977    .ENDEF
                           A  3978    
                           A  3979    .BEGFUNC "refreshlocalLabels",550,"_refreshloca
                           A  3980    
0412B6 DDE5                A  3981    	PUSH	IX
0412B8 DD210000 00         A  3982    	LD	IX,0
0412BD DD39                A  3983    	ADD	IX,SP
                           A  3984    ;  551	    if(pass == 2) {
                           A  3985    .LINE 551
                           A  3986    
0412BF 01020000            A  3987    	LD	BC,2
0412C3 2A 53 87 04         A  3988    	LD	HL,(_pass)
0412C7 B7                  A  3989    	OR	A,A
0412C8 ED42                A  3990    	SBC	HL,BC
0412CA 20 27               A  3991    	JR	NZ,L_242
                           A  3992    ;  552	        if(notEmpty(currentline.label))
                           A  3993    .LINE 552
                           A  3994    
0412CC 01 65 87 04         A  3995    	LD	BC,_currentline+6
0412D0 C5                  A  3996    	PUSH	BC
0412D1 CD C2 4B 04         A  3997    	CALL	_notEmpty
0412D5 C1                  A  3998    	POP	BC
0412D6 B7                  A  3999    	OR	A,A
0412D7 28 1A               A  4000    	JR	Z,L_242
                           A  4001    ;  553	            if(currentline.label[0] != 
                           A  4002    .LINE 553
                           A  4003    
0412D9 3A 65 87 04         A  4004    	LD	A,(_currentline+6)
0412DD 47                  A  4005    	LD	B,A
0412DE 17ED62              A  4006    	SEXT	HL
0412E1 68                  A  4007    	LD	L,B
0412E2 01400000            A  4008    	LD	BC,64
0412E6 B7                  A  4009    	OR	A,A
0412E7 ED42                A  4010    	SBC	HL,BC
0412E9 28 08               A  4011    	JR	Z,L_242
                           A  4012    ;  554	                clearLocalLabels();
                           A  4013    .LINE 554
                           A  4014    
0412EB CD D7 39 04         A  4015    	CALL	_clearLocalLabels
                           A  4016    ;  555	                readLocalLabels();
                           A  4017    .LINE 555
                           A  4018    
0412EF CD F0 3B 04         A  4019    	CALL	_readLocalLabels
                           A  4020    ;  556	            }
                           A  4021    ;  557	        }
                           A  4022    ;  558	    }
                           A  4023    ;  559	}
0412F3                     A  4024    L_242:
                           A  4025    .LINE 559
                           A  4026    
0412F3 DDF9                A  4027    	LD	SP,IX
0412F5 DDE1                A  4028    	POP	IX
0412F7 C9                  A  4029    	RET	
                           A  4030    
                           A  4031    
                           A  4032    ;**************************** _refreshlocalLabe
                           A  4033    ;Name                         Addr/Register   S
                           A  4034    ;_readLocalLabels                    IMPORT  --
                           A  4035    ;_clearLocalLabels                   IMPORT  --
                           A  4036    ;_currentline                        IMPORT    
                           A  4037    ;_notEmpty                           IMPORT  --
                           A  4038    ;_pass                               IMPORT    
                           A  4039    
                           A  4040    
                           A  4041    ; Stack Frame Size: 6 (bytes)
                           A  4042    ;       Spill Code: 0 (instruction)
                           A  4043    
                           A  4044    
                           A  4045    .ENDFUNC "refreshlocalLabels",559,"_refreshloca
                           A  4046    ;  560	
                           A  4047    ;  561	// return ADL prefix bitfield, or 0 if 
                           A  4048    ;  562	uint8_t getADLsuffix(void) {
0412F8                     A  4049    _getADLsuffix:
                           A  4050    .DEFINE "_getADLsuffix"
                           A  4051    
                           A  4052    .VALUE _getADLsuffix
                           A  4053    
                           A  4054    .CLASS 2
                           A  4055    
                           A  4056    .TYPE 76
                           A  4057    
                           A  4058    .ENDEF
                           A  4059    
                           A  4060    .BEGFUNC "getADLsuffix",562,"_getADLsuffix"
                           A  4061    
0412F8 DDE5                A  4062    	PUSH	IX
0412FA DD210000 00         A  4063    	LD	IX,0
0412FF DD39                A  4064    	ADD	IX,SP
041301 ED22F4              A  4065    	LEA	HL,IX+%FFFFFFF4
041304 F9                  A  4066    	LD	SP,HL
                           A  4067    ;  563	    if(notEmpty(currentline.suffix)) {
                           A  4068    .LINE 563
                           A  4069    
041305 01 95 87 04         A  4070    	LD	BC,_currentline+54
041309 C5                  A  4071    	PUSH	BC
04130A CD C2 4B 04         A  4072    	CALL	_notEmpty
04130E C1                  A  4073    	POP	BC
04130F B7                  A  4074    	OR	A,A
041310 CA 9B 14 04         A  4075    	JR	Z,L_285
                           A  4076    ;  564	        switch(strlen(currentline.suffi
                           A  4077    .LINE 564
                           A  4078    
041314 01 95 87 04         A  4079    	LD	BC,_currentline+54
041318 C5                  A  4080    	PUSH	BC
041319 CD 41 5A 04         A  4081    	CALL	_strlen
04131D C1                  A  4082    	POP	BC
04131E CD A4 57 04         A  4083    	CALL	__seqcaseD
041322 E9                  A  4084    	JP	(HL)
041323                     A  4085    L__95:
041323 0300                A  4086    	DW	3
041325 0100                A  4087    	DW	1
041327 00                  A  4088    	DB	0
041328 341304              A  4089    	DW24	L_243	
                           A  4090    
04132B 7B1304              A  4091    	DW24	L_254	
                           A  4092    
04132E E31304              A  4093    	DW24	L_267	
                           A  4094    
041331 8F1404              A  4095    	DW24	L_283	
                           A  4096    
                           A  4097    ;  565	            case 1: // .s or .l
041334                     A  4098    L_243:
                           A  4099    .LINE 565
                           A  4100    
                           A  4101    ;  566	                switch(tolower(currentl
                           A  4102    .LINE 566
                           A  4103    
041334 3A 95 87 04         A  4104    	LD	A,(_currentline+54)
041338 47                  A  4105    	LD	B,A
041339 17ED62              A  4106    	SEXT	HL
04133C 68                  A  4107    	LD	L,B
04133D E5                  A  4108    	PUSH	HL
04133E CD 6D 61 04         A  4109    	CALL	_tolower
041342 C1                  A  4110    	POP	BC
041343 CD B7 60 04         A  4111    	CALL	__case8D
041347 E9                  A  4112    	JP	(HL)
041348                     A  4113    L__96:
041348 0200                A  4114    	DW	2
04134A 6C                  A  4115    	DB	108
04134B 681304              A  4116    	DW24	L_248	
                           A  4117    
04134E 73                  A  4118    	DB	115
04134F 551304              A  4119    	DW24	L_244	
                           A  4120    
041352 8F1404              A  4121    	DW24	L_283	
                           A  4122    
                           A  4123    ;  567	                    case 's':
041355                     A  4124    L_244:
                           A  4125    .LINE 567
                           A  4126    
                           A  4127    ;  568	                        if(adlmode) ret
                           A  4128    .LINE 568
                           A  4129    
041355 3A 5E 87 04         A  4130    	LD	A,(_adlmode)
041359 B7                  A  4131    	OR	A,A
04135A 28 06               A  4132    	JR	Z,L_246
04135C 3E04                A  4133    	LD	A,%4
04135E C3 9C 14 04         A  4134    	JR	L_286
                           A  4135    ;  569	                        else return S_S
041362                     A  4136    L_246:
                           A  4137    .LINE 569
                           A  4138    
041362 3E01                A  4139    	LD	A,%1
041364 C3 9C 14 04         A  4140    	JR	L_286
                           A  4141    ;  570	                        break;
                           A  4142    ;  571	                    case 'l':
041368                     A  4143    L_248:
                           A  4144    .LINE 571
                           A  4145    
                           A  4146    ;  572	                        if(adlmode) ret
                           A  4147    .LINE 572
                           A  4148    
041368 3A 5E 87 04         A  4149    	LD	A,(_adlmode)
04136C B7                  A  4150    	OR	A,A
04136D 28 06               A  4151    	JR	Z,L_250
04136F 3E08                A  4152    	LD	A,%8
041371 C3 9C 14 04         A  4153    	JR	L_286
                           A  4154    ;  573	                        else return S_L
041375                     A  4155    L_250:
                           A  4156    .LINE 573
                           A  4157    
041375 3E02                A  4158    	LD	A,%2
041377 C3 9C 14 04         A  4159    	JR	L_286
                           A  4160    ;  574	                        break;
                           A  4161    ;  575	                    default: // illegal
                           A  4162    ;  576	                        break;
                           A  4163    ;  577	                }
                           A  4164    ;  578	                break;
                           A  4165    ;  579	            case 2: // .is or .il
04137B                     A  4166    L_254:
                           A  4167    .LINE 579
                           A  4168    
                           A  4169    ;  580	                if(tolower(currentline.
                           A  4170    .LINE 580
                           A  4171    
04137B 01 95 87 04         A  4172    	LD	BC,_currentline+54
04137F DD0FFA              A  4173    	LD	(IX+%FFFFFFFA),BC
041382 C5E1                A  4174    	LD	HL,BC
041384 7E                  A  4175    	LD	A,(HL)
041385 47                  A  4176    	LD	B,A
041386 17ED62              A  4177    	SEXT	HL
041389 68                  A  4178    	LD	L,B
04138A E5                  A  4179    	PUSH	HL
04138B CD 6D 61 04         A  4180    	CALL	_tolower
04138F C1                  A  4181    	POP	BC
041390 01690000            A  4182    	LD	BC,105
041394 B7                  A  4183    	OR	A,A
041395 ED42                A  4184    	SBC	HL,BC
041397 C2 8F 14 04         A  4185    	JR	NZ,L_283
                           A  4186    ;  581	                switch(tolower(currentl
                           A  4187    .LINE 581
                           A  4188    
04139B DD27FA              A  4189    	LD	HL,(IX+%FFFFFFFA)
04139E 23                  A  4190    	INC	HL
04139F 7E                  A  4191    	LD	A,(HL)
0413A0 47                  A  4192    	LD	B,A
0413A1 17ED62              A  4193    	SEXT	HL
0413A4 68                  A  4194    	LD	L,B
0413A5 E5                  A  4195    	PUSH	HL
0413A6 CD 6D 61 04         A  4196    	CALL	_tolower
0413AA C1                  A  4197    	POP	BC
0413AB CD B7 60 04         A  4198    	CALL	__case8D
0413AF E9                  A  4199    	JP	(HL)
0413B0                     A  4200    L__100:
0413B0 0200                A  4201    	DW	2
0413B2 6C                  A  4202    	DB	108
0413B3 D01304              A  4203    	DW24	L_260	
                           A  4204    
0413B6 73                  A  4205    	DB	115
0413B7 BD1304              A  4206    	DW24	L_256	
                           A  4207    
0413BA 8F1404              A  4208    	DW24	L_283	
                           A  4209    
                           A  4210    ;  582	                    case 's':
0413BD                     A  4211    L_256:
                           A  4212    .LINE 582
                           A  4213    
                           A  4214    ;  583	                        if(adlmode) ret
                           A  4215    .LINE 583
                           A  4216    
0413BD 3A 5E 87 04         A  4217    	LD	A,(_adlmode)
0413C1 B7                  A  4218    	OR	A,A
0413C2 28 06               A  4219    	JR	Z,L_258
0413C4 3E02                A  4220    	LD	A,%2
0413C6 C3 9C 14 04         A  4221    	JR	L_286
                           A  4222    ;  584	                        else return S_S
0413CA                     A  4223    L_258:
                           A  4224    .LINE 584
                           A  4225    
0413CA 3E01                A  4226    	LD	A,%1
0413CC C3 9C 14 04         A  4227    	JR	L_286
                           A  4228    ;  585	                        break;
                           A  4229    ;  586	                    case 'l':
0413D0                     A  4230    L_260:
                           A  4231    .LINE 586
                           A  4232    
                           A  4233    ;  587	                        if(adlmode) ret
                           A  4234    .LINE 587
                           A  4235    
0413D0 3A 5E 87 04         A  4236    	LD	A,(_adlmode)
0413D4 B7                  A  4237    	OR	A,A
0413D5 28 06               A  4238    	JR	Z,L_262
0413D7 3E08                A  4239    	LD	A,%8
0413D9 C3 9C 14 04         A  4240    	JR	L_286
                           A  4241    ;  588	                        else return S_S
0413DD                     A  4242    L_262:
                           A  4243    .LINE 588
                           A  4244    
0413DD 3E04                A  4245    	LD	A,%4
0413DF C3 9C 14 04         A  4246    	JR	L_286
                           A  4247    ;  589	                        break;
                           A  4248    ;  590	                    default: // illegal
                           A  4249    ;  591	                        break;
                           A  4250    ;  592	                }
                           A  4251    ;  593	                break;
                           A  4252    ;  594	            case 3:
0413E3                     A  4253    L_267:
                           A  4254    .LINE 594
                           A  4255    
                           A  4256    ;  595	                if(tolower(currentline.
                           A  4257    .LINE 595
                           A  4258    
0413E3 01 95 87 04         A  4259    	LD	BC,_currentline+54
0413E7 DD0FFD              A  4260    	LD	(IX+%FFFFFFFD),BC
0413EA C5E1                A  4261    	LD	HL,BC
0413EC 23                  A  4262    	INC	HL
0413ED 7E                  A  4263    	LD	A,(HL)
0413EE 47                  A  4264    	LD	B,A
0413EF 17ED62              A  4265    	SEXT	HL
0413F2 68                  A  4266    	LD	L,B
0413F3 E5                  A  4267    	PUSH	HL
0413F4 CD 6D 61 04         A  4268    	CALL	_tolower
0413F8 C1                  A  4269    	POP	BC
0413F9 01690000            A  4270    	LD	BC,105
0413FD B7                  A  4271    	OR	A,A
0413FE ED42                A  4272    	SBC	HL,BC
041400 C2 8F 14 04         A  4273    	JR	NZ,L_283
                           A  4274    ;  596	                switch(tolower(currentl
                           A  4275    .LINE 596
                           A  4276    
041404 DD27FD              A  4277    	LD	HL,(IX+%FFFFFFFD)
041407 7E                  A  4278    	LD	A,(HL)
041408 47                  A  4279    	LD	B,A
041409 17ED62              A  4280    	SEXT	HL
04140C 68                  A  4281    	LD	L,B
04140D E5                  A  4282    	PUSH	HL
04140E CD 6D 61 04         A  4283    	CALL	_tolower
041412 C1                  A  4284    	POP	BC
041413 CD B7 60 04         A  4285    	CALL	__case8D
041417 E9                  A  4286    	JP	(HL)
041418                     A  4287    L__104:
041418 0200                A  4288    	DW	2
04141A 6C                  A  4289    	DB	108
04141B 5A1404              A  4290    	DW24	L_274	
                           A  4291    
04141E 73                  A  4292    	DB	115
04141F 251404              A  4293    	DW24	L_269	
                           A  4294    
041422 8F1404              A  4295    	DW24	L_283	
                           A  4296    
                           A  4297    ;  597	                    case 's':
041425                     A  4298    L_269:
                           A  4299    .LINE 597
                           A  4300    
                           A  4301    ;  598	                        if(currentline.
                           A  4302    .LINE 598
                           A  4303    
041425 DD31FD              A  4304    	LD	IY,(IX+%FFFFFFFD)
041428 ED3302              A  4305    	LEA	IY,IY+%2
04142B DD3EF7              A  4306    	LD	(IX+%FFFFFFF7),IY
04142E DD27F7              A  4307    	LD	HL,(IX+%FFFFFFF7)
041431 7E                  A  4308    	LD	A,(HL)
041432 47                  A  4309    	LD	B,A
041433 17ED62              A  4310    	SEXT	HL
041436 68                  A  4311    	LD	L,B
041437 01730000            A  4312    	LD	BC,115
04143B B7                  A  4313    	OR	A,A
04143C ED42                A  4314    	SBC	HL,BC
04143E 20 04               A  4315    	JR	NZ,L_272
041440 3E01                A  4316    	LD	A,%1
041442 18 58               A  4317    	JR	L_286
041444                     A  4318    L_272:
                           A  4319    ;  599	                        if(currentline.
                           A  4320    .LINE 599
                           A  4321    
041444 DD27F7              A  4322    	LD	HL,(IX+%FFFFFFF7)
041447 7E                  A  4323    	LD	A,(HL)
041448 47                  A  4324    	LD	B,A
041449 17ED62              A  4325    	SEXT	HL
04144C 68                  A  4326    	LD	L,B
04144D 016C0000            A  4327    	LD	BC,108
041451 B7                  A  4328    	OR	A,A
041452 ED42                A  4329    	SBC	HL,BC
041454 20 39               A  4330    	JR	NZ,L_283
041456 3E04                A  4331    	LD	A,%4
041458 18 42               A  4332    	JR	L_286
                           A  4333    ;  600	                        // illegal suff
                           A  4334    ;  601	                        break;
                           A  4335    .LINE 601
                           A  4336    
                           A  4337    ;  602	                    case 'l':
04145A                     A  4338    L_274:
                           A  4339    .LINE 602
                           A  4340    
                           A  4341    ;  603	                        if(currentline.
                           A  4342    .LINE 603
                           A  4343    
04145A DD31FD              A  4344    	LD	IY,(IX+%FFFFFFFD)
04145D ED3302              A  4345    	LEA	IY,IY+%2
041460 DD3EF4              A  4346    	LD	(IX+%FFFFFFF4),IY
041463 DD27F4              A  4347    	LD	HL,(IX+%FFFFFFF4)
041466 7E                  A  4348    	LD	A,(HL)
041467 47                  A  4349    	LD	B,A
041468 17ED62              A  4350    	SEXT	HL
04146B 68                  A  4351    	LD	L,B
04146C 01730000            A  4352    	LD	BC,115
041470 B7                  A  4353    	OR	A,A
041471 ED42                A  4354    	SBC	HL,BC
041473 20 04               A  4355    	JR	NZ,L_277
041475 3E02                A  4356    	LD	A,%2
041477 18 23               A  4357    	JR	L_286
041479                     A  4358    L_277:
                           A  4359    ;  604	                        if(currentline.
                           A  4360    .LINE 604
                           A  4361    
041479 DD27F4              A  4362    	LD	HL,(IX+%FFFFFFF4)
04147C 7E                  A  4363    	LD	A,(HL)
04147D 47                  A  4364    	LD	B,A
04147E 17ED62              A  4365    	SEXT	HL
041481 68                  A  4366    	LD	L,B
041482 016C0000            A  4367    	LD	BC,108
041486 B7                  A  4368    	OR	A,A
041487 ED42                A  4369    	SBC	HL,BC
041489 20 04               A  4370    	JR	NZ,L_283
04148B 3E08                A  4371    	LD	A,%8
04148D 18 0D               A  4372    	JR	L_286
                           A  4373    ;  605	                        // illegal suff
                           A  4374    ;  606	                        break;
                           A  4375    ;  607	                    default: // illegal
                           A  4376    ;  608	                        break;
                           A  4377    ;  609	                }
                           A  4378    ;  610	                break;
                           A  4379    ;  611	            default: // illegal suffix
                           A  4380    ;  612	                break;
                           A  4381    ;  613	        }
04148F                     A  4382    L_283:
                           A  4383    .LINE 613
                           A  4384    
                           A  4385    ;  614	        error(message[ERROR_INVALIDSUFF
                           A  4386    .LINE 614
                           A  4387    
04148F 21 66 64 04         A  4388    	LD	HL,_message+36
041493 ED07                A  4389    	LD	BC,(HL)
041495 C5                  A  4390    	PUSH	BC
041496 CD DC 4B 04         A  4391    	CALL	_error
04149A C1                  A  4392    	POP	BC
                           A  4393    ;  615	    }
04149B                     A  4394    L_285:
                           A  4395    .LINE 615
                           A  4396    
                           A  4397    ;  616	    return 0;
                           A  4398    .LINE 616
                           A  4399    
04149B AF                  A  4400    	XOR	A,A
                           A  4401    ;  617	}
04149C                     A  4402    L_286:
                           A  4403    .LINE 617
                           A  4404    
04149C DDF9                A  4405    	LD	SP,IX
04149E DDE1                A  4406    	POP	IX
0414A0 C9                  A  4407    	RET	
                           A  4408    
                           A  4409    
                           A  4410    ;**************************** _getADLsuffix ***
                           A  4411    ;Name                         Addr/Register   S
                           A  4412    ;_message                            IMPORT  un
                           A  4413    ;_error                              IMPORT  --
                           A  4414    ;_adlmode                            IMPORT    
                           A  4415    ;_tolower                            IMPORT  --
                           A  4416    ;_strlen                             IMPORT  --
                           A  4417    ;_currentline                        IMPORT    
                           A  4418    ;_notEmpty                           IMPORT  --
                           A  4419    ;G_14                                 IX-12    
                           A  4420    ;G_12                                  IX-9    
                           A  4421    ;G_9                                   IX-6    
                           A  4422    ;G_10                                  IX-3    
                           A  4423    
                           A  4424    
                           A  4425    ; Stack Frame Size: 18 (bytes)
                           A  4426    ;       Spill Code: 0 (instruction)
                           A  4427    
                           A  4428    
                           A  4429    .ENDFUNC "getADLsuffix",617,"_getADLsuffix"
                           A  4430    ;  618	
                           A  4431    ;  619	void adl_action() {
0414A1                     A  4432    _adl_action:
                           A  4433    .DEFINE "_adl_action"
                           A  4434    
                           A  4435    .VALUE _adl_action
                           A  4436    
                           A  4437    .CLASS 2
                           A  4438    
                           A  4439    .TYPE 65
                           A  4440    
                           A  4441    .ENDEF
                           A  4442    
                           A  4443    .BEGFUNC "adl_action",619,"_adl_action"
                           A  4444    
0414A1 DDE5                A  4445    	PUSH	IX
0414A3 DD210000 00         A  4446    	LD	IX,0
0414A8 DD39                A  4447    	ADD	IX,SP
                           A  4448    ;  620	    if(strcmp(currentline.operand1, "0"
                           A  4449    .LINE 620
                           A  4450    
0414AA 01 B0 7F 04         A  4451    	LD	BC,L__110
0414AE C5                  A  4452    	PUSH	BC
0414AF 01 A5 87 04         A  4453    	LD	BC,_currentline+70
0414B3 C5                  A  4454    	PUSH	BC
0414B4 CD 92 59 04         A  4455    	CALL	_strcmp
0414B8 C1                  A  4456    	POP	BC
0414B9 C1                  A  4457    	POP	BC
0414BA CD C5 5D 04         A  4458    	CALL	__icmpzero
0414BE 20 05               A  4459    	JR	NZ,L_289
0414C0 AF                  A  4460    	XOR	A,A
0414C1 32 5E 87 04         A  4461    	LD	(_adlmode),A
0414C5                     A  4462    L_289:
                           A  4463    ;  621	    if(strcmp(currentline.operand1, "1"
                           A  4464    .LINE 621
                           A  4465    
0414C5 01 B2 7F 04         A  4466    	LD	BC,L__112
0414C9 C5                  A  4467    	PUSH	BC
0414CA 01 A5 87 04         A  4468    	LD	BC,_currentline+70
0414CE C5                  A  4469    	PUSH	BC
0414CF CD 92 59 04         A  4470    	CALL	_strcmp
0414D3 C1                  A  4471    	POP	BC
0414D4 C1                  A  4472    	POP	BC
0414D5 CD C5 5D 04         A  4473    	CALL	__icmpzero
0414D9 20 06               A  4474    	JR	NZ,L_290
0414DB 3E01                A  4475    	LD	A,%1
0414DD 32 5E 87 04         A  4476    	LD	(_adlmode),A
                           A  4477    ;  622	}
0414E1                     A  4478    L_290:
                           A  4479    .LINE 622
                           A  4480    
0414E1 DDF9                A  4481    	LD	SP,IX
0414E3 DDE1                A  4482    	POP	IX
0414E5 C9                  A  4483    	RET	
                           A  4484    
                           A  4485    
                           A  4486    ;**************************** _adl_action *****
                           A  4487    ;Name                         Addr/Register   S
                           A  4488    ;_adlmode                            IMPORT    
                           A  4489    ;_currentline                        IMPORT    
                           A  4490    ;_strcmp                             IMPORT  --
                           A  4491    
                           A  4492    
                           A  4493    ; Stack Frame Size: 6 (bytes)
                           A  4494    ;       Spill Code: 0 (instruction)
                           A  4495    
                           A  4496    
                           A  4497    .ENDFUNC "adl_action",622,"_adl_action"
                           A  4498    	SEGMENT STRSECT
047FB0                     A  4499    L__110:
047FB0 30                  A  4500    	DB	"0"
047FB1 00                  A  4501    	DB	0
047FB2                     A  4502    L__112:
047FB2 31                  A  4503    	DB	"1"
047FB3 00                  A  4504    	DB	0
                           A  4505    	SEGMENT CODE
                           A  4506    ;  623	
                           A  4507    ;  624	// get the number of bytes to emit from
                           A  4508    ;  625	uint8_t get_immediate_size(operand *op,
0414E6                     A  4509    _get_immediate_size:
                           A  4510    .DEFINE "_get_immediate_size"
                           A  4511    
                           A  4512    .VALUE _get_immediate_size
                           A  4513    
                           A  4514    .CLASS 2
                           A  4515    
                           A  4516    .TYPE 76
                           A  4517    
                           A  4518    .ENDEF
                           A  4519    
                           A  4520    .BEGFUNC "get_immediate_size",625,"_get_immedia
                           A  4521    
                           A  4522    .LINE 625
                           A  4523    
                           A  4524    .DEFINE "op"
                           A  4525    
                           A  4526    .CLASS 65
                           A  4527    
                           A  4528    .VALUE 6
                           A  4529    
                           A  4530    .TAG "NONAME3"
                           A  4531    
                           A  4532    .TYPE 40
                           A  4533    
                           A  4534    .ENDEF
                           A  4535    
                           A  4536    .DEFINE "suffix"
                           A  4537    
                           A  4538    .CLASS 65
                           A  4539    
                           A  4540    .VALUE 9
                           A  4541    
                           A  4542    .TYPE 12
                           A  4543    
                           A  4544    .ENDEF
                           A  4545    
                           A  4546    .DEFINE "num"
                           A  4547    
                           A  4548    .CLASS 65
                           A  4549    
                           A  4550    .VALUE -1
                           A  4551    
                           A  4552    .TYPE 12
                           A  4553    
                           A  4554    .ENDEF
                           A  4555    
0414E6 DDE5                A  4556    	PUSH	IX
0414E8 DD210000 00         A  4557    	LD	IX,0
0414ED DD39                A  4558    	ADD	IX,SP
0414EF 3B                  A  4559    	DEC	SP
                           A  4560    ;  626	    uint8_t num;
                           A  4561    ;  627	    switch(suffix) {
                           A  4562    .LINE 627
                           A  4563    
0414F0 DD7E09              A  4564    	LD	A,(IX+%9)
0414F3 B7ED62              A  4565    	UEXT	HL
0414F6 6F                  A  4566    	LD	L,A
0414F7 CD B7 60 04         A  4567    	CALL	__case8D
0414FB E9                  A  4568    	JP	(HL)
0414FC                     A  4569    L__115:
0414FC 0500                A  4570    	DW	5
0414FE 00                  A  4571    	DB	0
0414FF 211504              A  4572    	DW24	L_295	
                           A  4573    
041502 01                  A  4574    	DB	1
041503 151504              A  4575    	DW24	L_291	
                           A  4576    
041506 02                  A  4577    	DB	2
041507 151504              A  4578    	DW24	L_292	
                           A  4579    
04150A 04                  A  4580    	DB	4
04150B 1B1504              A  4581    	DW24	L_293	
                           A  4582    
04150E 08                  A  4583    	DB	8
04150F 1B1504              A  4584    	DW24	L_294	
                           A  4585    
041512 341504              A  4586    	DW24	L_299	
                           A  4587    
                           A  4588    ;  628	        case S_SIS:
041515                     A  4589    L_291:
                           A  4590    .LINE 628
                           A  4591    
                           A  4592    ;  629	        case S_LIS:
041515                     A  4593    L_292:
                           A  4594    .LINE 629
                           A  4595    
                           A  4596    ;  630	            num = 2;
                           A  4597    .LINE 630
                           A  4598    
041515 DD36FF02            A  4599    	LD	(IX+%FFFFFFFF),%2
                           A  4600    ;  631	            break;
                           A  4601    .LINE 631
                           A  4602    
041519 18 28               A  4603    	JR	L_302
                           A  4604    ;  632	        case S_SIL:
04151B                     A  4605    L_293:
                           A  4606    .LINE 632
                           A  4607    
                           A  4608    ;  633	        case S_LIL:
04151B                     A  4609    L_294:
                           A  4610    .LINE 633
                           A  4611    
                           A  4612    ;  634	            num = 3;
                           A  4613    .LINE 634
                           A  4614    
04151B DD36FF03            A  4615    	LD	(IX+%FFFFFFFF),%3
                           A  4616    ;  635	            break;
                           A  4617    .LINE 635
                           A  4618    
04151F 18 22               A  4619    	JR	L_302
                           A  4620    ;  636	        case 0: // Use current ADL mode
041521                     A  4621    L_295:
                           A  4622    .LINE 636
                           A  4623    
                           A  4624    ;  637	            if(adlmode) num = 3;
                           A  4625    .LINE 637
                           A  4626    
041521 3A 5E 87 04         A  4627    	LD	A,(_adlmode)
041525 B7                  A  4628    	OR	A,A
041526 28 06               A  4629    	JR	Z,L_297
041528 DD36FF03            A  4630    	LD	(IX+%FFFFFFFF),%3
                           A  4631    ;  638	            else num = 2;
                           A  4632    .LINE 638
                           A  4633    
04152C 18 15               A  4634    	JR	L_302
04152E                     A  4635    L_297:
04152E DD36FF02            A  4636    	LD	(IX+%FFFFFFFF),%2
                           A  4637    ;  639	            break;
                           A  4638    .LINE 639
                           A  4639    
041532 18 0F               A  4640    	JR	L_302
                           A  4641    ;  640	        default:
041534                     A  4642    L_299:
                           A  4643    .LINE 640
                           A  4644    
                           A  4645    ;  641	            error(message[ERROR_INVALID
                           A  4646    .LINE 641
                           A  4647    
041534 21 54 64 04         A  4648    	LD	HL,_message+18
041538 ED07                A  4649    	LD	BC,(HL)
04153A C5                  A  4650    	PUSH	BC
04153B CD DC 4B 04         A  4651    	CALL	_error
04153F C1                  A  4652    	POP	BC
                           A  4653    ;  642	            return 0;
                           A  4654    .LINE 642
                           A  4655    
041540 AF                  A  4656    	XOR	A,A
041541 18 27               A  4657    	JR	L_304
                           A  4658    ;  643	    }
041543                     A  4659    L_302:
                           A  4660    .LINE 643
                           A  4661    
                           A  4662    ;  644	    if((num == 2) && (op->immediate > 0
                           A  4663    .LINE 644
                           A  4664    
041543 DD7EFF              A  4665    	LD	A,(IX+%FFFFFFFF)
041546 FE02                A  4666    	CP	A,%2
041548 20 1D               A  4667    	JR	NZ,L_303
04154A DD3106              A  4668    	LD	IY,(IX+%6)
04154D FD070B              A  4669    	LD	BC,(IY+%B)
041550 21FFFF00            A  4670    	LD	HL,65535
041554 B7                  A  4671    	OR	A,A
041555 ED42                A  4672    	SBC	HL,BC
041557 F2 67 15 04         A  4673    	JP	P,L_303
04155B 21 69 64 04         A  4674    	LD	HL,_message+39
04155F ED07                A  4675    	LD	BC,(HL)
041561 C5                  A  4676    	PUSH	BC
041562 CD DC 4B 04         A  4677    	CALL	_error
041566 C1                  A  4678    	POP	BC
041567                     A  4679    L_303:
                           A  4680    ;  645	    return num;
                           A  4681    .LINE 645
                           A  4682    
041567 DD7EFF              A  4683    	LD	A,(IX+%FFFFFFFF)
                           A  4684    ;  646	}
04156A                     A  4685    L_304:
                           A  4686    .LINE 646
                           A  4687    
04156A DDF9                A  4688    	LD	SP,IX
04156C DDE1                A  4689    	POP	IX
04156E C9                  A  4690    	RET	
                           A  4691    
                           A  4692    
                           A  4693    ;**************************** _get_immediate_si
                           A  4694    ;Name                         Addr/Register   S
                           A  4695    ;_message                            IMPORT  un
                           A  4696    ;_error                              IMPORT  --
                           A  4697    ;_adlmode                            IMPORT    
                           A  4698    ;num                                   IX-1    
                           A  4699    ;suffix                                IX+9    
                           A  4700    ;op                                    IX+6    
                           A  4701    
                           A  4702    
                           A  4703    ; Stack Frame Size: 13 (bytes)
                           A  4704    ;       Spill Code: 0 (instruction)
                           A  4705    
                           A  4706    
                           A  4707    .ENDFUNC "get_immediate_size",646,"_get_immedia
                           A  4708    ;  647	// Emit a 16 or 24 bit immediate number
                           A  4709    ;  648	// given suffix bit, or in lack of it, 
                           A  4710    ;  649	void emit_immediate(operand *op, uint8_
04156F                     A  4711    _emit_immediate:
                           A  4712    .DEFINE "_emit_immediate"
                           A  4713    
                           A  4714    .VALUE _emit_immediate
                           A  4715    
                           A  4716    .CLASS 2
                           A  4717    
                           A  4718    .TYPE 65
                           A  4719    
                           A  4720    .ENDEF
                           A  4721    
                           A  4722    .BEGFUNC "emit_immediate",649,"_emit_immediate"
                           A  4723    
                           A  4724    .LINE 649
                           A  4725    
                           A  4726    .DEFINE "op"
                           A  4727    
                           A  4728    .CLASS 65
                           A  4729    
                           A  4730    .VALUE 6
                           A  4731    
                           A  4732    .TAG "NONAME3"
                           A  4733    
                           A  4734    .TYPE 40
                           A  4735    
                           A  4736    .ENDEF
                           A  4737    
                           A  4738    .DEFINE "suffix"
                           A  4739    
                           A  4740    .CLASS 65
                           A  4741    
                           A  4742    .VALUE 9
                           A  4743    
                           A  4744    .TYPE 12
                           A  4745    
                           A  4746    .ENDEF
                           A  4747    
                           A  4748    .DEFINE "num"
                           A  4749    
                           A  4750    .CLASS 65
                           A  4751    
                           A  4752    .VALUE -1
                           A  4753    
                           A  4754    .TYPE 12
                           A  4755    
                           A  4756    .ENDEF
                           A  4757    
04156F DDE5                A  4758    	PUSH	IX
041571 DD210000 00         A  4759    	LD	IX,0
041576 DD39                A  4760    	ADD	IX,SP
041578 3B                  A  4761    	DEC	SP
                           A  4762    ;  650	    uint8_t num;
                           A  4763    ;  651	
                           A  4764    ;  652	    num = get_immediate_size(op, suffix
                           A  4765    .LINE 652
                           A  4766    
041579 DD4E09              A  4767    	LD	C,(IX+%9)
04157C 0600                A  4768    	LD	B,%0
04157E C5                  A  4769    	PUSH	BC
04157F DD0706              A  4770    	LD	BC,(IX+%6)
041582 C5                  A  4771    	PUSH	BC
041583 CD E6 14 04         A  4772    	CALL	_get_immediate_size
041587 C1                  A  4773    	POP	BC
041588 C1                  A  4774    	POP	BC
041589 DD77FF              A  4775    	LD	(IX+%FFFFFFFF),A
                           A  4776    ;  653	    emit_8bit(op->immediate & 0xFF);
                           A  4777    .LINE 653
                           A  4778    
04158C DD3106              A  4779    	LD	IY,(IX+%6)
04158F FD460B              A  4780    	LD	B,(IY+%B)
041592 78                  A  4781    	LD	A,B
041593 4F                  A  4782    	LD	C,A
041594 0600                A  4783    	LD	B,%0
041596 C5                  A  4784    	PUSH	BC
041597 CD B8 1C 04         A  4785    	CALL	_emit_8bit
04159B C1                  A  4786    	POP	BC
                           A  4787    ;  654	    emit_8bit((op->immediate >> 8) & 0x
                           A  4788    .LINE 654
                           A  4789    
04159C DD3106              A  4790    	LD	IY,(IX+%6)
04159F FD270B              A  4791    	LD	HL,(IY+%B)
0415A2 3E08                A  4792    	LD	A,%8
0415A4 CD 7F 57 04         A  4793    	CALL	__ishrs_b
0415A8 7D                  A  4794    	LD	A,L
0415A9 4F                  A  4795    	LD	C,A
0415AA 0600                A  4796    	LD	B,%0
0415AC C5                  A  4797    	PUSH	BC
0415AD CD B8 1C 04         A  4798    	CALL	_emit_8bit
0415B1 C1                  A  4799    	POP	BC
                           A  4800    ;  655	    if(num == 3) emit_8bit((op->immedia
                           A  4801    .LINE 655
                           A  4802    
0415B2 DD7EFF              A  4803    	LD	A,(IX+%FFFFFFFF)
0415B5 FE03                A  4804    	CP	A,%3
0415B7 20 16               A  4805    	JR	NZ,L_306
0415B9 DD3106              A  4806    	LD	IY,(IX+%6)
0415BC FD270B              A  4807    	LD	HL,(IY+%B)
0415BF 3E10                A  4808    	LD	A,%10
0415C1 CD 7F 57 04         A  4809    	CALL	__ishrs_b
0415C5 7D                  A  4810    	LD	A,L
0415C6 4F                  A  4811    	LD	C,A
0415C7 0600                A  4812    	LD	B,%0
0415C9 C5                  A  4813    	PUSH	BC
0415CA CD B8 1C 04         A  4814    	CALL	_emit_8bit
0415CE C1                  A  4815    	POP	BC
                           A  4816    ;  656	}
0415CF                     A  4817    L_306:
                           A  4818    .LINE 656
                           A  4819    
0415CF DDF9                A  4820    	LD	SP,IX
0415D1 DDE1                A  4821    	POP	IX
0415D3 C9                  A  4822    	RET	
                           A  4823    
                           A  4824    
                           A  4825    ;**************************** _emit_immediate *
                           A  4826    ;Name                         Addr/Register   S
                           A  4827    ;_emit_8bit                          IMPORT  --
                           A  4828    ;num                                   IX-1    
                           A  4829    ;suffix                                IX+9    
                           A  4830    ;op                                    IX+6    
                           A  4831    
                           A  4832    
                           A  4833    ; Stack Frame Size: 13 (bytes)
                           A  4834    ;       Spill Code: 0 (instruction)
                           A  4835    
                           A  4836    
                           A  4837    .ENDFUNC "emit_immediate",656,"_emit_immediate"
                           A  4838    ;  657	
                           A  4839    ;  658	void emit_adlsuffix_code(uint8_t suffix
0415D4                     A  4840    _emit_adlsuffix_code:
                           A  4841    .DEFINE "_emit_adlsuffix_code"
                           A  4842    
                           A  4843    .VALUE _emit_adlsuffix_code
                           A  4844    
                           A  4845    .CLASS 2
                           A  4846    
                           A  4847    .TYPE 65
                           A  4848    
                           A  4849    .ENDEF
                           A  4850    
                           A  4851    .BEGFUNC "emit_adlsuffix_code",658,"_emit_adlsu
                           A  4852    
                           A  4853    .LINE 658
                           A  4854    
                           A  4855    .DEFINE "suffix"
                           A  4856    
                           A  4857    .CLASS 65
                           A  4858    
                           A  4859    .VALUE 6
                           A  4860    
                           A  4861    .TYPE 12
                           A  4862    
                           A  4863    .ENDEF
                           A  4864    
                           A  4865    .DEFINE "code"
                           A  4866    
                           A  4867    .CLASS 65
                           A  4868    
                           A  4869    .VALUE -1
                           A  4870    
                           A  4871    .TYPE 12
                           A  4872    
                           A  4873    .ENDEF
                           A  4874    
0415D4 DDE5                A  4875    	PUSH	IX
0415D6 DD210000 00         A  4876    	LD	IX,0
0415DB DD39                A  4877    	ADD	IX,SP
0415DD 3B                  A  4878    	DEC	SP
                           A  4879    ;  659	    uint8_t code;
                           A  4880    ;  660	    switch(suffix) {
                           A  4881    .LINE 660
                           A  4882    
0415DE DD7E06              A  4883    	LD	A,(IX+%6)
0415E1 B7ED62              A  4884    	UEXT	HL
0415E4 6F                  A  4885    	LD	L,A
0415E5 CD B7 60 04         A  4886    	CALL	__case8D
0415E9 E9                  A  4887    	JP	(HL)
0415EA                     A  4888    L__122:
0415EA 0400                A  4889    	DW	4
0415EC 01                  A  4890    	DB	1
0415ED FF1504              A  4891    	DW24	L_307	
                           A  4892    
0415F0 02                  A  4893    	DB	2
0415F1 051604              A  4894    	DW24	L_308	
                           A  4895    
0415F4 04                  A  4896    	DB	4
0415F5 0B1604              A  4897    	DW24	L_309	
                           A  4898    
0415F8 08                  A  4899    	DB	8
0415F9 111604              A  4900    	DW24	L_310	
                           A  4901    
0415FC 171604              A  4902    	DW24	L_311	
                           A  4903    
                           A  4904    ;  661	        case S_SIS:
0415FF                     A  4905    L_307:
                           A  4906    .LINE 661
                           A  4907    
                           A  4908    ;  662	            code = CODE_SIS;
                           A  4909    .LINE 662
                           A  4910    
0415FF DD36FF40            A  4911    	LD	(IX+%FFFFFFFF),%40
                           A  4912    ;  663	            break;
                           A  4913    .LINE 663
                           A  4914    
041603 18 20               A  4915    	JR	L_312
                           A  4916    ;  664	        case S_LIS:
041605                     A  4917    L_308:
                           A  4918    .LINE 664
                           A  4919    
                           A  4920    ;  665	            code = CODE_LIS;
                           A  4921    .LINE 665
                           A  4922    
041605 DD36FF49            A  4923    	LD	(IX+%FFFFFFFF),%49
                           A  4924    ;  666	            break;
                           A  4925    .LINE 666
                           A  4926    
041609 18 1A               A  4927    	JR	L_312
                           A  4928    ;  667	        case S_SIL:
04160B                     A  4929    L_309:
                           A  4930    .LINE 667
                           A  4931    
                           A  4932    ;  668	            code = CODE_SIL;
                           A  4933    .LINE 668
                           A  4934    
04160B DD36FF52            A  4935    	LD	(IX+%FFFFFFFF),%52
                           A  4936    ;  669	            break;
                           A  4937    .LINE 669
                           A  4938    
04160F 18 14               A  4939    	JR	L_312
                           A  4940    ;  670	        case S_LIL:
041611                     A  4941    L_310:
                           A  4942    .LINE 670
                           A  4943    
                           A  4944    ;  671	            code = CODE_LIL;
                           A  4945    .LINE 671
                           A  4946    
041611 DD36FF5B            A  4947    	LD	(IX+%FFFFFFFF),%5B
                           A  4948    ;  672	            break;
                           A  4949    .LINE 672
                           A  4950    
041615 18 0E               A  4951    	JR	L_312
                           A  4952    ;  673	        default:
041617                     A  4953    L_311:
                           A  4954    .LINE 673
                           A  4955    
                           A  4956    ;  674	            error(message[ERROR_INVALID
                           A  4957    .LINE 674
                           A  4958    
041617 21 66 64 04         A  4959    	LD	HL,_message+36
04161B ED07                A  4960    	LD	BC,(HL)
04161D C5                  A  4961    	PUSH	BC
04161E CD DC 4B 04         A  4962    	CALL	_error
041622 C1                  A  4963    	POP	BC
                           A  4964    ;  675	            return;
                           A  4965    .LINE 675
                           A  4966    
041623 18 0B               A  4967    	JR	L_313
                           A  4968    ;  676	    }
041625                     A  4969    L_312:
                           A  4970    .LINE 676
                           A  4971    
                           A  4972    ;  677	    emit_8bit(code);
                           A  4973    .LINE 677
                           A  4974    
041625 DD4EFF              A  4975    	LD	C,(IX+%FFFFFFFF)
041628 0600                A  4976    	LD	B,%0
04162A C5                  A  4977    	PUSH	BC
04162B CD B8 1C 04         A  4978    	CALL	_emit_8bit
04162F C1                  A  4979    	POP	BC
                           A  4980    ;  678	}
041630                     A  4981    L_313:
                           A  4982    .LINE 678
                           A  4983    
041630 DDF9                A  4984    	LD	SP,IX
041632 DDE1                A  4985    	POP	IX
041634 C9                  A  4986    	RET	
                           A  4987    
                           A  4988    
                           A  4989    ;**************************** _emit_adlsuffix_c
                           A  4990    ;Name                         Addr/Register   S
                           A  4991    ;_emit_8bit                          IMPORT  --
                           A  4992    ;_message                            IMPORT  un
                           A  4993    ;_error                              IMPORT  --
                           A  4994    ;code                                  IX-1    
                           A  4995    ;suffix                                IX+6    
                           A  4996    
                           A  4997    
                           A  4998    ; Stack Frame Size: 10 (bytes)
                           A  4999    ;       Spill Code: 0 (instruction)
                           A  5000    
                           A  5001    
                           A  5002    .ENDFUNC "emit_adlsuffix_code",678,"_emit_adlsu
                           A  5003    ;  679	
                           A  5004    ;  680	uint8_t get_ddfd_prefix(cpuregister reg
041635                     A  5005    _get_ddfd_prefix:
                           A  5006    .DEFINE "_get_ddfd_prefix"
                           A  5007    
                           A  5008    .VALUE _get_ddfd_prefix
                           A  5009    
                           A  5010    .CLASS 2
                           A  5011    
                           A  5012    .TYPE 76
                           A  5013    
                           A  5014    .ENDEF
                           A  5015    
                           A  5016    .BEGFUNC "get_ddfd_prefix",680,"_get_ddfd_prefi
                           A  5017    
                           A  5018    .LINE 680
                           A  5019    
                           A  5020    .DEFINE "reg"
                           A  5021    
                           A  5022    .CLASS 65
                           A  5023    
                           A  5024    .VALUE 6
                           A  5025    
                           A  5026    .TYPE 4
                           A  5027    
                           A  5028    .ENDEF
                           A  5029    
041635 DDE5                A  5030    	PUSH	IX
041637 DD210000 00         A  5031    	LD	IX,0
04163C DD39                A  5032    	ADD	IX,SP
                           A  5033    ;  681	    switch(reg) {
                           A  5034    .LINE 681
                           A  5035    
04163E DD2706              A  5036    	LD	HL,(IX+%6)
041641 CD A4 57 04         A  5037    	CALL	__seqcaseD
041645 E9                  A  5038    	JP	(HL)
041646                     A  5039    L__124:
041646 0600                A  5040    	DW	6
041648 0D00                A  5041    	DW	13
04164A 00                  A  5042    	DB	0
04164B 601604              A  5043    	DW24	L_314	
                           A  5044    
04164E 641604              A  5045    	DW24	L_317	
                           A  5046    
041651 601604              A  5047    	DW24	L_315	
                           A  5048    
041654 601604              A  5049    	DW24	L_316	
                           A  5050    
041657 641604              A  5051    	DW24	L_318	
                           A  5052    
04165A 641604              A  5053    	DW24	L_319	
                           A  5054    
04165D 681604              A  5055    	DW24	L_321	
                           A  5056    
                           A  5057    ;  682	        case R_IX:
041660                     A  5058    L_314:
                           A  5059    .LINE 682
                           A  5060    
                           A  5061    ;  683	        case R_IXH:
041660                     A  5062    L_315:
                           A  5063    .LINE 683
                           A  5064    
                           A  5065    ;  684	        case R_IXL:
041660                     A  5066    L_316:
                           A  5067    .LINE 684
                           A  5068    
                           A  5069    ;  685	            return 0xDD;
                           A  5070    .LINE 685
                           A  5071    
041660 3EDD                A  5072    	LD	A,%DD
041662 18 05               A  5073    	JR	L_322
                           A  5074    ;  686	        case R_IY:
041664                     A  5075    L_317:
                           A  5076    .LINE 686
                           A  5077    
                           A  5078    ;  687	        case R_IYH:
041664                     A  5079    L_318:
                           A  5080    .LINE 687
                           A  5081    
                           A  5082    ;  688	        case R_IYL:
041664                     A  5083    L_319:
                           A  5084    .LINE 688
                           A  5085    
                           A  5086    ;  689	            return 0xFD;
                           A  5087    .LINE 689
                           A  5088    
041664 3EFD                A  5089    	LD	A,%FD
041666 18 01               A  5090    	JR	L_322
                           A  5091    ;  690	        default:
                           A  5092    ;  691	            break;
                           A  5093    ;  692	    }
041668                     A  5094    L_321:
                           A  5095    .LINE 692
                           A  5096    
                           A  5097    ;  693	    return 0;    
                           A  5098    .LINE 693
                           A  5099    
041668 AF                  A  5100    	XOR	A,A
                           A  5101    ;  694	}
041669                     A  5102    L_322:
                           A  5103    .LINE 694
                           A  5104    
041669 DDF9                A  5105    	LD	SP,IX
04166B DDE1                A  5106    	POP	IX
04166D C9                  A  5107    	RET	
                           A  5108    
                           A  5109    
                           A  5110    ;**************************** _get_ddfd_prefix 
                           A  5111    ;Name                         Addr/Register   S
                           A  5112    ;reg                                   IX+6    
                           A  5113    
                           A  5114    
                           A  5115    ; Stack Frame Size: 9 (bytes)
                           A  5116    ;       Spill Code: 0 (instruction)
                           A  5117    
                           A  5118    
                           A  5119    .ENDFUNC "get_ddfd_prefix",694,"_get_ddfd_prefi
                           A  5120    ;  695	
                           A  5121    ;  696	void prefix_ddfd_suffix(operandlist *op
04166E                     A  5122    _prefix_ddfd_suffix:
                           A  5123    .DEFINE "_prefix_ddfd_suffix"
                           A  5124    
                           A  5125    .VALUE _prefix_ddfd_suffix
                           A  5126    
                           A  5127    .CLASS 2
                           A  5128    
                           A  5129    .TYPE 65
                           A  5130    
                           A  5131    .ENDEF
                           A  5132    
                           A  5133    .BEGFUNC "prefix_ddfd_suffix",696,"_prefix_ddfd
                           A  5134    
                           A  5135    .LINE 696
                           A  5136    
                           A  5137    .DEFINE "op"
                           A  5138    
                           A  5139    .CLASS 65
                           A  5140    
                           A  5141    .VALUE 6
                           A  5142    
                           A  5143    .TAG "NONAME5"
                           A  5144    
                           A  5145    .TYPE 40
                           A  5146    
                           A  5147    .ENDEF
                           A  5148    
                           A  5149    .DEFINE "prefix2"
                           A  5150    
                           A  5151    .CLASS 65
                           A  5152    
                           A  5153    .VALUE -1
                           A  5154    
                           A  5155    .TYPE 12
                           A  5156    
                           A  5157    .ENDEF
                           A  5158    
                           A  5159    .DEFINE "prefix1"
                           A  5160    
                           A  5161    .CLASS 65
                           A  5162    
                           A  5163    .VALUE -2
                           A  5164    
                           A  5165    .TYPE 12
                           A  5166    
                           A  5167    .ENDEF
                           A  5168    
04166E DDE5                A  5169    	PUSH	IX
041670 DD210000 00         A  5170    	LD	IX,0
041675 DD39                A  5171    	ADD	IX,SP
041677 3B                  A  5172    	DEC	SP
041678 3B                  A  5173    	DEC	SP
                           A  5174    ;  697	    uint8_t prefix1, prefix2;
                           A  5175    ;  698	
                           A  5176    ;  699	    if(op->ddfdpermitted) {
                           A  5177    .LINE 699
                           A  5178    
041679 DD3106              A  5179    	LD	IY,(IX+%6)
04167C FD7E06              A  5180    	LD	A,(IY+%6)
04167F B7                  A  5181    	OR	A,A
041680 28 57               A  5182    	JR	Z,L_331
                           A  5183    ;  700	        prefix1 = get_ddfd_prefix(opera
                           A  5184    .LINE 700
                           A  5185    
041682 ED4B 67 88 04       A  5186    	LD	BC,(_operand1)
041687 C5                  A  5187    	PUSH	BC
041688 CD 35 16 04         A  5188    	CALL	_get_ddfd_prefix
04168C C1                  A  5189    	POP	BC
04168D DD77FE              A  5190    	LD	(IX+%FFFFFFFE),A
                           A  5191    ;  701	        prefix2 = get_ddfd_prefix(opera
                           A  5192    .LINE 701
                           A  5193    
041690 ED4B 76 88 04       A  5194    	LD	BC,(_operand2)
041695 C5                  A  5195    	PUSH	BC
041696 CD 35 16 04         A  5196    	CALL	_get_ddfd_prefix
04169A C1                  A  5197    	POP	BC
04169B DD77FF              A  5198    	LD	(IX+%FFFFFFFF),A
                           A  5199    ;  702	
                           A  5200    ;  703	
                           A  5201    ;  704	        // prefix in either of these tw
                           A  5202    ;  705	        if(prefix1) {
                           A  5203    .LINE 705
                           A  5204    
04169E DD7EFE              A  5205    	LD	A,(IX+%FFFFFFFE)
0416A1 B7                  A  5206    	OR	A,A
0416A2 28 28               A  5207    	JR	Z,L_329
                           A  5208    ;  706	            if(prefix2) {
                           A  5209    .LINE 706
                           A  5210    
0416A4 DD7EFF              A  5211    	LD	A,(IX+%FFFFFFFF)
0416A7 B7                  A  5212    	OR	A,A
0416A8 28 19               A  5213    	JR	Z,L_326
                           A  5214    ;  707	                // both prefixes set
                           A  5215    ;  708	                if(operand1.indirect) {
                           A  5216    .LINE 708
                           A  5217    
0416AA 3A 6B 88 04         A  5218    	LD	A,(_operand1+4)
0416AE B7                  A  5219    	OR	A,A
0416AF 28 09               A  5220    	JR	Z,L_324
                           A  5221    ;  709	                    output.prefix1 = pr
                           A  5222    .LINE 709
                           A  5223    
0416B1 DD7EFE              A  5224    	LD	A,(IX+%FFFFFFFE)
0416B4 32 86 88 04         A  5225    	LD	(_output+1),A
                           A  5226    ;  710	                }
                           A  5227    ;  711	                else {
                           A  5228    .LINE 711
                           A  5229    
0416B8 18 1F               A  5230    	JR	L_331
0416BA                     A  5231    L_324:
                           A  5232    ;  712	                    output.prefix1 = pr
                           A  5233    .LINE 712
                           A  5234    
0416BA DD7EFF              A  5235    	LD	A,(IX+%FFFFFFFF)
0416BD 32 86 88 04         A  5236    	LD	(_output+1),A
                           A  5237    ;  713	                }
                           A  5238    ;  714	            }
                           A  5239    ;  715	            else {
                           A  5240    .LINE 715
                           A  5241    
0416C1 18 16               A  5242    	JR	L_331
0416C3                     A  5243    L_326:
                           A  5244    ;  716	                output.prefix1 = prefix
                           A  5245    .LINE 716
                           A  5246    
0416C3 DD7EFE              A  5247    	LD	A,(IX+%FFFFFFFE)
0416C6 32 86 88 04         A  5248    	LD	(_output+1),A
                           A  5249    ;  717	            }
                           A  5250    ;  718	        }
                           A  5251    ;  719	        else {
                           A  5252    .LINE 719
                           A  5253    
0416CA 18 0D               A  5254    	JR	L_331
0416CC                     A  5255    L_329:
                           A  5256    ;  720	            if(prefix2) {
                           A  5257    .LINE 720
                           A  5258    
0416CC DD7EFF              A  5259    	LD	A,(IX+%FFFFFFFF)
0416CF B7                  A  5260    	OR	A,A
0416D0 28 07               A  5261    	JR	Z,L_331
                           A  5262    ;  721	                output.prefix1 = prefix
                           A  5263    .LINE 721
                           A  5264    
0416D2 DD7EFF              A  5265    	LD	A,(IX+%FFFFFFFF)
0416D5 32 86 88 04         A  5266    	LD	(_output+1),A
                           A  5267    ;  722	            }
                           A  5268    ;  723	        }
                           A  5269    ;  724	    }
                           A  5270    ;  725	}
0416D9                     A  5271    L_331:
                           A  5272    .LINE 725
                           A  5273    
0416D9 DDF9                A  5274    	LD	SP,IX
0416DB DDE1                A  5275    	POP	IX
0416DD C9                  A  5276    	RET	
                           A  5277    
                           A  5278    
                           A  5279    ;**************************** _prefix_ddfd_suff
                           A  5280    ;Name                         Addr/Register   S
                           A  5281    ;_output                             IMPORT    
                           A  5282    ;_operand2                           IMPORT    
                           A  5283    ;_operand1                           IMPORT    
                           A  5284    ;prefix1                               IX-2    
                           A  5285    ;prefix2                               IX-1    
                           A  5286    ;op                                    IX+6    
                           A  5287    
                           A  5288    
                           A  5289    ; Stack Frame Size: 11 (bytes)
                           A  5290    ;       Spill Code: 0 (instruction)
                           A  5291    
                           A  5292    
                           A  5293    .ENDFUNC "prefix_ddfd_suffix",725,"_prefix_ddfd
                           A  5294    ;  726	
                           A  5295    ;  727	void transform_instruction(operand *op,
0416DE                     A  5296    _transform_instruction:
                           A  5297    .DEFINE "_transform_instruction"
                           A  5298    
                           A  5299    .VALUE _transform_instruction
                           A  5300    
                           A  5301    .CLASS 2
                           A  5302    
                           A  5303    .TYPE 65
                           A  5304    
                           A  5305    .ENDEF
                           A  5306    
                           A  5307    .BEGFUNC "transform_instruction",727,"_transfor
                           A  5308    
                           A  5309    .LINE 727
                           A  5310    
                           A  5311    .DEFINE "op"
                           A  5312    
                           A  5313    .CLASS 65
                           A  5314    
                           A  5315    .VALUE 6
                           A  5316    
                           A  5317    .TAG "NONAME3"
                           A  5318    
                           A  5319    .TYPE 40
                           A  5320    
                           A  5321    .ENDEF
                           A  5322    
                           A  5323    .DEFINE "type"
                           A  5324    
                           A  5325    .CLASS 65
                           A  5326    
                           A  5327    .VALUE 9
                           A  5328    
                           A  5329    .TYPE 4
                           A  5330    
                           A  5331    .ENDEF
                           A  5332    
                           A  5333    .DEFINE "y"
                           A  5334    
                           A  5335    .CLASS 65
                           A  5336    
                           A  5337    .VALUE -1
                           A  5338    
                           A  5339    .TYPE 12
                           A  5340    
                           A  5341    .ENDEF
                           A  5342    
                           A  5343    .DEFINE "rel"
                           A  5344    
                           A  5345    .CLASS 65
                           A  5346    
                           A  5347    .VALUE -4
                           A  5348    
                           A  5349    .TYPE 4
                           A  5350    
                           A  5351    .ENDEF
                           A  5352    
0416DE DDE5                A  5353    	PUSH	IX
0416E0 DD210000 00         A  5354    	LD	IX,0
0416E5 DD39                A  5355    	ADD	IX,SP
0416E7 C5                  A  5356    	PUSH	BC
0416E8 C5                  A  5357    	PUSH	BC
0416E9 C5                  A  5358    	PUSH	BC
0416EA 3B                  A  5359    	DEC	SP
                           A  5360    ;  728	    uint8_t y;
                           A  5361    ;  729	    int24_t rel;
                           A  5362    ;  730	
                           A  5363    ;  731	    switch(type) {
                           A  5364    .LINE 731
                           A  5365    
0416EB DD2709              A  5366    	LD	HL,(IX+%9)
0416EE CD B7 60 04         A  5367    	CALL	__case8D
0416F2 E9                  A  5368    	JP	(HL)
0416F3                     A  5369    L__132:
0416F3 0B00                A  5370    	DW	11
0416F5 00                  A  5371    	DB	0
0416F6 FF1804              A  5372    	DW24	L_366	
                           A  5373    
0416F9 02                  A  5374    	DB	2
0416FA 981704              A  5375    	DW24	L_341	
                           A  5376    
0416FD 03                  A  5377    	DB	3
0416FE 861704              A  5378    	DW24	L_340	
                           A  5379    
041701 04                  A  5380    	DB	4
041702 CF1704              A  5381    	DW24	L_345	
                           A  5382    
041705 07                  A  5383    	DB	7
041706 E71704              A  5384    	DW24	L_346	
                           A  5385    
041709 08                  A  5386    	DB	8
04170A 241704              A  5387    	DW24	L_332	
                           A  5388    
04170D 09                  A  5389    	DB	9
04170E 551704              A  5390    	DW24	L_336	
                           A  5391    
041711 0A                  A  5392    	DB	10
041712 301804              A  5393    	DW24	L_349	
                           A  5394    
041715 0B                  A  5395    	DB	11
041716 FE1704              A  5396    	DW24	L_347	
                           A  5397    
041719 0C                  A  5398    	DB	12
04171A 151804              A  5399    	DW24	L_348	
                           A  5400    
04171D 0D                  A  5401    	DB	13
04171E 7D1804              A  5402    	DW24	L_355	
                           A  5403    
041721 F31804              A  5404    	DW24	L_365	
                           A  5405    
                           A  5406    ;  732	        case TRANSFORM_IR0:
041724                     A  5407    L_332:
                           A  5408    .LINE 732
                           A  5409    
                           A  5410    ;  733	            if((op->reg == R_IXL) || (o
                           A  5411    .LINE 733
                           A  5412    
041724 DD3106              A  5413    	LD	IY,(IX+%6)
041727 FD0700              A  5414    	LD	BC,(IY+%0)
04172A DD0FF9              A  5415    	LD	(IX+%FFFFFFF9),BC
04172D 01100000            A  5416    	LD	BC,16
041731 DD27F9              A  5417    	LD	HL,(IX+%FFFFFFF9)
041734 B7                  A  5418    	OR	A,A
041735 ED42                A  5419    	SBC	HL,BC
041737 28 0E               A  5420    	JR	Z,L_334
041739 01120000            A  5421    	LD	BC,18
04173D DD27F9              A  5422    	LD	HL,(IX+%FFFFFFF9)
041740 B7                  A  5423    	OR	A,A
041741 ED42                A  5424    	SBC	HL,BC
041743 C2 FF 18 04         A  5425    	JR	NZ,L_366
041747                     A  5426    L_334:
041747 3A 88 88 04         A  5427    	LD	A,(_output+3)
04174B CBC7                A  5428    	SET	%0,A
04174D 32 88 88 04         A  5429    	LD	(_output+3),A
                           A  5430    ;  734	            break;
                           A  5431    .LINE 734
                           A  5432    
041751 C3 FF 18 04         A  5433    	JR	L_366
                           A  5434    ;  735	        case TRANSFORM_IR3:
041755                     A  5435    L_336:
                           A  5436    .LINE 735
                           A  5437    
                           A  5438    ;  736	            if((op->reg == R_IXL) || (o
                           A  5439    .LINE 736
                           A  5440    
041755 DD3106              A  5441    	LD	IY,(IX+%6)
041758 FD0700              A  5442    	LD	BC,(IY+%0)
04175B DD0FF6              A  5443    	LD	(IX+%FFFFFFF6),BC
04175E 01100000            A  5444    	LD	BC,16
041762 DD27F6              A  5445    	LD	HL,(IX+%FFFFFFF6)
041765 B7                  A  5446    	OR	A,A
041766 ED42                A  5447    	SBC	HL,BC
041768 28 0E               A  5448    	JR	Z,L_338
04176A 01120000            A  5449    	LD	BC,18
04176E DD27F6              A  5450    	LD	HL,(IX+%FFFFFFF6)
041771 B7                  A  5451    	OR	A,A
041772 ED42                A  5452    	SBC	HL,BC
041774 C2 FF 18 04         A  5453    	JR	NZ,L_366
041778                     A  5454    L_338:
041778 3A 88 88 04         A  5455    	LD	A,(_output+3)
04177C CBDF                A  5456    	SET	%3,A
04177E 32 88 88 04         A  5457    	LD	(_output+3),A
                           A  5458    ;  737	            break;
                           A  5459    .LINE 737
                           A  5460    
041782 C3 FF 18 04         A  5461    	JR	L_366
                           A  5462    ;  738	        case TRANSFORM_Z:
041786                     A  5463    L_340:
                           A  5464    .LINE 738
                           A  5465    
                           A  5466    ;  739	            output.opcode |= op->reg_in
                           A  5467    .LINE 739
                           A  5468    
041786 3A 88 88 04         A  5469    	LD	A,(_output+3)
04178A DD3106              A  5470    	LD	IY,(IX+%6)
04178D FDB603              A  5471    	OR	A,(IY+%3)
041790 32 88 88 04         A  5472    	LD	(_output+3),A
                           A  5473    ;  740	            break;
                           A  5474    .LINE 740
                           A  5475    
041794 C3 FF 18 04         A  5476    	JR	L_366
                           A  5477    ;  741	        case TRANSFORM_Y:
041798                     A  5478    L_341:
                           A  5479    .LINE 741
                           A  5480    
                           A  5481    ;  742	            if(op->immediate_provided) 
                           A  5482    .LINE 742
                           A  5483    
041798 DD3106              A  5484    	LD	IY,(IX+%6)
04179B FD7E0A              A  5485    	LD	A,(IY+%A)
04179E B7                  A  5486    	OR	A,A
04179F 28 17               A  5487    	JR	Z,L_343
0417A1 DD3106              A  5488    	LD	IY,(IX+%6)
0417A4 FD7E0B              A  5489    	LD	A,(IY+%B)
0417A7 87                  A  5490    	ADD	A,A
0417A8 87                  A  5491    	ADD	A,A
0417A9 87                  A  5492    	ADD	A,A
0417AA ED4B 88 88 04       A  5493    	LD	BC,(_output+3)
0417AF B1                  A  5494    	OR	A,C
0417B0 32 88 88 04         A  5495    	LD	(_output+3),A
                           A  5496    ;  743	            else output.opcode |= (op->
                           A  5497    .LINE 743
                           A  5498    
0417B4 C3 FF 18 04         A  5499    	JR	L_366
0417B8                     A  5500    L_343:
0417B8 DD3106              A  5501    	LD	IY,(IX+%6)
0417BB FD7E03              A  5502    	LD	A,(IY+%3)
0417BE 87                  A  5503    	ADD	A,A
0417BF 87                  A  5504    	ADD	A,A
0417C0 87                  A  5505    	ADD	A,A
0417C1 47                  A  5506    	LD	B,A
0417C2 3A 88 88 04         A  5507    	LD	A,(_output+3)
0417C6 B0                  A  5508    	OR	A,B
0417C7 32 88 88 04         A  5509    	LD	(_output+3),A
                           A  5510    ;  744	            break;
                           A  5511    .LINE 744
                           A  5512    
0417CB C3 FF 18 04         A  5513    	JR	L_366
                           A  5514    ;  745	        case TRANSFORM_P:
0417CF                     A  5515    L_345:
                           A  5516    .LINE 745
                           A  5517    
                           A  5518    ;  746	            output.opcode |= (op->reg_i
                           A  5519    .LINE 746
                           A  5520    
0417CF DD3106              A  5521    	LD	IY,(IX+%6)
0417D2 FD7E03              A  5522    	LD	A,(IY+%3)
0417D5 87                  A  5523    	ADD	A,A
0417D6 87                  A  5524    	ADD	A,A
0417D7 87                  A  5525    	ADD	A,A
0417D8 87                  A  5526    	ADD	A,A
0417D9 47                  A  5527    	LD	B,A
0417DA 3A 88 88 04         A  5528    	LD	A,(_output+3)
0417DE B0                  A  5529    	OR	A,B
0417DF 32 88 88 04         A  5530    	LD	(_output+3),A
                           A  5531    ;  747	            break;
                           A  5532    .LINE 747
                           A  5533    
0417E3 C3 FF 18 04         A  5534    	JR	L_366
                           A  5535    ;  748	        case TRANSFORM_CC:
0417E7                     A  5536    L_346:
                           A  5537    .LINE 748
                           A  5538    
                           A  5539    ;  749	            output.opcode |= (op->cc_in
                           A  5540    .LINE 749
                           A  5541    
0417E7 DD3106              A  5542    	LD	IY,(IX+%6)
0417EA FD7E06              A  5543    	LD	A,(IY+%6)
0417ED 87                  A  5544    	ADD	A,A
0417EE 87                  A  5545    	ADD	A,A
0417EF 87                  A  5546    	ADD	A,A
0417F0 47                  A  5547    	LD	B,A
0417F1 3A 88 88 04         A  5548    	LD	A,(_output+3)
0417F5 B0                  A  5549    	OR	A,B
0417F6 32 88 88 04         A  5550    	LD	(_output+3),A
                           A  5551    ;  750	            break;
                           A  5552    .LINE 750
                           A  5553    
0417FA C3 FF 18 04         A  5554    	JR	L_366
                           A  5555    ;  751	        case TRANSFORM_N:
0417FE                     A  5556    L_347:
                           A  5557    .LINE 751
                           A  5558    
                           A  5559    ;  752	            output.opcode |= op->immedi
                           A  5560    .LINE 752
                           A  5561    
0417FE DD3106              A  5562    	LD	IY,(IX+%6)
041801 FD460B              A  5563    	LD	B,(IY+%B)
041804 3A 88 88 04         A  5564    	LD	A,(_output+3)
041808 B0                  A  5565    	OR	A,B
041809 32 88 88 04         A  5566    	LD	(_output+3),A
                           A  5567    ;  753	            op->immediate_provided = fa
                           A  5568    .LINE 753
                           A  5569    
04180D FD360A00            A  5570    	LD	(IY+%A),%0
                           A  5571    ;  754	            break;
                           A  5572    .LINE 754
                           A  5573    
041811 C3 FF 18 04         A  5574    	JR	L_366
                           A  5575    ;  755	        case TRANSFORM_BIT:
041815                     A  5576    L_348:
                           A  5577    .LINE 755
                           A  5578    
                           A  5579    ;  756	            output.opcode |= (op->immed
                           A  5580    .LINE 756
                           A  5581    
041815 DD3106              A  5582    	LD	IY,(IX+%6)
041818 FD7E0B              A  5583    	LD	A,(IY+%B)
04181B 87                  A  5584    	ADD	A,A
04181C 87                  A  5585    	ADD	A,A
04181D 87                  A  5586    	ADD	A,A
04181E ED4B 88 88 04       A  5587    	LD	BC,(_output+3)
041823 B1                  A  5588    	OR	A,C
041824 32 88 88 04         A  5589    	LD	(_output+3),A
                           A  5590    ;  757	            op->immediate_provided = fa
                           A  5591    .LINE 757
                           A  5592    
041828 FD360A00            A  5593    	LD	(IY+%A),%0
                           A  5594    ;  758	            break;
                           A  5595    .LINE 758
                           A  5596    
04182C C3 FF 18 04         A  5597    	JR	L_366
                           A  5598    ;  759	        case TRANSFORM_SELECT:
041830                     A  5599    L_349:
                           A  5600    .LINE 759
                           A  5601    
                           A  5602    ;  760	            switch(op->immediate) {
                           A  5603    .LINE 760
                           A  5604    
041830 DD3106              A  5605    	LD	IY,(IX+%6)
041833 FD270B              A  5606    	LD	HL,(IY+%B)
041836 CD A4 57 04         A  5607    	CALL	__seqcaseD
04183A E9                  A  5608    	JP	(HL)
04183B                     A  5609    L__138:
04183B 0300                A  5610    	DW	3
04183D 0000                A  5611    	DW	0
04183F 00                  A  5612    	DB	0
041840 4C1804              A  5613    	DW24	L_350	
                           A  5614    
041843 521804              A  5615    	DW24	L_351	
                           A  5616    
041846 581804              A  5617    	DW24	L_352	
                           A  5618    
041849 5E1804              A  5619    	DW24	L_353	
                           A  5620    
                           A  5621    ;  761	                case 0:
04184C                     A  5622    L_350:
                           A  5623    .LINE 761
                           A  5624    
                           A  5625    ;  762	                    y = 0;
                           A  5626    .LINE 762
                           A  5627    
04184C DD36FF00            A  5628    	LD	(IX+%FFFFFFFF),%0
                           A  5629    ;  763	                    break;
                           A  5630    .LINE 763
                           A  5631    
041850 18 10               A  5632    	JR	L_354
                           A  5633    ;  764	                case 1:
041852                     A  5634    L_351:
                           A  5635    .LINE 764
                           A  5636    
                           A  5637    ;  765	                    y = 2;
                           A  5638    .LINE 765
                           A  5639    
041852 DD36FF02            A  5640    	LD	(IX+%FFFFFFFF),%2
                           A  5641    ;  766	                    break;
                           A  5642    .LINE 766
                           A  5643    
041856 18 0A               A  5644    	JR	L_354
                           A  5645    ;  767	                case 2:
041858                     A  5646    L_352:
                           A  5647    .LINE 767
                           A  5648    
                           A  5649    ;  768	                    y = 3;
                           A  5650    .LINE 768
                           A  5651    
041858 DD36FF03            A  5652    	LD	(IX+%FFFFFFFF),%3
                           A  5653    ;  769	                    break;
                           A  5654    .LINE 769
                           A  5655    
04185C 18 04               A  5656    	JR	L_354
                           A  5657    ;  770	                default:
04185E                     A  5658    L_353:
                           A  5659    .LINE 770
                           A  5660    
                           A  5661    ;  771	                    y = 0;
                           A  5662    .LINE 771
                           A  5663    
04185E DD36FF00            A  5664    	LD	(IX+%FFFFFFFF),%0
                           A  5665    ;  772	            }
041862                     A  5666    L_354:
                           A  5667    .LINE 772
                           A  5668    
                           A  5669    ;  773	            output.opcode |= (y << 3); 
                           A  5670    .LINE 773
                           A  5671    
041862 DD7EFF              A  5672    	LD	A,(IX+%FFFFFFFF)
041865 87                  A  5673    	ADD	A,A
041866 87                  A  5674    	ADD	A,A
041867 87                  A  5675    	ADD	A,A
041868 47                  A  5676    	LD	B,A
041869 3A 88 88 04         A  5677    	LD	A,(_output+3)
04186D B0                  A  5678    	OR	A,B
04186E 32 88 88 04         A  5679    	LD	(_output+3),A
                           A  5680    ;  774	            op->immediate_provided = fa
                           A  5681    .LINE 774
                           A  5682    
041872 DD3106              A  5683    	LD	IY,(IX+%6)
041875 FD360A00            A  5684    	LD	(IY+%A),%0
                           A  5685    ;  775	            break;
                           A  5686    .LINE 775
                           A  5687    
041879 C3 FF 18 04         A  5688    	JR	L_366
                           A  5689    ;  776	        case TRANSFORM_REL:
04187D                     A  5690    L_355:
                           A  5691    .LINE 776
                           A  5692    
                           A  5693    ;  777	            if(pass == 2) {
                           A  5694    .LINE 777
                           A  5695    
04187D 01020000            A  5696    	LD	BC,2
041881 2A 53 87 04         A  5697    	LD	HL,(_pass)
041885 B7                  A  5698    	OR	A,A
041886 ED42                A  5699    	SBC	HL,BC
041888 20 75               A  5700    	JR	NZ,L_366
                           A  5701    ;  778	                // label still potentia
                           A  5702    ;  779	                if(op->wasLabel) rel = 
                           A  5703    .LINE 779
                           A  5704    
04188A DD3106              A  5705    	LD	IY,(IX+%6)
04188D FD7E0E              A  5706    	LD	A,(IY+%E)
041890 B7                  A  5707    	OR	A,A
041891 28 15               A  5708    	JR	Z,L_357
041893 DD3106              A  5709    	LD	IY,(IX+%6)
041896 FD270B              A  5710    	LD	HL,(IY+%B)
041899 ED4B 56 87 04       A  5711    	LD	BC,(_address)
04189E B7                  A  5712    	OR	A,A
04189F ED42                A  5713    	SBC	HL,BC
0418A1 2B                  A  5714    	DEC	HL
0418A2 2B                  A  5715    	DEC	HL
0418A3 DD2FFC              A  5716    	LD	(IX+%FFFFFFFC),HL
                           A  5717    ;  780	                else rel = op->immediat
                           A  5718    .LINE 780
                           A  5719    
0418A6 18 09               A  5720    	JR	L_360
0418A8                     A  5721    L_357:
0418A8 DD3106              A  5722    	LD	IY,(IX+%6)
0418AB FD070B              A  5723    	LD	BC,(IY+%B)
0418AE DD0FFC              A  5724    	LD	(IX+%FFFFFFFC),BC
0418B1                     A  5725    L_360:
                           A  5726    ;  781	                if((rel > 127) || (rel 
                           A  5727    .LINE 781
                           A  5728    
0418B1 DD07FC              A  5729    	LD	BC,(IX+%FFFFFFFC)
0418B4 217F0000            A  5730    	LD	HL,127
0418B8 B7                  A  5731    	OR	A,A
0418B9 ED42                A  5732    	SBC	HL,BC
0418BB FA D1 18 04         A  5733    	JP	M,L_359
0418BF 0180FFFF            A  5734    	LD	BC,16777088
0418C3 DD27FC              A  5735    	LD	HL,(IX+%FFFFFFFC)
0418C6 B7                  A  5736    	OR	A,A
0418C7 ED42                A  5737    	SBC	HL,BC
0418C9 CD 38 57 04         A  5738    	CALL	__setflag
0418CD F2 DD 18 04         A  5739    	JP	P,L_361
0418D1                     A  5740    L_359:
0418D1 21 84 64 04         A  5741    	LD	HL,_message+66
0418D5 ED07                A  5742    	LD	BC,(HL)
0418D7 C5                  A  5743    	PUSH	BC
0418D8 CD DC 4B 04         A  5744    	CALL	_error
0418DC C1                  A  5745    	POP	BC
0418DD                     A  5746    L_361:
                           A  5747    ;  782	                op->immediate = ((int8_
                           A  5748    .LINE 782
                           A  5749    
0418DD DD7EFC              A  5750    	LD	A,(IX+%FFFFFFFC)
0418E0 6F                  A  5751    	LD	L,A
0418E1 45                  A  5752    	LD	B,L
0418E2 78                  A  5753    	LD	A,B
0418E3 17ED62              A  5754    	SEXT	HL
0418E6 68                  A  5755    	LD	L,B
0418E7 DD3106              A  5756    	LD	IY,(IX+%6)
0418EA FD2F0B              A  5757    	LD	(IY+%B),HL
                           A  5758    ;  783	                op->immediate_provided 
                           A  5759    .LINE 783
                           A  5760    
0418ED FD360A01            A  5761    	LD	(IY+%A),%1
                           A  5762    ;  784	            }
                           A  5763    .LINE 784
                           A  5764    
                           A  5765    ;  785	            break;
                           A  5766    .LINE 785
                           A  5767    
0418F1 18 0C               A  5768    	JR	L_366
                           A  5769    ;  786	        case TRANSFORM_NONE:
                           A  5770    ;  787	            break;
                           A  5771    ;  788	        default:
0418F3                     A  5772    L_365:
                           A  5773    .LINE 788
                           A  5774    
                           A  5775    ;  789	            error(message[ERROR_TRANSFO
                           A  5776    .LINE 789
                           A  5777    
0418F3 21 5D 64 04         A  5778    	LD	HL,_message+27
0418F7 ED07                A  5779    	LD	BC,(HL)
0418F9 C5                  A  5780    	PUSH	BC
0418FA CD DC 4B 04         A  5781    	CALL	_error
0418FE C1                  A  5782    	POP	BC
                           A  5783    ;  790	            break;
                           A  5784    ;  791	    }
0418FF                     A  5785    L_366:
                           A  5786    .LINE 791
                           A  5787    
                           A  5788    ;  792	    return;
                           A  5789    ;  793	}
                           A  5790    .LINE 793
                           A  5791    
0418FF DDF9                A  5792    	LD	SP,IX
041901 DDE1                A  5793    	POP	IX
041903 C9                  A  5794    	RET	
                           A  5795    
                           A  5796    
                           A  5797    ;**************************** _transform_instru
                           A  5798    ;Name                         Addr/Register   S
                           A  5799    ;_message                            IMPORT  un
                           A  5800    ;_error                              IMPORT  --
                           A  5801    ;_address                            IMPORT    
                           A  5802    ;_pass                               IMPORT    
                           A  5803    ;_output                             IMPORT    
                           A  5804    ;G_16                                 IX-10    
                           A  5805    ;G_15                                  IX-7    
                           A  5806    ;rel                                   IX-4    
                           A  5807    ;y                                     IX-1    
                           A  5808    ;type                                  IX+9    
                           A  5809    ;op                                    IX+6    
                           A  5810    
                           A  5811    
                           A  5812    ; Stack Frame Size: 22 (bytes)
                           A  5813    ;       Spill Code: 0 (instruction)
                           A  5814    
                           A  5815    
                           A  5816    .ENDFUNC "transform_instruction",793,"_transfor
                           A  5817    ;  794	
                           A  5818    ;  795	void emit_instruction(operandlist *list
041904                     A  5819    _emit_instruction:
                           A  5820    .DEFINE "_emit_instruction"
                           A  5821    
                           A  5822    .VALUE _emit_instruction
                           A  5823    
                           A  5824    .CLASS 2
                           A  5825    
                           A  5826    .TYPE 65
                           A  5827    
                           A  5828    .ENDEF
                           A  5829    
                           A  5830    .BEGFUNC "emit_instruction",795,"_emit_instruct
                           A  5831    
                           A  5832    .LINE 795
                           A  5833    
                           A  5834    .DEFINE "list"
                           A  5835    
                           A  5836    .CLASS 65
                           A  5837    
                           A  5838    .VALUE 6
                           A  5839    
                           A  5840    .TAG "NONAME5"
                           A  5841    
                           A  5842    .TYPE 40
                           A  5843    
                           A  5844    .ENDEF
                           A  5845    
                           A  5846    .DEFINE "ddbeforeopcode"
                           A  5847    
                           A  5848    .CLASS 65
                           A  5849    
                           A  5850    .VALUE -1
                           A  5851    
                           A  5852    .TYPE 12
                           A  5853    
                           A  5854    .ENDEF
                           A  5855    
041904 DDE5                A  5856    	PUSH	IX
041906 DD210000 00         A  5857    	LD	IX,0
04190B DD39                A  5858    	ADD	IX,SP
04190D ED22EA              A  5859    	LEA	HL,IX+%FFFFFFEA
041910 F9                  A  5860    	LD	SP,HL
                           A  5861    ;  796	    bool ddbeforeopcode; // determine p
                           A  5862    ;  797	
                           A  5863    ;  798	    // Transform necessary prefix/opcod
                           A  5864    ;  799	    output.suffix = getADLsuffix();
                           A  5865    .LINE 799
                           A  5866    
041911 CD F8 12 04         A  5867    	CALL	_getADLsuffix
041915 32 85 88 04         A  5868    	LD	(_output),A
                           A  5869    ;  800	    output.prefix1 = 0;
                           A  5870    .LINE 800
                           A  5871    
041919 AF                  A  5872    	XOR	A,A
04191A 32 86 88 04         A  5873    	LD	(_output+1),A
                           A  5874    ;  801	    output.prefix2 = list->prefix;
                           A  5875    .LINE 801
                           A  5876    
04191E DD3106              A  5877    	LD	IY,(IX+%6)
041921 FD7E0D              A  5878    	LD	A,(IY+%D)
041924 32 87 88 04         A  5879    	LD	(_output+2),A
                           A  5880    ;  802	    output.opcode = list->opcode;
                           A  5881    .LINE 802
                           A  5882    
041928 FD7E0E              A  5883    	LD	A,(IY+%E)
04192B 32 88 88 04         A  5884    	LD	(_output+3),A
                           A  5885    ;  803	
                           A  5886    ;  804	    if(pass == 1) definelabel(address);
                           A  5887    .LINE 804
                           A  5888    
04192F 01010000            A  5889    	LD	BC,1
041933 2A 53 87 04         A  5890    	LD	HL,(_pass)
041937 B7                  A  5891    	OR	A,A
041938 ED42                A  5892    	SBC	HL,BC
04193A 20 0B               A  5893    	JR	NZ,L_380
04193C ED4B 56 87 04       A  5894    	LD	BC,(_address)
041941 C5                  A  5895    	PUSH	BC
041942 CD 1B 12 04         A  5896    	CALL	_definelabel
041946 C1                  A  5897    	POP	BC
041947                     A  5898    L_380:
                           A  5899    ;  805	
                           A  5900    ;  806	    // issue any errors here
                           A  5901    ;  807	    if((list->transformA != TRANSFORM_R
                           A  5902    .LINE 807
                           A  5903    
041947 010D0000            A  5904    	LD	BC,13
04194B DD3106              A  5905    	LD	IY,(IX+%6)
04194E FD2707              A  5906    	LD	HL,(IY+%7)
041951 B7                  A  5907    	OR	A,A
041952 ED42                A  5908    	SBC	HL,BC
041954 CA 0D 1A 04         A  5909    	JR	Z,L_383
041958 DD3106              A  5910    	LD	IY,(IX+%6)
04195B FD270A              A  5911    	LD	HL,(IY+%A)
04195E B7                  A  5912    	OR	A,A
04195F ED42                A  5913    	SBC	HL,BC
041961 CA 0D 1A 04         A  5914    	JR	Z,L_383
                           A  5915    ;  808	        if(((list->operandA == OPTYPE_N
                           A  5916    .LINE 808
                           A  5917    
041965 DD3106              A  5918    	LD	IY,(IX+%6)
041968 FD0700              A  5919    	LD	BC,(IY+%0)
04196B DD0FF9              A  5920    	LD	(IX+%FFFFFFF9),BC
04196E 01080000            A  5921    	LD	BC,8
041972 DD27F9              A  5922    	LD	HL,(IX+%FFFFFFF9)
041975 B7                  A  5923    	OR	A,A
041976 ED42                A  5924    	SBC	HL,BC
041978 28 0C               A  5925    	JR	Z,L_372
04197A 01190000            A  5926    	LD	BC,25
04197E DD27F9              A  5927    	LD	HL,(IX+%FFFFFFF9)
041981 B7                  A  5928    	OR	A,A
041982 ED42                A  5929    	SBC	HL,BC
041984 20 33               A  5930    	JR	NZ,L_378
041986                     A  5931    L_372:
041986 ED4B 72 88 04       A  5932    	LD	BC,(_operand1+11)
04198B 21FF0000            A  5933    	LD	HL,255
04198F B7                  A  5934    	OR	A,A
041990 ED42                A  5935    	SBC	HL,BC
041992 CD 38 57 04         A  5936    	CALL	__setflag
041996 FA AD 19 04         A  5937    	JP	M,L_373
04199A 0180FFFF            A  5938    	LD	BC,16777088
04199E 2A 72 88 04         A  5939    	LD	HL,(_operand1+11)
0419A2 B7                  A  5940    	OR	A,A
0419A3 ED42                A  5941    	SBC	HL,BC
0419A5 CD 38 57 04         A  5942    	CALL	__setflag
0419A9 F2 B9 19 04         A  5943    	JP	P,L_378
0419AD                     A  5944    L_373:
0419AD 21 63 64 04         A  5945    	LD	HL,_message+33
0419B1 ED07                A  5946    	LD	BC,(HL)
0419B3 C5                  A  5947    	PUSH	BC
0419B4 CD DC 4B 04         A  5948    	CALL	_error
0419B8 C1                  A  5949    	POP	BC
0419B9                     A  5950    L_378:
                           A  5951    ;  809	        if(((list->operandB == OPTYPE_N
                           A  5952    .LINE 809
                           A  5953    
0419B9 DD3106              A  5954    	LD	IY,(IX+%6)
0419BC FD0703              A  5955    	LD	BC,(IY+%3)
0419BF DD0FF6              A  5956    	LD	(IX+%FFFFFFF6),BC
0419C2 01080000            A  5957    	LD	BC,8
0419C6 DD27F6              A  5958    	LD	HL,(IX+%FFFFFFF6)
0419C9 B7                  A  5959    	OR	A,A
0419CA ED42                A  5960    	SBC	HL,BC
0419CC 28 0C               A  5961    	JR	Z,L_376
0419CE 01190000            A  5962    	LD	BC,25
0419D2 DD27F6              A  5963    	LD	HL,(IX+%FFFFFFF6)
0419D5 B7                  A  5964    	OR	A,A
0419D6 ED42                A  5965    	SBC	HL,BC
0419D8 20 33               A  5966    	JR	NZ,L_383
0419DA                     A  5967    L_376:
0419DA ED4B 81 88 04       A  5968    	LD	BC,(_operand2+11)
0419DF 21FF0000            A  5969    	LD	HL,255
0419E3 B7                  A  5970    	OR	A,A
0419E4 ED42                A  5971    	SBC	HL,BC
0419E6 CD 38 57 04         A  5972    	CALL	__setflag
0419EA FA 01 1A 04         A  5973    	JP	M,L_377
0419EE 0180FFFF            A  5974    	LD	BC,16777088
0419F2 2A 81 88 04         A  5975    	LD	HL,(_operand2+11)
0419F6 B7                  A  5976    	OR	A,A
0419F7 ED42                A  5977    	SBC	HL,BC
0419F9 CD 38 57 04         A  5978    	CALL	__setflag
0419FD F2 0D 1A 04         A  5979    	JP	P,L_383
041A01                     A  5980    L_377:
041A01 21 63 64 04         A  5981    	LD	HL,_message+33
041A05 ED07                A  5982    	LD	BC,(HL)
041A07 C5                  A  5983    	PUSH	BC
041A08 CD DC 4B 04         A  5984    	CALL	_error
041A0C C1                  A  5985    	POP	BC
                           A  5986    ;  810	    }
041A0D                     A  5987    L_383:
                           A  5988    .LINE 810
                           A  5989    
                           A  5990    ;  811	    if((output.suffix) && ((list->adl &
                           A  5991    .LINE 811
                           A  5992    
041A0D 3A 85 88 04         A  5993    	LD	A,(_output)
041A11 B7                  A  5994    	OR	A,A
041A12 28 18               A  5995    	JR	Z,L_387
041A14 3A 85 88 04         A  5996    	LD	A,(_output)
041A18 DD3106              A  5997    	LD	IY,(IX+%6)
041A1B FDA60F              A  5998    	AND	A,(IY+%F)
041A1E 20 0C               A  5999    	JR	NZ,L_387
041A20 21 6C 64 04         A  6000    	LD	HL,_message+42
041A24 ED07                A  6001    	LD	BC,(HL)
041A26 C5                  A  6002    	PUSH	BC
041A27 CD DC 4B 04         A  6003    	CALL	_error
041A2B C1                  A  6004    	POP	BC
041A2C                     A  6005    L_387:
                           A  6006    ;  812	    if((operand2.displacement_provided)
                           A  6007    .LINE 812
                           A  6008    
041A2C 3A 7F 88 04         A  6009    	LD	A,(_operand2+9)
041A30 B7                  A  6010    	OR	A,A
041A31 28 31               A  6011    	JR	Z,L_390
041A33 490180FF            A  6012    	LD.LIS	BC,-128
041A37 2A 7D 88 04         A  6013    	LD	HL,(_operand2+7)
041A3B B7                  A  6014    	OR	A,A
041A3C 40ED42              A  6015    	SBC.SIS	HL,BC
041A3F FA 58 1A 04         A  6016    	JP	M,L_386
041A43 ED4B 7D 88 04       A  6017    	LD	BC,(_operand2+7)
041A48 49217F00            A  6018    	LD.LIS	HL,127
041A4C B7                  A  6019    	OR	A,A
041A4D 40ED42              A  6020    	SBC.SIS	HL,BC
041A50 CD 38 57 04         A  6021    	CALL	__setflag
041A54 F2 64 1A 04         A  6022    	JP	P,L_390
041A58                     A  6023    L_386:
041A58 21 6F 64 04         A  6024    	LD	HL,_message+45
041A5C ED07                A  6025    	LD	BC,(HL)
041A5E C5                  A  6026    	PUSH	BC
041A5F CD DC 4B 04         A  6027    	CALL	_error
041A63 C1                  A  6028    	POP	BC
041A64                     A  6029    L_390:
                           A  6030    ;  813	
                           A  6031    ;  814	    // Specific checks
                           A  6032    ;  815	    if((list->operandA == OPTYPE_BIT) &
                           A  6033    .LINE 815
                           A  6034    
041A64 01150000            A  6035    	LD	BC,21
041A68 DD3106              A  6036    	LD	IY,(IX+%6)
041A6B FD2700              A  6037    	LD	HL,(IY+%0)
041A6E B7                  A  6038    	OR	A,A
041A6F ED42                A  6039    	SBC	HL,BC
041A71 20 20               A  6040    	JR	NZ,L_393
041A73 ED4B 72 88 04       A  6041    	LD	BC,(_operand1+11)
041A78 21070000            A  6042    	LD	HL,7
041A7C B7                  A  6043    	OR	A,A
041A7D ED42                A  6044    	SBC	HL,BC
041A7F CD 38 57 04         A  6045    	CALL	__setflag
041A83 F2 93 1A 04         A  6046    	JP	P,L_393
041A87 21 87 64 04         A  6047    	LD	HL,_message+69
041A8B ED07                A  6048    	LD	BC,(HL)
041A8D C5                  A  6049    	PUSH	BC
041A8E CD DC 4B 04         A  6050    	CALL	_error
041A92 C1                  A  6051    	POP	BC
041A93                     A  6052    L_393:
                           A  6053    ;  816	    if((list->operandA == OPTYPE_NSELEC
                           A  6054    .LINE 816
                           A  6055    
041A93 01180000            A  6056    	LD	BC,24
041A97 DD3106              A  6057    	LD	IY,(IX+%6)
041A9A FD2700              A  6058    	LD	HL,(IY+%0)
041A9D B7                  A  6059    	OR	A,A
041A9E ED42                A  6060    	SBC	HL,BC
041AA0 20 20               A  6061    	JR	NZ,L_396
041AA2 ED4B 72 88 04       A  6062    	LD	BC,(_operand1+11)
041AA7 21020000            A  6063    	LD	HL,2
041AAB B7                  A  6064    	OR	A,A
041AAC ED42                A  6065    	SBC	HL,BC
041AAE CD 38 57 04         A  6066    	CALL	__setflag
041AB2 F2 C2 1A 04         A  6067    	JP	P,L_396
041AB6 21 8A 64 04         A  6068    	LD	HL,_message+72
041ABA ED07                A  6069    	LD	BC,(HL)
041ABC C5                  A  6070    	PUSH	BC
041ABD CD DC 4B 04         A  6071    	CALL	_error
041AC1 C1                  A  6072    	POP	BC
041AC2                     A  6073    L_396:
                           A  6074    ;  817	    if((list->transformA == TRANSFORM_N
                           A  6075    .LINE 817
                           A  6076    
041AC2 010B0000            A  6077    	LD	BC,11
041AC6 DD3106              A  6078    	LD	IY,(IX+%6)
041AC9 FD2707              A  6079    	LD	HL,(IY+%7)
041ACC B7                  A  6080    	OR	A,A
041ACD ED42                A  6081    	SBC	HL,BC
041ACF 20 1C               A  6082    	JR	NZ,L_397
041AD1 3A 72 88 04         A  6083    	LD	A,(_operand1+11)
041AD5 E647                A  6084    	AND	A,%47
041AD7 B7ED62              A  6085    	UEXT	HL
041ADA 6F                  A  6086    	LD	L,A
041ADB CD C5 5D 04         A  6087    	CALL	__icmpzero
041ADF 28 0C               A  6088    	JR	Z,L_397
041AE1 21 8D 64 04         A  6089    	LD	HL,_message+75
041AE5 ED07                A  6090    	LD	BC,(HL)
041AE7 C5                  A  6091    	PUSH	BC
041AE8 CD DC 4B 04         A  6092    	CALL	_error
041AEC C1                  A  6093    	POP	BC
041AED                     A  6094    L_397:
                           A  6095    ;  818	
                           A  6096    ;  819	    // prepare extra DD/FD suffix if ne
                           A  6097    ;  820	    prefix_ddfd_suffix(list);
                           A  6098    .LINE 820
                           A  6099    
041AED DD0706              A  6100    	LD	BC,(IX+%6)
041AF0 C5                  A  6101    	PUSH	BC
041AF1 CD 6E 16 04         A  6102    	CALL	_prefix_ddfd_suffix
041AF5 C1                  A  6103    	POP	BC
                           A  6104    ;  821	    // Transform the opcode and potenti
                           A  6105    ;  822	    transform_instruction(&operand1, li
                           A  6106    .LINE 822
                           A  6107    
041AF6 DD3106              A  6108    	LD	IY,(IX+%6)
041AF9 FD0707              A  6109    	LD	BC,(IY+%7)
041AFC C5                  A  6110    	PUSH	BC
041AFD 01 67 88 04         A  6111    	LD	BC,_operand1
041B01 C5                  A  6112    	PUSH	BC
041B02 CD DE 16 04         A  6113    	CALL	_transform_instruction
041B06 C1                  A  6114    	POP	BC
041B07 C1                  A  6115    	POP	BC
                           A  6116    ;  823	    transform_instruction(&operand2, li
                           A  6117    .LINE 823
                           A  6118    
041B08 DD3106              A  6119    	LD	IY,(IX+%6)
041B0B FD070A              A  6120    	LD	BC,(IY+%A)
041B0E C5                  A  6121    	PUSH	BC
041B0F 01 76 88 04         A  6122    	LD	BC,_operand2
041B13 C5                  A  6123    	PUSH	BC
041B14 CD DE 16 04         A  6124    	CALL	_transform_instruction
041B18 C1                  A  6125    	POP	BC
041B19 C1                  A  6126    	POP	BC
                           A  6127    ;  824	    // determine position of dd
                           A  6128    ;  825	    ddbeforeopcode = (((output.prefix1 
                           A  6129    .LINE 825
                           A  6130    
041B1A 3A 86 88 04         A  6131    	LD	A,(_output+1)
041B1E FEDD                A  6132    	CP	A,%DD
041B20 28 08               A  6133    	JR	Z,L_399
041B22 3A 86 88 04         A  6134    	LD	A,(_output+1)
041B26 FEFD                A  6135    	CP	A,%FD
041B28 20 1F               A  6136    	JR	NZ,L_403
041B2A                     A  6137    L_399:
041B2A 3A 87 88 04         A  6138    	LD	A,(_output+2)
041B2E FECB                A  6139    	CP	A,%CB
041B30 20 17               A  6140    	JR	NZ,L_403
                           A  6141    ;  826	                ((operand1.displacement
                           A  6142    .LINE 826
                           A  6143    
041B32 3A 70 88 04         A  6144    	LD	A,(_operand1+9)
041B36 B7                  A  6145    	OR	A,A
041B37 20 07               A  6146    	JR	NZ,L_402
041B39 3A 7F 88 04         A  6147    	LD	A,(_operand2+9)
041B3D B7                  A  6148    	OR	A,A
041B3E 28 09               A  6149    	JR	Z,L_403
041B40                     A  6150    L_402:
041B40 01010000            A  6151    	LD	BC,1
041B44 DD0FFC              A  6152    	LD	(IX+%FFFFFFFC),BC
041B47 18 07               A  6153    	JR	L_404
041B49                     A  6154    L_403:
041B49 01000000            A  6155    	LD	BC,0
041B4D DD0FFC              A  6156    	LD	(IX+%FFFFFFFC),BC
041B50                     A  6157    L_404:
041B50 DD7EFC              A  6158    	LD	A,(IX+%FFFFFFFC)
041B53 DD77FF              A  6159    	LD	(IX+%FFFFFFFF),A
                           A  6160    ;  827	    
                           A  6161    ;  828	    // output adl suffix and any prefix
                           A  6162    ;  829	    if(output.suffix > 0) emit_adlsuffi
                           A  6163    .LINE 829
                           A  6164    
041B56 AF                  A  6165    	XOR	A,A
041B57 21 85 88 04         A  6166    	LD	HL,_output
041B5B BE                  A  6167    	CP	A,(HL)
041B5C 30 0D               A  6168    	JR	NC,L_408
041B5E 3A 85 88 04         A  6169    	LD	A,(_output)
041B62 4F                  A  6170    	LD	C,A
041B63 0600                A  6171    	LD	B,%0
041B65 C5                  A  6172    	PUSH	BC
041B66 CD D4 15 04         A  6173    	CALL	_emit_adlsuffix_code
041B6A C1                  A  6174    	POP	BC
041B6B                     A  6175    L_408:
                           A  6176    ;  830	    if(output.prefix1) emit_8bit(output
                           A  6177    .LINE 830
                           A  6178    
041B6B 3A 86 88 04         A  6179    	LD	A,(_output+1)
041B6F B7                  A  6180    	OR	A,A
041B70 28 0D               A  6181    	JR	Z,L_410
041B72 3A 86 88 04         A  6182    	LD	A,(_output+1)
041B76 4F                  A  6183    	LD	C,A
041B77 0600                A  6184    	LD	B,%0
041B79 C5                  A  6185    	PUSH	BC
041B7A CD B8 1C 04         A  6186    	CALL	_emit_8bit
041B7E C1                  A  6187    	POP	BC
041B7F                     A  6188    L_410:
                           A  6189    ;  831	    if(output.prefix2) emit_8bit(output
                           A  6190    .LINE 831
                           A  6191    
041B7F 3A 87 88 04         A  6192    	LD	A,(_output+2)
041B83 B7                  A  6193    	OR	A,A
041B84 28 0D               A  6194    	JR	Z,L_412
041B86 3A 87 88 04         A  6195    	LD	A,(_output+2)
041B8A 4F                  A  6196    	LD	C,A
041B8B 0600                A  6197    	LD	B,%0
041B8D C5                  A  6198    	PUSH	BC
041B8E CD B8 1C 04         A  6199    	CALL	_emit_8bit
041B92 C1                  A  6200    	POP	BC
041B93                     A  6201    L_412:
                           A  6202    ;  832	
                           A  6203    ;  833	    // opcode in normal position
                           A  6204    ;  834	    if(!ddbeforeopcode) emit_8bit(outpu
                           A  6205    .LINE 834
                           A  6206    
041B93 DD7EFF              A  6207    	LD	A,(IX+%FFFFFFFF)
041B96 B7                  A  6208    	OR	A,A
041B97 20 0D               A  6209    	JR	NZ,L_414
041B99 3A 88 88 04         A  6210    	LD	A,(_output+3)
041B9D 4F                  A  6211    	LD	C,A
041B9E 0600                A  6212    	LD	B,%0
041BA0 C5                  A  6213    	PUSH	BC
041BA1 CD B8 1C 04         A  6214    	CALL	_emit_8bit
041BA5 C1                  A  6215    	POP	BC
041BA6                     A  6216    L_414:
                           A  6217    ;  835	    
                           A  6218    ;  836	    // output displacement
                           A  6219    ;  837	    if(operand1.displacement_provided) 
                           A  6220    .LINE 837
                           A  6221    
041BA6 3A 70 88 04         A  6222    	LD	A,(_operand1+9)
041BAA B7                  A  6223    	OR	A,A
041BAB 28 0D               A  6224    	JR	Z,L_416
041BAD 3A 6E 88 04         A  6225    	LD	A,(_operand1+7)
041BB1 4F                  A  6226    	LD	C,A
041BB2 0600                A  6227    	LD	B,%0
041BB4 C5                  A  6228    	PUSH	BC
041BB5 CD B8 1C 04         A  6229    	CALL	_emit_8bit
041BB9 C1                  A  6230    	POP	BC
041BBA                     A  6231    L_416:
                           A  6232    ;  838	    if(operand2.displacement_provided) 
                           A  6233    .LINE 838
                           A  6234    
041BBA 3A 7F 88 04         A  6235    	LD	A,(_operand2+9)
041BBE B7                  A  6236    	OR	A,A
041BBF 28 0D               A  6237    	JR	Z,L_420
041BC1 3A 7D 88 04         A  6238    	LD	A,(_operand2+7)
041BC5 4F                  A  6239    	LD	C,A
041BC6 0600                A  6240    	LD	B,%0
041BC8 C5                  A  6241    	PUSH	BC
041BC9 CD B8 1C 04         A  6242    	CALL	_emit_8bit
041BCD C1                  A  6243    	POP	BC
041BCE                     A  6244    L_420:
                           A  6245    ;  839	    // output n
                           A  6246    ;  840	    if((operand1.immediate_provided) &&
                           A  6247    .LINE 840
                           A  6248    
041BCE 3A 71 88 04         A  6249    	LD	A,(_operand1+10)
041BD2 B7                  A  6250    	OR	A,A
041BD3 28 2E               A  6251    	JR	Z,L_424
041BD5 DD3106              A  6252    	LD	IY,(IX+%6)
041BD8 FD0700              A  6253    	LD	BC,(IY+%0)
041BDB DD0FF3              A  6254    	LD	(IX+%FFFFFFF3),BC
041BDE 01080000            A  6255    	LD	BC,8
041BE2 DD27F3              A  6256    	LD	HL,(IX+%FFFFFFF3)
041BE5 B7                  A  6257    	OR	A,A
041BE6 ED42                A  6258    	SBC	HL,BC
041BE8 28 0C               A  6259    	JR	Z,L_419
041BEA 01190000            A  6260    	LD	BC,25
041BEE DD27F3              A  6261    	LD	HL,(IX+%FFFFFFF3)
041BF1 B7                  A  6262    	OR	A,A
041BF2 ED42                A  6263    	SBC	HL,BC
041BF4 20 0D               A  6264    	JR	NZ,L_424
041BF6                     A  6265    L_419:
041BF6 3A 72 88 04         A  6266    	LD	A,(_operand1+11)
041BFA 4F                  A  6267    	LD	C,A
041BFB 0600                A  6268    	LD	B,%0
041BFD C5                  A  6269    	PUSH	BC
041BFE CD B8 1C 04         A  6270    	CALL	_emit_8bit
041C02 C1                  A  6271    	POP	BC
041C03                     A  6272    L_424:
                           A  6273    ;  841	    if((operand2.immediate_provided) &&
                           A  6274    .LINE 841
                           A  6275    
041C03 3A 80 88 04         A  6276    	LD	A,(_operand2+10)
041C07 B7                  A  6277    	OR	A,A
041C08 28 2E               A  6278    	JR	Z,L_426
041C0A DD3106              A  6279    	LD	IY,(IX+%6)
041C0D FD0703              A  6280    	LD	BC,(IY+%3)
041C10 DD0FF0              A  6281    	LD	(IX+%FFFFFFF0),BC
041C13 01080000            A  6282    	LD	BC,8
041C17 DD27F0              A  6283    	LD	HL,(IX+%FFFFFFF0)
041C1A B7                  A  6284    	OR	A,A
041C1B ED42                A  6285    	SBC	HL,BC
041C1D 28 0C               A  6286    	JR	Z,L_423
041C1F 01190000            A  6287    	LD	BC,25
041C23 DD27F0              A  6288    	LD	HL,(IX+%FFFFFFF0)
041C26 B7                  A  6289    	OR	A,A
041C27 ED42                A  6290    	SBC	HL,BC
041C29 20 0D               A  6291    	JR	NZ,L_426
041C2B                     A  6292    L_423:
041C2B 3A 81 88 04         A  6293    	LD	A,(_operand2+11)
041C2F 4F                  A  6294    	LD	C,A
041C30 0600                A  6295    	LD	B,%0
041C32 C5                  A  6296    	PUSH	BC
041C33 CD B8 1C 04         A  6297    	CALL	_emit_8bit
041C37 C1                  A  6298    	POP	BC
041C38                     A  6299    L_426:
                           A  6300    ;  842	
                           A  6301    ;  843	
                           A  6302    ;  844	    // opcode in DDCBdd/DFCBdd position
                           A  6303    ;  845	    if(ddbeforeopcode) emit_8bit(output
                           A  6304    .LINE 845
                           A  6305    
041C38 DD7EFF              A  6306    	LD	A,(IX+%FFFFFFFF)
041C3B B7                  A  6307    	OR	A,A
041C3C 28 0D               A  6308    	JR	Z,L_429
041C3E 3A 88 88 04         A  6309    	LD	A,(_output+3)
041C42 4F                  A  6310    	LD	C,A
041C43 0600                A  6311    	LD	B,%0
041C45 C5                  A  6312    	PUSH	BC
041C46 CD B8 1C 04         A  6313    	CALL	_emit_8bit
041C4A C1                  A  6314    	POP	BC
041C4B                     A  6315    L_429:
                           A  6316    ;  846	
                           A  6317    ;  847	    //output remaining immediate bytes
                           A  6318    ;  848	    if((list->operandA == OPTYPE_MMN) |
                           A  6319    .LINE 848
                           A  6320    
041C4B DD3106              A  6321    	LD	IY,(IX+%6)
041C4E FD0700              A  6322    	LD	BC,(IY+%0)
041C51 DD0FED              A  6323    	LD	(IX+%FFFFFFED),BC
041C54 01060000            A  6324    	LD	BC,6
041C58 DD27ED              A  6325    	LD	HL,(IX+%FFFFFFED)
041C5B B7                  A  6326    	OR	A,A
041C5C ED42                A  6327    	SBC	HL,BC
041C5E 28 0C               A  6328    	JR	Z,L_428
041C60 01070000            A  6329    	LD	BC,7
041C64 DD27ED              A  6330    	LD	HL,(IX+%FFFFFFED)
041C67 B7                  A  6331    	OR	A,A
041C68 ED42                A  6332    	SBC	HL,BC
041C6A 20 13               A  6333    	JR	NZ,L_432
041C6C                     A  6334    L_428:
041C6C 3A 85 88 04         A  6335    	LD	A,(_output)
041C70 4F                  A  6336    	LD	C,A
041C71 0600                A  6337    	LD	B,%0
041C73 C5                  A  6338    	PUSH	BC
041C74 01 67 88 04         A  6339    	LD	BC,_operand1
041C78 C5                  A  6340    	PUSH	BC
041C79 CD 6F 15 04         A  6341    	CALL	_emit_immediate
041C7D C1                  A  6342    	POP	BC
041C7E C1                  A  6343    	POP	BC
041C7F                     A  6344    L_432:
                           A  6345    ;  849	    if((list->operandB == OPTYPE_MMN) |
                           A  6346    .LINE 849
                           A  6347    
041C7F DD3106              A  6348    	LD	IY,(IX+%6)
041C82 FD0703              A  6349    	LD	BC,(IY+%3)
041C85 DD0FEA              A  6350    	LD	(IX+%FFFFFFEA),BC
041C88 01060000            A  6351    	LD	BC,6
041C8C DD27EA              A  6352    	LD	HL,(IX+%FFFFFFEA)
041C8F B7                  A  6353    	OR	A,A
041C90 ED42                A  6354    	SBC	HL,BC
041C92 28 0C               A  6355    	JR	Z,L_431
041C94 01070000            A  6356    	LD	BC,7
041C98 DD27EA              A  6357    	LD	HL,(IX+%FFFFFFEA)
041C9B B7                  A  6358    	OR	A,A
041C9C ED42                A  6359    	SBC	HL,BC
041C9E 20 13               A  6360    	JR	NZ,L_433
041CA0                     A  6361    L_431:
041CA0 3A 85 88 04         A  6362    	LD	A,(_output)
041CA4 4F                  A  6363    	LD	C,A
041CA5 0600                A  6364    	LD	B,%0
041CA7 C5                  A  6365    	PUSH	BC
041CA8 01 76 88 04         A  6366    	LD	BC,_operand2
041CAC C5                  A  6367    	PUSH	BC
041CAD CD 6F 15 04         A  6368    	CALL	_emit_immediate
041CB1 C1                  A  6369    	POP	BC
041CB2 C1                  A  6370    	POP	BC
                           A  6371    ;  850	}
041CB3                     A  6372    L_433:
                           A  6373    .LINE 850
                           A  6374    
041CB3 DDF9                A  6375    	LD	SP,IX
041CB5 DDE1                A  6376    	POP	IX
041CB7 C9                  A  6377    	RET	
                           A  6378    
                           A  6379    
                           A  6380    ;**************************** _emit_instruction
                           A  6381    ;Name                         Addr/Register   S
                           A  6382    ;_emit_8bit                          IMPORT  --
                           A  6383    ;_operand2                           IMPORT    
                           A  6384    ;_message                            IMPORT  un
                           A  6385    ;_error                              IMPORT  --
                           A  6386    ;_operand1                           IMPORT    
                           A  6387    ;_address                            IMPORT    
                           A  6388    ;_pass                               IMPORT    
                           A  6389    ;_output                             IMPORT    
                           A  6390    ;G_22                                 IX-22    
                           A  6391    ;G_21                                 IX-19    
                           A  6392    ;G_20                                 IX-16    
                           A  6393    ;G_19                                 IX-13    
                           A  6394    ;G_18                                 IX-10    
                           A  6395    ;G_17                                  IX-7    
                           A  6396    ;temp405                               IX-4    
                           A  6397    ;ddbeforeopcode                        IX-1    
                           A  6398    ;list                                  IX+6    
                           A  6399    
                           A  6400    
                           A  6401    ; Stack Frame Size: 31 (bytes)
                           A  6402    ;       Spill Code: 0 (instruction)
                           A  6403    
                           A  6404    
                           A  6405    .ENDFUNC "emit_instruction",850,"_emit_instruct
                           A  6406    ;  851	
                           A  6407    ;  852	void emit_8bit(uint8_t value) {
041CB8                     A  6408    _emit_8bit:
                           A  6409    .DEFINE "_emit_8bit"
                           A  6410    
                           A  6411    .VALUE _emit_8bit
                           A  6412    
                           A  6413    .CLASS 2
                           A  6414    
                           A  6415    .TYPE 65
                           A  6416    
                           A  6417    .ENDEF
                           A  6418    
                           A  6419    .BEGFUNC "emit_8bit",852,"_emit_8bit"
                           A  6420    
                           A  6421    .LINE 852
                           A  6422    
                           A  6423    .DEFINE "value"
                           A  6424    
                           A  6425    .CLASS 65
                           A  6426    
                           A  6427    .VALUE 6
                           A  6428    
                           A  6429    .TYPE 12
                           A  6430    
                           A  6431    .ENDEF
                           A  6432    
041CB8 DDE5                A  6433    	PUSH	IX
041CBA DD210000 00         A  6434    	LD	IX,0
041CBF DD39                A  6435    	ADD	IX,SP
                           A  6436    ;  853	    if(pass == 2) {
                           A  6437    .LINE 853
                           A  6438    
041CC1 01020000            A  6439    	LD	BC,2
041CC5 2A 53 87 04         A  6440    	LD	HL,(_pass)
041CC9 B7                  A  6441    	OR	A,A
041CCA ED42                A  6442    	SBC	HL,BC
041CCC 20 21               A  6443    	JR	NZ,L_436
                           A  6444    ;  854	        listEmit8bit(value);
                           A  6445    .LINE 854
                           A  6446    
041CCE DD4E06              A  6447    	LD	C,(IX+%6)
041CD1 0600                A  6448    	LD	B,%0
041CD3 C5                  A  6449    	PUSH	BC
041CD4 CD E4 45 04         A  6450    	CALL	_listEmit8bit
041CD8 C1                  A  6451    	POP	BC
                           A  6452    ;  855	        agon_fwrite(&value, sizeof(char
                           A  6453    .LINE 855
                           A  6454    
041CD9 01020000            A  6455    	LD	BC,2
041CDD C5                  A  6456    	PUSH	BC
041CDE 01010000            A  6457    	LD	BC,1
041CE2 C5                  A  6458    	PUSH	BC
041CE3 C5                  A  6459    	PUSH	BC
041CE4 ED6506              A  6460    	PEA	IX+%6
041CE7 CD 64 55 04         A  6461    	CALL	_agon_fwrite
041CEB C1                  A  6462    	POP	BC
041CEC C1                  A  6463    	POP	BC
041CED C1                  A  6464    	POP	BC
041CEE C1                  A  6465    	POP	BC
                           A  6466    ;  856	    }
041CEF                     A  6467    L_436:
                           A  6468    .LINE 856
                           A  6469    
                           A  6470    ;  857	    address++;
                           A  6471    .LINE 857
                           A  6472    
041CEF ED4B 56 87 04       A  6473    	LD	BC,(_address)
041CF4 03                  A  6474    	INC	BC
041CF5 ED43 56 87 04       A  6475    	LD	(_address),BC
                           A  6476    ;  858	    totalsize++;
                           A  6477    .LINE 858
                           A  6478    
041CFA ED4B 59 87 04       A  6479    	LD	BC,(_totalsize)
041CFF 03                  A  6480    	INC	BC
041D00 ED43 59 87 04       A  6481    	LD	(_totalsize),BC
                           A  6482    ;  859	}
                           A  6483    .LINE 859
                           A  6484    
041D05 DDF9                A  6485    	LD	SP,IX
041D07 DDE1                A  6486    	POP	IX
041D09 C9                  A  6487    	RET	
                           A  6488    
                           A  6489    
                           A  6490    ;**************************** _emit_8bit ******
                           A  6491    ;Name                         Addr/Register   S
                           A  6492    ;_totalsize                          IMPORT    
                           A  6493    ;_address                            IMPORT    
                           A  6494    ;_agon_fwrite                        IMPORT  --
                           A  6495    ;_listEmit8bit                       IMPORT  --
                           A  6496    ;_pass                               IMPORT    
                           A  6497    ;value                                 IX+6    
                           A  6498    
                           A  6499    
                           A  6500    ; Stack Frame Size: 9 (bytes)
                           A  6501    ;       Spill Code: 0 (instruction)
                           A  6502    
                           A  6503    
                           A  6504    .ENDFUNC "emit_8bit",859,"_emit_8bit"
                           A  6505    ;  860	
                           A  6506    ;  861	void emit_16bit(uint16_t value) {
041D0A                     A  6507    _emit_16bit:
                           A  6508    .DEFINE "_emit_16bit"
                           A  6509    
                           A  6510    .VALUE _emit_16bit
                           A  6511    
                           A  6512    .CLASS 2
                           A  6513    
                           A  6514    .TYPE 65
                           A  6515    
                           A  6516    .ENDEF
                           A  6517    
                           A  6518    .BEGFUNC "emit_16bit",861,"_emit_16bit"
                           A  6519    
                           A  6520    .LINE 861
                           A  6521    
                           A  6522    .DEFINE "value"
                           A  6523    
                           A  6524    .CLASS 65
                           A  6525    
                           A  6526    .VALUE 6
                           A  6527    
                           A  6528    .TYPE 13
                           A  6529    
                           A  6530    .ENDEF
                           A  6531    
041D0A DDE5                A  6532    	PUSH	IX
041D0C DD210000 00         A  6533    	LD	IX,0
041D11 DD39                A  6534    	ADD	IX,SP
                           A  6535    ;  862	    emit_8bit(value&0xFF);
                           A  6536    .LINE 862
                           A  6537    
041D13 DD7E06              A  6538    	LD	A,(IX+%6)
041D16 4F                  A  6539    	LD	C,A
041D17 0600                A  6540    	LD	B,%0
041D19 C5                  A  6541    	PUSH	BC
041D1A CD B8 1C 04         A  6542    	CALL	_emit_8bit
041D1E C1                  A  6543    	POP	BC
                           A  6544    ;  863	    emit_8bit((value>>8)&0xFF);
                           A  6545    .LINE 863
                           A  6546    
041D1F DD0706              A  6547    	LD	BC,(IX+%6)
041D22 CD CA 59 04         A  6548    	CALL	__stoiu
041D26 3E08                A  6549    	LD	A,%8
041D28 CD 7F 57 04         A  6550    	CALL	__ishrs_b
041D2C 7D                  A  6551    	LD	A,L
041D2D 4F                  A  6552    	LD	C,A
041D2E 0600                A  6553    	LD	B,%0
041D30 C5                  A  6554    	PUSH	BC
041D31 CD B8 1C 04         A  6555    	CALL	_emit_8bit
041D35 C1                  A  6556    	POP	BC
                           A  6557    ;  864	}
                           A  6558    .LINE 864
                           A  6559    
041D36 DDF9                A  6560    	LD	SP,IX
041D38 DDE1                A  6561    	POP	IX
041D3A C9                  A  6562    	RET	
                           A  6563    
                           A  6564    
                           A  6565    ;**************************** _emit_16bit *****
                           A  6566    ;Name                         Addr/Register   S
                           A  6567    ;_emit_8bit                          IMPORT  --
                           A  6568    ;value                                 IX+6    
                           A  6569    
                           A  6570    
                           A  6571    ; Stack Frame Size: 9 (bytes)
                           A  6572    ;       Spill Code: 0 (instruction)
                           A  6573    
                           A  6574    
                           A  6575    .ENDFUNC "emit_16bit",864,"_emit_16bit"
                           A  6576    ;  865	
                           A  6577    ;  866	void emit_24bit(uint24_t value) {
041D3B                     A  6578    _emit_24bit:
                           A  6579    .DEFINE "_emit_24bit"
                           A  6580    
                           A  6581    .VALUE _emit_24bit
                           A  6582    
                           A  6583    .CLASS 2
                           A  6584    
                           A  6585    .TYPE 65
                           A  6586    
                           A  6587    .ENDEF
                           A  6588    
                           A  6589    .BEGFUNC "emit_24bit",866,"_emit_24bit"
                           A  6590    
                           A  6591    .LINE 866
                           A  6592    
                           A  6593    .DEFINE "value"
                           A  6594    
                           A  6595    .CLASS 65
                           A  6596    
                           A  6597    .VALUE 6
                           A  6598    
                           A  6599    .TYPE 14
                           A  6600    
                           A  6601    .ENDEF
                           A  6602    
041D3B DDE5                A  6603    	PUSH	IX
041D3D DD210000 00         A  6604    	LD	IX,0
041D42 DD39                A  6605    	ADD	IX,SP
                           A  6606    ;  867	    emit_8bit(value&0xFF);
                           A  6607    .LINE 867
                           A  6608    
041D44 DD7E06              A  6609    	LD	A,(IX+%6)
041D47 4F                  A  6610    	LD	C,A
041D48 0600                A  6611    	LD	B,%0
041D4A C5                  A  6612    	PUSH	BC
041D4B CD B8 1C 04         A  6613    	CALL	_emit_8bit
041D4F C1                  A  6614    	POP	BC
                           A  6615    ;  868	    emit_8bit((value>>8)&0xFF);
                           A  6616    .LINE 868
                           A  6617    
041D50 DD2706              A  6618    	LD	HL,(IX+%6)
041D53 3E08                A  6619    	LD	A,%8
041D55 CD 8B 60 04         A  6620    	CALL	__ishru_b
041D59 7D                  A  6621    	LD	A,L
041D5A 4F                  A  6622    	LD	C,A
041D5B 0600                A  6623    	LD	B,%0
041D5D C5                  A  6624    	PUSH	BC
041D5E CD B8 1C 04         A  6625    	CALL	_emit_8bit
041D62 C1                  A  6626    	POP	BC
                           A  6627    ;  869	    emit_8bit((value>>16)&0xFF);
                           A  6628    .LINE 869
                           A  6629    
041D63 DD2706              A  6630    	LD	HL,(IX+%6)
041D66 3E10                A  6631    	LD	A,%10
041D68 CD 8B 60 04         A  6632    	CALL	__ishru_b
041D6C 7D                  A  6633    	LD	A,L
041D6D 4F                  A  6634    	LD	C,A
041D6E 0600                A  6635    	LD	B,%0
041D70 C5                  A  6636    	PUSH	BC
041D71 CD B8 1C 04         A  6637    	CALL	_emit_8bit
041D75 C1                  A  6638    	POP	BC
                           A  6639    ;  870	}
                           A  6640    .LINE 870
                           A  6641    
041D76 DDF9                A  6642    	LD	SP,IX
041D78 DDE1                A  6643    	POP	IX
041D7A C9                  A  6644    	RET	
                           A  6645    
                           A  6646    
                           A  6647    ;**************************** _emit_24bit *****
                           A  6648    ;Name                         Addr/Register   S
                           A  6649    ;_emit_8bit                          IMPORT  --
                           A  6650    ;value                                 IX+6    
                           A  6651    
                           A  6652    
                           A  6653    ; Stack Frame Size: 9 (bytes)
                           A  6654    ;       Spill Code: 0 (instruction)
                           A  6655    
                           A  6656    
                           A  6657    .ENDFUNC "emit_24bit",870,"_emit_24bit"
                           A  6658    ;  871	
                           A  6659    ;  872	void emit_32bit(uint32_t value) {
041D7B                     A  6660    _emit_32bit:
                           A  6661    .DEFINE "_emit_32bit"
                           A  6662    
                           A  6663    .VALUE _emit_32bit
                           A  6664    
                           A  6665    .CLASS 2
                           A  6666    
                           A  6667    .TYPE 65
                           A  6668    
                           A  6669    .ENDEF
                           A  6670    
                           A  6671    .BEGFUNC "emit_32bit",872,"_emit_32bit"
                           A  6672    
                           A  6673    .LINE 872
                           A  6674    
                           A  6675    .DEFINE "value"
                           A  6676    
                           A  6677    .CLASS 65
                           A  6678    
                           A  6679    .VALUE 6
                           A  6680    
                           A  6681    .TYPE 15
                           A  6682    
                           A  6683    .ENDEF
                           A  6684    
041D7B DDE5                A  6685    	PUSH	IX
041D7D DD210000 00         A  6686    	LD	IX,0
041D82 DD39                A  6687    	ADD	IX,SP
                           A  6688    ;  873	    emit_8bit(value&0xFF);
                           A  6689    .LINE 873
                           A  6690    
041D84 DD7E06              A  6691    	LD	A,(IX+%6)
041D87 4F                  A  6692    	LD	C,A
041D88 0600                A  6693    	LD	B,%0
041D8A C5                  A  6694    	PUSH	BC
041D8B CD B8 1C 04         A  6695    	CALL	_emit_8bit
041D8F C1                  A  6696    	POP	BC
                           A  6697    ;  874	    emit_8bit((value>>8)&0xFF);
                           A  6698    .LINE 874
                           A  6699    
041D90 DD0706              A  6700    	LD	BC,(IX+%6)
041D93 DD7E09              A  6701    	LD	A,(IX+%9)
041D96 2E08                A  6702    	LD	L,%8
041D98 CD A3 5D 04         A  6703    	CALL	__lshru
041D9C 0600                A  6704    	LD	B,%0
041D9E C5                  A  6705    	PUSH	BC
041D9F CD B8 1C 04         A  6706    	CALL	_emit_8bit
041DA3 C1                  A  6707    	POP	BC
                           A  6708    ;  875	    emit_8bit((value>>16)&0xFF);
                           A  6709    .LINE 875
                           A  6710    
041DA4 DD0706              A  6711    	LD	BC,(IX+%6)
041DA7 DD7E09              A  6712    	LD	A,(IX+%9)
041DAA 2E10                A  6713    	LD	L,%10
041DAC CD A3 5D 04         A  6714    	CALL	__lshru
041DB0 0600                A  6715    	LD	B,%0
041DB2 C5                  A  6716    	PUSH	BC
041DB3 CD B8 1C 04         A  6717    	CALL	_emit_8bit
041DB7 C1                  A  6718    	POP	BC
                           A  6719    ;  876	    emit_8bit((value>>24)&0xFF);
                           A  6720    .LINE 876
                           A  6721    
041DB8 DD7E09              A  6722    	LD	A,(IX+%9)
041DBB B7ED62              A  6723    	UEXT	HL
041DBE 6F                  A  6724    	LD	L,A
041DBF E5C1                A  6725    	LD	BC,HL
041DC1 0600                A  6726    	LD	B,%0
041DC3 C5                  A  6727    	PUSH	BC
041DC4 CD B8 1C 04         A  6728    	CALL	_emit_8bit
041DC8 C1                  A  6729    	POP	BC
                           A  6730    ;  877	}
                           A  6731    .LINE 877
                           A  6732    
041DC9 DDF9                A  6733    	LD	SP,IX
041DCB DDE1                A  6734    	POP	IX
041DCD C9                  A  6735    	RET	
                           A  6736    
                           A  6737    
                           A  6738    ;**************************** _emit_32bit *****
                           A  6739    ;Name                         Addr/Register   S
                           A  6740    ;_emit_8bit                          IMPORT  --
                           A  6741    ;value                                 IX+6    
                           A  6742    
                           A  6743    
                           A  6744    ; Stack Frame Size: 12 (bytes)
                           A  6745    ;       Spill Code: 0 (instruction)
                           A  6746    
                           A  6747    
                           A  6748    .ENDFUNC "emit_32bit",877,"_emit_32bit"
                           A  6749    ;  878	
                           A  6750    ;  879	// return the value of a previously esc
                           A  6751    ;  880	uint8_t get_escaped_char(char n) {
041DCE                     A  6752    _get_escaped_char:
                           A  6753    .DEFINE "_get_escaped_char"
                           A  6754    
                           A  6755    .VALUE _get_escaped_char
                           A  6756    
                           A  6757    .CLASS 2
                           A  6758    
                           A  6759    .TYPE 76
                           A  6760    
                           A  6761    .ENDEF
                           A  6762    
                           A  6763    .BEGFUNC "get_escaped_char",880,"_get_escaped_c
                           A  6764    
                           A  6765    .LINE 880
                           A  6766    
                           A  6767    .DEFINE "n"
                           A  6768    
                           A  6769    .CLASS 65
                           A  6770    
                           A  6771    .VALUE 6
                           A  6772    
                           A  6773    .TYPE 2
                           A  6774    
                           A  6775    .ENDEF
                           A  6776    
041DCE DDE5                A  6777    	PUSH	IX
041DD0 DD210000 00         A  6778    	LD	IX,0
041DD5 DD39                A  6779    	ADD	IX,SP
                           A  6780    ;  881	    switch(n) {
                           A  6781    .LINE 881
                           A  6782    
041DD7 DD7E06              A  6783    	LD	A,(IX+%6)
041DDA 17ED62              A  6784    	SEXT	HL
041DDD DD6E06              A  6785    	LD	L,(IX+%6)
041DE0 CD B7 60 04         A  6786    	CALL	__case8D
041DE4 E9                  A  6787    	JP	(HL)
041DE5                     A  6788    L__194:
041DE5 0700                A  6789    	DW	7
041DE7 22                  A  6790    	DB	34
041DE8 1A1E04              A  6791    	DW24	L_447	
                           A  6792    
041DEB 27                  A  6793    	DB	39
041DEC 1E1E04              A  6794    	DW24	L_448	
                           A  6795    
041DEF 62                  A  6796    	DB	98
041DF0 121E04              A  6797    	DW24	L_445	
                           A  6798    
041DF3 65                  A  6799    	DB	101
041DF4 161E04              A  6800    	DW24	L_446	
                           A  6801    
041DF7 6E                  A  6802    	DB	110
041DF8 061E04              A  6803    	DW24	L_442	
                           A  6804    
041DFB 72                  A  6805    	DB	114
041DFC 0A1E04              A  6806    	DW24	L_443	
                           A  6807    
041DFF 74                  A  6808    	DB	116
041E00 0E1E04              A  6809    	DW24	L_444	
                           A  6810    
041E03 221E04              A  6811    	DW24	L_449	
                           A  6812    
                           A  6813    ;  882	        case 'n':
041E06                     A  6814    L_442:
                           A  6815    .LINE 882
                           A  6816    
                           A  6817    ;  883	            return(0x0a);
                           A  6818    .LINE 883
                           A  6819    
041E06 3E0A                A  6820    	LD	A,%A
041E08 18 1B               A  6821    	JR	L_450
                           A  6822    ;  884	        case 'r':
041E0A                     A  6823    L_443:
                           A  6824    .LINE 884
                           A  6825    
                           A  6826    ;  885	            return(0x0d);
                           A  6827    .LINE 885
                           A  6828    
041E0A 3E0D                A  6829    	LD	A,%D
041E0C 18 17               A  6830    	JR	L_450
                           A  6831    ;  886	        case 't':
041E0E                     A  6832    L_444:
                           A  6833    .LINE 886
                           A  6834    
                           A  6835    ;  887	            return(0x09);
                           A  6836    .LINE 887
                           A  6837    
041E0E 3E09                A  6838    	LD	A,%9
041E10 18 13               A  6839    	JR	L_450
                           A  6840    ;  888	        case 'b':
041E12                     A  6841    L_445:
                           A  6842    .LINE 888
                           A  6843    
                           A  6844    ;  889	            return(0x08);
                           A  6845    .LINE 889
                           A  6846    
041E12 3E08                A  6847    	LD	A,%8
041E14 18 0F               A  6848    	JR	L_450
                           A  6849    ;  890	        case 'e':
041E16                     A  6850    L_446:
                           A  6851    .LINE 890
                           A  6852    
                           A  6853    ;  891	            return(0x1b);
                           A  6854    .LINE 891
                           A  6855    
041E16 3E1B                A  6856    	LD	A,%1B
041E18 18 0B               A  6857    	JR	L_450
                           A  6858    ;  892	        case '\"':
041E1A                     A  6859    L_447:
                           A  6860    .LINE 892
                           A  6861    
                           A  6862    ;  893	            return('\"');
                           A  6863    .LINE 893
                           A  6864    
041E1A 3E22                A  6865    	LD	A,%22
041E1C 18 07               A  6866    	JR	L_450
                           A  6867    ;  894	        case '\'':
041E1E                     A  6868    L_448:
                           A  6869    .LINE 894
                           A  6870    
                           A  6871    ;  895	            return('\'');
                           A  6872    .LINE 895
                           A  6873    
041E1E 3E27                A  6874    	LD	A,%27
041E20 18 03               A  6875    	JR	L_450
                           A  6876    ;  896	        default:
041E22                     A  6877    L_449:
                           A  6878    .LINE 896
                           A  6879    
                           A  6880    ;  897	            return(n);
                           A  6881    .LINE 897
                           A  6882    
041E22 DD7E06              A  6883    	LD	A,(IX+%6)
                           A  6884    ;  898	    }
                           A  6885    ;  899	}
041E25                     A  6886    L_450:
                           A  6887    .LINE 899
                           A  6888    
041E25 DDF9                A  6889    	LD	SP,IX
041E27 DDE1                A  6890    	POP	IX
041E29 C9                  A  6891    	RET	
                           A  6892    
                           A  6893    
                           A  6894    ;**************************** _get_escaped_char
                           A  6895    ;Name                         Addr/Register   S
                           A  6896    ;n                                     IX+6    
                           A  6897    
                           A  6898    
                           A  6899    ; Stack Frame Size: 9 (bytes)
                           A  6900    ;       Spill Code: 0 (instruction)
                           A  6901    
                           A  6902    
                           A  6903    .ENDFUNC "get_escaped_char",899,"_get_escaped_c
                           A  6904    ;  900	
                           A  6905    ;  901	// emits a string surrounded by literal
                           A  6906    ;  902	void emit_quotedstring(char *str) {
041E2A                     A  6907    _emit_quotedstring:
                           A  6908    .DEFINE "_emit_quotedstring"
                           A  6909    
                           A  6910    .VALUE _emit_quotedstring
                           A  6911    
                           A  6912    .CLASS 2
                           A  6913    
                           A  6914    .TYPE 65
                           A  6915    
                           A  6916    .ENDEF
                           A  6917    
                           A  6918    .BEGFUNC "emit_quotedstring",902,"_emit_quoteds
                           A  6919    
                           A  6920    .LINE 902
                           A  6921    
                           A  6922    .DEFINE "str"
                           A  6923    
                           A  6924    .CLASS 65
                           A  6925    
                           A  6926    .VALUE 6
                           A  6927    
                           A  6928    .TYPE 34
                           A  6929    
                           A  6930    .ENDEF
                           A  6931    
                           A  6932    .DEFINE "escaped"
                           A  6933    
                           A  6934    .CLASS 65
                           A  6935    
                           A  6936    .VALUE -1
                           A  6937    
                           A  6938    .TYPE 12
                           A  6939    
                           A  6940    .ENDEF
                           A  6941    
041E2A DDE5                A  6942    	PUSH	IX
041E2C DD210000 00         A  6943    	LD	IX,0
041E31 DD39                A  6944    	ADD	IX,SP
041E33 3B                  A  6945    	DEC	SP
                           A  6946    ;  903	    bool escaped = false;
                           A  6947    .LINE 903
                           A  6948    
041E34 DD36FF00            A  6949    	LD	(IX+%FFFFFFFF),%0
                           A  6950    ;  904	
                           A  6951    ;  905	    if(*str == '\"') {
                           A  6952    .LINE 905
                           A  6953    
041E38 DD2706              A  6954    	LD	HL,(IX+%6)
041E3B 7E                  A  6955    	LD	A,(HL)
041E3C 47                  A  6956    	LD	B,A
041E3D 17ED62              A  6957    	SEXT	HL
041E40 68                  A  6958    	LD	L,B
041E41 01220000            A  6959    	LD	BC,34
041E45 B7                  A  6960    	OR	A,A
041E46 ED42                A  6961    	SBC	HL,BC
041E48 C2 2B 1F 04         A  6962    	JR	NZ,L_478
                           A  6963    ;  906	        str++;
                           A  6964    .LINE 906
                           A  6965    
041E4C DD0706              A  6966    	LD	BC,(IX+%6)
041E4F 03                  A  6967    	INC	BC
041E50 DD0F06              A  6968    	LD	(IX+%6),BC
                           A  6969    ;  907	        while(*str) {
                           A  6970    .LINE 907
                           A  6971    
041E53 C3 14 1F 04         A  6972    	JR	L_474
041E57                     A  6973    L_475:
                           A  6974    ;  908	            switch(*str) {
                           A  6975    .LINE 908
                           A  6976    
041E57 DD2706              A  6977    	LD	HL,(IX+%6)
041E5A 7E                  A  6978    	LD	A,(HL)
041E5B 47                  A  6979    	LD	B,A
041E5C 17ED62              A  6980    	SEXT	HL
041E5F 68                  A  6981    	LD	L,B
041E60 CD B7 60 04         A  6982    	CALL	__case8D
041E64 E9                  A  6983    	JP	(HL)
041E65                     A  6984    L__197:
041E65 0800                A  6985    	DW	8
041E67 22                  A  6986    	DB	34
041E68 D51E04              A  6987    	DW24	L_465	
                           A  6988    
041E6B 27                  A  6989    	DB	39
041E6C A61E04              A  6990    	DW24	L_461	
                           A  6991    
041E6F 5C                  A  6992    	DB	92
041E70 8A1E04              A  6993    	DW24	L_452	
                           A  6994    
041E73 62                  A  6995    	DB	98
041E74 A61E04              A  6996    	DW24	L_459	
                           A  6997    
041E77 65                  A  6998    	DB	101
041E78 A61E04              A  6999    	DW24	L_460	
                           A  7000    
041E7B 6E                  A  7001    	DB	110
041E7C A61E04              A  7002    	DW24	L_456	
                           A  7003    
041E7F 72                  A  7004    	DB	114
041E80 A61E04              A  7005    	DW24	L_457	
                           A  7006    
041E83 74                  A  7007    	DB	116
041E84 A61E04              A  7008    	DW24	L_458	
                           A  7009    
041E87 011F04              A  7010    	DW24	L_471	
                           A  7011    
                           A  7012    ;  909	                case '\\':
041E8A                     A  7013    L_452:
                           A  7014    .LINE 909
                           A  7015    
                           A  7016    ;  910	                    if(escaped) {
                           A  7017    .LINE 910
                           A  7018    
041E8A DD7EFF              A  7019    	LD	A,(IX+%FFFFFFFF)
041E8D B7                  A  7020    	OR	A,A
041E8E 28 10               A  7021    	JR	Z,L_454
                           A  7022    ;  911	                        emit_8bit('\\')
                           A  7023    .LINE 911
                           A  7024    
041E90 015C0000            A  7025    	LD	BC,92
041E94 C5                  A  7026    	PUSH	BC
041E95 CD B8 1C 04         A  7027    	CALL	_emit_8bit
041E99 C1                  A  7028    	POP	BC
                           A  7029    ;  912	                        escaped = false
                           A  7030    .LINE 912
                           A  7031    
041E9A DD36FF00            A  7032    	LD	(IX+%FFFFFFFF),%0
                           A  7033    ;  913	                    }
                           A  7034    ;  914	                    else escaped = true
                           A  7035    .LINE 914
                           A  7036    
041E9E 18 6D               A  7037    	JR	L_473
041EA0                     A  7038    L_454:
041EA0 DD36FF01            A  7039    	LD	(IX+%FFFFFFFF),%1
                           A  7040    ;  915	                    break;
                           A  7041    .LINE 915
                           A  7042    
041EA4 18 67               A  7043    	JR	L_473
                           A  7044    ;  916	                case 'n':
041EA6                     A  7045    L_456:
                           A  7046    .LINE 916
                           A  7047    
                           A  7048    ;  917	                case 'r':
041EA6                     A  7049    L_457:
                           A  7050    .LINE 917
                           A  7051    
                           A  7052    ;  918	                case 't':
041EA6                     A  7053    L_458:
                           A  7054    .LINE 918
                           A  7055    
                           A  7056    ;  919	                case 'b':
041EA6                     A  7057    L_459:
                           A  7058    .LINE 919
                           A  7059    
                           A  7060    ;  920	                case 'e':
041EA6                     A  7061    L_460:
                           A  7062    .LINE 920
                           A  7063    
                           A  7064    ;  921	                case '\'':
041EA6                     A  7065    L_461:
                           A  7066    .LINE 921
                           A  7067    
                           A  7068    ;  922	                    if(escaped) emit_8b
                           A  7069    .LINE 922
                           A  7070    
041EA6 DD7EFF              A  7071    	LD	A,(IX+%FFFFFFFF)
041EA9 B7                  A  7072    	OR	A,A
041EAA 28 17               A  7073    	JR	Z,L_463
041EAC DD2706              A  7074    	LD	HL,(IX+%6)
041EAF 4E                  A  7075    	LD	C,(HL)
041EB0 0600                A  7076    	LD	B,%0
041EB2 C5                  A  7077    	PUSH	BC
041EB3 CD CE 1D 04         A  7078    	CALL	_get_escaped_char
041EB7 C1                  A  7079    	POP	BC
041EB8 4F                  A  7080    	LD	C,A
041EB9 0600                A  7081    	LD	B,%0
041EBB C5                  A  7082    	PUSH	BC
041EBC CD B8 1C 04         A  7083    	CALL	_emit_8bit
041EC0 C1                  A  7084    	POP	BC
                           A  7085    ;  923	                    else emit_8bit(*str
                           A  7086    .LINE 923
                           A  7087    
041EC1 18 0C               A  7088    	JR	L_464
041EC3                     A  7089    L_463:
041EC3 DD2706              A  7090    	LD	HL,(IX+%6)
041EC6 4E                  A  7091    	LD	C,(HL)
041EC7 0600                A  7092    	LD	B,%0
041EC9 C5                  A  7093    	PUSH	BC
041ECA CD B8 1C 04         A  7094    	CALL	_emit_8bit
041ECE C1                  A  7095    	POP	BC
041ECF                     A  7096    L_464:
                           A  7097    ;  924	                    escaped = false;
                           A  7098    .LINE 924
                           A  7099    
041ECF DD36FF00            A  7100    	LD	(IX+%FFFFFFFF),%0
                           A  7101    ;  925	                    break;
                           A  7102    .LINE 925
                           A  7103    
041ED3 18 38               A  7104    	JR	L_473
                           A  7105    ;  926	                case '\"':
041ED5                     A  7106    L_465:
                           A  7107    .LINE 926
                           A  7108    
                           A  7109    ;  927	                    if(escaped) {
                           A  7110    .LINE 927
                           A  7111    
041ED5 DD7EFF              A  7112    	LD	A,(IX+%FFFFFFFF)
041ED8 B7                  A  7113    	OR	A,A
041ED9 28 10               A  7114    	JR	Z,L_469
                           A  7115    ;  928	                        emit_8bit('\"')
                           A  7116    .LINE 928
                           A  7117    
041EDB 01220000            A  7118    	LD	BC,34
041EDF C5                  A  7119    	PUSH	BC
041EE0 CD B8 1C 04         A  7120    	CALL	_emit_8bit
041EE4 C1                  A  7121    	POP	BC
                           A  7122    ;  929	                        escaped = false
                           A  7123    .LINE 929
                           A  7124    
041EE5 DD36FF00            A  7125    	LD	(IX+%FFFFFFFF),%0
                           A  7126    ;  930	                    }
                           A  7127    ;  931	                    else {
                           A  7128    .LINE 931
                           A  7129    
041EE9 18 22               A  7130    	JR	L_473
041EEB                     A  7131    L_469:
                           A  7132    ;  932	                        if(*(str+1) != 
                           A  7133    .LINE 932
                           A  7134    
041EEB DD2706              A  7135    	LD	HL,(IX+%6)
041EEE 23                  A  7136    	INC	HL
041EEF 7E                  A  7137    	LD	A,(HL)
041EF0 B7                  A  7138    	OR	A,A
041EF1 28 44               A  7139    	JR	Z,L_479
041EF3 21 81 64 04         A  7140    	LD	HL,_message+63
041EF7 ED07                A  7141    	LD	BC,(HL)
041EF9 C5                  A  7142    	PUSH	BC
041EFA CD DC 4B 04         A  7143    	CALL	_error
041EFE C1                  A  7144    	POP	BC
                           A  7145    ;  933	                        return; // end 
                           A  7146    .LINE 933
                           A  7147    
041EFF 18 36               A  7148    	JR	L_479
                           A  7149    ;  934	                    }
                           A  7150    ;  935	                    break;
                           A  7151    ;  936	                default:
041F01                     A  7152    L_471:
                           A  7153    .LINE 936
                           A  7154    
                           A  7155    ;  937	                    emit_8bit(*str);
                           A  7156    .LINE 937
                           A  7157    
041F01 DD2706              A  7158    	LD	HL,(IX+%6)
041F04 4E                  A  7159    	LD	C,(HL)
041F05 0600                A  7160    	LD	B,%0
041F07 C5                  A  7161    	PUSH	BC
041F08 CD B8 1C 04         A  7162    	CALL	_emit_8bit
041F0C C1                  A  7163    	POP	BC
                           A  7164    ;  938	            }
041F0D                     A  7165    L_473:
                           A  7166    .LINE 938
                           A  7167    
                           A  7168    ;  939	            str++;
                           A  7169    .LINE 939
                           A  7170    
041F0D DD0706              A  7171    	LD	BC,(IX+%6)
041F10 03                  A  7172    	INC	BC
041F11 DD0F06              A  7173    	LD	(IX+%6),BC
                           A  7174    ;  940	        }
041F14                     A  7175    L_474:
                           A  7176    .LINE 940
                           A  7177    
041F14 DD2706              A  7178    	LD	HL,(IX+%6)
041F17 7E                  A  7179    	LD	A,(HL)
041F18 B7                  A  7180    	OR	A,A
041F19 C2 57 1E 04         A  7181    	JR	NZ,L_475
                           A  7182    ;  941	        // we missed an end-quote to th
                           A  7183    ;  942	        error(message[ERROR_STRINGFORMA
                           A  7184    .LINE 942
                           A  7185    
041F1D 21 81 64 04         A  7186    	LD	HL,_message+63
041F21 ED07                A  7187    	LD	BC,(HL)
041F23 C5                  A  7188    	PUSH	BC
041F24 CD DC 4B 04         A  7189    	CALL	_error
041F28 C1                  A  7190    	POP	BC
                           A  7191    ;  943	    }
                           A  7192    ;  944	    else error(message[ERROR_STRINGFORM
                           A  7193    .LINE 944
                           A  7194    
041F29 18 0C               A  7195    	JR	L_479
041F2B                     A  7196    L_478:
041F2B 21 81 64 04         A  7197    	LD	HL,_message+63
041F2F ED07                A  7198    	LD	BC,(HL)
041F31 C5                  A  7199    	PUSH	BC
041F32 CD DC 4B 04         A  7200    	CALL	_error
041F36 C1                  A  7201    	POP	BC
                           A  7202    ;  945	}
041F37                     A  7203    L_479:
                           A  7204    .LINE 945
                           A  7205    
041F37 DDF9                A  7206    	LD	SP,IX
041F39 DDE1                A  7207    	POP	IX
041F3B C9                  A  7208    	RET	
                           A  7209    
                           A  7210    
                           A  7211    ;**************************** _emit_quotedstrin
                           A  7212    ;Name                         Addr/Register   S
                           A  7213    ;_message                            IMPORT  un
                           A  7214    ;_error                              IMPORT  --
                           A  7215    ;_emit_8bit                          IMPORT  --
                           A  7216    ;escaped                               IX-1    
                           A  7217    ;str                                   IX+6    
                           A  7218    
                           A  7219    
                           A  7220    ; Stack Frame Size: 10 (bytes)
                           A  7221    ;       Spill Code: 0 (instruction)
                           A  7222    
                           A  7223    
                           A  7224    .ENDFUNC "emit_quotedstring",945,"_emit_quoteds
                           A  7225    ;  946	
                           A  7226    ;  947	void parse_asm_single_immediate(void) {
041F3C                     A  7227    _parse_asm_single_immediate:
                           A  7228    .DEFINE "_parse_asm_single_immediate"
                           A  7229    
                           A  7230    .VALUE _parse_asm_single_immediate
                           A  7231    
                           A  7232    .CLASS 2
                           A  7233    
                           A  7234    .TYPE 65
                           A  7235    
                           A  7236    .ENDEF
                           A  7237    
                           A  7238    .BEGFUNC "parse_asm_single_immediate",947,"_par
                           A  7239    
                           A  7240    .LINE 947
                           A  7241    
                           A  7242    .DEFINE "token"
                           A  7243    
                           A  7244    .CLASS 65
                           A  7245    
                           A  7246    .VALUE -133
                           A  7247    
                           A  7248    .TAG "NONAME11"
                           A  7249    
                           A  7250    .TYPE 8
                           A  7251    
                           A  7252    .ENDEF
                           A  7253    
041F3C DDE5                A  7254    	PUSH	IX
041F3E DD210000 00         A  7255    	LD	IX,0
041F43 DD39                A  7256    	ADD	IX,SP
041F45 217BFFFF            A  7257    	LD	HL,-133
041F49 39                  A  7258    	ADD	HL,SP
041F4A F9                  A  7259    	LD	SP,HL
                           A  7260    ;  948	    tokentype token;
                           A  7261    ;  949	
                           A  7262    ;  950	    if(currentline.next) {
                           A  7263    .LINE 950
                           A  7264    
041F4B 2A 62 87 04         A  7265    	LD	HL,(_currentline+3)
041F4F CD C5 5D 04         A  7266    	CALL	__icmpzero
041F53 28 72               A  7267    	JR	Z,L_484
                           A  7268    ;  951	        getLineToken(&token, currentlin
                           A  7269    .LINE 951
                           A  7270    
041F55 01000000            A  7271    	LD	BC,0
041F59 C5                  A  7272    	PUSH	BC
041F5A ED4B 62 87 04       A  7273    	LD	BC,(_currentline+3)
041F5F C5                  A  7274    	PUSH	BC
041F60 DDE5E1              A  7275    	LD	HL,IX
041F63 017BFFFF            A  7276    	LD	BC,-133
041F67 09                  A  7277    	ADD	HL,BC
041F68 E5C1                A  7278    	LD	BC,HL
041F6A C5                  A  7279    	PUSH	BC
041F6B CD 0B 4D 04         A  7280    	CALL	_getLineToken
041F6F C1                  A  7281    	POP	BC
041F70 C1                  A  7282    	POP	BC
041F71 C1                  A  7283    	POP	BC
                           A  7284    ;  952	        if(notEmpty(token.start)) {
                           A  7285    .LINE 952
                           A  7286    
041F72 DDE5E1              A  7287    	LD	HL,IX
041F75 017BFFFF            A  7288    	LD	BC,-133
041F79 09                  A  7289    	ADD	HL,BC
041F7A E5C1                A  7290    	LD	BC,HL
041F7C C5                  A  7291    	PUSH	BC
041F7D CD C2 4B 04         A  7292    	CALL	_notEmpty
041F81 C1                  A  7293    	POP	BC
041F82 B7                  A  7294    	OR	A,A
041F83 28 34               A  7295    	JR	Z,L_482
                           A  7296    ;  953	            operand1.immediate = str2nu
                           A  7297    .LINE 953
                           A  7298    
041F85 01010000            A  7299    	LD	BC,1
041F89 C5                  A  7300    	PUSH	BC
041F8A DDE5E1              A  7301    	LD	HL,IX
041F8D 017BFFFF            A  7302    	LD	BC,-133
041F91 09                  A  7303    	ADD	HL,BC
041F92 E5C1                A  7304    	LD	BC,HL
041F94 C5                  A  7305    	PUSH	BC
041F95 CD AB 47 04         A  7306    	CALL	_str2num
041F99 C1                  A  7307    	POP	BC
041F9A C1                  A  7308    	POP	BC
041F9B 22 72 88 04         A  7309    	LD	(_operand1+11),HL
                           A  7310    ;  954	            operand1.immediate_provided
                           A  7311    .LINE 954
                           A  7312    
041F9F 3E01                A  7313    	LD	A,%1
041FA1 32 71 88 04         A  7314    	LD	(_operand1+10),A
                           A  7315    ;  955	            if(token.terminator != 0) e
                           A  7316    .LINE 955
                           A  7317    
041FA5 DD7EFF              A  7318    	LD	A,(IX+%FFFFFFFF)
041FA8 B7                  A  7319    	OR	A,A
041FA9 28 28               A  7320    	JR	Z,L_485
041FAB 21 99 64 04         A  7321    	LD	HL,_message+87
041FAF ED07                A  7322    	LD	BC,(HL)
041FB1 C5                  A  7323    	PUSH	BC
041FB2 CD DC 4B 04         A  7324    	CALL	_error
041FB6 C1                  A  7325    	POP	BC
                           A  7326    ;  956	        }
                           A  7327    ;  957	        else error(message[ERROR_MISSIN
                           A  7328    .LINE 957
                           A  7329    
041FB7 18 1A               A  7330    	JR	L_485
041FB9                     A  7331    L_482:
041FB9 21 51 64 04         A  7332    	LD	HL,_message+15
041FBD ED07                A  7333    	LD	BC,(HL)
041FBF C5                  A  7334    	PUSH	BC
041FC0 CD DC 4B 04         A  7335    	CALL	_error
041FC4 C1                  A  7336    	POP	BC
                           A  7337    ;  958	    }
                           A  7338    ;  959	    else error(message[ERROR_MISSINGOPE
                           A  7339    .LINE 959
                           A  7340    
041FC5 18 0C               A  7341    	JR	L_485
041FC7                     A  7342    L_484:
041FC7 21 51 64 04         A  7343    	LD	HL,_message+15
041FCB ED07                A  7344    	LD	BC,(HL)
041FCD C5                  A  7345    	PUSH	BC
041FCE CD DC 4B 04         A  7346    	CALL	_error
041FD2 C1                  A  7347    	POP	BC
                           A  7348    ;  960	}
041FD3                     A  7349    L_485:
                           A  7350    .LINE 960
                           A  7351    
041FD3 DDF9                A  7352    	LD	SP,IX
041FD5 DDE1                A  7353    	POP	IX
041FD7 C9                  A  7354    	RET	
                           A  7355    
                           A  7356    
                           A  7357    ;**************************** _parse_asm_single
                           A  7358    ;Name                         Addr/Register   S
                           A  7359    ;_message                            IMPORT  un
                           A  7360    ;_error                              IMPORT  --
                           A  7361    ;_operand1                           IMPORT    
                           A  7362    ;_str2num                            IMPORT  --
                           A  7363    ;_notEmpty                           IMPORT  --
                           A  7364    ;_getLineToken                       IMPORT  --
                           A  7365    ;_currentline                        IMPORT    
                           A  7366    ;token                               IX-133    
                           A  7367    
                           A  7368    
                           A  7369    ; Stack Frame Size: 139 (bytes)
                           A  7370    ;       Spill Code: 0 (instruction)
                           A  7371    
                           A  7372    
                           A  7373    .ENDFUNC "parse_asm_single_immediate",960,"_par
                           A  7374    ;  961	
                           A  7375    ;  962	void parse_asm_keyval_pair(void) {
041FD8                     A  7376    _parse_asm_keyval_pair:
                           A  7377    .DEFINE "_parse_asm_keyval_pair"
                           A  7378    
                           A  7379    .VALUE _parse_asm_keyval_pair
                           A  7380    
                           A  7381    .CLASS 2
                           A  7382    
                           A  7383    .TYPE 65
                           A  7384    
                           A  7385    .ENDEF
                           A  7386    
                           A  7387    .BEGFUNC "parse_asm_keyval_pair",962,"_parse_as
                           A  7388    
                           A  7389    .LINE 962
                           A  7390    
                           A  7391    .DEFINE "token"
                           A  7392    
                           A  7393    .CLASS 65
                           A  7394    
                           A  7395    .VALUE -133
                           A  7396    
                           A  7397    .TAG "NONAME11"
                           A  7398    
                           A  7399    .TYPE 8
                           A  7400    
                           A  7401    .ENDEF
                           A  7402    
041FD8 DDE5                A  7403    	PUSH	IX
041FDA DD210000 00         A  7404    	LD	IX,0
041FDF DD39                A  7405    	ADD	IX,SP
041FE1 217BFFFF            A  7406    	LD	HL,-133
041FE5 39                  A  7407    	ADD	HL,SP
041FE6 F9                  A  7408    	LD	SP,HL
                           A  7409    ;  963	    tokentype token;
                           A  7410    ;  964	
                           A  7411    ;  965	    if(currentline.next) {
                           A  7412    .LINE 965
                           A  7413    
041FE7 2A 62 87 04         A  7414    	LD	HL,(_currentline+3)
041FEB CD C5 5D 04         A  7415    	CALL	__icmpzero
041FEF CA 99 20 04         A  7416    	JR	Z,L_491
                           A  7417    ;  966	        getLineToken(&token, currentlin
                           A  7418    .LINE 966
                           A  7419    
041FF3 013D0000            A  7420    	LD	BC,61
041FF7 C5                  A  7421    	PUSH	BC
041FF8 ED4B 62 87 04       A  7422    	LD	BC,(_currentline+3)
041FFD C5                  A  7423    	PUSH	BC
041FFE DDE5E1              A  7424    	LD	HL,IX
042001 017BFFFF            A  7425    	LD	BC,-133
042005 09                  A  7426    	ADD	HL,BC
042006 E5C1                A  7427    	LD	BC,HL
042008 C5                  A  7428    	PUSH	BC
042009 CD 0B 4D 04         A  7429    	CALL	_getLineToken
04200D C1                  A  7430    	POP	BC
04200E C1                  A  7431    	POP	BC
04200F C1                  A  7432    	POP	BC
                           A  7433    ;  967	        strcpy(currentline.operand1, to
                           A  7434    .LINE 967
                           A  7435    
042010 DDE5E1              A  7436    	LD	HL,IX
042013 017BFFFF            A  7437    	LD	BC,-133
042017 09                  A  7438    	ADD	HL,BC
042018 E5C1                A  7439    	LD	BC,HL
04201A C5                  A  7440    	PUSH	BC
04201B 01 A5 87 04         A  7441    	LD	BC,_currentline+70
04201F C5                  A  7442    	PUSH	BC
042020 CD 09 61 04         A  7443    	CALL	_strcpy
042024 C1                  A  7444    	POP	BC
042025 C1                  A  7445    	POP	BC
                           A  7446    ;  968	        if(token.terminator == '=') {
                           A  7447    .LINE 968
                           A  7448    
042026 DD7EFF              A  7449    	LD	A,(IX+%FFFFFFFF)
042029 FE3D                A  7450    	CP	A,%3D
04202B 20 5E               A  7451    	JR	NZ,L_489
                           A  7452    ;  969	            getLineToken(&token, token.
                           A  7453    .LINE 969
                           A  7454    
04202D 01000000            A  7455    	LD	BC,0
042031 C5                  A  7456    	PUSH	BC
042032 DD07FC              A  7457    	LD	BC,(IX+%FFFFFFFC)
042035 C5                  A  7458    	PUSH	BC
042036 DDE5E1              A  7459    	LD	HL,IX
042039 017BFFFF            A  7460    	LD	BC,-133
04203D 09                  A  7461    	ADD	HL,BC
04203E E5C1                A  7462    	LD	BC,HL
042040 C5                  A  7463    	PUSH	BC
042041 CD 0B 4D 04         A  7464    	CALL	_getLineToken
042045 C1                  A  7465    	POP	BC
042046 C1                  A  7466    	POP	BC
042047 C1                  A  7467    	POP	BC
                           A  7468    ;  970	            if(notEmpty(token.start)) {
                           A  7469    .LINE 970
                           A  7470    
042048 DDE5E1              A  7471    	LD	HL,IX
04204B 017BFFFF            A  7472    	LD	BC,-133
04204F 09                  A  7473    	ADD	HL,BC
042050 E5C1                A  7474    	LD	BC,HL
042052 C5                  A  7475    	PUSH	BC
042053 CD C2 4B 04         A  7476    	CALL	_notEmpty
042057 C1                  A  7477    	POP	BC
042058 B7                  A  7478    	OR	A,A
042059 28 22               A  7479    	JR	Z,L_487
                           A  7480    ;  971	                operand2.immediate = st
                           A  7481    .LINE 971
                           A  7482    
04205B 01010000            A  7483    	LD	BC,1
04205F C5                  A  7484    	PUSH	BC
042060 DDE5E1              A  7485    	LD	HL,IX
042063 017BFFFF            A  7486    	LD	BC,-133
042067 09                  A  7487    	ADD	HL,BC
042068 E5C1                A  7488    	LD	BC,HL
04206A C5                  A  7489    	PUSH	BC
04206B CD AB 47 04         A  7490    	CALL	_str2num
04206F C1                  A  7491    	POP	BC
042070 C1                  A  7492    	POP	BC
042071 22 81 88 04         A  7493    	LD	(_operand2+11),HL
                           A  7494    ;  972	                operand2.immediate_prov
                           A  7495    .LINE 972
                           A  7496    
042075 3E01                A  7497    	LD	A,%1
042077 32 80 88 04         A  7498    	LD	(_operand2+10),A
                           A  7499    ;  973	            }
                           A  7500    ;  974	            else error(message[ERROR_MI
                           A  7501    .LINE 974
                           A  7502    
04207B 18 28               A  7503    	JR	L_492
04207D                     A  7504    L_487:
04207D 21 51 64 04         A  7505    	LD	HL,_message+15
042081 ED07                A  7506    	LD	BC,(HL)
042083 C5                  A  7507    	PUSH	BC
042084 CD DC 4B 04         A  7508    	CALL	_error
042088 C1                  A  7509    	POP	BC
                           A  7510    ;  975	        }        
                           A  7511    ;  976	        else error(message[ERROR_MISSIN
                           A  7512    .LINE 976
                           A  7513    
042089 18 1A               A  7514    	JR	L_492
04208B                     A  7515    L_489:
04208B 21 51 64 04         A  7516    	LD	HL,_message+15
04208F ED07                A  7517    	LD	BC,(HL)
042091 C5                  A  7518    	PUSH	BC
042092 CD DC 4B 04         A  7519    	CALL	_error
042096 C1                  A  7520    	POP	BC
                           A  7521    ;  977	    }
                           A  7522    ;  978	    else error(message[ERROR_MISSINGOPE
                           A  7523    .LINE 978
                           A  7524    
042097 18 0C               A  7525    	JR	L_492
042099                     A  7526    L_491:
042099 21 51 64 04         A  7527    	LD	HL,_message+15
04209D ED07                A  7528    	LD	BC,(HL)
04209F C5                  A  7529    	PUSH	BC
0420A0 CD DC 4B 04         A  7530    	CALL	_error
0420A4 C1                  A  7531    	POP	BC
                           A  7532    ;  979	}
0420A5                     A  7533    L_492:
                           A  7534    .LINE 979
                           A  7535    
0420A5 DDF9                A  7536    	LD	SP,IX
0420A7 DDE1                A  7537    	POP	IX
0420A9 C9                  A  7538    	RET	
                           A  7539    
                           A  7540    
                           A  7541    ;**************************** _parse_asm_keyval
                           A  7542    ;Name                         Addr/Register   S
                           A  7543    ;_message                            IMPORT  un
                           A  7544    ;_error                              IMPORT  --
                           A  7545    ;_operand2                           IMPORT    
                           A  7546    ;_str2num                            IMPORT  --
                           A  7547    ;_notEmpty                           IMPORT  --
                           A  7548    ;_strcpy                             IMPORT  --
                           A  7549    ;_getLineToken                       IMPORT  --
                           A  7550    ;_currentline                        IMPORT    
                           A  7551    ;token                               IX-133    
                           A  7552    
                           A  7553    
                           A  7554    ; Stack Frame Size: 139 (bytes)
                           A  7555    ;       Spill Code: 0 (instruction)
                           A  7556    
                           A  7557    
                           A  7558    .ENDFUNC "parse_asm_keyval_pair",979,"_parse_as
                           A  7559    ;  980	
                           A  7560    ;  981	void handle_asm_db(void) {
0420AA                     A  7561    _handle_asm_db:
                           A  7562    .DEFINE "_handle_asm_db"
                           A  7563    
                           A  7564    .VALUE _handle_asm_db
                           A  7565    
                           A  7566    .CLASS 2
                           A  7567    
                           A  7568    .TYPE 65
                           A  7569    
                           A  7570    .ENDEF
                           A  7571    
                           A  7572    .BEGFUNC "handle_asm_db",981,"_handle_asm_db"
                           A  7573    
                           A  7574    .LINE 981
                           A  7575    
                           A  7576    .DEFINE "token"
                           A  7577    
                           A  7578    .CLASS 65
                           A  7579    
                           A  7580    .VALUE -136
                           A  7581    
                           A  7582    .TAG "NONAME11"
                           A  7583    
                           A  7584    .TYPE 8
                           A  7585    
                           A  7586    .ENDEF
                           A  7587    
0420AA DDE5                A  7588    	PUSH	IX
0420AC DD210000 00         A  7589    	LD	IX,0
0420B1 DD39                A  7590    	ADD	IX,SP
0420B3 2178FFFF            A  7591    	LD	HL,-136
0420B7 39                  A  7592    	ADD	HL,SP
0420B8 F9                  A  7593    	LD	SP,HL
                           A  7594    ;  982	    tokentype token;
                           A  7595    ;  983	
                           A  7596    ;  984	    if(pass == 1) {
                           A  7597    .LINE 984
                           A  7598    
0420B9 01010000            A  7599    	LD	BC,1
0420BD 2A 53 87 04         A  7600    	LD	HL,(_pass)
0420C1 B7                  A  7601    	OR	A,A
0420C2 ED42                A  7602    	SBC	HL,BC
0420C4 20 0B               A  7603    	JR	NZ,L_509
                           A  7604    ;  985	        // Output label at this address
                           A  7605    ;  986	        definelabel(address);
                           A  7606    .LINE 986
                           A  7607    
0420C6 ED4B 56 87 04       A  7608    	LD	BC,(_address)
0420CB C5                  A  7609    	PUSH	BC
0420CC CD 1B 12 04         A  7610    	CALL	_definelabel
0420D0 C1                  A  7611    	POP	BC
                           A  7612    ;  987	    }
0420D1                     A  7613    L_509:
                           A  7614    .LINE 987
                           A  7615    
                           A  7616    ;  988	    if(currentline.next) {
                           A  7617    .LINE 988
                           A  7618    
0420D1 2A 62 87 04         A  7619    	LD	HL,(_currentline+3)
0420D5 CD C5 5D 04         A  7620    	CALL	__icmpzero
0420D9 C2 9F 21 04         A  7621    	JR	NZ,L_505
0420DD C3 AD 21 04         A  7622    	JR	L_508
                           A  7623    ;  989	        while(currentline.next) {
0420E1                     A  7624    L_506:
                           A  7625    .LINE 989
                           A  7626    
                           A  7627    ;  990	            getLineToken(&token, curren
                           A  7628    .LINE 990
                           A  7629    
0420E1 012C0000            A  7630    	LD	BC,44
0420E5 C5                  A  7631    	PUSH	BC
0420E6 ED4B 62 87 04       A  7632    	LD	BC,(_currentline+3)
0420EB C5                  A  7633    	PUSH	BC
0420EC DDE5E1              A  7634    	LD	HL,IX
0420EF 0178FFFF            A  7635    	LD	BC,-136
0420F3 09                  A  7636    	ADD	HL,BC
0420F4 E5C1                A  7637    	LD	BC,HL
0420F6 C5                  A  7638    	PUSH	BC
0420F7 CD 0B 4D 04         A  7639    	CALL	_getLineToken
0420FB C1                  A  7640    	POP	BC
0420FC C1                  A  7641    	POP	BC
0420FD C1                  A  7642    	POP	BC
                           A  7643    ;  991	            if(notEmpty(token.start)) {
                           A  7644    .LINE 991
                           A  7645    
0420FE DDE5E1              A  7646    	LD	HL,IX
042101 0178FFFF            A  7647    	LD	BC,-136
042105 09                  A  7648    	ADD	HL,BC
042106 E5C1                A  7649    	LD	BC,HL
042108 C5                  A  7650    	PUSH	BC
042109 CD C2 4B 04         A  7651    	CALL	_notEmpty
04210D C1                  A  7652    	POP	BC
04210E B7                  A  7653    	OR	A,A
04210F 28 5B               A  7654    	JR	Z,L_504
                           A  7655    ;  992	                switch(token.start[0]) 
                           A  7656    .LINE 992
                           A  7657    
042111 DDE5E1              A  7658    	LD	HL,IX
042114 0178FFFF            A  7659    	LD	BC,-136
042118 09                  A  7660    	ADD	HL,BC
042119 DD2FFD              A  7661    	LD	(IX+%FFFFFFFD),HL
04211C 7E                  A  7662    	LD	A,(HL)
04211D 47                  A  7663    	LD	B,A
04211E 17ED62              A  7664    	SEXT	HL
042121 68                  A  7665    	LD	L,B
042122 01220000            A  7666    	LD	BC,34
042126 B7                  A  7667    	OR	A,A
042127 ED42                A  7668    	SBC	HL,BC
042129 20 0B               A  7669    	JR	NZ,L_495
                           A  7670    ;  993	                    case '\"':
                           A  7671    .LINE 993
                           A  7672    
                           A  7673    ;  994	                        emit_quotedstri
                           A  7674    .LINE 994
                           A  7675    
04212B DD07FD              A  7676    	LD	BC,(IX+%FFFFFFFD)
04212E C5                  A  7677    	PUSH	BC
04212F CD 2A 1E 04         A  7678    	CALL	_emit_quotedstring
042133 C1                  A  7679    	POP	BC
                           A  7680    ;  995	                        break;
                           A  7681    .LINE 995
                           A  7682    
042134 18 36               A  7683    	JR	L_504
                           A  7684    ;  996	                    default:
042136                     A  7685    L_495:
                           A  7686    .LINE 996
                           A  7687    
                           A  7688    ;  997	                        operand1.immedi
                           A  7689    .LINE 997
                           A  7690    
042136 DD07FD              A  7691    	LD	BC,(IX+%FFFFFFFD)
042139 C5                  A  7692    	PUSH	BC
04213A CD A1 05 04         A  7693    	CALL	_getLabelValue
04213E C1                  A  7694    	POP	BC
04213F 22 72 88 04         A  7695    	LD	(_operand1+11),HL
                           A  7696    ;  998	                        if(operand1.imm
                           A  7697    .LINE 998
                           A  7698    
042143 ED4B 72 88 04       A  7699    	LD	BC,(_operand1+11)
042148 21FF0000            A  7700    	LD	HL,255
04214C B7                  A  7701    	OR	A,A
04214D ED42                A  7702    	SBC	HL,BC
04214F F2 5F 21 04         A  7703    	JP	P,L_497
042153 21 60 64 04         A  7704    	LD	HL,_message+30
042157 ED07                A  7705    	LD	BC,(HL)
042159 C5                  A  7706    	PUSH	BC
04215A CD DC 4B 04         A  7707    	CALL	_error
04215E C1                  A  7708    	POP	BC
04215F                     A  7709    L_497:
                           A  7710    ;  999	                        emit_8bit(opera
                           A  7711    .LINE 999
                           A  7712    
04215F 3A 72 88 04         A  7713    	LD	A,(_operand1+11)
042163 4F                  A  7714    	LD	C,A
042164 0600                A  7715    	LD	B,%0
042166 C5                  A  7716    	PUSH	BC
042167 CD B8 1C 04         A  7717    	CALL	_emit_8bit
04216B C1                  A  7718    	POP	BC
                           A  7719    ; 1000	                        break;
                           A  7720    ; 1001	                        
                           A  7721    ; 1002	                }
                           A  7722    ; 1003	            }
04216C                     A  7723    L_504:
                           A  7724    .LINE 1003
                           A  7725    
                           A  7726    ; 1004	            if(token.terminator == ',')
                           A  7727    .LINE 1004
                           A  7728    
04216C DD7EFC              A  7729    	LD	A,(IX+%FFFFFFFC)
04216F FE2C                A  7730    	CP	A,%2C
042171 20 0A               A  7731    	JR	NZ,L_503
042173 DD07F9              A  7732    	LD	BC,(IX+%FFFFFFF9)
042176 ED43 62 87 04       A  7733    	LD	(_currentline+3),BC
                           A  7734    ; 1005	            else {
                           A  7735    .LINE 1005
                           A  7736    
04217B 18 22               A  7737    	JR	L_505
04217D                     A  7738    L_503:
                           A  7739    ; 1006	                if((token.terminator !=
                           A  7740    .LINE 1006
                           A  7741    
04217D DD7EFC              A  7742    	LD	A,(IX+%FFFFFFFC)
042180 B7                  A  7743    	OR	A,A
042181 28 13               A  7744    	JR	Z,L_501
042183 DD7EFC              A  7745    	LD	A,(IX+%FFFFFFFC)
042186 FE3B                A  7746    	CP	A,%3B
042188 28 0C               A  7747    	JR	Z,L_501
04218A 21 9C 64 04         A  7748    	LD	HL,_message+90
04218E ED07                A  7749    	LD	BC,(HL)
042190 C5                  A  7750    	PUSH	BC
042191 CD DC 4B 04         A  7751    	CALL	_error
042195 C1                  A  7752    	POP	BC
042196                     A  7753    L_501:
                           A  7754    ; 1007	                currentline.next = NULL
                           A  7755    .LINE 1007
                           A  7756    
042196 01000000            A  7757    	LD	BC,0
04219A ED43 62 87 04       A  7758    	LD	(_currentline+3),BC
                           A  7759    ; 1008	            }
                           A  7760    ; 1009	        }
04219F                     A  7761    L_505:
                           A  7762    .LINE 1009
                           A  7763    
04219F 2A 62 87 04         A  7764    	LD	HL,(_currentline+3)
0421A3 CD C5 5D 04         A  7765    	CALL	__icmpzero
0421A7 C2 E1 20 04         A  7766    	JR	NZ,L_506
0421AB 18 0C               A  7767    	JR	L_510
                           A  7768    ; 1010	    }
                           A  7769    ; 1011	    else error(message[ERROR_MISSINGOPE
0421AD                     A  7770    L_508:
                           A  7771    .LINE 1011
                           A  7772    
0421AD 21 51 64 04         A  7773    	LD	HL,_message+15
0421B1 ED07                A  7774    	LD	BC,(HL)
0421B3 C5                  A  7775    	PUSH	BC
0421B4 CD DC 4B 04         A  7776    	CALL	_error
0421B8 C1                  A  7777    	POP	BC
                           A  7778    ; 1012	}
0421B9                     A  7779    L_510:
                           A  7780    .LINE 1012
                           A  7781    
0421B9 DDF9                A  7782    	LD	SP,IX
0421BB DDE1                A  7783    	POP	IX
0421BD C9                  A  7784    	RET	
                           A  7785    
                           A  7786    
                           A  7787    ;**************************** _handle_asm_db **
                           A  7788    ;Name                         Addr/Register   S
                           A  7789    ;_emit_8bit                          IMPORT  --
                           A  7790    ;_message                            IMPORT  un
                           A  7791    ;_error                              IMPORT  --
                           A  7792    ;_operand1                           IMPORT    
                           A  7793    ;_notEmpty                           IMPORT  --
                           A  7794    ;_getLineToken                       IMPORT  --
                           A  7795    ;_currentline                        IMPORT    
                           A  7796    ;_address                            IMPORT    
                           A  7797    ;_pass                               IMPORT    
                           A  7798    ;token                               IX-136    
                           A  7799    ;G_23                                  IX-3    
                           A  7800    
                           A  7801    
                           A  7802    ; Stack Frame Size: 142 (bytes)
                           A  7803    ;       Spill Code: 0 (instruction)
                           A  7804    
                           A  7805    
                           A  7806    .ENDFUNC "handle_asm_db",1012,"_handle_asm_db"
                           A  7807    ; 1013	
                           A  7808    ; 1014	void handle_asm_dw(bool longword) {
0421BE                     A  7809    _handle_asm_dw:
                           A  7810    .DEFINE "_handle_asm_dw"
                           A  7811    
                           A  7812    .VALUE _handle_asm_dw
                           A  7813    
                           A  7814    .CLASS 2
                           A  7815    
                           A  7816    .TYPE 65
                           A  7817    
                           A  7818    .ENDEF
                           A  7819    
                           A  7820    .BEGFUNC "handle_asm_dw",1014,"_handle_asm_dw"
                           A  7821    
                           A  7822    .LINE 1014
                           A  7823    
                           A  7824    .DEFINE "longword"
                           A  7825    
                           A  7826    .CLASS 65
                           A  7827    
                           A  7828    .VALUE 6
                           A  7829    
                           A  7830    .TYPE 12
                           A  7831    
                           A  7832    .ENDEF
                           A  7833    
                           A  7834    .DEFINE "lbl"
                           A  7835    
                           A  7836    .CLASS 65
                           A  7837    
                           A  7838    .VALUE -3
                           A  7839    
                           A  7840    .TAG "NONAME8"
                           A  7841    
                           A  7842    .TYPE 40
                           A  7843    
                           A  7844    .ENDEF
                           A  7845    
                           A  7846    .DEFINE "token"
                           A  7847    
                           A  7848    .CLASS 65
                           A  7849    
                           A  7850    .VALUE -136
                           A  7851    
                           A  7852    .TAG "NONAME11"
                           A  7853    
                           A  7854    .TYPE 8
                           A  7855    
                           A  7856    .ENDEF
                           A  7857    
0421BE DDE5                A  7858    	PUSH	IX
0421C0 DD210000 00         A  7859    	LD	IX,0
0421C5 DD39                A  7860    	ADD	IX,SP
0421C7 2178FFFF            A  7861    	LD	HL,-136
0421CB 39                  A  7862    	ADD	HL,SP
0421CC F9                  A  7863    	LD	SP,HL
                           A  7864    ; 1015	    label *lbl;
                           A  7865    ; 1016	    tokentype token;
                           A  7866    ; 1017	    if(pass == 1) {
                           A  7867    .LINE 1017
                           A  7868    
0421CD 01010000            A  7869    	LD	BC,1
0421D1 2A 53 87 04         A  7870    	LD	HL,(_pass)
0421D5 B7                  A  7871    	OR	A,A
0421D6 ED42                A  7872    	SBC	HL,BC
0421D8 20 0B               A  7873    	JR	NZ,L_530
                           A  7874    ; 1018	        // Output label at this address
                           A  7875    ; 1019	        definelabel(address);
                           A  7876    .LINE 1019
                           A  7877    
0421DA ED4B 56 87 04       A  7878    	LD	BC,(_address)
0421DF C5                  A  7879    	PUSH	BC
0421E0 CD 1B 12 04         A  7880    	CALL	_definelabel
0421E4 C1                  A  7881    	POP	BC
                           A  7882    ; 1020	    }
0421E5                     A  7883    L_530:
                           A  7884    .LINE 1020
                           A  7885    
                           A  7886    ; 1021	    if(currentline.next) {
                           A  7887    .LINE 1021
                           A  7888    
0421E5 2A 62 87 04         A  7889    	LD	HL,(_currentline+3)
0421E9 CD C5 5D 04         A  7890    	CALL	__icmpzero
0421ED C2 D0 22 04         A  7891    	JR	NZ,L_526
0421F1 C3 DE 22 04         A  7892    	JR	L_529
                           A  7893    ; 1022	        while(currentline.next) {
0421F5                     A  7894    L_527:
                           A  7895    .LINE 1022
                           A  7896    
                           A  7897    ; 1023	            getLineToken(&token, curren
                           A  7898    .LINE 1023
                           A  7899    
0421F5 012C0000            A  7900    	LD	BC,44
0421F9 C5                  A  7901    	PUSH	BC
0421FA ED4B 62 87 04       A  7902    	LD	BC,(_currentline+3)
0421FF C5                  A  7903    	PUSH	BC
042200 DDE5E1              A  7904    	LD	HL,IX
042203 0178FFFF            A  7905    	LD	BC,-136
042207 09                  A  7906    	ADD	HL,BC
042208 E5C1                A  7907    	LD	BC,HL
04220A C5                  A  7908    	PUSH	BC
04220B CD 0B 4D 04         A  7909    	CALL	_getLineToken
04220F C1                  A  7910    	POP	BC
042210 C1                  A  7911    	POP	BC
042211 C1                  A  7912    	POP	BC
                           A  7913    ; 1024	            if(notEmpty(token.start)) {
                           A  7914    .LINE 1024
                           A  7915    
042212 DDE5E1              A  7916    	LD	HL,IX
042215 0178FFFF            A  7917    	LD	BC,-136
042219 09                  A  7918    	ADD	HL,BC
04221A E5C1                A  7919    	LD	BC,HL
04221C C5                  A  7920    	PUSH	BC
04221D CD C2 4B 04         A  7921    	CALL	_notEmpty
042221 C1                  A  7922    	POP	BC
042222 B7                  A  7923    	OR	A,A
042223 28 78               A  7924    	JR	Z,L_525
                           A  7925    ; 1025	                lbl = findLabel(token.s
                           A  7926    .LINE 1025
                           A  7927    
042225 DDE5E1              A  7928    	LD	HL,IX
042228 0178FFFF            A  7929    	LD	BC,-136
04222C 09                  A  7930    	ADD	HL,BC
04222D E5C1                A  7931    	LD	BC,HL
04222F C5                  A  7932    	PUSH	BC
042230 CD 65 41 04         A  7933    	CALL	_findLabel
042234 C1                  A  7934    	POP	BC
042235 DD2FFD              A  7935    	LD	(IX+%FFFFFFFD),HL
                           A  7936    ; 1026	                if(lbl) operand1.immedi
                           A  7937    .LINE 1026
                           A  7938    
042238 CD C5 5D 04         A  7939    	CALL	__icmpzero
04223C 28 0D               A  7940    	JR	Z,L_513
04223E DD31FD              A  7941    	LD	IY,(IX+%FFFFFFFD)
042241 FD0703              A  7942    	LD	BC,(IY+%3)
042244 ED43 72 88 04       A  7943    	LD	(_operand1+11),BC
                           A  7944    ; 1027	                else operand1.immediate
                           A  7945    .LINE 1027
                           A  7946    
042249 18 1A               A  7947    	JR	L_518
04224B                     A  7948    L_513:
04224B 01010000            A  7949    	LD	BC,1
04224F C5                  A  7950    	PUSH	BC
042250 DDE5E1              A  7951    	LD	HL,IX
042253 0178FFFF            A  7952    	LD	BC,-136
042257 09                  A  7953    	ADD	HL,BC
042258 E5C1                A  7954    	LD	BC,HL
04225A C5                  A  7955    	PUSH	BC
04225B CD AB 47 04         A  7956    	CALL	_str2num
04225F C1                  A  7957    	POP	BC
042260 C1                  A  7958    	POP	BC
042261 22 72 88 04         A  7959    	LD	(_operand1+11),HL
042265                     A  7960    L_518:
                           A  7961    ; 1028	                
                           A  7962    ; 1029	                if(longword) {
                           A  7963    .LINE 1029
                           A  7964    
042265 DD7E06              A  7965    	LD	A,(IX+%6)
042268 B7                  A  7966    	OR	A,A
042269 28 0D               A  7967    	JR	Z,L_517
                           A  7968    ; 1030	                    emit_24bit(operand1
                           A  7969    .LINE 1030
                           A  7970    
04226B ED4B 72 88 04       A  7971    	LD	BC,(_operand1+11)
042270 C5                  A  7972    	PUSH	BC
042271 CD 3B 1D 04         A  7973    	CALL	_emit_24bit
042275 C1                  A  7974    	POP	BC
                           A  7975    ; 1031	                }
                           A  7976    ; 1032	                else {
                           A  7977    .LINE 1032
                           A  7978    
042276 18 25               A  7979    	JR	L_525
042278                     A  7980    L_517:
                           A  7981    ; 1033	                    if(operand1.immedia
                           A  7982    .LINE 1033
                           A  7983    
042278 ED4B 72 88 04       A  7984    	LD	BC,(_operand1+11)
04227D 21FFFFFF            A  7985    	LD	HL,16777215
042281 B7                  A  7986    	OR	A,A
042282 ED42                A  7987    	SBC	HL,BC
042284 30 0C               A  7988    	JR	NC,L_515
042286 21 96 64 04         A  7989    	LD	HL,_message+84
04228A ED07                A  7990    	LD	BC,(HL)
04228C C5                  A  7991    	PUSH	BC
04228D CD DC 4B 04         A  7992    	CALL	_error
042291 C1                  A  7993    	POP	BC
042292                     A  7994    L_515:
                           A  7995    ; 1034	                    emit_16bit(operand1
                           A  7996    .LINE 1034
                           A  7997    
042292 ED4B 72 88 04       A  7998    	LD	BC,(_operand1+11)
042297 C5                  A  7999    	PUSH	BC
042298 CD 0A 1D 04         A  8000    	CALL	_emit_16bit
04229C C1                  A  8001    	POP	BC
                           A  8002    ; 1035	                }
                           A  8003    ; 1036	            }
04229D                     A  8004    L_525:
                           A  8005    .LINE 1036
                           A  8006    
                           A  8007    ; 1037	            if(token.terminator == ',')
                           A  8008    .LINE 1037
                           A  8009    
04229D DD7EFC              A  8010    	LD	A,(IX+%FFFFFFFC)
0422A0 FE2C                A  8011    	CP	A,%2C
0422A2 20 0A               A  8012    	JR	NZ,L_524
0422A4 DD07F9              A  8013    	LD	BC,(IX+%FFFFFFF9)
0422A7 ED43 62 87 04       A  8014    	LD	(_currentline+3),BC
                           A  8015    ; 1038	            else {
                           A  8016    .LINE 1038
                           A  8017    
0422AC 18 22               A  8018    	JR	L_526
0422AE                     A  8019    L_524:
                           A  8020    ; 1039	                if((token.terminator !=
                           A  8021    .LINE 1039
                           A  8022    
0422AE DD7EFC              A  8023    	LD	A,(IX+%FFFFFFFC)
0422B1 B7                  A  8024    	OR	A,A
0422B2 28 13               A  8025    	JR	Z,L_522
0422B4 DD7EFC              A  8026    	LD	A,(IX+%FFFFFFFC)
0422B7 FE3B                A  8027    	CP	A,%3B
0422B9 28 0C               A  8028    	JR	Z,L_522
0422BB 21 9C 64 04         A  8029    	LD	HL,_message+90
0422BF ED07                A  8030    	LD	BC,(HL)
0422C1 C5                  A  8031    	PUSH	BC
0422C2 CD DC 4B 04         A  8032    	CALL	_error
0422C6 C1                  A  8033    	POP	BC
0422C7                     A  8034    L_522:
                           A  8035    ; 1040	                currentline.next = NULL
                           A  8036    .LINE 1040
                           A  8037    
0422C7 01000000            A  8038    	LD	BC,0
0422CB ED43 62 87 04       A  8039    	LD	(_currentline+3),BC
                           A  8040    ; 1041	            }
                           A  8041    ; 1042	        }
0422D0                     A  8042    L_526:
                           A  8043    .LINE 1042
                           A  8044    
0422D0 2A 62 87 04         A  8045    	LD	HL,(_currentline+3)
0422D4 CD C5 5D 04         A  8046    	CALL	__icmpzero
0422D8 C2 F5 21 04         A  8047    	JR	NZ,L_527
0422DC 18 0C               A  8048    	JR	L_531
                           A  8049    ; 1043	    }
                           A  8050    ; 1044	    else error(message[ERROR_MISSINGOPE
0422DE                     A  8051    L_529:
                           A  8052    .LINE 1044
                           A  8053    
0422DE 21 51 64 04         A  8054    	LD	HL,_message+15
0422E2 ED07                A  8055    	LD	BC,(HL)
0422E4 C5                  A  8056    	PUSH	BC
0422E5 CD DC 4B 04         A  8057    	CALL	_error
0422E9 C1                  A  8058    	POP	BC
                           A  8059    ; 1045	}
0422EA                     A  8060    L_531:
                           A  8061    .LINE 1045
                           A  8062    
0422EA DDF9                A  8063    	LD	SP,IX
0422EC DDE1                A  8064    	POP	IX
0422EE C9                  A  8065    	RET	
                           A  8066    
                           A  8067    
                           A  8068    ;**************************** _handle_asm_dw **
                           A  8069    ;Name                         Addr/Register   S
                           A  8070    ;_emit_16bit                         IMPORT  --
                           A  8071    ;_message                            IMPORT  un
                           A  8072    ;_error                              IMPORT  --
                           A  8073    ;_emit_24bit                         IMPORT  --
                           A  8074    ;_str2num                            IMPORT  --
                           A  8075    ;_operand1                           IMPORT    
                           A  8076    ;_findLabel                          IMPORT  --
                           A  8077    ;_notEmpty                           IMPORT  --
                           A  8078    ;_getLineToken                       IMPORT  --
                           A  8079    ;_currentline                        IMPORT    
                           A  8080    ;_address                            IMPORT    
                           A  8081    ;_pass                               IMPORT    
                           A  8082    ;token                               IX-136    
                           A  8083    ;lbl                                   IX-3    
                           A  8084    ;longword                              IX+6    
                           A  8085    
                           A  8086    
                           A  8087    ; Stack Frame Size: 145 (bytes)
                           A  8088    ;       Spill Code: 0 (instruction)
                           A  8089    
                           A  8090    
                           A  8091    .ENDFUNC "handle_asm_dw",1045,"_handle_asm_dw"
                           A  8092    ; 1046	
                           A  8093    ; 1047	void handle_asm_equ(void) {
0422EF                     A  8094    _handle_asm_equ:
                           A  8095    .DEFINE "_handle_asm_equ"
                           A  8096    
                           A  8097    .VALUE _handle_asm_equ
                           A  8098    
                           A  8099    .CLASS 2
                           A  8100    
                           A  8101    .TYPE 65
                           A  8102    
                           A  8103    .ENDEF
                           A  8104    
                           A  8105    .BEGFUNC "handle_asm_equ",1047,"_handle_asm_equ
                           A  8106    
                           A  8107    .LINE 1047
                           A  8108    
                           A  8109    .DEFINE "lbl"
                           A  8110    
                           A  8111    .CLASS 65
                           A  8112    
                           A  8113    .VALUE -3
                           A  8114    
                           A  8115    .TAG "NONAME8"
                           A  8116    
                           A  8117    .TYPE 40
                           A  8118    
                           A  8119    .ENDEF
                           A  8120    
                           A  8121    .DEFINE "token"
                           A  8122    
                           A  8123    .CLASS 65
                           A  8124    
                           A  8125    .VALUE -136
                           A  8126    
                           A  8127    .TAG "NONAME11"
                           A  8128    
                           A  8129    .TYPE 8
                           A  8130    
                           A  8131    .ENDEF
                           A  8132    
0422EF DDE5                A  8133    	PUSH	IX
0422F1 DD210000 00         A  8134    	LD	IX,0
0422F6 DD39                A  8135    	ADD	IX,SP
0422F8 2178FFFF            A  8136    	LD	HL,-136
0422FC 39                  A  8137    	ADD	HL,SP
0422FD F9                  A  8138    	LD	SP,HL
                           A  8139    ; 1048	    label *lbl;
                           A  8140    ; 1049	    tokentype token;
                           A  8141    ; 1050	
                           A  8142    ; 1051	    if(currentline.next) {
                           A  8143    .LINE 1051
                           A  8144    
0422FE 2A 62 87 04         A  8145    	LD	HL,(_currentline+3)
042302 CD C5 5D 04         A  8146    	CALL	__icmpzero
042306 CA BE 23 04         A  8147    	JR	Z,L_543
                           A  8148    ; 1052	        getLineToken(&token, currentlin
                           A  8149    .LINE 1052
                           A  8150    
04230A 01000000            A  8151    	LD	BC,0
04230E C5                  A  8152    	PUSH	BC
04230F ED4B 62 87 04       A  8153    	LD	BC,(_currentline+3)
042314 C5                  A  8154    	PUSH	BC
042315 DDE5E1              A  8155    	LD	HL,IX
042318 0178FFFF            A  8156    	LD	BC,-136
04231C 09                  A  8157    	ADD	HL,BC
04231D E5C1                A  8158    	LD	BC,HL
04231F C5                  A  8159    	PUSH	BC
042320 CD 0B 4D 04         A  8160    	CALL	_getLineToken
042324 C1                  A  8161    	POP	BC
042325 C1                  A  8162    	POP	BC
042326 C1                  A  8163    	POP	BC
                           A  8164    ; 1053	        if(notEmpty(token.start)) {
                           A  8165    .LINE 1053
                           A  8166    
042327 DDE5E1              A  8167    	LD	HL,IX
04232A 0178FFFF            A  8168    	LD	BC,-136
04232E 09                  A  8169    	ADD	HL,BC
04232F E5C1                A  8170    	LD	BC,HL
042331 C5                  A  8171    	PUSH	BC
042332 CD C2 4B 04         A  8172    	CALL	_notEmpty
042336 C1                  A  8173    	POP	BC
042337 B7                  A  8174    	OR	A,A
042338 28 76               A  8175    	JR	Z,L_541
                           A  8176    ; 1054	            if((token.terminator != 0) 
                           A  8177    .LINE 1054
                           A  8178    
04233A DD7EFC              A  8179    	LD	A,(IX+%FFFFFFFC)
04233D B7                  A  8180    	OR	A,A
04233E 28 13               A  8181    	JR	Z,L_535
042340 DD7EFC              A  8182    	LD	A,(IX+%FFFFFFFC)
042343 FE3B                A  8183    	CP	A,%3B
042345 28 0C               A  8184    	JR	Z,L_535
042347 21 99 64 04         A  8185    	LD	HL,_message+87
04234B ED07                A  8186    	LD	BC,(HL)
04234D C5                  A  8187    	PUSH	BC
04234E CD DC 4B 04         A  8188    	CALL	_error
042352 C1                  A  8189    	POP	BC
042353                     A  8190    L_535:
                           A  8191    ; 1055	            if(pass == 1) definelabel(0
                           A  8192    .LINE 1055
                           A  8193    
042353 01010000            A  8194    	LD	BC,1
042357 2A 53 87 04         A  8195    	LD	HL,(_pass)
04235B B7                  A  8196    	OR	A,A
04235C ED42                A  8197    	SBC	HL,BC
04235E 20 0A               A  8198    	JR	NZ,L_539
042360 01000000            A  8199    	LD	BC,0
042364 C5                  A  8200    	PUSH	BC
042365 CD 1B 12 04         A  8201    	CALL	_definelabel
042369 C1                  A  8202    	POP	BC
04236A                     A  8203    L_539:
                           A  8204    ; 1056	            if(pass == 2) {
                           A  8205    .LINE 1056
                           A  8206    
04236A 01020000            A  8207    	LD	BC,2
04236E 2A 53 87 04         A  8208    	LD	HL,(_pass)
042372 B7                  A  8209    	OR	A,A
042373 ED42                A  8210    	SBC	HL,BC
042375 20 53               A  8211    	JR	NZ,L_544
                           A  8212    ; 1057	                lbl = findLabel(current
                           A  8213    .LINE 1057
                           A  8214    
042377 01 65 87 04         A  8215    	LD	BC,_currentline+6
04237B C5                  A  8216    	PUSH	BC
04237C CD 65 41 04         A  8217    	CALL	_findLabel
042380 C1                  A  8218    	POP	BC
042381 DD2FFD              A  8219    	LD	(IX+%FFFFFFFD),HL
                           A  8220    ; 1058	                if(lbl) lbl->address = 
                           A  8221    .LINE 1058
                           A  8222    
042384 CD C5 5D 04         A  8223    	CALL	__icmpzero
042388 28 18               A  8224    	JR	Z,L_537
04238A DDE5E1              A  8225    	LD	HL,IX
04238D 0178FFFF            A  8226    	LD	BC,-136
042391 09                  A  8227    	ADD	HL,BC
042392 E5C1                A  8228    	LD	BC,HL
042394 C5                  A  8229    	PUSH	BC
042395 CD A1 05 04         A  8230    	CALL	_getLabelValue
042399 C1                  A  8231    	POP	BC
04239A DD31FD              A  8232    	LD	IY,(IX+%FFFFFFFD)
04239D FD2F03              A  8233    	LD	(IY+%3),HL
                           A  8234    ; 1059	                else error(message[ERRO
                           A  8235    .LINE 1059
                           A  8236    
0423A0 18 28               A  8237    	JR	L_544
0423A2                     A  8238    L_537:
0423A2 21 93 64 04         A  8239    	LD	HL,_message+81
0423A6 ED07                A  8240    	LD	BC,(HL)
0423A8 C5                  A  8241    	PUSH	BC
0423A9 CD DC 4B 04         A  8242    	CALL	_error
0423AD C1                  A  8243    	POP	BC
                           A  8244    ; 1060	            }
                           A  8245    ; 1061	        }
                           A  8246    ; 1062	        else error(message[ERROR_MISSIN
                           A  8247    .LINE 1062
                           A  8248    
0423AE 18 1A               A  8249    	JR	L_544
0423B0                     A  8250    L_541:
0423B0 21 51 64 04         A  8251    	LD	HL,_message+15
0423B4 ED07                A  8252    	LD	BC,(HL)
0423B6 C5                  A  8253    	PUSH	BC
0423B7 CD DC 4B 04         A  8254    	CALL	_error
0423BB C1                  A  8255    	POP	BC
                           A  8256    ; 1063	    }
                           A  8257    ; 1064	    else error(message[ERROR_MISSINGOPE
                           A  8258    .LINE 1064
                           A  8259    
0423BC 18 0C               A  8260    	JR	L_544
0423BE                     A  8261    L_543:
0423BE 21 51 64 04         A  8262    	LD	HL,_message+15
0423C2 ED07                A  8263    	LD	BC,(HL)
0423C4 C5                  A  8264    	PUSH	BC
0423C5 CD DC 4B 04         A  8265    	CALL	_error
0423C9 C1                  A  8266    	POP	BC
                           A  8267    ; 1065	}
0423CA                     A  8268    L_544:
                           A  8269    .LINE 1065
                           A  8270    
0423CA DDF9                A  8271    	LD	SP,IX
0423CC DDE1                A  8272    	POP	IX
0423CE C9                  A  8273    	RET	
                           A  8274    
                           A  8275    
                           A  8276    ;**************************** _handle_asm_equ *
                           A  8277    ;Name                         Addr/Register   S
                           A  8278    ;_findLabel                          IMPORT  --
                           A  8279    ;_pass                               IMPORT    
                           A  8280    ;_message                            IMPORT  un
                           A  8281    ;_error                              IMPORT  --
                           A  8282    ;_notEmpty                           IMPORT  --
                           A  8283    ;_getLineToken                       IMPORT  --
                           A  8284    ;_currentline                        IMPORT    
                           A  8285    ;token                               IX-136    
                           A  8286    ;lbl                                   IX-3    
                           A  8287    
                           A  8288    
                           A  8289    ; Stack Frame Size: 142 (bytes)
                           A  8290    ;       Spill Code: 0 (instruction)
                           A  8291    
                           A  8292    
                           A  8293    .ENDFUNC "handle_asm_equ",1065,"_handle_asm_equ
                           A  8294    ; 1066	
                           A  8295    ; 1067	void handle_asm_adl(void) {
0423CF                     A  8296    _handle_asm_adl:
                           A  8297    .DEFINE "_handle_asm_adl"
                           A  8298    
                           A  8299    .VALUE _handle_asm_adl
                           A  8300    
                           A  8301    .CLASS 2
                           A  8302    
                           A  8303    .TYPE 65
                           A  8304    
                           A  8305    .ENDEF
                           A  8306    
                           A  8307    .BEGFUNC "handle_asm_adl",1067,"_handle_asm_adl
                           A  8308    
0423CF DDE5                A  8309    	PUSH	IX
0423D1 DD210000 00         A  8310    	LD	IX,0
0423D6 DD39                A  8311    	ADD	IX,SP
                           A  8312    ; 1068	    parse_asm_keyval_pair();
                           A  8313    .LINE 1068
                           A  8314    
0423D8 CD D8 1F 04         A  8315    	CALL	_parse_asm_keyval_pair
                           A  8316    ; 1069	    if(strcasecmp(currentline.operand1,
                           A  8317    .LINE 1069
                           A  8318    
0423DC 01 B4 7F 04         A  8319    	LD	BC,L__240
0423E0 C5                  A  8320    	PUSH	BC
0423E1 01 A5 87 04         A  8321    	LD	BC,_currentline+70
0423E5 C5                  A  8322    	PUSH	BC
0423E6 CD 83 56 04         A  8323    	CALL	_strcasecmp
0423EA C1                  A  8324    	POP	BC
0423EB C1                  A  8325    	POP	BC
0423EC CD C5 5D 04         A  8326    	CALL	__icmpzero
0423F0 20 2F               A  8327    	JR	NZ,L_549
                           A  8328    ; 1070	        if((operand2.immediate == 0) ||
                           A  8329    .LINE 1070
                           A  8330    
0423F2 2A 81 88 04         A  8331    	LD	HL,(_operand2+11)
0423F6 CD C5 5D 04         A  8332    	CALL	__icmpzero
0423FA 28 0D               A  8333    	JR	Z,L_546
0423FC 01010000            A  8334    	LD	BC,1
042400 2A 81 88 04         A  8335    	LD	HL,(_operand2+11)
042404 B7                  A  8336    	OR	A,A
042405 ED42                A  8337    	SBC	HL,BC
042407 20 0A               A  8338    	JR	NZ,L_547
042409                     A  8339    L_546:
                           A  8340    ; 1071	            adlmode = operand2.immediat
                           A  8341    .LINE 1071
                           A  8342    
042409 3A 81 88 04         A  8343    	LD	A,(_operand2+11)
04240D 32 5E 87 04         A  8344    	LD	(_adlmode),A
                           A  8345    ; 1072	        }
                           A  8346    ; 1073	        else error(message[ERROR_INVALI
                           A  8347    .LINE 1073
                           A  8348    
042411 18 1A               A  8349    	JR	L_550
042413                     A  8350    L_547:
042413 21 75 64 04         A  8351    	LD	HL,_message+51
042417 ED07                A  8352    	LD	BC,(HL)
042419 C5                  A  8353    	PUSH	BC
04241A CD DC 4B 04         A  8354    	CALL	_error
04241E C1                  A  8355    	POP	BC
                           A  8356    ; 1074	    }
                           A  8357    ; 1075	    else error(message[ERROR_INVALIDOPE
                           A  8358    .LINE 1075
                           A  8359    
04241F 18 0C               A  8360    	JR	L_550
042421                     A  8361    L_549:
042421 21 57 64 04         A  8362    	LD	HL,_message+21
042425 ED07                A  8363    	LD	BC,(HL)
042427 C5                  A  8364    	PUSH	BC
042428 CD DC 4B 04         A  8365    	CALL	_error
04242C C1                  A  8366    	POP	BC
                           A  8367    ; 1076	}
04242D                     A  8368    L_550:
                           A  8369    .LINE 1076
                           A  8370    
04242D DDF9                A  8371    	LD	SP,IX
04242F DDE1                A  8372    	POP	IX
042431 C9                  A  8373    	RET	
                           A  8374    
                           A  8375    
                           A  8376    ;**************************** _handle_asm_adl *
                           A  8377    ;Name                         Addr/Register   S
                           A  8378    ;_message                            IMPORT  un
                           A  8379    ;_error                              IMPORT  --
                           A  8380    ;_adlmode                            IMPORT    
                           A  8381    ;_operand2                           IMPORT    
                           A  8382    ;_currentline                        IMPORT    
                           A  8383    ;_strcasecmp                         IMPORT  --
                           A  8384    
                           A  8385    
                           A  8386    ; Stack Frame Size: 6 (bytes)
                           A  8387    ;       Spill Code: 0 (instruction)
                           A  8388    
                           A  8389    
                           A  8390    .ENDFUNC "handle_asm_adl",1076,"_handle_asm_adl
                           A  8391    	SEGMENT STRSECT
047FB4                     A  8392    L__240:
047FB4 61646C              A  8393    	DB	"adl"
047FB7 00                  A  8394    	DB	0
                           A  8395    	SEGMENT CODE
                           A  8396    ; 1077	
                           A  8397    ; 1078	void handle_asm_org(void) {
042432                     A  8398    _handle_asm_org:
                           A  8399    .DEFINE "_handle_asm_org"
                           A  8400    
                           A  8401    .VALUE _handle_asm_org
                           A  8402    
                           A  8403    .CLASS 2
                           A  8404    
                           A  8405    .TYPE 65
                           A  8406    
                           A  8407    .ENDEF
                           A  8408    
                           A  8409    .BEGFUNC "handle_asm_org",1078,"_handle_asm_org
                           A  8410    
                           A  8411    .LINE 1078
                           A  8412    
                           A  8413    .DEFINE "newaddress"
                           A  8414    
                           A  8415    .CLASS 65
                           A  8416    
                           A  8417    .VALUE -3
                           A  8418    
                           A  8419    .TYPE 14
                           A  8420    
                           A  8421    .ENDEF
                           A  8422    
042432 DDE5                A  8423    	PUSH	IX
042434 DD210000 00         A  8424    	LD	IX,0
042439 DD39                A  8425    	ADD	IX,SP
04243B C5                  A  8426    	PUSH	BC
                           A  8427    ; 1079	    uint24_t newaddress;
                           A  8428    ; 1080	    
                           A  8429    ; 1081	    parse_asm_single_immediate(); // ge
                           A  8430    .LINE 1081
                           A  8431    
04243C CD 3C 1F 04         A  8432    	CALL	_parse_asm_single_immediate
                           A  8433    ; 1082	    newaddress = operand1.immediate;
                           A  8434    .LINE 1082
                           A  8435    
042440 ED4B 72 88 04       A  8436    	LD	BC,(_operand1+11)
042445 DD0FFD              A  8437    	LD	(IX+%FFFFFFFD),BC
                           A  8438    ; 1083	    if((adlmode == 0) && (newaddress > 
                           A  8439    .LINE 1083
                           A  8440    
042448 3A 5E 87 04         A  8441    	LD	A,(_adlmode)
04244C B7                  A  8442    	OR	A,A
04244D 20 18               A  8443    	JR	NZ,L_557
04244F DD07FD              A  8444    	LD	BC,(IX+%FFFFFFFD)
042452 21FFFF00            A  8445    	LD	HL,65535
042456 B7                  A  8446    	OR	A,A
042457 ED42                A  8447    	SBC	HL,BC
042459 30 0C               A  8448    	JR	NC,L_557
04245B 21 7E 64 04         A  8449    	LD	HL,_message+60
04245F ED07                A  8450    	LD	BC,(HL)
042461 C5                  A  8451    	PUSH	BC
042462 CD DC 4B 04         A  8452    	CALL	_error
042466 C1                  A  8453    	POP	BC
042467                     A  8454    L_557:
                           A  8455    ; 1084	    if(newaddress >= address) {
                           A  8456    .LINE 1084
                           A  8457    
042467 ED4B 56 87 04       A  8458    	LD	BC,(_address)
04246C DD27FD              A  8459    	LD	HL,(IX+%FFFFFFFD)
04246F B7                  A  8460    	OR	A,A
042470 ED42                A  8461    	SBC	HL,BC
042472 38 22               A  8462    	JR	C,L_556
                           A  8463    ; 1085	        if(pass == 1) {
                           A  8464    .LINE 1085
                           A  8465    
042474 01010000            A  8466    	LD	BC,1
042478 2A 53 87 04         A  8467    	LD	HL,(_pass)
04247C B7                  A  8468    	OR	A,A
04247D ED42                A  8469    	SBC	HL,BC
04247F 20 0B               A  8470    	JR	NZ,L_554
                           A  8471    ; 1086	            // Output label at this add
                           A  8472    ; 1087	            definelabel(address); // se
                           A  8473    .LINE 1087
                           A  8474    
042481 ED4B 56 87 04       A  8475    	LD	BC,(_address)
042486 C5                  A  8476    	PUSH	BC
042487 CD 1B 12 04         A  8477    	CALL	_definelabel
04248B C1                  A  8478    	POP	BC
                           A  8479    ; 1088	        }
04248C                     A  8480    L_554:
                           A  8481    .LINE 1088
                           A  8482    
                           A  8483    ; 1089	        address = newaddress;
                           A  8484    .LINE 1089
                           A  8485    
04248C DD07FD              A  8486    	LD	BC,(IX+%FFFFFFFD)
04248F ED43 56 87 04       A  8487    	LD	(_address),BC
                           A  8488    ; 1090	    }
                           A  8489    ; 1091	    else error(message[ERROR_ADDRESSLOW
                           A  8490    .LINE 1091
                           A  8491    
042494 18 0C               A  8492    	JR	L_558
042496                     A  8493    L_556:
042496 21 7B 64 04         A  8494    	LD	HL,_message+57
04249A ED07                A  8495    	LD	BC,(HL)
04249C C5                  A  8496    	PUSH	BC
04249D CD DC 4B 04         A  8497    	CALL	_error
0424A1 C1                  A  8498    	POP	BC
                           A  8499    ; 1092	}
0424A2                     A  8500    L_558:
                           A  8501    .LINE 1092
                           A  8502    
0424A2 DDF9                A  8503    	LD	SP,IX
0424A4 DDE1                A  8504    	POP	IX
0424A6 C9                  A  8505    	RET	
                           A  8506    
                           A  8507    
                           A  8508    ;**************************** _handle_asm_org *
                           A  8509    ;Name                         Addr/Register   S
                           A  8510    ;_pass                               IMPORT    
                           A  8511    ;_address                            IMPORT    
                           A  8512    ;_message                            IMPORT  un
                           A  8513    ;_error                              IMPORT  --
                           A  8514    ;_adlmode                            IMPORT    
                           A  8515    ;_operand1                           IMPORT    
                           A  8516    ;newaddress                            IX-3    
                           A  8517    
                           A  8518    
                           A  8519    ; Stack Frame Size: 9 (bytes)
                           A  8520    ;       Spill Code: 0 (instruction)
                           A  8521    
                           A  8522    
                           A  8523    .ENDFUNC "handle_asm_org",1092,"_handle_asm_org
                           A  8524    ; 1093	
                           A  8525    ; 1094	void handle_asm_include(void) {
0424A7                     A  8526    _handle_asm_include:
                           A  8527    .DEFINE "_handle_asm_include"
                           A  8528    
                           A  8529    .VALUE _handle_asm_include
                           A  8530    
                           A  8531    .CLASS 2
                           A  8532    
                           A  8533    .TYPE 65
                           A  8534    
                           A  8535    .ENDEF
                           A  8536    
                           A  8537    .BEGFUNC "handle_asm_include",1094,"_handle_asm
                           A  8538    
                           A  8539    .LINE 1094
                           A  8540    
                           A  8541    .DEFINE "fsi"
                           A  8542    
                           A  8543    .CLASS 65
                           A  8544    
                           A  8545    .VALUE -70
                           A  8546    
                           A  8547    .TAG "NONAME12"
                           A  8548    
                           A  8549    .TYPE 8
                           A  8550    
                           A  8551    .ENDEF
                           A  8552    
                           A  8553    .DEFINE "token"
                           A  8554    
                           A  8555    .CLASS 65
                           A  8556    
                           A  8557    .VALUE -203
                           A  8558    
                           A  8559    .TAG "NONAME11"
                           A  8560    
                           A  8561    .TYPE 8
                           A  8562    
                           A  8563    .ENDEF
                           A  8564    
0424A7 DDE5                A  8565    	PUSH	IX
0424A9 DD210000 00         A  8566    	LD	IX,0
0424AE DD39                A  8567    	ADD	IX,SP
0424B0 2132FFFF            A  8568    	LD	HL,-206
0424B4 39                  A  8569    	ADD	HL,SP
0424B5 F9                  A  8570    	LD	SP,HL
                           A  8571    ; 1095	    tokentype token;
                           A  8572    ; 1096	    filestackitem fsi;
                           A  8573    ; 1097	    if(currentline.next) {
                           A  8574    .LINE 1097
                           A  8575    
0424B6 2A 62 87 04         A  8576    	LD	HL,(_currentline+3)
0424BA CD C5 5D 04         A  8577    	CALL	__icmpzero
0424BE CA A4 25 04         A  8578    	JR	Z,L_566
                           A  8579    ; 1098	        getLineToken(&token, currentlin
                           A  8580    .LINE 1098
                           A  8581    
0424C2 01000000            A  8582    	LD	BC,0
0424C6 C5                  A  8583    	PUSH	BC
0424C7 ED4B 62 87 04       A  8584    	LD	BC,(_currentline+3)
0424CC C5                  A  8585    	PUSH	BC
0424CD DDE5E1              A  8586    	LD	HL,IX
0424D0 0135FFFF            A  8587    	LD	BC,-203
0424D4 09                  A  8588    	ADD	HL,BC
0424D5 E5C1                A  8589    	LD	BC,HL
0424D7 C5                  A  8590    	PUSH	BC
0424D8 CD 0B 4D 04         A  8591    	CALL	_getLineToken
0424DC C1                  A  8592    	POP	BC
0424DD C1                  A  8593    	POP	BC
0424DE C1                  A  8594    	POP	BC
                           A  8595    ; 1099	        if(token.start[0] == '\"') {
                           A  8596    .LINE 1099
                           A  8597    
0424DF DDE5E1              A  8598    	LD	HL,IX
0424E2 0135FFFF            A  8599    	LD	BC,-203
0424E6 09                  A  8600    	ADD	HL,BC
0424E7 DD2FFD              A  8601    	LD	(IX+%FFFFFFFD),HL
0424EA 7E                  A  8602    	LD	A,(HL)
0424EB 47                  A  8603    	LD	B,A
0424EC 17ED62              A  8604    	SEXT	HL
0424EF 68                  A  8605    	LD	L,B
0424F0 01220000            A  8606    	LD	BC,34
0424F4 B7                  A  8607    	OR	A,A
0424F5 ED42                A  8608    	SBC	HL,BC
0424F7 C2 84 25 04         A  8609    	JR	NZ,L_562
                           A  8610    ; 1100	            token.start[strlen(token.st
                           A  8611    .LINE 1100
                           A  8612    
0424FB DD07FD              A  8613    	LD	BC,(IX+%FFFFFFFD)
0424FE C5                  A  8614    	PUSH	BC
0424FF CD 41 5A 04         A  8615    	CALL	_strlen
042503 C1                  A  8616    	POP	BC
042504 DD07FD              A  8617    	LD	BC,(IX+%FFFFFFFD)
042507 09                  A  8618    	ADD	HL,BC
042508 2B                  A  8619    	DEC	HL
042509 3600                A  8620    	LD	(HL),%0
                           A  8621    ; 1101	            fsi.linenumber = linenumber
                           A  8622    .LINE 1101
                           A  8623    
04250B 2A 50 87 04         A  8624    	LD	HL,(_linenumber)
04250F DD75BA              A  8625    	LD	(IX+%FFFFFFBA),L
042512 DD74BB              A  8626    	LD	(IX+%FFFFFFBB),H
                           A  8627    ; 1102	            fsi.fp = filehandle[FILE_CU
                           A  8628    .LINE 1102
                           A  8629    
042515 3A 47 87 04         A  8630    	LD	A,(_filehandle)
042519 DD77BC              A  8631    	LD	(IX+%FFFFFFBC),A
                           A  8632    ; 1103	            strcpy(fsi.filename, filena
                           A  8633    .LINE 1103
                           A  8634    
04251C 01 C7 85 04         A  8635    	LD	BC,_filename
042520 C5                  A  8636    	PUSH	BC
042521 ED65BD              A  8637    	PEA	IX+%FFFFFFBD
042524 CD 09 61 04         A  8638    	CALL	_strcpy
042528 C1                  A  8639    	POP	BC
042529 C1                  A  8640    	POP	BC
                           A  8641    ; 1104	            filestackPush(&fsi);
                           A  8642    .LINE 1104
                           A  8643    
04252A ED65BA              A  8644    	PEA	IX+%FFFFFFBA
04252D CD 1D 2D 04         A  8645    	CALL	_filestackPush
042531 C1                  A  8646    	POP	BC
                           A  8647    ; 1105	            filehandle[FILE_CURRENT] = 
                           A  8648    .LINE 1105
                           A  8649    
042532 DD07FD              A  8650    	LD	BC,(IX+%FFFFFFFD)
042535 03                  A  8651    	INC	BC
042536 ED5580              A  8652    	LEA	IY,IX+%FFFFFF80
042539 FD0FB2              A  8653    	LD	(IY+%FFFFFFB2),BC
04253C 01010000            A  8654    	LD	BC,1
042540 C5                  A  8655    	PUSH	BC
042541 FD07B2              A  8656    	LD	BC,(IY+%FFFFFFB2)
042544 C5                  A  8657    	PUSH	BC
042545 CD A3 03 04         A  8658    	CALL	_mos_fopen
042549 C1                  A  8659    	POP	BC
04254A C1                  A  8660    	POP	BC
04254B 32 47 87 04         A  8661    	LD	(_filehandle),A
                           A  8662    ; 1106	            strcpy(filename[FILE_CURREN
                           A  8663    .LINE 1106
                           A  8664    
04254F ED5580              A  8665    	LEA	IY,IX+%FFFFFF80
042552 FD07B2              A  8666    	LD	BC,(IY+%FFFFFFB2)
042555 C5                  A  8667    	PUSH	BC
042556 01 C7 85 04         A  8668    	LD	BC,_filename
04255A C5                  A  8669    	PUSH	BC
04255B CD 09 61 04         A  8670    	CALL	_strcpy
04255F C1                  A  8671    	POP	BC
042560 C1                  A  8672    	POP	BC
                           A  8673    ; 1107	            if(filehandle[FILE_CURRENT]
                           A  8674    .LINE 1107
                           A  8675    
042561 3A 47 87 04         A  8676    	LD	A,(_filehandle)
042565 B7                  A  8677    	OR	A,A
042566 20 14               A  8678    	JR	NZ,L_560
                           A  8679    ; 1108	                filestackPop(&fsi);
                           A  8680    .LINE 1108
                           A  8681    
042568 ED65BA              A  8682    	PEA	IX+%FFFFFFBA
04256B CD A4 2D 04         A  8683    	CALL	_filestackPop
04256F C1                  A  8684    	POP	BC
                           A  8685    ; 1109	                error(message[ERROR_INC
                           A  8686    .LINE 1109
                           A  8687    
042570 21 A8 64 04         A  8688    	LD	HL,_message+102
042574 ED07                A  8689    	LD	BC,(HL)
042576 C5                  A  8690    	PUSH	BC
042577 CD DC 4B 04         A  8691    	CALL	_error
04257B C1                  A  8692    	POP	BC
                           A  8693    ; 1110	            }
04257C                     A  8694    L_560:
                           A  8695    .LINE 1110
                           A  8696    
                           A  8697    ; 1111	            lineNumberNeedsReset = true
                           A  8698    .LINE 1111
                           A  8699    
04257C 3E01                A  8700    	LD	A,%1
04257E 32 4F 87 04         A  8701    	LD	(_lineNumberNeedsReset),A
                           A  8702    ; 1112	        }
                           A  8703    ; 1113	        else error(message[ERROR_STRING
                           A  8704    .LINE 1113
                           A  8705    
042582 18 0C               A  8706    	JR	L_564
042584                     A  8707    L_562:
042584 21 81 64 04         A  8708    	LD	HL,_message+63
042588 ED07                A  8709    	LD	BC,(HL)
04258A C5                  A  8710    	PUSH	BC
04258B CD DC 4B 04         A  8711    	CALL	_error
04258F C1                  A  8712    	POP	BC
042590                     A  8713    L_564:
                           A  8714    ; 1114	        if(token.terminator != 0) error
                           A  8715    .LINE 1114
                           A  8716    
042590 DD7EB9              A  8717    	LD	A,(IX+%FFFFFFB9)
042593 B7                  A  8718    	OR	A,A
042594 28 1A               A  8719    	JR	Z,L_567
042596 21 99 64 04         A  8720    	LD	HL,_message+87
04259A ED07                A  8721    	LD	BC,(HL)
04259C C5                  A  8722    	PUSH	BC
04259D CD DC 4B 04         A  8723    	CALL	_error
0425A1 C1                  A  8724    	POP	BC
                           A  8725    ; 1115	    }
                           A  8726    ; 1116	    else error(message[ERROR_MISSINGOPE
                           A  8727    .LINE 1116
                           A  8728    
0425A2 18 0C               A  8729    	JR	L_567
0425A4                     A  8730    L_566:
0425A4 21 51 64 04         A  8731    	LD	HL,_message+15
0425A8 ED07                A  8732    	LD	BC,(HL)
0425AA C5                  A  8733    	PUSH	BC
0425AB CD DC 4B 04         A  8734    	CALL	_error
0425AF C1                  A  8735    	POP	BC
                           A  8736    ; 1117	}
0425B0                     A  8737    L_567:
                           A  8738    .LINE 1117
                           A  8739    
0425B0 DDF9                A  8740    	LD	SP,IX
0425B2 DDE1                A  8741    	POP	IX
0425B4 C9                  A  8742    	RET	
                           A  8743    
                           A  8744    
                           A  8745    ;**************************** _handle_asm_inclu
                           A  8746    ;Name                         Addr/Register   S
                           A  8747    ;_lineNumberNeedsReset               IMPORT    
                           A  8748    ;_message                            IMPORT  un
                           A  8749    ;_error                              IMPORT  --
                           A  8750    ;_filestackPop                       IMPORT  --
                           A  8751    ;_mos_fopen                          IMPORT  --
                           A  8752    ;_filestackPush                      IMPORT  --
                           A  8753    ;_filename                           IMPORT    
                           A  8754    ;_strcpy                             IMPORT  --
                           A  8755    ;_filehandle                         IMPORT    
                           A  8756    ;_linenumber                         IMPORT    
                           A  8757    ;_strlen                             IMPORT  --
                           A  8758    ;_getLineToken                       IMPORT  --
                           A  8759    ;_currentline                        IMPORT    
                           A  8760    ;token                               IX-203    
                           A  8761    ;fsi                                  IX-70    
                           A  8762    ;G_25                                  IX-3    
                           A  8763    
                           A  8764    
                           A  8765    ; Stack Frame Size: 212 (bytes)
                           A  8766    ;       Spill Code: 0 (instruction)
                           A  8767    
                           A  8768    
                           A  8769    .ENDFUNC "handle_asm_include",1117,"_handle_asm
                           A  8770    ; 1118	
                           A  8771    ; 1119	
                           A  8772    ; 1120	
                           A  8773    ; 1121	void handle_asm_blk(uint8_t width) {
0425B5                     A  8774    _handle_asm_blk:
                           A  8775    .DEFINE "_handle_asm_blk"
                           A  8776    
                           A  8777    .VALUE _handle_asm_blk
                           A  8778    
                           A  8779    .CLASS 2
                           A  8780    
                           A  8781    .TYPE 65
                           A  8782    
                           A  8783    .ENDEF
                           A  8784    
                           A  8785    .BEGFUNC "handle_asm_blk",1121,"_handle_asm_blk
                           A  8786    
                           A  8787    .LINE 1121
                           A  8788    
                           A  8789    .DEFINE "width"
                           A  8790    
                           A  8791    .CLASS 65
                           A  8792    
                           A  8793    .VALUE 6
                           A  8794    
                           A  8795    .TYPE 12
                           A  8796    
                           A  8797    .ENDEF
                           A  8798    
                           A  8799    .DEFINE "val"
                           A  8800    
                           A  8801    .CLASS 65
                           A  8802    
                           A  8803    .VALUE -3
                           A  8804    
                           A  8805    .TYPE 4
                           A  8806    
                           A  8807    .ENDEF
                           A  8808    
                           A  8809    .DEFINE "num"
                           A  8810    
                           A  8811    .CLASS 65
                           A  8812    
                           A  8813    .VALUE -5
                           A  8814    
                           A  8815    .TYPE 13
                           A  8816    
                           A  8817    .ENDEF
                           A  8818    
                           A  8819    .DEFINE "token"
                           A  8820    
                           A  8821    .CLASS 65
                           A  8822    
                           A  8823    .VALUE -141
                           A  8824    
                           A  8825    .TAG "NONAME11"
                           A  8826    
                           A  8827    .TYPE 8
                           A  8828    
                           A  8829    .ENDEF
                           A  8830    
0425B5 DDE5                A  8831    	PUSH	IX
0425B7 DD210000 00         A  8832    	LD	IX,0
0425BC DD39                A  8833    	ADD	IX,SP
0425BE 2173FFFF            A  8834    	LD	HL,-141
0425C2 39                  A  8835    	ADD	HL,SP
0425C3 F9                  A  8836    	LD	SP,HL
                           A  8837    ; 1122	    uint16_t num;
                           A  8838    ; 1123	    int24_t val = 0;
                           A  8839    .LINE 1123
                           A  8840    
0425C4 01000000            A  8841    	LD	BC,0
0425C8 DD0FFD              A  8842    	LD	(IX+%FFFFFFFD),BC
                           A  8843    ; 1124	    tokentype token;
                           A  8844    ; 1125	
                           A  8845    ; 1126	    if(pass == 1) {
                           A  8846    .LINE 1126
                           A  8847    
0425CB 01010000            A  8848    	LD	BC,1
0425CF 2A 53 87 04         A  8849    	LD	HL,(_pass)
0425D3 B7                  A  8850    	OR	A,A
0425D4 ED42                A  8851    	SBC	HL,BC
0425D6 20 0B               A  8852    	JR	NZ,L_589
                           A  8853    ; 1127	        // Output label at this address
                           A  8854    ; 1128	        definelabel(address);
                           A  8855    .LINE 1128
                           A  8856    
0425D8 ED4B 56 87 04       A  8857    	LD	BC,(_address)
0425DD C5                  A  8858    	PUSH	BC
0425DE CD 1B 12 04         A  8859    	CALL	_definelabel
0425E2 C1                  A  8860    	POP	BC
                           A  8861    ; 1129	    }
0425E3                     A  8862    L_589:
                           A  8863    .LINE 1129
                           A  8864    
                           A  8865    ; 1130	
                           A  8866    ; 1131	    if(currentline.next) {
                           A  8867    .LINE 1131
                           A  8868    
0425E3 2A 62 87 04         A  8869    	LD	HL,(_currentline+3)
0425E7 CD C5 5D 04         A  8870    	CALL	__icmpzero
0425EB CA 5F 27 04         A  8871    	JR	Z,L_588
                           A  8872    ; 1132	        getLineToken(&token, currentlin
                           A  8873    .LINE 1132
                           A  8874    
0425EF 012C0000            A  8875    	LD	BC,44
0425F3 C5                  A  8876    	PUSH	BC
0425F4 ED4B 62 87 04       A  8877    	LD	BC,(_currentline+3)
0425F9 C5                  A  8878    	PUSH	BC
0425FA DDE5E1              A  8879    	LD	HL,IX
0425FD 0173FFFF            A  8880    	LD	BC,-141
042601 09                  A  8881    	ADD	HL,BC
042602 E5C1                A  8882    	LD	BC,HL
042604 C5                  A  8883    	PUSH	BC
042605 CD 0B 4D 04         A  8884    	CALL	_getLineToken
042609 C1                  A  8885    	POP	BC
04260A C1                  A  8886    	POP	BC
04260B C1                  A  8887    	POP	BC
                           A  8888    ; 1133	        if(notEmpty(token.start)) {
                           A  8889    .LINE 1133
                           A  8890    
04260C DDE5E1              A  8891    	LD	HL,IX
04260F 0173FFFF            A  8892    	LD	BC,-141
042613 09                  A  8893    	ADD	HL,BC
042614 E5C1                A  8894    	LD	BC,HL
042616 C5                  A  8895    	PUSH	BC
042617 CD C2 4B 04         A  8896    	CALL	_notEmpty
04261B C1                  A  8897    	POP	BC
04261C B7                  A  8898    	OR	A,A
04261D CA 51 27 04         A  8899    	JR	Z,L_586
                           A  8900    ; 1134	            num = str2num(token.start,t
                           A  8901    .LINE 1134
                           A  8902    
042621 01010000            A  8903    	LD	BC,1
042625 C5                  A  8904    	PUSH	BC
042626 DDE5E1              A  8905    	LD	HL,IX
042629 0173FFFF            A  8906    	LD	BC,-141
04262D 09                  A  8907    	ADD	HL,BC
04262E E5C1                A  8908    	LD	BC,HL
042630 C5                  A  8909    	PUSH	BC
042631 CD AB 47 04         A  8910    	CALL	_str2num
042635 C1                  A  8911    	POP	BC
042636 C1                  A  8912    	POP	BC
042637 DD75FB              A  8913    	LD	(IX+%FFFFFFFB),L
04263A DD74FC              A  8914    	LD	(IX+%FFFFFFFC),H
                           A  8915    ; 1135	
                           A  8916    ; 1136	            if(token.terminator == ',')
                           A  8917    .LINE 1136
                           A  8918    
04263D DD7EF7              A  8919    	LD	A,(IX+%FFFFFFF7)
042640 FE2C                A  8920    	CP	A,%2C
042642 C2 C6 26 04         A  8921    	JR	NZ,L_576
                           A  8922    ; 1137	                getLineToken(&token, to
                           A  8923    .LINE 1137
                           A  8924    
042646 01000000            A  8925    	LD	BC,0
04264A C5                  A  8926    	PUSH	BC
04264B DD07F4              A  8927    	LD	BC,(IX+%FFFFFFF4)
04264E C5                  A  8928    	PUSH	BC
04264F DDE5E1              A  8929    	LD	HL,IX
042652 0173FFFF            A  8930    	LD	BC,-141
042656 09                  A  8931    	ADD	HL,BC
042657 E5C1                A  8932    	LD	BC,HL
042659 C5                  A  8933    	PUSH	BC
04265A CD 0B 4D 04         A  8934    	CALL	_getLineToken
04265E C1                  A  8935    	POP	BC
04265F C1                  A  8936    	POP	BC
042660 C1                  A  8937    	POP	BC
                           A  8938    ; 1138	                if(notEmpty(token.start
                           A  8939    .LINE 1138
                           A  8940    
042661 DDE5E1              A  8941    	LD	HL,IX
042664 0173FFFF            A  8942    	LD	BC,-141
042668 09                  A  8943    	ADD	HL,BC
042669 E5C1                A  8944    	LD	BC,HL
04266B C5                  A  8945    	PUSH	BC
04266C CD C2 4B 04         A  8946    	CALL	_notEmpty
042670 C1                  A  8947    	POP	BC
042671 B7                  A  8948    	OR	A,A
042672 28 44               A  8949    	JR	Z,L_572
                           A  8950    ; 1139	                    if(token.start[0] =
                           A  8951    .LINE 1139
                           A  8952    
042674 DDE5E1              A  8953    	LD	HL,IX
042677 0173FFFF            A  8954    	LD	BC,-141
04267B 09                  A  8955    	ADD	HL,BC
04267C DD2FF8              A  8956    	LD	(IX+%FFFFFFF8),HL
04267F 7E                  A  8957    	LD	A,(HL)
042680 47                  A  8958    	LD	B,A
042681 17ED62              A  8959    	SEXT	HL
042684 68                  A  8960    	LD	L,B
042685 01270000            A  8961    	LD	BC,39
042689 B7                  A  8962    	OR	A,A
04268A ED42                A  8963    	SBC	HL,BC
04268C 20 14               A  8964    	JR	NZ,L_570
04268E DD07F8              A  8965    	LD	BC,(IX+%FFFFFFF8)
042691 C5                  A  8966    	PUSH	BC
042692 CD B5 04 04         A  8967    	CALL	_getAsciiValue
042696 C1                  A  8968    	POP	BC
042697 B7ED62              A  8969    	UEXT	HL
04269A 6F                  A  8970    	LD	L,A
04269B DD2FFD              A  8971    	LD	(IX+%FFFFFFFD),HL
                           A  8972    ; 1140	                    else val = str2num(
                           A  8973    .LINE 1140
                           A  8974    
04269E C3 38 27 04         A  8975    	JR	L_582
0426A2                     A  8976    L_570:
0426A2 01010000            A  8977    	LD	BC,1
0426A6 C5                  A  8978    	PUSH	BC
0426A7 DD07F8              A  8979    	LD	BC,(IX+%FFFFFFF8)
0426AA C5                  A  8980    	PUSH	BC
0426AB CD AB 47 04         A  8981    	CALL	_str2num
0426AF C1                  A  8982    	POP	BC
0426B0 C1                  A  8983    	POP	BC
0426B1 DD2FFD              A  8984    	LD	(IX+%FFFFFFFD),HL
                           A  8985    ; 1141	                }
                           A  8986    ; 1142	                else error(message[ERRO
                           A  8987    .LINE 1142
                           A  8988    
0426B4 C3 38 27 04         A  8989    	JR	L_582
0426B8                     A  8990    L_572:
0426B8 21 51 64 04         A  8991    	LD	HL,_message+15
0426BC ED07                A  8992    	LD	BC,(HL)
0426BE C5                  A  8993    	PUSH	BC
0426BF CD DC 4B 04         A  8994    	CALL	_error
0426C3 C1                  A  8995    	POP	BC
                           A  8996    ; 1143	            }
                           A  8997    ; 1144	            else if((token.terminator !
                           A  8998    .LINE 1144
                           A  8999    
0426C4 18 72               A  9000    	JR	L_582
0426C6                     A  9001    L_576:
0426C6 DD7EF7              A  9002    	LD	A,(IX+%FFFFFFF7)
0426C9 B7                  A  9003    	OR	A,A
0426CA 28 6C               A  9004    	JR	Z,L_582
0426CC DD7EF7              A  9005    	LD	A,(IX+%FFFFFFF7)
0426CF FE3B                A  9006    	CP	A,%3B
0426D1 28 65               A  9007    	JR	Z,L_582
0426D3 21 9C 64 04         A  9008    	LD	HL,_message+90
0426D7 ED07                A  9009    	LD	BC,(HL)
0426D9 C5                  A  9010    	PUSH	BC
0426DA CD DC 4B 04         A  9011    	CALL	_error
0426DE C1                  A  9012    	POP	BC
                           A  9013    ; 1145	            while(num--) {
                           A  9014    .LINE 1145
                           A  9015    
0426DF 18 57               A  9016    	JR	L_582
0426E1                     A  9017    L_583:
                           A  9018    ; 1146	                switch(width) {
                           A  9019    .LINE 1146
                           A  9020    
0426E1 DD7E06              A  9021    	LD	A,(IX+%6)
0426E4 B7ED62              A  9022    	UEXT	HL
0426E7 6F                  A  9023    	LD	L,A
0426E8 CD A4 57 04         A  9024    	CALL	__seqcaseD
0426EC E9                  A  9025    	JP	(HL)
0426ED                     A  9026    L__263:
0426ED 0400                A  9027    	DW	4
0426EF 0100                A  9028    	DW	1
0426F1 00                  A  9029    	DB	0
0426F2 012704              A  9030    	DW24	L_578	
                           A  9031    
0426F5 0E2704              A  9032    	DW24	L_579	
                           A  9033    
0426F8 192704              A  9034    	DW24	L_580	
                           A  9035    
0426FB 242704              A  9036    	DW24	L_581	
                           A  9037    
0426FE 382704              A  9038    	DW24	L_582	
                           A  9039    
                           A  9040    ; 1147	                    case 1:
042701                     A  9041    L_578:
                           A  9042    .LINE 1147
                           A  9043    
                           A  9044    ; 1148	                        emit_8bit(val);
                           A  9045    .LINE 1148
                           A  9046    
042701 DD4EFD              A  9047    	LD	C,(IX+%FFFFFFFD)
042704 0600                A  9048    	LD	B,%0
042706 C5                  A  9049    	PUSH	BC
042707 CD B8 1C 04         A  9050    	CALL	_emit_8bit
04270B C1                  A  9051    	POP	BC
                           A  9052    ; 1149	                        break;
                           A  9053    .LINE 1149
                           A  9054    
04270C 18 2A               A  9055    	JR	L_582
                           A  9056    ; 1150	                    case 2:
04270E                     A  9057    L_579:
                           A  9058    .LINE 1150
                           A  9059    
                           A  9060    ; 1151	                        emit_16bit(val)
                           A  9061    .LINE 1151
                           A  9062    
04270E DD07FD              A  9063    	LD	BC,(IX+%FFFFFFFD)
042711 C5                  A  9064    	PUSH	BC
042712 CD 0A 1D 04         A  9065    	CALL	_emit_16bit
042716 C1                  A  9066    	POP	BC
                           A  9067    ; 1152	                        break;
                           A  9068    .LINE 1152
                           A  9069    
042717 18 1F               A  9070    	JR	L_582
                           A  9071    ; 1153	                    case 3:
042719                     A  9072    L_580:
                           A  9073    .LINE 1153
                           A  9074    
                           A  9075    ; 1154	                        emit_24bit(val)
                           A  9076    .LINE 1154
                           A  9077    
042719 DD07FD              A  9078    	LD	BC,(IX+%FFFFFFFD)
04271C C5                  A  9079    	PUSH	BC
04271D CD 3B 1D 04         A  9080    	CALL	_emit_24bit
042721 C1                  A  9081    	POP	BC
                           A  9082    ; 1155	                        break;
                           A  9083    .LINE 1155
                           A  9084    
042722 18 14               A  9085    	JR	L_582
                           A  9086    ; 1156	                    case 4:
042724                     A  9087    L_581:
                           A  9088    .LINE 1156
                           A  9089    
                           A  9090    ; 1157	                        emit_32bit(val)
                           A  9091    .LINE 1157
                           A  9092    
042724 DD07FD              A  9093    	LD	BC,(IX+%FFFFFFFD)
042727 CD B0 60 04         A  9094    	CALL	__itol
04272B C5D1                A  9095    	LD	DE,BC
04272D 4F                  A  9096    	LD	C,A
04272E 0600                A  9097    	LD	B,%0
042730 C5                  A  9098    	PUSH	BC
042731 D5                  A  9099    	PUSH	DE
042732 CD 7B 1D 04         A  9100    	CALL	_emit_32bit
042736 C1                  A  9101    	POP	BC
042737 C1                  A  9102    	POP	BC
                           A  9103    ; 1158	                        break;
                           A  9104    ; 1159	                }
                           A  9105    ; 1160	            }
042738                     A  9106    L_582:
                           A  9107    .LINE 1160
                           A  9108    
042738 DD07FB              A  9109    	LD	BC,(IX+%FFFFFFFB)
04273B DD31FB              A  9110    	LD	IY,(IX+%FFFFFFFB)
04273E ED23FF              A  9111    	LEA	HL,IY+%FFFFFFFF
042741 DD75FB              A  9112    	LD	(IX+%FFFFFFFB),L
042744 DD74FC              A  9113    	LD	(IX+%FFFFFFFC),H
042747 C5E1                A  9114    	LD	HL,BC
042749 CD 35 61 04         A  9115    	CALL	__scmpzero
04274D 20 92               A  9116    	JR	NZ,L_583
04274F 18 1A               A  9117    	JR	L_590
                           A  9118    ; 1161	        }
                           A  9119    ; 1162	        else error(message[ERROR_MISSIN
042751                     A  9120    L_586:
                           A  9121    .LINE 1162
                           A  9122    
042751 21 51 64 04         A  9123    	LD	HL,_message+15
042755 ED07                A  9124    	LD	BC,(HL)
042757 C5                  A  9125    	PUSH	BC
042758 CD DC 4B 04         A  9126    	CALL	_error
04275C C1                  A  9127    	POP	BC
                           A  9128    ; 1163	    }
                           A  9129    ; 1164	    else error(message[ERROR_MISSINGOPE
                           A  9130    .LINE 1164
                           A  9131    
04275D 18 0C               A  9132    	JR	L_590
04275F                     A  9133    L_588:
04275F 21 51 64 04         A  9134    	LD	HL,_message+15
042763 ED07                A  9135    	LD	BC,(HL)
042765 C5                  A  9136    	PUSH	BC
042766 CD DC 4B 04         A  9137    	CALL	_error
04276A C1                  A  9138    	POP	BC
                           A  9139    ; 1165	}
04276B                     A  9140    L_590:
                           A  9141    .LINE 1165
                           A  9142    
04276B DDF9                A  9143    	LD	SP,IX
04276D DDE1                A  9144    	POP	IX
04276F C9                  A  9145    	RET	
                           A  9146    
                           A  9147    
                           A  9148    ;**************************** _handle_asm_blk *
                           A  9149    ;Name                         Addr/Register   S
                           A  9150    ;_emit_24bit                         IMPORT  --
                           A  9151    ;_emit_16bit                         IMPORT  --
                           A  9152    ;_emit_8bit                          IMPORT  --
                           A  9153    ;_message                            IMPORT  un
                           A  9154    ;_error                              IMPORT  --
                           A  9155    ;_str2num                            IMPORT  --
                           A  9156    ;_notEmpty                           IMPORT  --
                           A  9157    ;_getLineToken                       IMPORT  --
                           A  9158    ;_currentline                        IMPORT    
                           A  9159    ;_address                            IMPORT    
                           A  9160    ;_pass                               IMPORT    
                           A  9161    ;token                               IX-141    
                           A  9162    ;G_27                                  IX-8    
                           A  9163    ;num                                   IX-5    
                           A  9164    ;val                                   IX-3    
                           A  9165    ;width                                 IX+6    
                           A  9166    
                           A  9167    
                           A  9168    ; Stack Frame Size: 150 (bytes)
                           A  9169    ;       Spill Code: 0 (instruction)
                           A  9170    
                           A  9171    
                           A  9172    .ENDFUNC "handle_asm_blk",1165,"_handle_asm_blk
                           A  9173    ; 1166	
                           A  9174    ; 1167	void handle_asm_align(void) {
042770                     A  9175    _handle_asm_align:
                           A  9176    .DEFINE "_handle_asm_align"
                           A  9177    
                           A  9178    .VALUE _handle_asm_align
                           A  9179    
                           A  9180    .CLASS 2
                           A  9181    
                           A  9182    .TYPE 65
                           A  9183    
                           A  9184    .ENDEF
                           A  9185    
                           A  9186    .BEGFUNC "handle_asm_align",1167,"_handle_asm_a
                           A  9187    
                           A  9188    .LINE 1167
                           A  9189    
                           A  9190    .DEFINE "base"
                           A  9191    
                           A  9192    .CLASS 65
                           A  9193    
                           A  9194    .VALUE -3
                           A  9195    
                           A  9196    .TYPE 14
                           A  9197    
                           A  9198    .ENDEF
                           A  9199    
                           A  9200    .DEFINE "delta"
                           A  9201    
                           A  9202    .CLASS 65
                           A  9203    
                           A  9204    .VALUE -6
                           A  9205    
                           A  9206    .TYPE 14
                           A  9207    
                           A  9208    .ENDEF
                           A  9209    
                           A  9210    .DEFINE "alignment"
                           A  9211    
                           A  9212    .CLASS 65
                           A  9213    
                           A  9214    .VALUE -9
                           A  9215    
                           A  9216    .TYPE 14
                           A  9217    
                           A  9218    .ENDEF
                           A  9219    
042770 DDE5                A  9220    	PUSH	IX
042772 DD210000 00         A  9221    	LD	IX,0
042777 DD39                A  9222    	ADD	IX,SP
042779 C5                  A  9223    	PUSH	BC
04277A C5                  A  9224    	PUSH	BC
04277B C5                  A  9225    	PUSH	BC
04277C 3B                  A  9226    	DEC	SP
                           A  9227    ; 1168	uint24_t alignment;
                           A  9228    ; 1169	uint24_t base;
                           A  9229    ; 1170	uint24_t delta;
                           A  9230    ; 1171	
                           A  9231    ; 1172	    if(pass == 1) {
                           A  9232    .LINE 1172
                           A  9233    
04277D 01010000            A  9234    	LD	BC,1
042781 2A 53 87 04         A  9235    	LD	HL,(_pass)
042785 B7                  A  9236    	OR	A,A
042786 ED42                A  9237    	SBC	HL,BC
042788 20 11               A  9238    	JR	NZ,L_592
                           A  9239    ; 1173	        // Output label at this address
                           A  9240    ; 1174	        definelabel(address);
                           A  9241    .LINE 1174
                           A  9242    
04278A ED4B 56 87 04       A  9243    	LD	BC,(_address)
04278F C5                  A  9244    	PUSH	BC
042790 DD77F6              A  9245    	LD	(IX+%FFFFFFF6),A
042793 CD 1B 12 04         A  9246    	CALL	_definelabel
042797 DD7EF6              A  9247    	LD	A,(IX+%FFFFFFF6)
04279A C1                  A  9248    	POP	BC
                           A  9249    ; 1175	    }
04279B                     A  9250    L_592:
                           A  9251    .LINE 1175
                           A  9252    
                           A  9253    ; 1176	
                           A  9254    ; 1177	    parse_asm_single_immediate();
                           A  9255    .LINE 1177
                           A  9256    
04279B DD77F6              A  9257    	LD	(IX+%FFFFFFF6),A
04279E CD 3C 1F 04         A  9258    	CALL	_parse_asm_single_immediate
0427A2 DD7EF6              A  9259    	LD	A,(IX+%FFFFFFF6)
                           A  9260    ; 1178	    if(operand1.immediate > 0) {
                           A  9261    .LINE 1178
                           A  9262    
0427A5 ED4B 72 88 04       A  9263    	LD	BC,(_operand1+11)
0427AA B7                  A  9264    	OR	A,A
0427AB ED62                A  9265    	SBC	HL,HL
0427AD B7                  A  9266    	OR	A,A
0427AE ED42                A  9267    	SBC	HL,BC
0427B0 F2 61 28 04         A  9268    	JP	P,L_603
                           A  9269    ; 1179	        if((operand1.immediate & (opera
                           A  9270    .LINE 1179
                           A  9271    
0427B4 2A 72 88 04         A  9272    	LD	HL,(_operand1+11)
0427B8 2B                  A  9273    	DEC	HL
0427B9 ED4B 72 88 04       A  9274    	LD	BC,(_operand1+11)
0427BE CD 42 61 04         A  9275    	CALL	__iand
0427C2 CD C5 5D 04         A  9276    	CALL	__icmpzero
0427C6 C2 53 28 04         A  9277    	JR	NZ,L_601
                           A  9278    ; 1180	            alignment = operand1.immedi
                           A  9279    .LINE 1180
                           A  9280    
0427CA ED4B 72 88 04       A  9281    	LD	BC,(_operand1+11)
0427CF DD0FF7              A  9282    	LD	(IX+%FFFFFFF7),BC
                           A  9283    ; 1181	            base = (~(operand1.immediat
                           A  9284    .LINE 1181
                           A  9285    
0427D2 2A 72 88 04         A  9286    	LD	HL,(_operand1+11)
0427D6 2B                  A  9287    	DEC	HL
0427D7 CD 88 59 04         A  9288    	CALL	__inot
0427DB ED4B 56 87 04       A  9289    	LD	BC,(_address)
0427E0 CD 42 61 04         A  9290    	CALL	__iand
0427E4 DD2FFD              A  9291    	LD	(IX+%FFFFFFFD),HL
                           A  9292    ; 1182	
                           A  9293    ; 1183	            if(address & (operand1.imme
                           A  9294    .LINE 1183
                           A  9295    
0427E7 2A 72 88 04         A  9296    	LD	HL,(_operand1+11)
0427EB 2B                  A  9297    	DEC	HL
0427EC ED4B 56 87 04       A  9298    	LD	BC,(_address)
0427F1 CD 42 61 04         A  9299    	CALL	__iand
0427F5 CD C5 5D 04         A  9300    	CALL	__icmpzero
0427F9 28 0A               A  9301    	JR	Z,L_594
0427FB DD07F7              A  9302    	LD	BC,(IX+%FFFFFFF7)
0427FE DD27FD              A  9303    	LD	HL,(IX+%FFFFFFFD)
042801 09                  A  9304    	ADD	HL,BC
042802 DD2FFD              A  9305    	LD	(IX+%FFFFFFFD),HL
042805                     A  9306    L_594:
                           A  9307    ; 1184	            delta = base - address;
                           A  9308    .LINE 1184
                           A  9309    
042805 ED4B 56 87 04       A  9310    	LD	BC,(_address)
04280A DD27FD              A  9311    	LD	HL,(IX+%FFFFFFFD)
04280D B7                  A  9312    	OR	A,A
04280E ED42                A  9313    	SBC	HL,BC
042810 DD2FFA              A  9314    	LD	(IX+%FFFFFFFA),HL
                           A  9315    ; 1185	            while(delta--) emit_8bit(FI
                           A  9316    .LINE 1185
                           A  9317    
042813 18 0A               A  9318    	JR	L_596
042815                     A  9319    L_597:
042815 01000000            A  9320    	LD	BC,0
042819 C5                  A  9321    	PUSH	BC
04281A CD B8 1C 04         A  9322    	CALL	_emit_8bit
04281E C1                  A  9323    	POP	BC
04281F                     A  9324    L_596:
04281F DD27FA              A  9325    	LD	HL,(IX+%FFFFFFFA)
042822 DD31FA              A  9326    	LD	IY,(IX+%FFFFFFFA)
042825 ED33FF              A  9327    	LEA	IY,IY+%FFFFFFFF
042828 DD3EFA              A  9328    	LD	(IX+%FFFFFFFA),IY
04282B CD C5 5D 04         A  9329    	CALL	__icmpzero
04282F 20 E4               A  9330    	JR	NZ,L_597
                           A  9331    ; 1186	
                           A  9332    ; 1187	            address = base;
                           A  9333    .LINE 1187
                           A  9334    
042831 DD07FD              A  9335    	LD	BC,(IX+%FFFFFFFD)
042834 ED43 56 87 04       A  9336    	LD	(_address),BC
                           A  9337    ; 1188	            if(pass == 1) {
                           A  9338    .LINE 1188
                           A  9339    
042839 01010000            A  9340    	LD	BC,1
04283D 2A 53 87 04         A  9341    	LD	HL,(_pass)
042841 B7                  A  9342    	OR	A,A
042842 ED42                A  9343    	SBC	HL,BC
042844 20 27               A  9344    	JR	NZ,L_604
                           A  9345    ; 1189	                definelabel(address); /
                           A  9346    .LINE 1189
                           A  9347    
042846 ED4B 56 87 04       A  9348    	LD	BC,(_address)
04284B C5                  A  9349    	PUSH	BC
04284C CD 1B 12 04         A  9350    	CALL	_definelabel
042850 C1                  A  9351    	POP	BC
                           A  9352    ; 1190	            }
                           A  9353    ; 1191	        }
                           A  9354    ; 1192	        else error(message[ERROR_POWER2
                           A  9355    .LINE 1192
                           A  9356    
042851 18 1A               A  9357    	JR	L_604
042853                     A  9358    L_601:
042853 21 B7 64 04         A  9359    	LD	HL,_message+117
042857 ED07                A  9360    	LD	BC,(HL)
042859 C5                  A  9361    	PUSH	BC
04285A CD DC 4B 04         A  9362    	CALL	_error
04285E C1                  A  9363    	POP	BC
                           A  9364    ; 1193	    }
                           A  9365    ; 1194	    else error(message[ERROR_INVALIDNUM
                           A  9366    .LINE 1194
                           A  9367    
04285F 18 0C               A  9368    	JR	L_604
042861                     A  9369    L_603:
042861 21 4B 64 04         A  9370    	LD	HL,_message+9
042865 ED07                A  9371    	LD	BC,(HL)
042867 C5                  A  9372    	PUSH	BC
042868 CD DC 4B 04         A  9373    	CALL	_error
04286C C1                  A  9374    	POP	BC
                           A  9375    ; 1195	}
04286D                     A  9376    L_604:
                           A  9377    .LINE 1195
                           A  9378    
04286D DDF9                A  9379    	LD	SP,IX
04286F DDE1                A  9380    	POP	IX
042871 C9                  A  9381    	RET	
                           A  9382    
                           A  9383    
                           A  9384    ;**************************** _handle_asm_align
                           A  9385    ;Name                         Addr/Register   S
                           A  9386    ;_message                            IMPORT  un
                           A  9387    ;_error                              IMPORT  --
                           A  9388    ;_emit_8bit                          IMPORT  --
                           A  9389    ;_operand1                           IMPORT    
                           A  9390    ;_address                            IMPORT    
                           A  9391    ;_pass                               IMPORT    
                           A  9392    ;alignment                             IX-9    
                           A  9393    ;delta                                 IX-6    
                           A  9394    ;base                                  IX-3    
                           A  9395    
                           A  9396    
                           A  9397    ; Stack Frame Size: 16 (bytes)
                           A  9398    ;       Spill Code: 0 (instruction)
                           A  9399    
                           A  9400    
                           A  9401    .ENDFUNC "handle_asm_align",1195,"_handle_asm_a
                           A  9402    ; 1196	
                           A  9403    ; 1197	void handle_assembler_command(void) {
042872                     A  9404    _handle_assembler_command:
                           A  9405    .DEFINE "_handle_assembler_command"
                           A  9406    
                           A  9407    .VALUE _handle_assembler_command
                           A  9408    
                           A  9409    .CLASS 2
                           A  9410    
                           A  9411    .TYPE 65
                           A  9412    
                           A  9413    .ENDEF
                           A  9414    
                           A  9415    .BEGFUNC "handle_assembler_command",1197,"_hand
                           A  9416    
042872 DDE5                A  9417    	PUSH	IX
042874 DD210000 00         A  9418    	LD	IX,0
042879 DD39                A  9419    	ADD	IX,SP
                           A  9420    ; 1198	    switch(currentline.current_instruct
                           A  9421    .LINE 1198
                           A  9422    
04287B FD2A 5F 87 04       A  9423    	LD	IY,(_currentline)
042880 FD7E09              A  9424    	LD	A,(IY+%9)
042883 B7ED62              A  9425    	UEXT	HL
042886 6F                  A  9426    	LD	L,A
042887 CD A4 57 04         A  9427    	CALL	__seqcaseD
04288B E9                  A  9428    	JP	(HL)
04288C                     A  9429    L__273:
04288C 0E00                A  9430    	DW	14
04288E 0000                A  9431    	DW	0
042890 00                  A  9432    	DB	0
042891 422904              A  9433    	DW24	L_618	
                           A  9434    
042894 BE2804              A  9435    	DW24	L_605	
                           A  9436    
042897 C62804              A  9437    	DW24	L_606	
                           A  9438    
04289A CC2804              A  9439    	DW24	L_607	
                           A  9440    
04289D D22804              A  9441    	DW24	L_608	
                           A  9442    
0428A0 DE2804              A  9443    	DW24	L_609	
                           A  9444    
0428A3 EA2804              A  9445    	DW24	L_610	
                           A  9446    
0428A6 F62804              A  9447    	DW24	L_611	
                           A  9448    
0428A9 062904              A  9449    	DW24	L_612	
                           A  9450    
0428AC 0C2904              A  9451    	DW24	L_613	
                           A  9452    
0428AF 122904              A  9453    	DW24	L_614	
                           A  9454    
0428B2 1E2904              A  9455    	DW24	L_615	
                           A  9456    
0428B5 2A2904              A  9457    	DW24	L_616	
                           A  9458    
0428B8 362904              A  9459    	DW24	L_617	
                           A  9460    
0428BB 462904              A  9461    	DW24	L_619	
                           A  9462    
                           A  9463    ; 1199	    case(ASM_ADL):
0428BE                     A  9464    L_605:
                           A  9465    .LINE 1199
                           A  9466    
                           A  9467    ; 1200	        handle_asm_adl();
                           A  9468    .LINE 1200
                           A  9469    
0428BE CD CF 23 04         A  9470    	CALL	_handle_asm_adl
                           A  9471    ; 1201	        break;
                           A  9472    .LINE 1201
                           A  9473    
0428C2 C3 46 29 04         A  9474    	JR	L_619
                           A  9475    ; 1202	    case(ASM_ORG):
0428C6                     A  9476    L_606:
                           A  9477    .LINE 1202
                           A  9478    
                           A  9479    ; 1203	        handle_asm_org();
                           A  9480    .LINE 1203
                           A  9481    
0428C6 CD 32 24 04         A  9482    	CALL	_handle_asm_org
                           A  9483    ; 1204	        break;
                           A  9484    .LINE 1204
                           A  9485    
0428CA 18 7A               A  9486    	JR	L_619
                           A  9487    ; 1205	    case(ASM_DB):
0428CC                     A  9488    L_607:
                           A  9489    .LINE 1205
                           A  9490    
                           A  9491    ; 1206	        handle_asm_db();
                           A  9492    .LINE 1206
                           A  9493    
0428CC CD AA 20 04         A  9494    	CALL	_handle_asm_db
                           A  9495    ; 1207	        break;
                           A  9496    .LINE 1207
                           A  9497    
0428D0 18 74               A  9498    	JR	L_619
                           A  9499    ; 1208	    case(ASM_DS):
0428D2                     A  9500    L_608:
                           A  9501    .LINE 1208
                           A  9502    
                           A  9503    ; 1209	        handle_asm_blk(1);
                           A  9504    .LINE 1209
                           A  9505    
0428D2 01010000            A  9506    	LD	BC,1
0428D6 C5                  A  9507    	PUSH	BC
0428D7 CD B5 25 04         A  9508    	CALL	_handle_asm_blk
0428DB C1                  A  9509    	POP	BC
                           A  9510    ; 1210	        break;
                           A  9511    .LINE 1210
                           A  9512    
0428DC 18 68               A  9513    	JR	L_619
                           A  9514    ; 1211	    case(ASM_DW):
0428DE                     A  9515    L_609:
                           A  9516    .LINE 1211
                           A  9517    
                           A  9518    ; 1212	        handle_asm_dw(false);
                           A  9519    .LINE 1212
                           A  9520    
0428DE 01000000            A  9521    	LD	BC,0
0428E2 C5                  A  9522    	PUSH	BC
0428E3 CD BE 21 04         A  9523    	CALL	_handle_asm_dw
0428E7 C1                  A  9524    	POP	BC
                           A  9525    ; 1213	        break;
                           A  9526    .LINE 1213
                           A  9527    
0428E8 18 5C               A  9528    	JR	L_619
                           A  9529    ; 1214	    case(ASM_DW24):
0428EA                     A  9530    L_610:
                           A  9531    .LINE 1214
                           A  9532    
                           A  9533    ; 1215	        handle_asm_dw(true);
                           A  9534    .LINE 1215
                           A  9535    
0428EA 01010000            A  9536    	LD	BC,1
0428EE C5                  A  9537    	PUSH	BC
0428EF CD BE 21 04         A  9538    	CALL	_handle_asm_dw
0428F3 C1                  A  9539    	POP	BC
                           A  9540    ; 1216	        break;
                           A  9541    .LINE 1216
                           A  9542    
0428F4 18 50               A  9543    	JR	L_619
                           A  9544    ; 1217	    case(ASM_ASCIZ):
0428F6                     A  9545    L_611:
                           A  9546    .LINE 1217
                           A  9547    
                           A  9548    ; 1218	        handle_asm_db();
                           A  9549    .LINE 1218
                           A  9550    
0428F6 CD AA 20 04         A  9551    	CALL	_handle_asm_db
                           A  9552    ; 1219	        emit_8bit(0);
                           A  9553    .LINE 1219
                           A  9554    
0428FA 01000000            A  9555    	LD	BC,0
0428FE C5                  A  9556    	PUSH	BC
0428FF CD B8 1C 04         A  9557    	CALL	_emit_8bit
042903 C1                  A  9558    	POP	BC
                           A  9559    ; 1220	        break;
                           A  9560    .LINE 1220
                           A  9561    
042904 18 40               A  9562    	JR	L_619
                           A  9563    ; 1221	    case(ASM_EQU):
042906                     A  9564    L_612:
                           A  9565    .LINE 1221
                           A  9566    
                           A  9567    ; 1222	        handle_asm_equ();
                           A  9568    .LINE 1222
                           A  9569    
042906 CD EF 22 04         A  9570    	CALL	_handle_asm_equ
                           A  9571    ; 1223	        break;
                           A  9572    .LINE 1223
                           A  9573    
04290A 18 3A               A  9574    	JR	L_619
                           A  9575    ; 1224	    case(ASM_INCLUDE):
04290C                     A  9576    L_613:
                           A  9577    .LINE 1224
                           A  9578    
                           A  9579    ; 1225	        handle_asm_include();
                           A  9580    .LINE 1225
                           A  9581    
04290C CD A7 24 04         A  9582    	CALL	_handle_asm_include
                           A  9583    ; 1226	        break;
                           A  9584    .LINE 1226
                           A  9585    
042910 18 34               A  9586    	JR	L_619
                           A  9587    ; 1227	    case(ASM_BLKB):
042912                     A  9588    L_614:
                           A  9589    .LINE 1227
                           A  9590    
                           A  9591    ; 1228	        handle_asm_blk(1);
                           A  9592    .LINE 1228
                           A  9593    
042912 01010000            A  9594    	LD	BC,1
042916 C5                  A  9595    	PUSH	BC
042917 CD B5 25 04         A  9596    	CALL	_handle_asm_blk
04291B C1                  A  9597    	POP	BC
                           A  9598    ; 1229	        break;
                           A  9599    .LINE 1229
                           A  9600    
04291C 18 28               A  9601    	JR	L_619
                           A  9602    ; 1230	    case(ASM_BLKW):
04291E                     A  9603    L_615:
                           A  9604    .LINE 1230
                           A  9605    
                           A  9606    ; 1231	        handle_asm_blk(2);
                           A  9607    .LINE 1231
                           A  9608    
04291E 01020000            A  9609    	LD	BC,2
042922 C5                  A  9610    	PUSH	BC
042923 CD B5 25 04         A  9611    	CALL	_handle_asm_blk
042927 C1                  A  9612    	POP	BC
                           A  9613    ; 1232	        break;
                           A  9614    .LINE 1232
                           A  9615    
042928 18 1C               A  9616    	JR	L_619
                           A  9617    ; 1233	    case(ASM_BLKP):
04292A                     A  9618    L_616:
                           A  9619    .LINE 1233
                           A  9620    
                           A  9621    ; 1234	        handle_asm_blk(3);
                           A  9622    .LINE 1234
                           A  9623    
04292A 01030000            A  9624    	LD	BC,3
04292E C5                  A  9625    	PUSH	BC
04292F CD B5 25 04         A  9626    	CALL	_handle_asm_blk
042933 C1                  A  9627    	POP	BC
                           A  9628    ; 1235	        break;
                           A  9629    .LINE 1235
                           A  9630    
042934 18 10               A  9631    	JR	L_619
                           A  9632    ; 1236	    case(ASM_BLKL):
042936                     A  9633    L_617:
                           A  9634    .LINE 1236
                           A  9635    
                           A  9636    ; 1237	        handle_asm_blk(4);
                           A  9637    .LINE 1237
                           A  9638    
042936 01040000            A  9639    	LD	BC,4
04293A C5                  A  9640    	PUSH	BC
04293B CD B5 25 04         A  9641    	CALL	_handle_asm_blk
04293F C1                  A  9642    	POP	BC
                           A  9643    ; 1238	        break;
                           A  9644    .LINE 1238
                           A  9645    
042940 18 04               A  9646    	JR	L_619
                           A  9647    ; 1239	    case(ASM_ALIGN):
042942                     A  9648    L_618:
                           A  9649    .LINE 1239
                           A  9650    
                           A  9651    ; 1240	        handle_asm_align();
                           A  9652    .LINE 1240
                           A  9653    
042942 CD 70 27 04         A  9654    	CALL	_handle_asm_align
                           A  9655    ; 1241	        break;
                           A  9656    ; 1242	    }
042946                     A  9657    L_619:
                           A  9658    .LINE 1242
                           A  9659    
                           A  9660    ; 1243	    return;
                           A  9661    ; 1244	}
                           A  9662    .LINE 1244
                           A  9663    
042946 DDF9                A  9664    	LD	SP,IX
042948 DDE1                A  9665    	POP	IX
04294A C9                  A  9666    	RET	
                           A  9667    
                           A  9668    
                           A  9669    ;**************************** _handle_assembler
                           A  9670    ;Name                         Addr/Register   S
                           A  9671    ;_emit_8bit                          IMPORT  --
                           A  9672    ;_currentline                        IMPORT    
                           A  9673    
                           A  9674    
                           A  9675    ; Stack Frame Size: 6 (bytes)
                           A  9676    ;       Spill Code: 0 (instruction)
                           A  9677    
                           A  9678    
                           A  9679    .ENDFUNC "handle_assembler_command",1244,"_hand
                           A  9680    ; 1245	
                           A  9681    ; 1246	void processInstructions(void){
04294B                     A  9682    _processInstructions:
                           A  9683    .DEFINE "_processInstructions"
                           A  9684    
                           A  9685    .VALUE _processInstructions
                           A  9686    
                           A  9687    .CLASS 2
                           A  9688    
                           A  9689    .TYPE 65
                           A  9690    
                           A  9691    .ENDEF
                           A  9692    
                           A  9693    .BEGFUNC "processInstructions",1246,"_processIn
                           A  9694    
                           A  9695    .LINE 1246
                           A  9696    
                           A  9697    .DEFINE "list"
                           A  9698    
                           A  9699    .CLASS 65
                           A  9700    
                           A  9701    .VALUE -3
                           A  9702    
                           A  9703    .TAG "NONAME5"
                           A  9704    
                           A  9705    .TYPE 40
                           A  9706    
                           A  9707    .ENDEF
                           A  9708    
                           A  9709    .DEFINE "listitem"
                           A  9710    
                           A  9711    .CLASS 65
                           A  9712    
                           A  9713    .VALUE -4
                           A  9714    
                           A  9715    .TYPE 12
                           A  9716    
                           A  9717    .ENDEF
                           A  9718    
                           A  9719    .DEFINE "match"
                           A  9720    
                           A  9721    .CLASS 65
                           A  9722    
                           A  9723    .VALUE -5
                           A  9724    
                           A  9725    .TYPE 12
                           A  9726    
                           A  9727    .ENDEF
                           A  9728    
04294B DDE5                A  9729    	PUSH	IX
04294D DD210000 00         A  9730    	LD	IX,0
042952 DD39                A  9731    	ADD	IX,SP
042954 C5                  A  9732    	PUSH	BC
042955 3B                  A  9733    	DEC	SP
042956 3B                  A  9734    	DEC	SP
                           A  9735    ; 1247	    operandlist *list;
                           A  9736    ; 1248	    uint8_t listitem;
                           A  9737    ; 1249	    bool match;
                           A  9738    ; 1250	
                           A  9739    ; 1251	    // return on empty lines
                           A  9740    ; 1252	    if(isEmpty(currentline.mnemonic)) {
                           A  9741    .LINE 1252
                           A  9742    
042957 01 85 87 04         A  9743    	LD	BC,_currentline+38
04295B C5                  A  9744    	PUSH	BC
04295C CD A8 4B 04         A  9745    	CALL	_isEmpty
042960 C1                  A  9746    	POP	BC
042961 B7                  A  9747    	OR	A,A
042962 28 1E               A  9748    	JR	Z,L_638
                           A  9749    ; 1253	        // check if there is a single l
                           A  9750    ; 1254	        if(pass == 1) definelabel(addre
                           A  9751    .LINE 1254
                           A  9752    
042964 01010000            A  9753    	LD	BC,1
042968 2A 53 87 04         A  9754    	LD	HL,(_pass)
04296C B7                  A  9755    	OR	A,A
04296D ED42                A  9756    	SBC	HL,BC
04296F C2 38 2A 04         A  9757    	JR	NZ,L_640
042973 ED4B 56 87 04       A  9758    	LD	BC,(_address)
042978 C5                  A  9759    	PUSH	BC
042979 CD 1B 12 04         A  9760    	CALL	_definelabel
04297D C1                  A  9761    	POP	BC
                           A  9762    ; 1255	        return; // valid line, but empt
                           A  9763    .LINE 1255
                           A  9764    
04297E C3 38 2A 04         A  9765    	JR	L_640
                           A  9766    ; 1256	    }
042982                     A  9767    L_638:
                           A  9768    .LINE 1256
                           A  9769    
                           A  9770    ; 1257	
                           A  9771    ; 1258	    if(currentline.current_instruction)
                           A  9772    .LINE 1258
                           A  9773    
042982 2A 5F 87 04         A  9774    	LD	HL,(_currentline)
042986 CD C5 5D 04         A  9775    	CALL	__icmpzero
04298A CA 38 2A 04         A  9776    	JR	Z,L_639
                           A  9777    ; 1259	        if(currentline.current_instruct
                           A  9778    .LINE 1259
                           A  9779    
04298E FD2A 5F 87 04       A  9780    	LD	IY,(_currentline)
042993 FD7E08              A  9781    	LD	A,(IY+%8)
042996 B7                  A  9782    	OR	A,A
042997 C2 34 2A 04         A  9783    	JR	NZ,L_636
                           A  9784    ; 1260	            // process this mnemonic by
                           A  9785    ; 1261	            list = currentline.current_
                           A  9786    .LINE 1261
                           A  9787    
04299B FD2A 5F 87 04       A  9788    	LD	IY,(_currentline)
0429A0 FD070B              A  9789    	LD	BC,(IY+%B)
0429A3 DD0FFD              A  9790    	LD	(IX+%FFFFFFFD),BC
                           A  9791    ; 1262	            match = false;
                           A  9792    .LINE 1262
                           A  9793    
0429A6 DD36FB00            A  9794    	LD	(IX+%FFFFFFFB),%0
                           A  9795    ; 1263	            for(listitem = 0; listitem 
                           A  9796    .LINE 1263
                           A  9797    
0429AA DD36FC00            A  9798    	LD	(IX+%FFFFFFFC),%0
0429AE 18 63               A  9799    	JR	L_631
0429B0                     A  9800    L_629:
                           A  9801    ; 1264	                if(permittype_matchlist
                           A  9802    .LINE 1264
                           A  9803    
0429B0 DD31FD              A  9804    	LD	IY,(IX+%FFFFFFFD)
0429B3 FD2700              A  9805    	LD	HL,(IY+%0)
0429B6 E5C1                A  9806    	LD	BC,HL
0429B8 29                  A  9807    	ADD	HL,HL
0429B9 29                  A  9808    	ADD	HL,HL
0429BA 09                  A  9809    	ADD	HL,BC
0429BB 09                  A  9810    	ADD	HL,BC
0429BC 01 BD 64 04         A  9811    	LD	BC,_permittype_matchlist
0429C0 09                  A  9812    	ADD	HL,BC
0429C1 E5FDE1              A  9813    	LD	IY,HL
0429C4 FD3703              A  9814    	LD	IY,(IY+%3)
0429C7 01 67 88 04         A  9815    	LD	BC,_operand1
0429CB C5                  A  9816    	PUSH	BC
0429CC CD 07 61 04         A  9817    	CALL	__indcall
0429D0 C1                  A  9818    	POP	BC
0429D1 B7                  A  9819    	OR	A,A
0429D2 28 33               A  9820    	JR	Z,L_628
0429D4 DD31FD              A  9821    	LD	IY,(IX+%FFFFFFFD)
0429D7 FD2703              A  9822    	LD	HL,(IY+%3)
0429DA E5C1                A  9823    	LD	BC,HL
0429DC 29                  A  9824    	ADD	HL,HL
0429DD 29                  A  9825    	ADD	HL,HL
0429DE 09                  A  9826    	ADD	HL,BC
0429DF 09                  A  9827    	ADD	HL,BC
0429E0 01 BD 64 04         A  9828    	LD	BC,_permittype_matchlist
0429E4 09                  A  9829    	ADD	HL,BC
0429E5 E5FDE1              A  9830    	LD	IY,HL
0429E8 FD3703              A  9831    	LD	IY,(IY+%3)
0429EB 01 76 88 04         A  9832    	LD	BC,_operand2
0429EF C5                  A  9833    	PUSH	BC
0429F0 CD 07 61 04         A  9834    	CALL	__indcall
0429F4 C1                  A  9835    	POP	BC
0429F5 B7                  A  9836    	OR	A,A
0429F6 28 0F               A  9837    	JR	Z,L_628
                           A  9838    ; 1265	                    match = true;
                           A  9839    .LINE 1265
                           A  9840    
0429F8 DD36FB01            A  9841    	LD	(IX+%FFFFFFFB),%1
                           A  9842    ; 1266	                    emit_instruction(li
                           A  9843    .LINE 1266
                           A  9844    
0429FC DD07FD              A  9845    	LD	BC,(IX+%FFFFFFFD)
0429FF C5                  A  9846    	PUSH	BC
042A00 CD 04 19 04         A  9847    	CALL	_emit_instruction
042A04 C1                  A  9848    	POP	BC
                           A  9849    ; 1267	                    break;
                           A  9850    .LINE 1267
                           A  9851    
042A05 18 19               A  9852    	JR	L_633
                           A  9853    ; 1268	                }
042A07                     A  9854    L_628:
                           A  9855    .LINE 1268
                           A  9856    
                           A  9857    ; 1269	                list++;
                           A  9858    .LINE 1269
                           A  9859    
042A07 DD31FD              A  9860    	LD	IY,(IX+%FFFFFFFD)
042A0A ED3310              A  9861    	LEA	IY,IY+%10
042A0D DD3EFD              A  9862    	LD	(IX+%FFFFFFFD),IY
042A10 DD34FC              A  9863    	INC	(IX+%FFFFFFFC)
                           A  9864    ; 1270	            }
042A13                     A  9865    L_631:
                           A  9866    .LINE 1270
                           A  9867    
042A13 FD2A 5F 87 04       A  9868    	LD	IY,(_currentline)
042A18 DD7EFC              A  9869    	LD	A,(IX+%FFFFFFFC)
042A1B FDBE0A              A  9870    	CP	A,(IY+%A)
042A1E 38 90               A  9871    	JR	C,L_629
042A20                     A  9872    L_633:
                           A  9873    ; 1271	            if(!match) error(message[ER
                           A  9874    .LINE 1271
                           A  9875    
042A20 DD7EFB              A  9876    	LD	A,(IX+%FFFFFFFB)
042A23 B7                  A  9877    	OR	A,A
042A24 20 12               A  9878    	JR	NZ,L_640
042A26 21 5A 64 04         A  9879    	LD	HL,_message+24
042A2A ED07                A  9880    	LD	BC,(HL)
042A2C C5                  A  9881    	PUSH	BC
042A2D CD DC 4B 04         A  9882    	CALL	_error
042A31 C1                  A  9883    	POP	BC
                           A  9884    ; 1272	            return;
                           A  9885    .LINE 1272
                           A  9886    
042A32 18 04               A  9887    	JR	L_640
                           A  9888    ; 1273	        }
                           A  9889    ; 1274	        else handle_assembler_command()
042A34                     A  9890    L_636:
                           A  9891    .LINE 1274
                           A  9892    
042A34 CD 72 28 04         A  9893    	CALL	_handle_assembler_command
                           A  9894    ; 1275	    }
042A38                     A  9895    L_639:
                           A  9896    .LINE 1275
                           A  9897    
                           A  9898    ; 1276	    return;
                           A  9899    ; 1277	}
042A38                     A  9900    L_640:
                           A  9901    .LINE 1277
                           A  9902    
042A38 DDF9                A  9903    	LD	SP,IX
042A3A DDE1                A  9904    	POP	IX
042A3C C9                  A  9905    	RET	
                           A  9906    
                           A  9907    
                           A  9908    ;**************************** _processInstructi
                           A  9909    ;Name                         Addr/Register   S
                           A  9910    ;_message                            IMPORT  un
                           A  9911    ;_error                              IMPORT  --
                           A  9912    ;_operand2                           IMPORT    
                           A  9913    ;_operand1                           IMPORT    
                           A  9914    ;_permittype_matchlist               IMPORT  un
                           A  9915    ;_address                            IMPORT    
                           A  9916    ;_pass                               IMPORT    
                           A  9917    ;_currentline                        IMPORT    
                           A  9918    ;_isEmpty                            IMPORT  --
                           A  9919    ;match                                 IX-5    
                           A  9920    ;listitem                              IX-4    
                           A  9921    ;list                                  IX-3    
                           A  9922    
                           A  9923    
                           A  9924    ; Stack Frame Size: 11 (bytes)
                           A  9925    ;       Spill Code: 0 (instruction)
                           A  9926    
                           A  9927    
                           A  9928    .ENDFUNC "processInstructions",1277,"_processIn
                           A  9929    ; 1278	
                           A  9930    ; 1279	void passInitialize(uint8_t passnumber)
042A3D                     A  9931    _passInitialize:
                           A  9932    .DEFINE "_passInitialize"
                           A  9933    
                           A  9934    .VALUE _passInitialize
                           A  9935    
                           A  9936    .CLASS 2
                           A  9937    
                           A  9938    .TYPE 65
                           A  9939    
                           A  9940    .ENDEF
                           A  9941    
                           A  9942    .BEGFUNC "passInitialize",1279,"_passInitialize
                           A  9943    
                           A  9944    .LINE 1279
                           A  9945    
                           A  9946    .DEFINE "passnumber"
                           A  9947    
                           A  9948    .CLASS 65
                           A  9949    
                           A  9950    .VALUE 6
                           A  9951    
                           A  9952    .TYPE 12
                           A  9953    
                           A  9954    .ENDEF
                           A  9955    
042A3D DDE5                A  9956    	PUSH	IX
042A3F DD210000 00         A  9957    	LD	IX,0
042A44 DD39                A  9958    	ADD	IX,SP
                           A  9959    ; 1280	    pass = passnumber;
                           A  9960    .LINE 1280
                           A  9961    
042A46 DD7E06              A  9962    	LD	A,(IX+%6)
042A49 B7ED62              A  9963    	UEXT	HL
042A4C 6F                  A  9964    	LD	L,A
042A4D 22 53 87 04         A  9965    	LD	(_pass),HL
                           A  9966    ; 1281	    adlmode = true;
                           A  9967    .LINE 1281
                           A  9968    
042A51 3E01                A  9969    	LD	A,%1
042A53 32 5E 87 04         A  9970    	LD	(_adlmode),A
                           A  9971    ; 1282	    linenumber = 0;
                           A  9972    .LINE 1282
                           A  9973    
042A57 01000000            A  9974    	LD	BC,0
042A5B ED43 50 87 04       A  9975    	LD	(_linenumber),BC
                           A  9976    ; 1283	    address = START_ADDRESS;
                           A  9977    .LINE 1283
                           A  9978    
042A60 ED43 56 87 04       A  9979    	LD	(_address),BC
                           A  9980    ; 1284	    totalsize = 0;
                           A  9981    .LINE 1284
                           A  9982    
042A65 ED43 59 87 04       A  9983    	LD	(_totalsize),BC
                           A  9984    ; 1285	    
                           A  9985    ; 1286	    // init the file stack and push the
                           A  9986    ; 1287	    filestackInit();
                           A  9987    .LINE 1287
                           A  9988    
042A6A CD F8 2C 04         A  9989    	CALL	_filestackInit
                           A  9990    ; 1288	}
                           A  9991    .LINE 1288
                           A  9992    
042A6E DDF9                A  9993    	LD	SP,IX
042A70 DDE1                A  9994    	POP	IX
042A72 C9                  A  9995    	RET	
                           A  9996    
                           A  9997    
                           A  9998    ;**************************** _passInitialize *
                           A  9999    ;Name                         Addr/Register   S
                           A 10000    ;_filestackInit                      IMPORT  --
                           A 10001    ;_totalsize                          IMPORT    
                           A 10002    ;_address                            IMPORT    
                           A 10003    ;_linenumber                         IMPORT    
                           A 10004    ;_adlmode                            IMPORT    
                           A 10005    ;_pass                               IMPORT    
                           A 10006    ;passnumber                            IX+6    
                           A 10007    
                           A 10008    
                           A 10009    ; Stack Frame Size: 9 (bytes)
                           A 10010    ;       Spill Code: 0 (instruction)
                           A 10011    
                           A 10012    
                           A 10013    .ENDFUNC "passInitialize",1288,"_passInitialize
                           A 10014    ; 1289	
                           A 10015    ; 1290	// Assembler directives may demand a la
                           A 10016    ; 1291	void processDelayedLineNumberReset(void
042A73                     A 10017    _processDelayedLineNumberReset:
                           A 10018    .DEFINE "_processDelayedLineNumberReset"
                           A 10019    
                           A 10020    .VALUE _processDelayedLineNumberReset
                           A 10021    
                           A 10022    .CLASS 2
                           A 10023    
                           A 10024    .TYPE 65
                           A 10025    
                           A 10026    .ENDEF
                           A 10027    
                           A 10028    .BEGFUNC "processDelayedLineNumberReset",1291,"
                           A 10029    
042A73 DDE5                A 10030    	PUSH	IX
042A75 DD210000 00         A 10031    	LD	IX,0
042A7A DD39                A 10032    	ADD	IX,SP
                           A 10033    ; 1292	    if(lineNumberNeedsReset) {
                           A 10034    .LINE 1292
                           A 10035    
042A7C 3A 4F 87 04         A 10036    	LD	A,(_lineNumberNeedsReset)
042A80 B7                  A 10037    	OR	A,A
042A81 28 0E               A 10038    	JR	Z,L_643
                           A 10039    ; 1293	        lineNumberNeedsReset = false;
                           A 10040    .LINE 1293
                           A 10041    
042A83 AF                  A 10042    	XOR	A,A
042A84 32 4F 87 04         A 10043    	LD	(_lineNumberNeedsReset),A
                           A 10044    ; 1294	        linenumber = 0;
                           A 10045    .LINE 1294
                           A 10046    
042A88 01000000            A 10047    	LD	BC,0
042A8C ED43 50 87 04       A 10048    	LD	(_linenumber),BC
                           A 10049    ; 1295	    }
                           A 10050    ; 1296	}
042A91                     A 10051    L_643:
                           A 10052    .LINE 1296
                           A 10053    
042A91 DDF9                A 10054    	LD	SP,IX
042A93 DDE1                A 10055    	POP	IX
042A95 C9                  A 10056    	RET	
                           A 10057    
                           A 10058    
                           A 10059    ;**************************** _processDelayedLi
                           A 10060    ;Name                         Addr/Register   S
                           A 10061    ;_linenumber                         IMPORT    
                           A 10062    ;_lineNumberNeedsReset               IMPORT    
                           A 10063    
                           A 10064    
                           A 10065    ; Stack Frame Size: 6 (bytes)
                           A 10066    ;       Spill Code: 0 (instruction)
                           A 10067    
                           A 10068    
                           A 10069    .ENDFUNC "processDelayedLineNumberReset",1296,"
                           A 10070    ; 1297	
                           A 10071    ; 1298	bool assemble(void){
042A96                     A 10072    _assemble:
                           A 10073    .DEFINE "_assemble"
                           A 10074    
                           A 10075    .VALUE _assemble
                           A 10076    
                           A 10077    .CLASS 2
                           A 10078    
                           A 10079    .TYPE 76
                           A 10080    
                           A 10081    .ENDEF
                           A 10082    
                           A 10083    .BEGFUNC "assemble",1298,"_assemble"
                           A 10084    
                           A 10085    .LINE 1298
                           A 10086    
                           A 10087    .DEFINE "incfiles"
                           A 10088    
                           A 10089    .CLASS 65
                           A 10090    
                           A 10091    .VALUE -1
                           A 10092    
                           A 10093    .TYPE 12
                           A 10094    
                           A 10095    .ENDEF
                           A 10096    
                           A 10097    .DEFINE "fsitem"
                           A 10098    
                           A 10099    .CLASS 65
                           A 10100    
                           A 10101    .VALUE -68
                           A 10102    
                           A 10103    .TAG "NONAME12"
                           A 10104    
                           A 10105    .TYPE 8
                           A 10106    
                           A 10107    .ENDEF
                           A 10108    
                           A 10109    .DEFINE "line"
                           A 10110    
                           A 10111    .CLASS 65
                           A 10112    
                           A 10113    .VALUE -196
                           A 10114    
                           A 10115    .DIM 128
                           A 10116    
                           A 10117    .TYPE 98
                           A 10118    
                           A 10119    .ENDEF
                           A 10120    
042A96 DDE5                A 10121    	PUSH	IX
042A98 DD210000 00         A 10122    	LD	IX,0
042A9D DD39                A 10123    	ADD	IX,SP
042A9F 213CFFFF            A 10124    	LD	HL,-196
042AA3 39                  A 10125    	ADD	HL,SP
042AA4 F9                  A 10126    	LD	SP,HL
                           A 10127    ; 1299	    char line[LINEMAX];
                           A 10128    ; 1300	    filestackitem fsitem;
                           A 10129    ; 1301	    bool incfiles;
                           A 10130    ; 1302	
                           A 10131    ; 1303	    global_errors = 0;
                           A 10132    .LINE 1303
                           A 10133    
042AA5 21 5C 87 04         A 10134    	LD	HL,_global_errors
042AA9 3600                A 10135    	LD	(HL),%0
042AAB 23                  A 10136    	INC	HL
042AAC 3600                A 10137    	LD	(HL),%0
                           A 10138    ; 1304	
                           A 10139    ; 1305	    filehandle[FILE_CURRENT] = filehand
                           A 10140    .LINE 1305
                           A 10141    
042AAE 21 47 87 04         A 10142    	LD	HL,_filehandle
042AB2 23                  A 10143    	INC	HL
042AB3 7E                  A 10144    	LD	A,(HL)
042AB4 32 47 87 04         A 10145    	LD	(_filehandle),A
                           A 10146    ; 1306	    strcpy(filename[FILE_CURRENT], file
                           A 10147    .LINE 1306
                           A 10148    
042AB8 01 07 86 04         A 10149    	LD	BC,_filename+64
042ABC C5                  A 10150    	PUSH	BC
042ABD 01 C7 85 04         A 10151    	LD	BC,_filename
042AC1 C5                  A 10152    	PUSH	BC
042AC2 CD 09 61 04         A 10153    	CALL	_strcpy
042AC6 C1                  A 10154    	POP	BC
042AC7 C1                  A 10155    	POP	BC
                           A 10156    ; 1307	
                           A 10157    ; 1308	    // Assemble in two passes
                           A 10158    ; 1309	    // Pass 1
                           A 10159    ; 1310	    printf("Pass 1...\n\r");
                           A 10160    .LINE 1310
                           A 10161    
042AC8 01 D0 59 04         A 10162    	LD	BC,___print_uputch
042ACC ED43 F0 7E 04       A 10163    	LD	(___print_xputch),BC
042AD1 01 B8 7F 04         A 10164    	LD	BC,L__287
042AD5 C5                  A 10165    	PUSH	BC
042AD6 CD 1D 58 04         A 10166    	CALL	___print_sendstring
042ADA C1                  A 10167    	POP	BC
                           A 10168    ; 1311	    passInitialize(1);
                           A 10169    .LINE 1311
                           A 10170    
042ADB 01010000            A 10171    	LD	BC,1
042ADF C5                  A 10172    	PUSH	BC
042AE0 CD 3D 2A 04         A 10173    	CALL	_passInitialize
042AE4 C1                  A 10174    	POP	BC
                           A 10175    ; 1312	    do {
                           A 10176    ; 1313	        while (agon_fgets(line, sizeof(
                           A 10177    .LINE 1313
                           A 10178    
042AE5 18 23               A 10179    	JR	L_645
042AE7                     A 10180    L_646:
                           A 10181    ; 1314	            linenumber++;
                           A 10182    .LINE 1314
                           A 10183    
042AE7 ED4B 50 87 04       A 10184    	LD	BC,(_linenumber)
042AEC 03                  A 10185    	INC	BC
042AED ED43 50 87 04       A 10186    	LD	(_linenumber),BC
                           A 10187    ; 1315	            parseLine(line);
                           A 10188    .LINE 1315
                           A 10189    
042AF2 DDE5E1              A 10190    	LD	HL,IX
042AF5 013CFFFF            A 10191    	LD	BC,-196
042AF9 09                  A 10192    	ADD	HL,BC
042AFA E5C1                A 10193    	LD	BC,HL
042AFC C5                  A 10194    	PUSH	BC
042AFD CD 1C 0E 04         A 10195    	CALL	_parseLine
042B01 C1                  A 10196    	POP	BC
                           A 10197    ; 1316	            processInstructions();
                           A 10198    .LINE 1316
                           A 10199    
042B02 CD 4B 29 04         A 10200    	CALL	_processInstructions
                           A 10201    ; 1317	            processDelayedLineNumberRes
                           A 10202    .LINE 1317
                           A 10203    
042B06 CD 73 2A 04         A 10204    	CALL	_processDelayedLineNumberReset
                           A 10205    ; 1318	
                           A 10206    ; 1319	            //printLocalLabelTable();
                           A 10207    ; 1320	
                           A 10208    ; 1321	        }
042B0A                     A 10209    L_645:
                           A 10210    .LINE 1321
                           A 10211    
042B0A 01000000            A 10212    	LD	BC,0
042B0E C5                  A 10213    	PUSH	BC
042B0F 01800000            A 10214    	LD	BC,128
042B13 C5                  A 10215    	PUSH	BC
042B14 DDE5E1              A 10216    	LD	HL,IX
042B17 013CFFFF            A 10217    	LD	BC,-196
042B1B 09                  A 10218    	ADD	HL,BC
042B1C E5C1                A 10219    	LD	BC,HL
042B1E C5                  A 10220    	PUSH	BC
042B1F CD 69 54 04         A 10221    	CALL	_agon_fgets
042B23 C1                  A 10222    	POP	BC
042B24 C1                  A 10223    	POP	BC
042B25 C1                  A 10224    	POP	BC
042B26 CD C5 5D 04         A 10225    	CALL	__icmpzero
042B2A 20 BB               A 10226    	JR	NZ,L_646
                           A 10227    ; 1322	        if(filestackCount()) {
                           A 10228    .LINE 1322
                           A 10229    
042B2C CD 0B 2D 04         A 10230    	CALL	_filestackCount
042B30 B7                  A 10231    	OR	A,A
042B31 28 3A               A 10232    	JR	Z,L_648
                           A 10233    ; 1323	            mos_fclose(filehandle[FILE_
                           A 10234    .LINE 1323
                           A 10235    
042B33 3A 47 87 04         A 10236    	LD	A,(_filehandle)
042B37 4F                  A 10237    	LD	C,A
042B38 0600                A 10238    	LD	B,%0
042B3A C5                  A 10239    	PUSH	BC
042B3B CD BB 03 04         A 10240    	CALL	_mos_fclose
042B3F C1                  A 10241    	POP	BC
                           A 10242    ; 1324	            incfiles = filestackPop(&fs
                           A 10243    .LINE 1324
                           A 10244    
042B40 ED65BC              A 10245    	PEA	IX+%FFFFFFBC
042B43 CD A4 2D 04         A 10246    	CALL	_filestackPop
042B47 C1                  A 10247    	POP	BC
042B48 DD77FF              A 10248    	LD	(IX+%FFFFFFFF),A
                           A 10249    ; 1325	            linenumber = fsitem.linenum
                           A 10250    .LINE 1325
                           A 10251    
042B4B DD07BC              A 10252    	LD	BC,(IX+%FFFFFFBC)
042B4E CD CA 59 04         A 10253    	CALL	__stoiu
042B52 22 50 87 04         A 10254    	LD	(_linenumber),HL
                           A 10255    ; 1326	            filehandle[FILE_CURRENT] = 
                           A 10256    .LINE 1326
                           A 10257    
042B56 DD7EBE              A 10258    	LD	A,(IX+%FFFFFFBE)
042B59 32 47 87 04         A 10259    	LD	(_filehandle),A
                           A 10260    ; 1327	            strcpy(filename[FILE_CURREN
                           A 10261    .LINE 1327
                           A 10262    
042B5D ED65BF              A 10263    	PEA	IX+%FFFFFFBF
042B60 01 C7 85 04         A 10264    	LD	BC,_filename
042B64 C5                  A 10265    	PUSH	BC
042B65 CD 09 61 04         A 10266    	CALL	_strcpy
042B69 C1                  A 10267    	POP	BC
042B6A C1                  A 10268    	POP	BC
                           A 10269    ; 1328	        }
                           A 10270    ; 1329	        else incfiles = false;
                           A 10271    .LINE 1329
                           A 10272    
042B6B 18 04               A 10273    	JR	L_651
042B6D                     A 10274    L_648:
042B6D DD36FF00            A 10275    	LD	(IX+%FFFFFFFF),%0
                           A 10276    ; 1330	    }
                           A 10277    ; 1331	    while(incfiles);
042B71                     A 10278    L_651:
                           A 10279    .LINE 1331
                           A 10280    
042B71 DD7EFF              A 10281    	LD	A,(IX+%FFFFFFFF)
042B74 B7                  A 10282    	OR	A,A
042B75 20 93               A 10283    	JR	NZ,L_645
                           A 10284    ; 1332	    writeLocalLabels();
                           A 10285    .LINE 1332
                           A 10286    
042B77 CD D0 3A 04         A 10287    	CALL	_writeLocalLabels
                           A 10288    ; 1333	    if(global_errors) return false;
                           A 10289    .LINE 1333
                           A 10290    
042B7B 2A 5C 87 04         A 10291    	LD	HL,(_global_errors)
042B7F CD 35 61 04         A 10292    	CALL	__scmpzero
042B83 28 05               A 10293    	JR	Z,L_654
042B85 AF                  A 10294    	XOR	A,A
042B86 C3 F3 2C 04         A 10295    	JR	L_664
042B8A                     A 10296    L_654:
                           A 10297    ; 1334	
                           A 10298    ; 1335	    printf("%d lines\n\r", linenumber);
                           A 10299    .LINE 1335
                           A 10300    
042B8A 01 D0 59 04         A 10301    	LD	BC,___print_uputch
042B8E ED43 F0 7E 04       A 10302    	LD	(___print_xputch),BC
042B93 ED4B 50 87 04       A 10303    	LD	BC,(_linenumber)
042B98 AF                  A 10304    	XOR	A,A
042B99 C5D1                A 10305    	LD	DE,BC
042B9B 4F                  A 10306    	LD	C,A
042B9C 0600                A 10307    	LD	B,%0
042B9E C5                  A 10308    	PUSH	BC
042B9F D5                  A 10309    	PUSH	DE
042BA0 CD 96 5A 04         A 10310    	CALL	__u_itoa
042BA4 C1                  A 10311    	POP	BC
042BA5 C1                  A 10312    	POP	BC
042BA6 01 C4 7F 04         A 10313    	LD	BC,L__292
042BAA C5                  A 10314    	PUSH	BC
042BAB CD 1D 58 04         A 10315    	CALL	___print_sendstring
042BAF C1                  A 10316    	POP	BC
                           A 10317    ; 1336	    printf("%d labels\n\r", getGlobalLa
                           A 10318    .LINE 1336
                           A 10319    
042BB0 01 D0 59 04         A 10320    	LD	BC,___print_uputch
042BB4 ED43 F0 7E 04       A 10321    	LD	(___print_xputch),BC
042BB9 CD E2 38 04         A 10322    	CALL	_getGlobalLabelCount
042BBD E5C1                A 10323    	LD	BC,HL
042BBF CD CA 59 04         A 10324    	CALL	__stoiu
042BC3 E5C1                A 10325    	LD	BC,HL
042BC5 CD B0 60 04         A 10326    	CALL	__itol
042BC9 C5D1                A 10327    	LD	DE,BC
042BCB 4F                  A 10328    	LD	C,A
042BCC 0600                A 10329    	LD	B,%0
042BCE C5                  A 10330    	PUSH	BC
042BCF D5                  A 10331    	PUSH	DE
042BD0 CD 96 5A 04         A 10332    	CALL	__u_itoa
042BD4 C1                  A 10333    	POP	BC
042BD5 C1                  A 10334    	POP	BC
042BD6 01 CD 7F 04         A 10335    	LD	BC,L__293
042BDA C5                  A 10336    	PUSH	BC
042BDB CD 1D 58 04         A 10337    	CALL	___print_sendstring
042BDF C1                  A 10338    	POP	BC
                           A 10339    ; 1337	
                           A 10340    ; 1338	    // Pass 2
                           A 10341    ; 1339	    printf("Pass 2...\n\r");
                           A 10342    .LINE 1339
                           A 10343    
042BE0 01 D0 59 04         A 10344    	LD	BC,___print_uputch
042BE4 ED43 F0 7E 04       A 10345    	LD	(___print_xputch),BC
042BE9 01 D7 7F 04         A 10346    	LD	BC,L__294
042BED C5                  A 10347    	PUSH	BC
042BEE CD 1D 58 04         A 10348    	CALL	___print_sendstring
042BF2 C1                  A 10349    	POP	BC
                           A 10350    ; 1340	    //rewind(filehandle[FILE_INPUT]);
                           A 10351    ; 1341	    reOpenFile(FILE_INPUT, fa_read);
                           A 10352    .LINE 1341
                           A 10353    
042BF3 01010000            A 10354    	LD	BC,1
042BF7 C5                  A 10355    	PUSH	BC
042BF8 C5                  A 10356    	PUSH	BC
042BF9 CD 50 51 04         A 10357    	CALL	_reOpenFile
042BFD C1                  A 10358    	POP	BC
042BFE C1                  A 10359    	POP	BC
                           A 10360    ; 1342	    //rewind(filehandle[FILE_LOCAL_LABE
                           A 10361    ; 1343	    reOpenFile(FILE_LOCAL_LABELS, fa_re
                           A 10362    .LINE 1343
                           A 10363    
042BFF 01010000            A 10364    	LD	BC,1
042C03 C5                  A 10365    	PUSH	BC
042C04 01030000            A 10366    	LD	BC,3
042C08 C5                  A 10367    	PUSH	BC
042C09 CD 50 51 04         A 10368    	CALL	_reOpenFile
042C0D C1                  A 10369    	POP	BC
042C0E C1                  A 10370    	POP	BC
                           A 10371    ; 1344	    //rewind(filehandle[FILE_ANONYMOUS_
                           A 10372    ; 1345	    reOpenFile(FILE_ANONYMOUS_LABELS, f
                           A 10373    .LINE 1345
                           A 10374    
042C0F 01010000            A 10375    	LD	BC,1
042C13 C5                  A 10376    	PUSH	BC
042C14 01040000            A 10377    	LD	BC,4
042C18 C5                  A 10378    	PUSH	BC
042C19 CD 50 51 04         A 10379    	CALL	_reOpenFile
042C1D C1                  A 10380    	POP	BC
042C1E C1                  A 10381    	POP	BC
                           A 10382    ; 1346	    passInitialize(2);
                           A 10383    .LINE 1346
                           A 10384    
042C1F 01020000            A 10385    	LD	BC,2
042C23 C5                  A 10386    	PUSH	BC
042C24 CD 3D 2A 04         A 10387    	CALL	_passInitialize
042C28 C1                  A 10388    	POP	BC
                           A 10389    ; 1347	    listInit(consolelist_enabled);
                           A 10390    .LINE 1347
                           A 10391    
042C29 3A 4E 87 04         A 10392    	LD	A,(_consolelist_enabled)
042C2D 4F                  A 10393    	LD	C,A
042C2E 0600                A 10394    	LD	B,%0
042C30 C5                  A 10395    	PUSH	BC
042C31 CD 44 42 04         A 10396    	CALL	_listInit
042C35 C1                  A 10397    	POP	BC
                           A 10398    ; 1348	    readLocalLabels();
                           A 10399    .LINE 1348
                           A 10400    
042C36 CD F0 3B 04         A 10401    	CALL	_readLocalLabels
                           A 10402    ; 1349	    readAnonymousLabel();
                           A 10403    .LINE 1349
                           A 10404    
042C3A CD 20 3D 04         A 10405    	CALL	_readAnonymousLabel
                           A 10406    ; 1350	    do {
                           A 10407    ; 1351	        while (agon_fgets(line, sizeof(
                           A 10408    .LINE 1351
                           A 10409    
042C3E 18 44               A 10410    	JR	L_656
042C40                     A 10411    L_657:
                           A 10412    ; 1352	            linenumber++;
                           A 10413    .LINE 1352
                           A 10414    
042C40 ED4B 50 87 04       A 10415    	LD	BC,(_linenumber)
042C45 03                  A 10416    	INC	BC
042C46 ED43 50 87 04       A 10417    	LD	(_linenumber),BC
                           A 10418    ; 1353	            listStartLine(line);
                           A 10419    .LINE 1353
                           A 10420    
042C4B DDE5E1              A 10421    	LD	HL,IX
042C4E 013CFFFF            A 10422    	LD	BC,-196
042C52 09                  A 10423    	ADD	HL,BC
042C53 E5C1                A 10424    	LD	BC,HL
042C55 C5                  A 10425    	PUSH	BC
042C56 CD B0 42 04         A 10426    	CALL	_listStartLine
042C5A C1                  A 10427    	POP	BC
                           A 10428    ; 1354	            parseLine(line);
                           A 10429    .LINE 1354
                           A 10430    
042C5B DDE5E1              A 10431    	LD	HL,IX
042C5E 013CFFFF            A 10432    	LD	BC,-196
042C62 09                  A 10433    	ADD	HL,BC
042C63 E5C1                A 10434    	LD	BC,HL
042C65 C5                  A 10435    	PUSH	BC
042C66 CD 1C 0E 04         A 10436    	CALL	_parseLine
042C6A C1                  A 10437    	POP	BC
                           A 10438    ; 1355	            refreshlocalLabels();
                           A 10439    .LINE 1355
                           A 10440    
042C6B CD B6 12 04         A 10441    	CALL	_refreshlocalLabels
                           A 10442    ; 1356	            processInstructions();
                           A 10443    .LINE 1356
                           A 10444    
042C6F CD 4B 29 04         A 10445    	CALL	_processInstructions
                           A 10446    ; 1357	            listEndLine(consolelist_ena
                           A 10447    .LINE 1357
                           A 10448    
042C73 3A 4E 87 04         A 10449    	LD	A,(_consolelist_enabled)
042C77 4F                  A 10450    	LD	C,A
042C78 0600                A 10451    	LD	B,%0
042C7A C5                  A 10452    	PUSH	BC
042C7B CD E6 42 04         A 10453    	CALL	_listEndLine
042C7F C1                  A 10454    	POP	BC
                           A 10455    ; 1358	            processDelayedLineNumberRes
                           A 10456    .LINE 1358
                           A 10457    
042C80 CD 73 2A 04         A 10458    	CALL	_processDelayedLineNumberReset
                           A 10459    ; 1359	
                           A 10460    ; 1360	            //printLocalLabelTable();
                           A 10461    ; 1361	        }
042C84                     A 10462    L_656:
                           A 10463    .LINE 1361
                           A 10464    
042C84 01000000            A 10465    	LD	BC,0
042C88 C5                  A 10466    	PUSH	BC
042C89 01800000            A 10467    	LD	BC,128
042C8D C5                  A 10468    	PUSH	BC
042C8E DDE5E1              A 10469    	LD	HL,IX
042C91 013CFFFF            A 10470    	LD	BC,-196
042C95 09                  A 10471    	ADD	HL,BC
042C96 E5C1                A 10472    	LD	BC,HL
042C98 C5                  A 10473    	PUSH	BC
042C99 CD 69 54 04         A 10474    	CALL	_agon_fgets
042C9D C1                  A 10475    	POP	BC
042C9E C1                  A 10476    	POP	BC
042C9F C1                  A 10477    	POP	BC
042CA0 CD C5 5D 04         A 10478    	CALL	__icmpzero
042CA4 20 9A               A 10479    	JR	NZ,L_657
                           A 10480    ; 1362	        if(filestackCount()) {
                           A 10481    .LINE 1362
                           A 10482    
042CA6 CD 0B 2D 04         A 10483    	CALL	_filestackCount
042CAA B7                  A 10484    	OR	A,A
042CAB 28 3A               A 10485    	JR	Z,L_659
                           A 10486    ; 1363	            mos_fclose(filehandle[FILE_
                           A 10487    .LINE 1363
                           A 10488    
042CAD 3A 47 87 04         A 10489    	LD	A,(_filehandle)
042CB1 4F                  A 10490    	LD	C,A
042CB2 0600                A 10491    	LD	B,%0
042CB4 C5                  A 10492    	PUSH	BC
042CB5 CD BB 03 04         A 10493    	CALL	_mos_fclose
042CB9 C1                  A 10494    	POP	BC
                           A 10495    ; 1364	            incfiles = filestackPop(&fs
                           A 10496    .LINE 1364
                           A 10497    
042CBA ED65BC              A 10498    	PEA	IX+%FFFFFFBC
042CBD CD A4 2D 04         A 10499    	CALL	_filestackPop
042CC1 C1                  A 10500    	POP	BC
042CC2 DD77FF              A 10501    	LD	(IX+%FFFFFFFF),A
                           A 10502    ; 1365	            linenumber = fsitem.linenum
                           A 10503    .LINE 1365
                           A 10504    
042CC5 DD07BC              A 10505    	LD	BC,(IX+%FFFFFFBC)
042CC8 CD CA 59 04         A 10506    	CALL	__stoiu
042CCC 22 50 87 04         A 10507    	LD	(_linenumber),HL
                           A 10508    ; 1366	            filehandle[FILE_CURRENT] = 
                           A 10509    .LINE 1366
                           A 10510    
042CD0 DD7EBE              A 10511    	LD	A,(IX+%FFFFFFBE)
042CD3 32 47 87 04         A 10512    	LD	(_filehandle),A
                           A 10513    ; 1367	            strcpy(filename[FILE_CURREN
                           A 10514    .LINE 1367
                           A 10515    
042CD7 ED65BF              A 10516    	PEA	IX+%FFFFFFBF
042CDA 01 C7 85 04         A 10517    	LD	BC,_filename
042CDE C5                  A 10518    	PUSH	BC
042CDF CD 09 61 04         A 10519    	CALL	_strcpy
042CE3 C1                  A 10520    	POP	BC
042CE4 C1                  A 10521    	POP	BC
                           A 10522    ; 1368	        }
                           A 10523    ; 1369	        else incfiles = false;
                           A 10524    .LINE 1369
                           A 10525    
042CE5 18 04               A 10526    	JR	L_662
042CE7                     A 10527    L_659:
042CE7 DD36FF00            A 10528    	LD	(IX+%FFFFFFFF),%0
                           A 10529    ; 1370	    }
                           A 10530    ; 1371	    while(incfiles);
042CEB                     A 10531    L_662:
                           A 10532    .LINE 1371
                           A 10533    
042CEB DD7EFF              A 10534    	LD	A,(IX+%FFFFFFFF)
042CEE B7                  A 10535    	OR	A,A
042CEF 20 93               A 10536    	JR	NZ,L_656
                           A 10537    ; 1372	    return true;
                           A 10538    .LINE 1372
                           A 10539    
042CF1 3E01                A 10540    	LD	A,%1
                           A 10541    ; 1373	}
042CF3                     A 10542    L_664:
                           A 10543    .LINE 1373
                           A 10544    
042CF3 DDF9                A 10545    	LD	SP,IX
042CF5 DDE1                A 10546    	POP	IX
042CF7 C9                  A 10547    	RET	
                           A 10548    
                           A 10549    
                           A 10550    ;**************************** _assemble *******
                           A 10551    ;Name                         Addr/Register   S
                           A 10552    ;_listEndLine                        IMPORT  --
                           A 10553    ;_listStartLine                      IMPORT  --
                           A 10554    ;_readAnonymousLabel                 IMPORT  --
                           A 10555    ;_readLocalLabels                    IMPORT  --
                           A 10556    ;_consolelist_enabled                IMPORT    
                           A 10557    ;_listInit                           IMPORT  --
                           A 10558    ;_reOpenFile                         IMPORT  --
                           A 10559    ;_getGlobalLabelCount                IMPORT  --
                           A 10560    ;__u_itoa                            IMPORT  --
                           A 10561    ;_writeLocalLabels                   IMPORT  --
                           A 10562    ;_filestackPop                       IMPORT  --
                           A 10563    ;_mos_fclose                         IMPORT  --
                           A 10564    ;_filestackCount                     IMPORT  --
                           A 10565    ;_agon_fgets                         IMPORT  --
                           A 10566    ;_linenumber                         IMPORT    
                           A 10567    ;___print_sendstring                 IMPORT  --
                           A 10568    ;___print_xputch                     IMPORT    
                           A 10569    ;___print_uputch                     IMPORT  --
                           A 10570    ;_filename                           IMPORT    
                           A 10571    ;_strcpy                             IMPORT  --
                           A 10572    ;_filehandle                         IMPORT    
                           A 10573    ;_global_errors                      IMPORT    
                           A 10574    ;line                                IX-196    
                           A 10575    ;fsitem                               IX-68    
                           A 10576    ;incfiles                              IX-1    
                           A 10577    
                           A 10578    
                           A 10579    ; Stack Frame Size: 202 (bytes)
                           A 10580    ;       Spill Code: 0 (instruction)
                           A 10581    
                           A 10582    
                           A 10583    .ENDFUNC "assemble",1373,"_assemble"
                           A 10584    	SEGMENT STRSECT
047FB8                     A 10585    L__287:
047FB8 50617373 20312E2E   A 10586    	DB	"Pass 1..."
047FC0 2E 
047FC1 0A0D00              A 10587    	DB	10,13,0
047FC4                     A 10588    L__292:
047FC4 206C696E 6573       A 10589    	DB	" lines"
047FCA 0A0D00              A 10590    	DB	10,13,0
047FCD                     A 10591    L__293:
047FCD 206C6162 656C73     A 10592    	DB	" labels"
047FD4 0A0D00              A 10593    	DB	10,13,0
047FD7                     A 10594    L__294:
047FD7 50617373 20322E2E   A 10595    	DB	"Pass 2..."
047FDF 2E 
047FE0 0A0D00              A 10596    	DB	10,13,0
                           A 10597    	XREF _mos_fclose:ROM
                           A 10598    	XREF _mos_fopen:ROM
                           A 10599    	XREF _filestackPop:ROM
                           A 10600    	XREF _filestackPush:ROM
                           A 10601    	XREF _filestackCount:ROM
                           A 10602    	XREF _filestackInit:ROM
                           A 10603    	XREF _listEmit8bit:ROM
                           A 10604    	XREF _listEndLine:ROM
                           A 10605    	XREF _listStartLine:ROM
                           A 10606    	XREF _listInit:ROM
                           A 10607    	XREF _err_str2num:ROM
                           A 10608    	XREF _str2num:ROM
                           A 10609    	XREF _strcasecmp:ROM
                           A 10610    	XREF _agon_fwrite:ROM
                           A 10611    	XREF _agon_fgets:ROM
                           A 10612    	XREF _reOpenFile:ROM
                           A 10613    	XREF _getOperatorToken:ROM
                           A 10614    	XREF _getLineToken:ROM
                           A 10615    	XREF _split_suffix:ROM
                           A 10616    	XREF _notEmpty:ROM
                           A 10617    	XREF _isEmpty:ROM
                           A 10618    	XREF _error:ROM
                           A 10619    	XREF _message:ROM
                           A 10620    	XREF _output:ROM
                           A 10621    	XREF _operand2:ROM
                           A 10622    	XREF _operand1:ROM
                           A 10623    	XREF _currentline:ROM
                           A 10624    	XREF _adlmode:ROM
                           A 10625    	XREF _global_errors:ROM
                           A 10626    	XREF _totalsize:ROM
                           A 10627    	XREF _address:ROM
                           A 10628    	XREF _pass:ROM
                           A 10629    	XREF _linenumber:ROM
                           A 10630    	XREF _filehandle:ROM
                           A 10631    	XREF _filename:ROM
                           A 10632    	XREF _lineNumberNeedsReset:ROM
                           A 10633    	XREF _consolelist_enabled:ROM
                           A 10634    	XREF _getGlobalLabelCount:ROM
                           A 10635    	XREF _readAnonymousLabel:ROM
                           A 10636    	XREF _writeAnonymousLabel:ROM
                           A 10637    	XREF _readLocalLabels:ROM
                           A 10638    	XREF _writeLocalLabels:ROM
                           A 10639    	XREF _clearLocalLabels:ROM
                           A 10640    	XREF _insertLocalLabel:ROM
                           A 10641    	XREF _insertGlobalLabel:ROM
                           A 10642    	XREF _findLabel:ROM
                           A 10643    	XREF _permittype_matchlist:ROM
                           A 10644    	XREF _instruction_table_lookup:ROM
                           A 10645    	XREF _tolower:ROM
                           A 10646    	XREF _isspace:ROM
                           A 10647    	XREF _isdigit:ROM
                           A 10648    	XREF _strlen:ROM
                           A 10649    	XREF _strcmp:ROM
                           A 10650    	XREF _strcpy:ROM
                           A 10651    	XREF __u_itoa:ROM
                           A 10652    	XREF ___print_sendstring:ROM
                           A 10653    	XREF ___print_xputch:ROM
                           A 10654    	XREF ___print_uputch:ROM
                           A 10655    	XREF __indcall:ROM
                           A 10656    	XREF __sneg:ROM
                           A 10657    	XREF __inot:ROM
                           A 10658    	XREF __iand:ROM
                           A 10659    	XREF __ishrs:ROM
                           A 10660    	XREF __lshru:ROM
                           A 10661    	XREF __ishl:ROM
                           A 10662    	XREF __stoiu:ROM
                           A 10663    	XREF __itol:ROM
                           A 10664    	XREF __setflag:ROM
                           A 10665    	XREF __scmpzero:ROM
                           A 10666    	XREF __icmpzero:ROM
                           A 10667    	XREF __case8D:ROM
                           A 10668    	XREF __seqcaseD:ROM
                           A 10669    	XREF __ishru_b:ROM
                           A 10670    	XREF __ishrs_b:ROM
                           A 10671    	XDEF _assemble
                           A 10672    	XDEF _processDelayedLineNumberReset
                           A 10673    	XDEF _passInitialize
                           A 10674    	XDEF _processInstructions
                           A 10675    	XDEF _handle_assembler_command
                           A 10676    	XDEF _handle_asm_align
                           A 10677    	XDEF _handle_asm_blk
                           A 10678    	XDEF _handle_asm_include
                           A 10679    	XDEF _handle_asm_org
                           A 10680    	XDEF _handle_asm_adl
                           A 10681    	XDEF _handle_asm_equ
                           A 10682    	XDEF _handle_asm_dw
                           A 10683    	XDEF _handle_asm_db
                           A 10684    	XDEF _parse_asm_keyval_pair
                           A 10685    	XDEF _parse_asm_single_immediate
                           A 10686    	XDEF _emit_quotedstring
                           A 10687    	XDEF _get_escaped_char
                           A 10688    	XDEF _emit_32bit
                           A 10689    	XDEF _emit_24bit
                           A 10690    	XDEF _emit_16bit
                           A 10691    	XDEF _emit_8bit
                           A 10692    	XDEF _emit_instruction
                           A 10693    	XDEF _transform_instruction
                           A 10694    	XDEF _prefix_ddfd_suffix
                           A 10695    	XDEF _get_ddfd_prefix
                           A 10696    	XDEF _emit_adlsuffix_code
                           A 10697    	XDEF _emit_immediate
                           A 10698    	XDEF _get_immediate_size
                           A 10699    	XDEF _adl_action
                           A 10700    	XDEF _getADLsuffix
                           A 10701    	XDEF _refreshlocalLabels
                           A 10702    	XDEF _definelabel
                           A 10703    	XDEF _parseLine
                           A 10704    	XDEF _parse_operand
                           A 10705    	XDEF _getLabelValue
                           A 10706    	XDEF _getAsciiValue
                           A 10707    	XDEF _advanceLocalLabel
                           A 10708    	XDEF _empty_operand
                           A 10709    	END


Errors: 0
Warnings: 0
Lines Assembled: 10710
