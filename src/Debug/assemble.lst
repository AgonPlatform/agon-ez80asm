Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED01-Mar-23     16:29:18     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\assemble.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",6
                           A    94    .DEFINE "quot"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "rem"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 4
                           A   103    .ENDEF
                           A   104    .ENDREC "NONAME0"
                           A   105    .BEGREC "NONAME1",8
                           A   106    .DEFINE "quot"
                           A   107    .VALUE 0
                           A   108    .CLASS 8
                           A   109    .TYPE 5
                           A   110    .ENDEF
                           A   111    .DEFINE "rem"
                           A   112    .VALUE 4
                           A   113    .CLASS 8
                           A   114    .TYPE 5
                           A   115    .ENDEF
                           A   116    .ENDREC "NONAME1"
                           A   117    .BEGREC "header",6
                           A   118    .DEFINE "s"
                           A   119    .VALUE 0
                           A   120    .CLASS 11
                           A   121    .TAG "NONAME2"
                           A   122    .TYPE 8
                           A   123    .ENDEF
                           A   124    .DEFINE "x"
                           A   125    .VALUE 0
                           A   126    .CLASS 11
                           A   127    .TYPE 2
                           A   128    .ENDEF
                           A   129    .ENDREC "header"
                           A   130    .BEGREC "NONAME2",6
                           A   131    .DEFINE "ptr"
                           A   132    .VALUE 0
                           A   133    .CLASS 8
                           A   134    .TAG "header"
                           A   135    .TYPE 40
                           A   136    .ENDEF
                           A   137    .DEFINE "size"
                           A   138    .VALUE 3
                           A   139    .CLASS 8
                           A   140    .TYPE 14
                           A   141    .ENDEF
                           A   142    .ENDREC "NONAME2"
                           A   143    .BEGREC "NONAME3",16
                           A   144    .DEFINE "reg"
                           A   145    .VALUE 0
                           A   146    .CLASS 8
                           A   147    .TYPE 4
                           A   148    .ENDEF
                           A   149    .DEFINE "reg_index"
                           A   150    .VALUE 3
                           A   151    .CLASS 8
                           A   152    .TYPE 12
                           A   153    .ENDEF
                           A   154    .DEFINE "indirect"
                           A   155    .VALUE 4
                           A   156    .CLASS 8
                           A   157    .TYPE 12
                           A   158    .ENDEF
                           A   159    .DEFINE "cc"
                           A   160    .VALUE 5
                           A   161    .CLASS 8
                           A   162    .TYPE 12
                           A   163    .ENDEF
                           A   164    .DEFINE "cc_index"
                           A   165    .VALUE 6
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "displacement"
                           A   170    .VALUE 7
                           A   171    .CLASS 8
                           A   172    .TYPE 3
                           A   173    .ENDEF
                           A   174    .DEFINE "displacement_provided"
                           A   175    .VALUE 9
                           A   176    .CLASS 8
                           A   177    .TYPE 12
                           A   178    .ENDEF
                           A   179    .DEFINE "immediate_provided"
                           A   180    .VALUE 10
                           A   181    .CLASS 8
                           A   182    .TYPE 12
                           A   183    .ENDEF
                           A   184    .DEFINE "immediate"
                           A   185    .VALUE 11
                           A   186    .CLASS 8
                           A   187    .TYPE 5
                           A   188    .ENDEF
                           A   189    .DEFINE "wasLabel"
                           A   190    .VALUE 15
                           A   191    .CLASS 8
                           A   192    .TYPE 12
                           A   193    .ENDEF
                           A   194    .ENDREC "NONAME3"
                           A   195    .BEGREC "NONAME4",4
                           A   196    .DEFINE "suffix"
                           A   197    .VALUE 0
                           A   198    .CLASS 8
                           A   199    .TYPE 12
                           A   200    .ENDEF
                           A   201    .DEFINE "prefix1"
                           A   202    .VALUE 1
                           A   203    .CLASS 8
                           A   204    .TYPE 12
                           A   205    .ENDEF
                           A   206    .DEFINE "prefix2"
                           A   207    .VALUE 2
                           A   208    .CLASS 8
                           A   209    .TYPE 12
                           A   210    .ENDEF
                           A   211    .DEFINE "opcode"
                           A   212    .VALUE 3
                           A   213    .CLASS 8
                           A   214    .TYPE 12
                           A   215    .ENDEF
                           A   216    .ENDREC "NONAME4"
                           A   217    .BEGREC "NONAME5",16
                           A   218    .DEFINE "operandA"
                           A   219    .VALUE 0
                           A   220    .CLASS 8
                           A   221    .TYPE 4
                           A   222    .ENDEF
                           A   223    .DEFINE "operandB"
                           A   224    .VALUE 3
                           A   225    .CLASS 8
                           A   226    .TYPE 4
                           A   227    .ENDEF
                           A   228    .DEFINE "ddfdpermitted"
                           A   229    .VALUE 6
                           A   230    .CLASS 8
                           A   231    .TYPE 12
                           A   232    .ENDEF
                           A   233    .DEFINE "transformA"
                           A   234    .VALUE 7
                           A   235    .CLASS 8
                           A   236    .TYPE 4
                           A   237    .ENDEF
                           A   238    .DEFINE "transformB"
                           A   239    .VALUE 10
                           A   240    .CLASS 8
                           A   241    .TYPE 4
                           A   242    .ENDEF
                           A   243    .DEFINE "prefix"
                           A   244    .VALUE 13
                           A   245    .CLASS 8
                           A   246    .TYPE 12
                           A   247    .ENDEF
                           A   248    .DEFINE "opcode"
                           A   249    .VALUE 14
                           A   250    .CLASS 8
                           A   251    .TYPE 12
                           A   252    .ENDEF
                           A   253    .DEFINE "adl"
                           A   254    .VALUE 15
                           A   255    .CLASS 8
                           A   256    .TYPE 12
                           A   257    .ENDEF
                           A   258    .ENDREC "NONAME5"
                           A   259    .BEGREC "NONAME6",17
                           A   260    .DEFINE "name"
                           A   261    .VALUE 0
                           A   262    .CLASS 8
                           A   263    .DIM 8
                           A   264    .TYPE 98
                           A   265    .ENDEF
                           A   266    .DEFINE "type"
                           A   267    .VALUE 8
                           A   268    .CLASS 8
                           A   269    .TYPE 12
                           A   270    .ENDEF
                           A   271    .DEFINE "asmtype"
                           A   272    .VALUE 9
                           A   273    .CLASS 8
                           A   274    .TYPE 12
                           A   275    .ENDEF
                           A   276    .DEFINE "listnumber"
                           A   277    .VALUE 10
                           A   278    .CLASS 8
                           A   279    .TYPE 12
                           A   280    .ENDEF
                           A   281    .DEFINE "list"
                           A   282    .VALUE 11
                           A   283    .CLASS 8
                           A   284    .TAG "NONAME5"
                           A   285    .TYPE 40
                           A   286    .ENDEF
                           A   287    .DEFINE "asmargument"
                           A   288    .VALUE 14
                           A   289    .CLASS 8
                           A   290    .TYPE 4
                           A   291    .ENDEF
                           A   292    .ENDREC "NONAME6"
                           A   293    .BEGREC "NONAME7",6
                           A   294    .DEFINE "type"
                           A   295    .VALUE 0
                           A   296    .CLASS 8
                           A   297    .TYPE 4
                           A   298    .ENDEF
                           A   299    .DEFINE "match"
                           A   300    .VALUE 3
                           A   301    .CLASS 8
                           A   302    .TYPE 556
                           A   303    .ENDEF
                           A   304    .ENDREC "NONAME7"
                           A   305    .BEGREC "NONAME8",7
                           A   306    .DEFINE "name"
                           A   307    .VALUE 0
                           A   308    .CLASS 8
                           A   309    .TYPE 34
                           A   310    .ENDEF
                           A   311    .DEFINE "address"
                           A   312    .VALUE 3
                           A   313    .CLASS 8
                           A   314    .TYPE 5
                           A   315    .ENDEF
                           A   316    .ENDREC "NONAME8"
                           A   317    .BEGREC "NONAME9",5
                           A   318    .DEFINE "defined"
                           A   319    .VALUE 0
                           A   320    .CLASS 8
                           A   321    .TYPE 12
                           A   322    .ENDEF
                           A   323    .DEFINE "address"
                           A   324    .VALUE 1
                           A   325    .CLASS 8
                           A   326    .TYPE 5
                           A   327    .ENDEF
                           A   328    .ENDREC "NONAME9"
                           A   329    .BEGREC "NONAME10",264
                           A   330    .DEFINE "current_instruction"
                           A   331    .VALUE 0
                           A   332    .CLASS 8
                           A   333    .TAG "NONAME6"
                           A   334    .TYPE 40
                           A   335    .ENDEF
                           A   336    .DEFINE "next"
                           A   337    .VALUE 3
                           A   338    .CLASS 8
                           A   339    .TYPE 34
                           A   340    .ENDEF
                           A   341    .DEFINE "label"
                           A   342    .VALUE 6
                           A   343    .CLASS 8
                           A   344    .DIM 32
                           A   345    .TYPE 98
                           A   346    .ENDEF
                           A   347    .DEFINE "mnemonic"
                           A   348    .VALUE 38
                           A   349    .CLASS 8
                           A   350    .DIM 16
                           A   351    .TYPE 98
                           A   352    .ENDEF
                           A   353    .DEFINE "suffix"
                           A   354    .VALUE 54
                           A   355    .CLASS 8
                           A   356    .DIM 16
                           A   357    .TYPE 98
                           A   358    .ENDEF
                           A   359    .DEFINE "operand1"
                           A   360    .VALUE 70
                           A   361    .CLASS 8
                           A   362    .DIM 32
                           A   363    .TYPE 98
                           A   364    .ENDEF
                           A   365    .DEFINE "operand2"
                           A   366    .VALUE 102
                           A   367    .CLASS 8
                           A   368    .DIM 32
                           A   369    .TYPE 98
                           A   370    .ENDEF
                           A   371    .DEFINE "comment"
                           A   372    .VALUE 134
                           A   373    .CLASS 8
                           A   374    .DIM 128
                           A   375    .TYPE 98
                           A   376    .ENDEF
                           A   377    .DEFINE "size"
                           A   378    .VALUE 262
                           A   379    .CLASS 8
                           A   380    .TYPE 13
                           A   381    .ENDEF
                           A   382    .ENDREC "NONAME10"
                           A   383    .BEGREC "NONAME11",133
                           A   384    .DEFINE "start"
                           A   385    .VALUE 0
                           A   386    .CLASS 8
                           A   387    .DIM 128
                           A   388    .TYPE 98
                           A   389    .ENDEF
                           A   390    .DEFINE "length"
                           A   391    .VALUE 128
                           A   392    .CLASS 8
                           A   393    .TYPE 12
                           A   394    .ENDEF
                           A   395    .DEFINE "next"
                           A   396    .VALUE 129
                           A   397    .CLASS 8
                           A   398    .TYPE 34
                           A   399    .ENDEF
                           A   400    .DEFINE "terminator"
                           A   401    .VALUE 132
                           A   402    .CLASS 8
                           A   403    .TYPE 2
                           A   404    .ENDEF
                           A   405    .ENDREC "NONAME11"
                           A   406    .BEGREC "NONAME12",67
                           A   407    .DEFINE "linenumber"
                           A   408    .VALUE 0
                           A   409    .CLASS 8
                           A   410    .TYPE 13
                           A   411    .ENDEF
                           A   412    .DEFINE "fp"
                           A   413    .VALUE 2
                           A   414    .CLASS 8
                           A   415    .TYPE 12
                           A   416    .ENDEF
                           A   417    .DEFINE "filename"
                           A   418    .VALUE 3
                           A   419    .CLASS 8
                           A   420    .DIM 64
                           A   421    .TYPE 98
                           A   422    .ENDEF
                           A   423    .ENDREC "NONAME12"
                           A   424    ;    1	#include <stdio.h>
                           A   425    ;    2	#include <string.h>
                           A   426    ;    3	#include <stdlib.h>
                           A   427    ;    4	#include <ctype.h>
                           A   428    ;    5	#include <stdint.h>
                           A   429    ;    6	#include <stdarg.h>
                           A   430    ;    7	#include "assemble.h"
                           A   431    ;    8	#include "globals.h"
                           A   432    ;    9	#include "utils.h"
                           A   433    ;   10	#include "label.h"
                           A   434    ;   11	#include "str2num.h"
                           A   435    ;   12	#include "listing.h"
                           A   436    ;   13	#include "filestack.h"
                           A   437    ;   14	#include "stdint.h"
                           A   438    ;   15	#include "mos-interface.h"
                           A   439    ;   16	
                           A   440    ;   17	void empty_operand(operand *op) {
040443                     A   441    _empty_operand:
                           A   442    .DEFINE "_empty_operand"
                           A   443    
                           A   444    .VALUE _empty_operand
                           A   445    
                           A   446    .CLASS 2
                           A   447    
                           A   448    .TYPE 65
                           A   449    
                           A   450    .ENDEF
                           A   451    
                           A   452    .BEGFUNC "empty_operand",17,"_empty_operand"
                           A   453    
                           A   454    .LINE 17
                           A   455    
                           A   456    .DEFINE "op"
                           A   457    
                           A   458    .CLASS 65
                           A   459    
                           A   460    .VALUE 6
                           A   461    
                           A   462    .TAG "NONAME3"
                           A   463    
                           A   464    .TYPE 40
                           A   465    
                           A   466    .ENDEF
                           A   467    
040443 DDE5                A   468    	PUSH	IX
040445 DD210000 00         A   469    	LD	IX,0
04044A DD39                A   470    	ADD	IX,SP
                           A   471    ;   18	    op->reg = R_NONE;
                           A   472    .LINE 18
                           A   473    
04044C 01000000            A   474    	LD	BC,0
040450 DD3106              A   475    	LD	IY,(IX+%6)
040453 FD0F00              A   476    	LD	(IY+%0),BC
                           A   477    ;   19	    op->reg_index = 0;
                           A   478    .LINE 19
                           A   479    
040456 FD360300            A   480    	LD	(IY+%3),%0
                           A   481    ;   20	    op->cc = false;
                           A   482    .LINE 20
                           A   483    
04045A FD360500            A   484    	LD	(IY+%5),%0
                           A   485    ;   21	    op->cc_index = 0;
                           A   486    .LINE 21
                           A   487    
04045E FD360600            A   488    	LD	(IY+%6),%0
                           A   489    ;   22	    op->displacement = 0;
                           A   490    .LINE 22
                           A   491    
040462 FD360700            A   492    	LD	(IY+%7),%0
040466 FD360800            A   493    	LD	(IY+%8),%0
                           A   494    ;   23	    op->displacement_provided = false;
                           A   495    .LINE 23
                           A   496    
04046A FD360900            A   497    	LD	(IY+%9),%0
                           A   498    ;   24	    op->immediate = 0;
                           A   499    .LINE 24
                           A   500    
04046E FD0F0B              A   501    	LD	(IY+%B),BC
040471 FD360E00            A   502    	LD	(IY+%E),%0
                           A   503    ;   25	    op->immediate_provided = false;
                           A   504    .LINE 25
                           A   505    
040475 FD360A00            A   506    	LD	(IY+%A),%0
                           A   507    ;   26	    op->wasLabel = false;
                           A   508    .LINE 26
                           A   509    
040479 FD360F00            A   510    	LD	(IY+%F),%0
                           A   511    ;   27	}
                           A   512    .LINE 27
                           A   513    
04047D DDF9                A   514    	LD	SP,IX
04047F DDE1                A   515    	POP	IX
040481 C9                  A   516    	RET	
                           A   517    
                           A   518    
                           A   519    ;**************************** _empty_operand **
                           A   520    ;Name                         Addr/Register   S
                           A   521    ;op                                    IX+6    
                           A   522    
                           A   523    
                           A   524    ; Stack Frame Size: 9 (bytes)
                           A   525    ;       Spill Code: 0 (instruction)
                           A   526    
                           A   527    
                           A   528    .ENDFUNC "empty_operand",27,"_empty_operand"
                           A   529    ;   28	
                           A   530    ;   29	void advanceLocalLabel(void) {
040482                     A   531    _advanceLocalLabel:
                           A   532    .DEFINE "_advanceLocalLabel"
                           A   533    
                           A   534    .VALUE _advanceLocalLabel
                           A   535    
                           A   536    .CLASS 2
                           A   537    
                           A   538    .TYPE 65
                           A   539    
                           A   540    .ENDEF
                           A   541    
                           A   542    .BEGFUNC "advanceLocalLabel",29,"_advanceLocalL
                           A   543    
040482 DDE5                A   544    	PUSH	IX
040484 DD210000 00         A   545    	LD	IX,0
040489 DD39                A   546    	ADD	IX,SP
                           A   547    ;   30	    if(currentline.label[0] == '@') {
                           A   548    .LINE 30
                           A   549    
04048B 3A 66 8A 04         A   550    	LD	A,(_currentline+6)
04048F 47                  A   551    	LD	B,A
040490 17ED62              A   552    	SEXT	HL
040493 68                  A   553    	LD	L,B
040494 01400000            A   554    	LD	BC,64
040498 B7                  A   555    	OR	A,A
040499 ED42                A   556    	SBC	HL,BC
04049B 20 18               A   557    	JR	NZ,L_3
                           A   558    ;   31	        if(currentline.label[1] == '@')
                           A   559    .LINE 31
                           A   560    
04049D 21 66 8A 04         A   561    	LD	HL,_currentline+6
0404A1 23                  A   562    	INC	HL
0404A2 7E                  A   563    	LD	A,(HL)
0404A3 47                  A   564    	LD	B,A
0404A4 17ED62              A   565    	SEXT	HL
0404A7 68                  A   566    	LD	L,B
0404A8 01400000            A   567    	LD	BC,64
0404AC B7                  A   568    	OR	A,A
0404AD ED42                A   569    	SBC	HL,BC
0404AF 20 04               A   570    	JR	NZ,L_3
                           A   571    ;   32	            readAnonymousLabel();
                           A   572    .LINE 32
                           A   573    
0404B1 CD 0B 3F 04         A   574    	CALL	_readAnonymousLabel
                           A   575    ;   33	        }
                           A   576    ;   34	    }
                           A   577    ;   35	}
0404B5                     A   578    L_3:
                           A   579    .LINE 35
                           A   580    
0404B5 DDF9                A   581    	LD	SP,IX
0404B7 DDE1                A   582    	POP	IX
0404B9 C9                  A   583    	RET	
                           A   584    
                           A   585    
                           A   586    ;**************************** _advanceLocalLabe
                           A   587    ;Name                         Addr/Register   S
                           A   588    ;_readAnonymousLabel                 IMPORT  --
                           A   589    ;_currentline                        IMPORT    
                           A   590    
                           A   591    
                           A   592    ; Stack Frame Size: 6 (bytes)
                           A   593    ;       Spill Code: 0 (instruction)
                           A   594    
                           A   595    
                           A   596    .ENDFUNC "advanceLocalLabel",35,"_advanceLocalL
                           A   597    ;   36	
                           A   598    ;   37	// Get the ascii value from a single 'x
                           A   599    ;   38	uint8_t getAsciiValue(char *string) {
0404BA                     A   600    _getAsciiValue:
                           A   601    .DEFINE "_getAsciiValue"
                           A   602    
                           A   603    .VALUE _getAsciiValue
                           A   604    
                           A   605    .CLASS 2
                           A   606    
                           A   607    .TYPE 76
                           A   608    
                           A   609    .ENDEF
                           A   610    
                           A   611    .BEGFUNC "getAsciiValue",38,"_getAsciiValue"
                           A   612    
                           A   613    .LINE 38
                           A   614    
                           A   615    .DEFINE "string"
                           A   616    
                           A   617    .CLASS 65
                           A   618    
                           A   619    .VALUE 6
                           A   620    
                           A   621    .TYPE 34
                           A   622    
                           A   623    .ENDEF
                           A   624    
                           A   625    .DEFINE "len"
                           A   626    
                           A   627    .CLASS 65
                           A   628    
                           A   629    .VALUE -1
                           A   630    
                           A   631    .TYPE 12
                           A   632    
                           A   633    .ENDEF
                           A   634    
0404BA DDE5                A   635    	PUSH	IX
0404BC DD210000 00         A   636    	LD	IX,0
0404C1 DD39                A   637    	ADD	IX,SP
0404C3 3B                  A   638    	DEC	SP
                           A   639    ;   39	    uint8_t len = strlen(string);
                           A   640    .LINE 39
                           A   641    
0404C4 DD0706              A   642    	LD	BC,(IX+%6)
0404C7 C5                  A   643    	PUSH	BC
0404C8 CD F9 5C 04         A   644    	CALL	_strlen
0404CC C1                  A   645    	POP	BC
0404CD DD75FF              A   646    	LD	(IX+%FFFFFFFF),L
                           A   647    ;   40	
                           A   648    ;   41	    if((len == 3) || (len == 4)) {
                           A   649    .LINE 41
                           A   650    
0404D0 DD7EFF              A   651    	LD	A,(IX+%FFFFFFFF)
0404D3 FE03                A   652    	CP	A,%3
0404D5 28 09               A   653    	JR	Z,L_19
0404D7 DD7EFF              A   654    	LD	A,(IX+%FFFFFFFF)
0404DA FE04                A   655    	CP	A,%4
0404DC C2 94 05 04         A   656    	JR	NZ,L_20
0404E0                     A   657    L_19:
                           A   658    ;   42	        if(*string == '\'') {
                           A   659    .LINE 42
                           A   660    
0404E0 DD2706              A   661    	LD	HL,(IX+%6)
0404E3 7E                  A   662    	LD	A,(HL)
0404E4 47                  A   663    	LD	B,A
0404E5 17ED62              A   664    	SEXT	HL
0404E8 68                  A   665    	LD	L,B
0404E9 01270000            A   666    	LD	BC,39
0404ED B7                  A   667    	OR	A,A
0404EE ED42                A   668    	SBC	HL,BC
0404F0 C2 94 05 04         A   669    	JR	NZ,L_20
                           A   670    ;   43	            if((len == 4) && (string[3]
                           A   671    .LINE 43
                           A   672    
0404F4 DD7EFF              A   673    	LD	A,(IX+%FFFFFFFF)
0404F7 FE04                A   674    	CP	A,%4
0404F9 20 76               A   675    	JR	NZ,L_17
0404FB DD3106              A   676    	LD	IY,(IX+%6)
0404FE ED2303              A   677    	LEA	HL,IY+%3
040501 7E                  A   678    	LD	A,(HL)
040502 47                  A   679    	LD	B,A
040503 17ED62              A   680    	SEXT	HL
040506 68                  A   681    	LD	L,B
040507 01270000            A   682    	LD	BC,39
04050B B7                  A   683    	OR	A,A
04050C ED42                A   684    	SBC	HL,BC
04050E 20 61               A   685    	JR	NZ,L_17
040510 DD2706              A   686    	LD	HL,(IX+%6)
040513 23                  A   687    	INC	HL
040514 7E                  A   688    	LD	A,(HL)
040515 47                  A   689    	LD	B,A
040516 17ED62              A   690    	SEXT	HL
040519 68                  A   691    	LD	L,B
04051A 015C0000            A   692    	LD	BC,92
04051E B7                  A   693    	OR	A,A
04051F ED42                A   694    	SBC	HL,BC
040521 20 4E               A   695    	JR	NZ,L_17
                           A   696    ;   44	                switch(string[2]) {
                           A   697    .LINE 44
                           A   698    
040523 DD3106              A   699    	LD	IY,(IX+%6)
040526 ED2302              A   700    	LEA	HL,IY+%2
040529 7E                  A   701    	LD	A,(HL)
04052A 47                  A   702    	LD	B,A
04052B 17ED62              A   703    	SEXT	HL
04052E 68                  A   704    	LD	L,B
04052F CD B2 63 04         A   705    	CALL	__case8D
040533 E9                  A   706    	JP	(HL)
040534                     A   707    L__10:
040534 0700                A   708    	DW	7
040536 22                  A   709    	DB	34
040537 690504              A   710    	DW24	L_12	
                           A   711    
04053A 27                  A   712    	DB	39
04053B 6D0504              A   713    	DW24	L_13	
                           A   714    
04053E 5C                  A   715    	DB	92
04053F 650504              A   716    	DW24	L_11	
                           A   717    
040542 62                  A   718    	DB	98
040543 610504              A   719    	DW24	L_10	
                           A   720    
040546 6E                  A   721    	DB	110
040547 550504              A   722    	DW24	L_7	
                           A   723    
04054A 72                  A   724    	DB	114
04054B 590504              A   725    	DW24	L_8	
                           A   726    
04054E 74                  A   727    	DB	116
04054F 5D0504              A   728    	DW24	L_9	
                           A   729    
040552 710504              A   730    	DW24	L_17	
                           A   731    
                           A   732    ;   45	                    case 'n': return '\
040555                     A   733    L_7:
                           A   734    .LINE 45
                           A   735    
040555 3E0A                A   736    	LD	A,%A
040557 18 48               A   737    	JR	L_21
                           A   738    ;   46	                    case 'r': return '\
040559                     A   739    L_8:
                           A   740    .LINE 46
                           A   741    
040559 3E0D                A   742    	LD	A,%D
04055B 18 44               A   743    	JR	L_21
                           A   744    ;   47	                    case 't': return '\
04055D                     A   745    L_9:
                           A   746    .LINE 47
                           A   747    
04055D 3E09                A   748    	LD	A,%9
04055F 18 40               A   749    	JR	L_21
                           A   750    ;   48	                    case 'b': return '\
040561                     A   751    L_10:
                           A   752    .LINE 48
                           A   753    
040561 3E08                A   754    	LD	A,%8
040563 18 3C               A   755    	JR	L_21
                           A   756    ;   49	                    case '\\': return '
040565                     A   757    L_11:
                           A   758    .LINE 49
                           A   759    
040565 3E5C                A   760    	LD	A,%5C
040567 18 38               A   761    	JR	L_21
                           A   762    ;   50	                    case '\"': return '
040569                     A   763    L_12:
                           A   764    .LINE 50
                           A   765    
040569 3E22                A   766    	LD	A,%22
04056B 18 34               A   767    	JR	L_21
                           A   768    ;   51	                    case '\'': return '
04056D                     A   769    L_13:
                           A   770    .LINE 51
                           A   771    
04056D 3E27                A   772    	LD	A,%27
04056F 18 30               A   773    	JR	L_21
                           A   774    ;   52	                }
                           A   775    ;   53	            }
040571                     A   776    L_17:
                           A   777    .LINE 53
                           A   778    
                           A   779    ;   54	            if((len == 3) && (string[2]
                           A   780    .LINE 54
                           A   781    
040571 DD7EFF              A   782    	LD	A,(IX+%FFFFFFFF)
040574 FE03                A   783    	CP	A,%3
040576 20 1C               A   784    	JR	NZ,L_20
040578 DD3106              A   785    	LD	IY,(IX+%6)
04057B ED2302              A   786    	LEA	HL,IY+%2
04057E 7E                  A   787    	LD	A,(HL)
04057F 47                  A   788    	LD	B,A
040580 17ED62              A   789    	SEXT	HL
040583 68                  A   790    	LD	L,B
040584 01270000            A   791    	LD	BC,39
040588 B7                  A   792    	OR	A,A
040589 ED42                A   793    	SBC	HL,BC
04058B 20 07               A   794    	JR	NZ,L_20
                           A   795    ;   55	                return string[1];
                           A   796    .LINE 55
                           A   797    
04058D DD2706              A   798    	LD	HL,(IX+%6)
040590 23                  A   799    	INC	HL
040591 7E                  A   800    	LD	A,(HL)
040592 18 0D               A   801    	JR	L_21
                           A   802    ;   56	            }
                           A   803    ;   57	        }
                           A   804    ;   58	    }
040594                     A   805    L_20:
                           A   806    .LINE 58
                           A   807    
                           A   808    ;   59	    error(message[ERROR_ASCIIFORMAT]);
                           A   809    .LINE 59
                           A   810    
040594 21 AD 67 04         A   811    	LD	HL,_message+108
040598 ED07                A   812    	LD	BC,(HL)
04059A C5                  A   813    	PUSH	BC
04059B CD A4 4E 04         A   814    	CALL	_error
04059F C1                  A   815    	POP	BC
                           A   816    ;   60	    return 0;
                           A   817    .LINE 60
                           A   818    
0405A0 AF                  A   819    	XOR	A,A
                           A   820    ;   61	}
0405A1                     A   821    L_21:
                           A   822    .LINE 61
                           A   823    
0405A1 DDF9                A   824    	LD	SP,IX
0405A3 DDE1                A   825    	POP	IX
0405A5 C9                  A   826    	RET	
                           A   827    
                           A   828    
                           A   829    ;**************************** _getAsciiValue **
                           A   830    ;Name                         Addr/Register   S
                           A   831    ;_message                            IMPORT  un
                           A   832    ;_error                              IMPORT  --
                           A   833    ;_strlen                             IMPORT  --
                           A   834    ;len                                   IX-1    
                           A   835    ;string                                IX+6    
                           A   836    
                           A   837    
                           A   838    ; Stack Frame Size: 10 (bytes)
                           A   839    ;       Spill Code: 0 (instruction)
                           A   840    
                           A   841    
                           A   842    .ENDFUNC "getAsciiValue",61,"_getAsciiValue"
                           A   843    ;   62	
                           A   844    ;   63	// Get the value from a sequence of 0-n
                           A   845    ;   64	// Examples:
                           A   846    ;   65	// labela+5
                           A   847    ;   66	// labelb-1
                           A   848    ;   67	// labela+labelb+offset1-1
                           A   849    ;   68	// The string should not contain any sp
                           A   850    ;   69	int32_t getLabelValue(char *string) {
0405A6                     A   851    _getLabelValue:
                           A   852    .DEFINE "_getLabelValue"
                           A   853    
                           A   854    .VALUE _getLabelValue
                           A   855    
                           A   856    .CLASS 2
                           A   857    
                           A   858    .TYPE 69
                           A   859    
                           A   860    .ENDEF
                           A   861    
                           A   862    .BEGFUNC "getLabelValue",69,"_getLabelValue"
                           A   863    
                           A   864    .LINE 69
                           A   865    
                           A   866    .DEFINE "string"
                           A   867    
                           A   868    .CLASS 65
                           A   869    
                           A   870    .VALUE 6
                           A   871    
                           A   872    .TYPE 34
                           A   873    
                           A   874    .ENDEF
                           A   875    
                           A   876    .DEFINE "operator"
                           A   877    
                           A   878    .CLASS 65
                           A   879    
                           A   880    .VALUE -1
                           A   881    
                           A   882    .TYPE 2
                           A   883    
                           A   884    .ENDEF
                           A   885    
                           A   886    .DEFINE "total"
                           A   887    
                           A   888    .CLASS 65
                           A   889    
                           A   890    .VALUE -5
                           A   891    
                           A   892    .TYPE 5
                           A   893    
                           A   894    .ENDEF
                           A   895    
                           A   896    .DEFINE "tmp"
                           A   897    
                           A   898    .CLASS 65
                           A   899    
                           A   900    .VALUE -9
                           A   901    
                           A   902    .TYPE 5
                           A   903    
                           A   904    .ENDEF
                           A   905    
                           A   906    .DEFINE "ptr"
                           A   907    
                           A   908    .CLASS 65
                           A   909    
                           A   910    .VALUE -12
                           A   911    
                           A   912    .TYPE 34
                           A   913    
                           A   914    .ENDEF
                           A   915    
                           A   916    .DEFINE "lbl"
                           A   917    
                           A   918    .CLASS 65
                           A   919    
                           A   920    .VALUE -18
                           A   921    
                           A   922    .TAG "NONAME8"
                           A   923    
                           A   924    .TYPE 40
                           A   925    
                           A   926    .ENDEF
                           A   927    
                           A   928    .DEFINE "token"
                           A   929    
                           A   930    .CLASS 65
                           A   931    
                           A   932    .VALUE -151
                           A   933    
                           A   934    .TAG "NONAME11"
                           A   935    
                           A   936    .TYPE 8
                           A   937    
                           A   938    .ENDEF
                           A   939    
0405A6 DDE5                A   940    	PUSH	IX
0405A8 DD210000 00         A   941    	LD	IX,0
0405AD DD39                A   942    	ADD	IX,SP
0405AF 2169FFFF            A   943    	LD	HL,-151
0405B3 39                  A   944    	ADD	HL,SP
0405B4 F9                  A   945    	LD	SP,HL
                           A   946    ;   70	    int32_t total, tmp;
                           A   947    ;   71	    char operator, *ptr;
                           A   948    ;   72	    label *lbl;
                           A   949    ;   73	    tokentype token;
                           A   950    ;   74	
                           A   951    ;   75	    ptr = string;
                           A   952    .LINE 75
                           A   953    
0405B5 DD0706              A   954    	LD	BC,(IX+%6)
0405B8 DD0FF4              A   955    	LD	(IX+%FFFFFFF4),BC
                           A   956    ;   76	    total = 0;
                           A   957    .LINE 76
                           A   958    
0405BB 01000000            A   959    	LD	BC,0
0405BF AF                  A   960    	XOR	A,A
0405C0 DD0FFB              A   961    	LD	(IX+%FFFFFFFB),BC
0405C3 DD77FE              A   962    	LD	(IX+%FFFFFFFE),A
                           A   963    ;   77	    operator = '+'; // previous operand
                           A   964    .LINE 77
                           A   965    
0405C6 DD36FF2B            A   966    	LD	(IX+%FFFFFFFF),%2B
                           A   967    ;   78	    while(ptr) {
                           A   968    .LINE 78
                           A   969    
0405CA C3 2A 07 04         A   970    	JR	L_42
0405CE                     A   971    L_43:
                           A   972    ;   79	        tmp = 0;
                           A   973    .LINE 79
                           A   974    
0405CE 01000000            A   975    	LD	BC,0
0405D2 AF                  A   976    	XOR	A,A
0405D3 DD0FF7              A   977    	LD	(IX+%FFFFFFF7),BC
0405D6 DD77FA              A   978    	LD	(IX+%FFFFFFFA),A
                           A   979    ;   80	        getOperatorToken(&token, ptr);
                           A   980    .LINE 80
                           A   981    
0405D9 DD07F4              A   982    	LD	BC,(IX+%FFFFFFF4)
0405DC C5                  A   983    	PUSH	BC
0405DD DDE5E1              A   984    	LD	HL,IX
0405E0 0169FFFF            A   985    	LD	BC,-151
0405E4 09                  A   986    	ADD	HL,BC
0405E5 E5C1                A   987    	LD	BC,HL
0405E7 C5                  A   988    	PUSH	BC
0405E8 CD 0E 52 04         A   989    	CALL	_getOperatorToken
0405EC C1                  A   990    	POP	BC
0405ED C1                  A   991    	POP	BC
                           A   992    ;   81	        if(notEmpty(token.start)) {
                           A   993    .LINE 81
                           A   994    
0405EE DDE5E1              A   995    	LD	HL,IX
0405F1 0169FFFF            A   996    	LD	BC,-151
0405F5 09                  A   997    	ADD	HL,BC
0405F6 E5C1                A   998    	LD	BC,HL
0405F8 C5                  A   999    	PUSH	BC
0405F9 CD 8A 4E 04         A  1000    	CALL	_notEmpty
0405FD C1                  A  1001    	POP	BC
0405FE B7                  A  1002    	OR	A,A
0405FF CA 91 06 04         A  1003    	JR	Z,L_30
                           A  1004    ;   82	            lbl = findLabel(token.start
                           A  1005    .LINE 82
                           A  1006    
040603 DDE5E1              A  1007    	LD	HL,IX
040606 0169FFFF            A  1008    	LD	BC,-151
04060A 09                  A  1009    	ADD	HL,BC
04060B E5C1                A  1010    	LD	BC,HL
04060D C5                  A  1011    	PUSH	BC
04060E CD 86 43 04         A  1012    	CALL	_findLabel
040612 C1                  A  1013    	POP	BC
040613 DD2FEE              A  1014    	LD	(IX+%FFFFFFEE),HL
                           A  1015    ;   83	            if(lbl) tmp = lbl->address;
                           A  1016    .LINE 83
                           A  1017    
040616 CD CF 60 04         A  1018    	CALL	__icmpzero
04061A 28 11               A  1019    	JR	Z,L_27
04061C DD31EE              A  1020    	LD	IY,(IX+%FFFFFFEE)
04061F FD0703              A  1021    	LD	BC,(IY+%3)
040622 FD7E06              A  1022    	LD	A,(IY+%6)
040625 DD0FF7              A  1023    	LD	(IX+%FFFFFFF7),BC
040628 DD77FA              A  1024    	LD	(IX+%FFFFFFFA),A
                           A  1025    ;   84	            else {
                           A  1026    .LINE 84
                           A  1027    
04062B 18 64               A  1028    	JR	L_30
04062D                     A  1029    L_27:
                           A  1030    ;   85	                if(token.start[0] == '\
                           A  1031    .LINE 85
                           A  1032    
04062D DDE5E1              A  1033    	LD	HL,IX
040630 0169FFFF            A  1034    	LD	BC,-151
040634 09                  A  1035    	ADD	HL,BC
040635 DD2FF1              A  1036    	LD	(IX+%FFFFFFF1),HL
040638 7E                  A  1037    	LD	A,(HL)
040639 47                  A  1038    	LD	B,A
04063A 17ED62              A  1039    	SEXT	HL
04063D 68                  A  1040    	LD	L,B
04063E 01270000            A  1041    	LD	BC,39
040642 B7                  A  1042    	OR	A,A
040643 ED42                A  1043    	SBC	HL,BC
040645 20 15               A  1044    	JR	NZ,L_25
040647 DD07F1              A  1045    	LD	BC,(IX+%FFFFFFF1)
04064A C5                  A  1046    	PUSH	BC
04064B CD BA 04 04         A  1047    	CALL	_getAsciiValue
04064F C1                  A  1048    	POP	BC
040650 B7ED62              A  1049    	UEXT	HL
040653 6F                  A  1050    	LD	L,A
040654 DD2FF7              A  1051    	LD	(IX+%FFFFFFF7),HL
040657 DD74FA              A  1052    	LD	(IX+%FFFFFFFA),H
                           A  1053    ;   86	                else {
                           A  1054    .LINE 86
                           A  1055    
04065A 18 35               A  1056    	JR	L_30
04065C                     A  1057    L_25:
                           A  1058    ;   87	                    tmp = str2num(token
                           A  1059    .LINE 87
                           A  1060    
04065C 01000000            A  1061    	LD	BC,0
040660 C5                  A  1062    	PUSH	BC
040661 DD07F1              A  1063    	LD	BC,(IX+%FFFFFFF1)
040664 C5                  A  1064    	PUSH	BC
040665 CD 41 4A 04         A  1065    	CALL	_str2num
040669 C1                  A  1066    	POP	BC
04066A C1                  A  1067    	POP	BC
04066B DD2FF7              A  1068    	LD	(IX+%FFFFFFF7),HL
04066E DD73FA              A  1069    	LD	(IX+%FFFFFFFA),E
                           A  1070    ;   88	                    if(err_str2num && (
                           A  1071    .LINE 88
                           A  1072    
040671 3A 8A FF 06         A  1073    	LD	A,(_err_str2num)
040675 B7                  A  1074    	OR	A,A
040676 28 19               A  1075    	JR	Z,L_30
040678 01020000            A  1076    	LD	BC,2
04067C 2A 52 8A 04         A  1077    	LD	HL,(_pass)
040680 B7                  A  1078    	OR	A,A
040681 ED42                A  1079    	SBC	HL,BC
040683 20 0C               A  1080    	JR	NZ,L_30
040685 21 4D 67 04         A  1081    	LD	HL,_message+12
040689 ED07                A  1082    	LD	BC,(HL)
04068B C5                  A  1083    	PUSH	BC
04068C CD A4 4E 04         A  1084    	CALL	_error
040690 C1                  A  1085    	POP	BC
                           A  1086    ;   89	                }
                           A  1087    ;   90	            }
                           A  1088    ;   91	        }
040691                     A  1089    L_30:
                           A  1090    .LINE 91
                           A  1091    
                           A  1092    ;   92	        if(operator == '!') error(messa
                           A  1093    .LINE 92
                           A  1094    
040691 DD7EFF              A  1095    	LD	A,(IX+%FFFFFFFF)
040694 FE21                A  1096    	CP	A,%21
040696 20 0C               A  1097    	JR	NZ,L_32
040698 21 B3 67 04         A  1098    	LD	HL,_message+114
04069C ED07                A  1099    	LD	BC,(HL)
04069E C5                  A  1100    	PUSH	BC
04069F CD A4 4E 04         A  1101    	CALL	_error
0406A3 C1                  A  1102    	POP	BC
0406A4                     A  1103    L_32:
                           A  1104    ;   93	        if(operator == '+') total += tm
                           A  1105    .LINE 93
                           A  1106    
0406A4 DD7EFF              A  1107    	LD	A,(IX+%FFFFFFFF)
0406A7 FE2B                A  1108    	CP	A,%2B
0406A9 20 16               A  1109    	JR	NZ,L_34
0406AB DD27FB              A  1110    	LD	HL,(IX+%FFFFFFFB)
0406AE DD5EFE              A  1111    	LD	E,(IX+%FFFFFFFE)
0406B1 DD07F7              A  1112    	LD	BC,(IX+%FFFFFFF7)
0406B4 DD7EFA              A  1113    	LD	A,(IX+%FFFFFFFA)
0406B7 CD 06 5A 04         A  1114    	CALL	__ladd
0406BB DD2FFB              A  1115    	LD	(IX+%FFFFFFFB),HL
0406BE DD73FE              A  1116    	LD	(IX+%FFFFFFFE),E
0406C1                     A  1117    L_34:
                           A  1118    ;   94	        if(operator == '-') total -= tm
                           A  1119    .LINE 94
                           A  1120    
0406C1 DD7EFF              A  1121    	LD	A,(IX+%FFFFFFFF)
0406C4 FE2D                A  1122    	CP	A,%2D
0406C6 20 16               A  1123    	JR	NZ,L_36
0406C8 DD27FB              A  1124    	LD	HL,(IX+%FFFFFFFB)
0406CB DD5EFE              A  1125    	LD	E,(IX+%FFFFFFFE)
0406CE DD07F7              A  1126    	LD	BC,(IX+%FFFFFFF7)
0406D1 DD7EFA              A  1127    	LD	A,(IX+%FFFFFFFA)
0406D4 CD 9F 60 04         A  1128    	CALL	__lsub
0406D8 DD2FFB              A  1129    	LD	(IX+%FFFFFFFB),HL
0406DB DD73FE              A  1130    	LD	(IX+%FFFFFFFE),E
0406DE                     A  1131    L_36:
                           A  1132    ;   95	        if(operator == '<') total = tot
                           A  1133    .LINE 95
                           A  1134    
0406DE DD7EFF              A  1135    	LD	A,(IX+%FFFFFFFF)
0406E1 FE3C                A  1136    	CP	A,%3C
0406E3 20 13               A  1137    	JR	NZ,L_38
0406E5 DD27F7              A  1138    	LD	HL,(IX+%FFFFFFF7)
0406E8 DD07FB              A  1139    	LD	BC,(IX+%FFFFFFFB)
0406EB DD7EFE              A  1140    	LD	A,(IX+%FFFFFFFE)
0406EE CD 30 64 04         A  1141    	CALL	__lshl
0406F2 DD0FFB              A  1142    	LD	(IX+%FFFFFFFB),BC
0406F5 DD77FE              A  1143    	LD	(IX+%FFFFFFFE),A
0406F8                     A  1144    L_38:
                           A  1145    ;   96	        if(operator == '>') total = tot
                           A  1146    .LINE 96
                           A  1147    
0406F8 DD7EFF              A  1148    	LD	A,(IX+%FFFFFFFF)
0406FB FE3E                A  1149    	CP	A,%3E
0406FD 20 13               A  1150    	JR	NZ,L_39
0406FF DD27F7              A  1151    	LD	HL,(IX+%FFFFFFF7)
040702 DD07FB              A  1152    	LD	BC,(IX+%FFFFFFFB)
040705 DD7EFE              A  1153    	LD	A,(IX+%FFFFFFFE)
040708 CD 5B 60 04         A  1154    	CALL	__lshrs
04070C DD0FFB              A  1155    	LD	(IX+%FFFFFFFB),BC
04070F DD77FE              A  1156    	LD	(IX+%FFFFFFFE),A
040712                     A  1157    L_39:
                           A  1158    ;   97	        operator = token.terminator;
                           A  1159    .LINE 97
                           A  1160    
040712 DD7EED              A  1161    	LD	A,(IX+%FFFFFFED)
040715 DD77FF              A  1162    	LD	(IX+%FFFFFFFF),A
                           A  1163    ;   98	
                           A  1164    ;   99	        if(operator) ptr = token.next;
                           A  1165    .LINE 99
                           A  1166    
040718 B7                  A  1167    	OR	A,A
040719 28 08               A  1168    	JR	Z,L_41
04071B DD07EA              A  1169    	LD	BC,(IX+%FFFFFFEA)
04071E DD0FF4              A  1170    	LD	(IX+%FFFFFFF4),BC
                           A  1171    ;  100	        else ptr = NULL;
                           A  1172    .LINE 100
                           A  1173    
040721 18 07               A  1174    	JR	L_42
040723                     A  1175    L_41:
040723 01000000            A  1176    	LD	BC,0
040727 DD0FF4              A  1177    	LD	(IX+%FFFFFFF4),BC
                           A  1178    ;  101	    }
04072A                     A  1179    L_42:
                           A  1180    .LINE 101
                           A  1181    
04072A DD27F4              A  1182    	LD	HL,(IX+%FFFFFFF4)
04072D CD CF 60 04         A  1183    	CALL	__icmpzero
040731 C2 CE 05 04         A  1184    	JR	NZ,L_43
                           A  1185    ;  102	    return total;
                           A  1186    .LINE 102
                           A  1187    
040735 DD27FB              A  1188    	LD	HL,(IX+%FFFFFFFB)
040738 DD5EFE              A  1189    	LD	E,(IX+%FFFFFFFE)
                           A  1190    ;  103	}
                           A  1191    .LINE 103
                           A  1192    
04073B DDF9                A  1193    	LD	SP,IX
04073D DDE1                A  1194    	POP	IX
04073F C9                  A  1195    	RET	
                           A  1196    
                           A  1197    
                           A  1198    ;**************************** _getLabelValue **
                           A  1199    ;Name                         Addr/Register   S
                           A  1200    ;_message                            IMPORT  un
                           A  1201    ;_error                              IMPORT  --
                           A  1202    ;_pass                               IMPORT    
                           A  1203    ;_err_str2num                        IMPORT    
                           A  1204    ;_str2num                            IMPORT  --
                           A  1205    ;_findLabel                          IMPORT  --
                           A  1206    ;_notEmpty                           IMPORT  --
                           A  1207    ;_getOperatorToken                   IMPORT  --
                           A  1208    ;token                               IX-151    
                           A  1209    ;lbl                                  IX-18    
                           A  1210    ;G_1                                  IX-15    
                           A  1211    ;ptr                                  IX-12    
                           A  1212    ;tmp                                   IX-9    
                           A  1213    ;total                                 IX-5    
                           A  1214    ;operator                              IX-1    
                           A  1215    ;string                                IX+6    
                           A  1216    
                           A  1217    
                           A  1218    ; Stack Frame Size: 160 (bytes)
                           A  1219    ;       Spill Code: 0 (instruction)
                           A  1220    
                           A  1221    
                           A  1222    .ENDFUNC "getLabelValue",103,"_getLabelValue"
                           A  1223    ;  104	
                           A  1224    ;  105	// parses the given string to the opera
                           A  1225    ;  106	// will destruct parts of the original 
                           A  1226    ;  107	void parse_operand(char *string, operan
040740                     A  1227    _parse_operand:
                           A  1228    .DEFINE "_parse_operand"
                           A  1229    
                           A  1230    .VALUE _parse_operand
                           A  1231    
                           A  1232    .CLASS 2
                           A  1233    
                           A  1234    .TYPE 65
                           A  1235    
                           A  1236    .ENDEF
                           A  1237    
                           A  1238    .BEGFUNC "parse_operand",107,"_parse_operand"
                           A  1239    
                           A  1240    .LINE 107
                           A  1241    
                           A  1242    .DEFINE "string"
                           A  1243    
                           A  1244    .CLASS 65
                           A  1245    
                           A  1246    .VALUE 6
                           A  1247    
                           A  1248    .TYPE 34
                           A  1249    
                           A  1250    .ENDEF
                           A  1251    
                           A  1252    .DEFINE "operand"
                           A  1253    
                           A  1254    .CLASS 65
                           A  1255    
                           A  1256    .VALUE 9
                           A  1257    
                           A  1258    .TAG "NONAME3"
                           A  1259    
                           A  1260    .TYPE 40
                           A  1261    
                           A  1262    .ENDEF
                           A  1263    
                           A  1264    .DEFINE "ptr"
                           A  1265    
                           A  1266    .CLASS 65
                           A  1267    
                           A  1268    .VALUE -3
                           A  1269    
                           A  1270    .TYPE 34
                           A  1271    
                           A  1272    .ENDEF
                           A  1273    
                           A  1274    .DEFINE "len"
                           A  1275    
                           A  1276    .CLASS 65
                           A  1277    
                           A  1278    .VALUE -4
                           A  1279    
                           A  1280    .TYPE 12
                           A  1281    
                           A  1282    .ENDEF
                           A  1283    
040740 DDE5                A  1284    	PUSH	IX
040742 DD210000 00         A  1285    	LD	IX,0
040747 DD39                A  1286    	ADD	IX,SP
040749 ED22CC              A  1287    	LEA	HL,IX+%FFFFFFCC
04074C F9                  A  1288    	LD	SP,HL
                           A  1289    ;  108	    char *ptr = string;
                           A  1290    .LINE 108
                           A  1291    
04074D DD0706              A  1292    	LD	BC,(IX+%6)
040750 DD0FFD              A  1293    	LD	(IX+%FFFFFFFD),BC
                           A  1294    ;  109	    uint8_t len = strlen(string);
                           A  1295    .LINE 109
                           A  1296    
040753 DD0706              A  1297    	LD	BC,(IX+%6)
040756 C5                  A  1298    	PUSH	BC
040757 CD F9 5C 04         A  1299    	CALL	_strlen
04075B C1                  A  1300    	POP	BC
04075C DD75FC              A  1301    	LD	(IX+%FFFFFFFC),L
                           A  1302    ;  110	
                           A  1303    ;  111	    // direct or indirect
                           A  1304    ;  112	    if(*ptr == '(') {
                           A  1305    .LINE 112
                           A  1306    
04075F DD2706              A  1307    	LD	HL,(IX+%6)
040762 7E                  A  1308    	LD	A,(HL)
040763 47                  A  1309    	LD	B,A
040764 17ED62              A  1310    	SEXT	HL
040767 68                  A  1311    	LD	L,B
040768 01280000            A  1312    	LD	BC,40
04076C B7                  A  1313    	OR	A,A
04076D ED42                A  1314    	SBC	HL,BC
04076F 20 41               A  1315    	JR	NZ,L_51
                           A  1316    ;  113	        operand->indirect = true;
                           A  1317    .LINE 113
                           A  1318    
040771 DD3109              A  1319    	LD	IY,(IX+%9)
040774 FD360401            A  1320    	LD	(IY+%4),%1
                           A  1321    ;  114	        // find closing bracket or erro
                           A  1322    ;  115	        if(string[len-1] == ')') string
                           A  1323    .LINE 115
                           A  1324    
040778 DD7EFC              A  1325    	LD	A,(IX+%FFFFFFFC)
04077B B7ED62              A  1326    	UEXT	HL
04077E 6F                  A  1327    	LD	L,A
04077F DD0706              A  1328    	LD	BC,(IX+%6)
040782 09                  A  1329    	ADD	HL,BC
040783 2B                  A  1330    	DEC	HL
040784 DD2FF9              A  1331    	LD	(IX+%FFFFFFF9),HL
040787 7E                  A  1332    	LD	A,(HL)
040788 47                  A  1333    	LD	B,A
040789 17ED62              A  1334    	SEXT	HL
04078C 68                  A  1335    	LD	L,B
04078D 01290000            A  1336    	LD	BC,41
040791 B7                  A  1337    	OR	A,A
040792 ED42                A  1338    	SBC	HL,BC
040794 20 07               A  1339    	JR	NZ,L_47
040796 DD27F9              A  1340    	LD	HL,(IX+%FFFFFFF9)
040799 3600                A  1341    	LD	(HL),%0
                           A  1342    ;  116	        else error(message[ERROR_CLOSIN
                           A  1343    .LINE 116
                           A  1344    
04079B 18 0C               A  1345    	JR	L_48
04079D                     A  1346    L_47:
04079D 21 47 67 04         A  1347    	LD	HL,_message+6
0407A1 ED07                A  1348    	LD	BC,(HL)
0407A3 C5                  A  1349    	PUSH	BC
0407A4 CD A4 4E 04         A  1350    	CALL	_error
0407A8 C1                  A  1351    	POP	BC
0407A9                     A  1352    L_48:
                           A  1353    ;  117	        ptr = &string[1];
                           A  1354    .LINE 117
                           A  1355    
0407A9 DD0706              A  1356    	LD	BC,(IX+%6)
0407AC 03                  A  1357    	INC	BC
0407AD DD0FFD              A  1358    	LD	(IX+%FFFFFFFD),BC
                           A  1359    ;  118	    }
                           A  1360    ;  119	    else {
                           A  1361    .LINE 119
                           A  1362    
0407B0 18 2E               A  1363    	JR	L_171
0407B2                     A  1364    L_51:
                           A  1365    ;  120	        operand->indirect = false;
                           A  1366    .LINE 120
                           A  1367    
0407B2 DD3109              A  1368    	LD	IY,(IX+%9)
0407B5 FD360400            A  1369    	LD	(IY+%4),%0
                           A  1370    ;  121	        // should not find a closing br
                           A  1371    ;  122	        if(string[len-1] == ')') error(
                           A  1372    .LINE 122
                           A  1373    
0407B9 DD7EFC              A  1374    	LD	A,(IX+%FFFFFFFC)
0407BC B7ED62              A  1375    	UEXT	HL
0407BF 6F                  A  1376    	LD	L,A
0407C0 DD0706              A  1377    	LD	BC,(IX+%6)
0407C3 09                  A  1378    	ADD	HL,BC
0407C4 2B                  A  1379    	DEC	HL
0407C5 7E                  A  1380    	LD	A,(HL)
0407C6 47                  A  1381    	LD	B,A
0407C7 17ED62              A  1382    	SEXT	HL
0407CA 68                  A  1383    	LD	L,B
0407CB 01290000            A  1384    	LD	BC,41
0407CF B7                  A  1385    	OR	A,A
0407D0 ED42                A  1386    	SBC	HL,BC
0407D2 20 0C               A  1387    	JR	NZ,L_171
0407D4 21 44 67 04         A  1388    	LD	HL,_message+3
0407D8 ED07                A  1389    	LD	BC,(HL)
0407DA C5                  A  1390    	PUSH	BC
0407DB CD A4 4E 04         A  1391    	CALL	_error
0407DF C1                  A  1392    	POP	BC
                           A  1393    ;  123	    }
0407E0                     A  1394    L_171:
                           A  1395    .LINE 123
                           A  1396    
                           A  1397    ;  124	
                           A  1398    ;  125	    switch(tolower(*ptr++)) {
                           A  1399    .LINE 125
                           A  1400    
0407E0 DD07FD              A  1401    	LD	BC,(IX+%FFFFFFFD)
0407E3 DD0FF6              A  1402    	LD	(IX+%FFFFFFF6),BC
0407E6 DD07FD              A  1403    	LD	BC,(IX+%FFFFFFFD)
0407E9 03                  A  1404    	INC	BC
0407EA DD0FFD              A  1405    	LD	(IX+%FFFFFFFD),BC
0407ED DD27F6              A  1406    	LD	HL,(IX+%FFFFFFF6)
0407F0 7E                  A  1407    	LD	A,(HL)
0407F1 47                  A  1408    	LD	B,A
0407F2 17ED62              A  1409    	SEXT	HL
0407F5 68                  A  1410    	LD	L,B
0407F6 E5                  A  1411    	PUSH	HL
0407F7 CD 4F 64 04         A  1412    	CALL	_tolower
0407FB C1                  A  1413    	POP	BC
0407FC CD B2 63 04         A  1414    	CALL	__case8D
040800 E9                  A  1415    	JP	(HL)
040801                     A  1416    L__30:
040801 0F00                A  1417    	DW	15
040803 00                  A  1418    	DB	0
040804 190E04              A  1419    	DW24	L_176	
                           A  1420    
040807 61                  A  1421    	DB	97
040808 420804              A  1422    	DW24	L_54	
                           A  1423    
04080B 62                  A  1424    	DB	98
04080C CD0804              A  1425    	DW24	L_67	
                           A  1426    
04080F 63                  A  1427    	DB	99
040810 3C0904              A  1428    	DW24	L_75	
                           A  1429    
040813 64                  A  1430    	DB	100
040814 7A0904              A  1431    	DW24	L_80	
                           A  1432    
040817 65                  A  1433    	DB	101
040818 E80904              A  1434    	DW24	L_90	
                           A  1435    
04081B 68                  A  1436    	DB	104
04081C 1E0A04              A  1437    	DW24	L_95	
                           A  1438    
04081F 69                  A  1439    	DB	105
040820 8D0A04              A  1440    	DW24	L_103	
                           A  1441    
040823 6C                  A  1442    	DB	108
040824 910C04              A  1443    	DW24	L_136	
                           A  1444    
040827 6D                  A  1445    	DB	109
040828 C70C04              A  1446    	DW24	L_141	
                           A  1447    
04082B 6E                  A  1448    	DB	110
04082C 110D04              A  1449    	DW24	L_147	
                           A  1450    
04082F 70                  A  1451    	DB	112
040830 5D0D04              A  1452    	DW24	L_153	
                           A  1453    
040833 72                  A  1454    	DB	114
040834 BC0D04              A  1455    	DW24	L_160	
                           A  1456    
040837 73                  A  1457    	DB	115
040838 D50D04              A  1458    	DW24	L_163	
                           A  1459    
04083B 7A                  A  1460    	DB	122
04083C 050E04              A  1461    	DW24	L_167	
                           A  1462    
04083F 190E04              A  1463    	DW24	L_176	
                           A  1464    
                           A  1465    ;  126	        case 0: // empty operand
                           A  1466    ;  127	            break;
                           A  1467    ;  128	        case 'a':
040842                     A  1468    L_54:
                           A  1469    .LINE 128
                           A  1470    
                           A  1471    ;  129	            switch(tolower(*ptr++)) {
                           A  1472    .LINE 129
                           A  1473    
040842 DD07FD              A  1474    	LD	BC,(IX+%FFFFFFFD)
040845 DD0FF3              A  1475    	LD	(IX+%FFFFFFF3),BC
040848 DD07FD              A  1476    	LD	BC,(IX+%FFFFFFFD)
04084B 03                  A  1477    	INC	BC
04084C DD0FFD              A  1478    	LD	(IX+%FFFFFFFD),BC
04084F DD27F3              A  1479    	LD	HL,(IX+%FFFFFFF3)
040852 7E                  A  1480    	LD	A,(HL)
040853 47                  A  1481    	LD	B,A
040854 17ED62              A  1482    	SEXT	HL
040857 68                  A  1483    	LD	L,B
040858 E5                  A  1484    	PUSH	HL
040859 CD 4F 64 04         A  1485    	CALL	_tolower
04085D C1                  A  1486    	POP	BC
04085E CD B2 63 04         A  1487    	CALL	__case8D
040862 E9                  A  1488    	JP	(HL)
040863                     A  1489    L__31:
040863 0200                A  1490    	DW	2
040865 00                  A  1491    	DB	0
040866 700804              A  1492    	DW24	L_56	
                           A  1493    
040869 66                  A  1494    	DB	102
04086A 820804              A  1495    	DW24	L_57	
                           A  1496    
04086D 190E04              A  1497    	DW24	L_176	
                           A  1498    
                           A  1499    ;  130	                case 0:
040870                     A  1500    L_56:
                           A  1501    .LINE 130
                           A  1502    
                           A  1503    ;  131	                    operand->reg = R_A;
                           A  1504    .LINE 131
                           A  1505    
040870 01010000            A  1506    	LD	BC,1
040874 DD3109              A  1507    	LD	IY,(IX+%9)
040877 FD0F00              A  1508    	LD	(IY+%0),BC
                           A  1509    ;  132	                    operand->reg_index 
                           A  1510    .LINE 132
                           A  1511    
04087A FD360307            A  1512    	LD	(IY+%3),%7
                           A  1513    ;  133	                    return;
                           A  1514    .LINE 133
                           A  1515    
04087E C3 5B 0E 04         A  1516    	JR	L_177
                           A  1517    ;  134	                case 'f':
040882                     A  1518    L_57:
                           A  1519    .LINE 134
                           A  1520    
                           A  1521    ;  135	                    switch(tolower(*ptr
                           A  1522    .LINE 135
                           A  1523    
040882 DD07FD              A  1524    	LD	BC,(IX+%FFFFFFFD)
040885 DD0FF0              A  1525    	LD	(IX+%FFFFFFF0),BC
040888 C5E1                A  1526    	LD	HL,BC
04088A 7E                  A  1527    	LD	A,(HL)
04088B 47                  A  1528    	LD	B,A
04088C 17ED62              A  1529    	SEXT	HL
04088F 68                  A  1530    	LD	L,B
040890 E5                  A  1531    	PUSH	HL
040891 CD 4F 64 04         A  1532    	CALL	_tolower
040895 C1                  A  1533    	POP	BC
040896 CD B2 63 04         A  1534    	CALL	__case8D
04089A E9                  A  1535    	JP	(HL)
04089B                     A  1536    L__32:
04089B 0200                A  1537    	DW	2
04089D 00                  A  1538    	DB	0
04089E A80804              A  1539    	DW24	L_59	
                           A  1540    
0408A1 27                  A  1541    	DB	39
0408A2 A80804              A  1542    	DW24	L_60	
                           A  1543    
0408A5 190E04              A  1544    	DW24	L_176	
                           A  1545    
                           A  1546    ;  136	                        case 0:
0408A8                     A  1547    L_59:
                           A  1548    .LINE 136
                           A  1549    
                           A  1550    ;  137	                        case '\'':
0408A8                     A  1551    L_60:
                           A  1552    .LINE 137
                           A  1553    
                           A  1554    ;  138	                            operand->re
                           A  1555    .LINE 138
                           A  1556    
0408A8 010C0000            A  1557    	LD	BC,12
0408AC DD3109              A  1558    	LD	IY,(IX+%9)
0408AF FD0F00              A  1559    	LD	(IY+%0),BC
                           A  1560    ;  139	                            operand->re
                           A  1561    .LINE 139
                           A  1562    
0408B2 FD360303            A  1563    	LD	(IY+%3),%3
                           A  1564    ;  140	                            if(operand-
                           A  1565    .LINE 140
                           A  1566    
0408B6 FD7E04              A  1567    	LD	A,(IY+%4)
0408B9 B7                  A  1568    	OR	A,A
0408BA CA 5B 0E 04         A  1569    	JR	Z,L_177
0408BE ED4B 41 67 04       A  1570    	LD	BC,(_message)
0408C3 C5                  A  1571    	PUSH	BC
0408C4 CD A4 4E 04         A  1572    	CALL	_error
0408C8 C1                  A  1573    	POP	BC
                           A  1574    ;  141	                            return;
                           A  1575    .LINE 141
                           A  1576    
0408C9 C3 5B 0E 04         A  1577    	JR	L_177
                           A  1578    ;  142	                        default:
                           A  1579    ;  143	                            break;
                           A  1580    ;  144	                    }
                           A  1581    ;  145	                    break;
                           A  1582    ;  146	                default:
                           A  1583    ;  147	                    break;
                           A  1584    ;  148	            }
                           A  1585    ;  149	            break;
                           A  1586    ;  150	        case 'b':
0408CD                     A  1587    L_67:
                           A  1588    .LINE 150
                           A  1589    
                           A  1590    ;  151	            switch(tolower(*ptr++)) {
                           A  1591    .LINE 151
                           A  1592    
0408CD DD07FD              A  1593    	LD	BC,(IX+%FFFFFFFD)
0408D0 DD0FED              A  1594    	LD	(IX+%FFFFFFED),BC
0408D3 DD07FD              A  1595    	LD	BC,(IX+%FFFFFFFD)
0408D6 03                  A  1596    	INC	BC
0408D7 DD0FFD              A  1597    	LD	(IX+%FFFFFFFD),BC
0408DA DD27ED              A  1598    	LD	HL,(IX+%FFFFFFED)
0408DD 7E                  A  1599    	LD	A,(HL)
0408DE 47                  A  1600    	LD	B,A
0408DF 17ED62              A  1601    	SEXT	HL
0408E2 68                  A  1602    	LD	L,B
0408E3 E5                  A  1603    	PUSH	HL
0408E4 CD 4F 64 04         A  1604    	CALL	_tolower
0408E8 C1                  A  1605    	POP	BC
0408E9 CD B2 63 04         A  1606    	CALL	__case8D
0408ED E9                  A  1607    	JP	(HL)
0408EE                     A  1608    L__34:
0408EE 0200                A  1609    	DW	2
0408F0 00                  A  1610    	DB	0
0408F1 FB0804              A  1611    	DW24	L_69	
                           A  1612    
0408F4 63                  A  1613    	DB	99
0408F5 0D0904              A  1614    	DW24	L_70	
                           A  1615    
0408F8 190E04              A  1616    	DW24	L_176	
                           A  1617    
                           A  1618    ;  152	                case 0:
0408FB                     A  1619    L_69:
                           A  1620    .LINE 152
                           A  1621    
                           A  1622    ;  153	                    operand->reg = R_B;
                           A  1623    .LINE 153
                           A  1624    
0408FB 01020000            A  1625    	LD	BC,2
0408FF DD3109              A  1626    	LD	IY,(IX+%9)
040902 FD0F00              A  1627    	LD	(IY+%0),BC
                           A  1628    ;  154	                    operand->reg_index 
                           A  1629    .LINE 154
                           A  1630    
040905 FD360300            A  1631    	LD	(IY+%3),%0
                           A  1632    ;  155	                    return;
                           A  1633    .LINE 155
                           A  1634    
040909 C3 5B 0E 04         A  1635    	JR	L_177
                           A  1636    ;  156	                case 'c':
04090D                     A  1637    L_70:
                           A  1638    .LINE 156
                           A  1639    
                           A  1640    ;  157	                    if(tolower(*ptr == 
                           A  1641    .LINE 157
                           A  1642    
04090D DD27FD              A  1643    	LD	HL,(IX+%FFFFFFFD)
040910 7E                  A  1644    	LD	A,(HL)
040911 B7                  A  1645    	OR	A,A
040912 20 04               A  1646    	JR	NZ,L__36
040914 3E01                A  1647    	LD	A,%1
040916 18 01               A  1648    	JR	L__37
040918                     A  1649    L__36:
040918 AF                  A  1650    	XOR	A,A
040919                     A  1651    L__37:
040919 4F                  A  1652    	LD	C,A
04091A 0600                A  1653    	LD	B,%0
04091C C5                  A  1654    	PUSH	BC
04091D CD 4F 64 04         A  1655    	CALL	_tolower
040921 C1                  A  1656    	POP	BC
040922 CD CF 60 04         A  1657    	CALL	__icmpzero
040926 CA 19 0E 04         A  1658    	JR	Z,L_176
                           A  1659    ;  158	                        operand->reg = 
                           A  1660    .LINE 158
                           A  1661    
04092A 01080000            A  1662    	LD	BC,8
04092E DD3109              A  1663    	LD	IY,(IX+%9)
040931 FD0F00              A  1664    	LD	(IY+%0),BC
                           A  1665    ;  159	                        operand->reg_in
                           A  1666    .LINE 159
                           A  1667    
040934 FD360300            A  1668    	LD	(IY+%3),%0
                           A  1669    ;  160	                        return;
                           A  1670    .LINE 160
                           A  1671    
040938 C3 5B 0E 04         A  1672    	JR	L_177
                           A  1673    ;  161	                    }
                           A  1674    .LINE 161
                           A  1675    
                           A  1676    ;  162	                    break;
                           A  1677    .LINE 162
                           A  1678    
                           A  1679    ;  163	                default:
                           A  1680    ;  164	                    break;
                           A  1681    ;  165	            }
                           A  1682    ;  166	            break;
                           A  1683    ;  167	        case 'c':
04093C                     A  1684    L_75:
                           A  1685    .LINE 167
                           A  1686    
                           A  1687    ;  168	            switch(tolower(*ptr++)) {
                           A  1688    .LINE 168
                           A  1689    
04093C DD07FD              A  1690    	LD	BC,(IX+%FFFFFFFD)
04093F DD0FEA              A  1691    	LD	(IX+%FFFFFFEA),BC
040942 DD07FD              A  1692    	LD	BC,(IX+%FFFFFFFD)
040945 03                  A  1693    	INC	BC
040946 DD0FFD              A  1694    	LD	(IX+%FFFFFFFD),BC
040949 DD27EA              A  1695    	LD	HL,(IX+%FFFFFFEA)
04094C 7E                  A  1696    	LD	A,(HL)
04094D 47                  A  1697    	LD	B,A
04094E 17ED62              A  1698    	SEXT	HL
040951 68                  A  1699    	LD	L,B
040952 E5                  A  1700    	PUSH	HL
040953 CD 4F 64 04         A  1701    	CALL	_tolower
040957 C1                  A  1702    	POP	BC
040958 CD CF 60 04         A  1703    	CALL	__icmpzero
04095C C2 19 0E 04         A  1704    	JR	NZ,L_176
                           A  1705    ;  169	                case 0:
                           A  1706    .LINE 169
                           A  1707    
                           A  1708    ;  170	                    operand->reg = R_C;
                           A  1709    .LINE 170
                           A  1710    
040960 01030000            A  1711    	LD	BC,3
040964 DD3109              A  1712    	LD	IY,(IX+%9)
040967 FD0F00              A  1713    	LD	(IY+%0),BC
                           A  1714    ;  171	                    operand->reg_index 
                           A  1715    .LINE 171
                           A  1716    
04096A FD360301            A  1717    	LD	(IY+%3),%1
                           A  1718    ;  172	                    operand->cc = true;
                           A  1719    .LINE 172
                           A  1720    
04096E FD360501            A  1721    	LD	(IY+%5),%1
                           A  1722    ;  173	                    operand->cc_index =
                           A  1723    .LINE 173
                           A  1724    
040972 FD360603            A  1725    	LD	(IY+%6),%3
                           A  1726    ;  174	                    return;
                           A  1727    .LINE 174
                           A  1728    
040976 C3 5B 0E 04         A  1729    	JR	L_177
                           A  1730    ;  175	                default:
                           A  1731    ;  176	                    break;
                           A  1732    ;  177	            }
                           A  1733    ;  178	            break;
                           A  1734    ;  179	        case 'd':
04097A                     A  1735    L_80:
                           A  1736    .LINE 179
                           A  1737    
                           A  1738    ;  180	            switch(tolower(*ptr++)) {
                           A  1739    .LINE 180
                           A  1740    
04097A DD07FD              A  1741    	LD	BC,(IX+%FFFFFFFD)
04097D DD0FE7              A  1742    	LD	(IX+%FFFFFFE7),BC
040980 DD07FD              A  1743    	LD	BC,(IX+%FFFFFFFD)
040983 03                  A  1744    	INC	BC
040984 DD0FFD              A  1745    	LD	(IX+%FFFFFFFD),BC
040987 DD27E7              A  1746    	LD	HL,(IX+%FFFFFFE7)
04098A 7E                  A  1747    	LD	A,(HL)
04098B 47                  A  1748    	LD	B,A
04098C 17ED62              A  1749    	SEXT	HL
04098F 68                  A  1750    	LD	L,B
040990 E5                  A  1751    	PUSH	HL
040991 CD 4F 64 04         A  1752    	CALL	_tolower
040995 C1                  A  1753    	POP	BC
040996 CD B2 63 04         A  1754    	CALL	__case8D
04099A E9                  A  1755    	JP	(HL)
04099B                     A  1756    L__39:
04099B 0200                A  1757    	DW	2
04099D 00                  A  1758    	DB	0
04099E A80904              A  1759    	DW24	L_82	
                           A  1760    
0409A1 65                  A  1761    	DB	101
0409A2 BA0904              A  1762    	DW24	L_83	
                           A  1763    
0409A5 190E04              A  1764    	DW24	L_176	
                           A  1765    
                           A  1766    ;  181	                case 0:
0409A8                     A  1767    L_82:
                           A  1768    .LINE 181
                           A  1769    
                           A  1770    ;  182	                    operand->reg = R_D;
                           A  1771    .LINE 182
                           A  1772    
0409A8 01040000            A  1773    	LD	BC,4
0409AC DD3109              A  1774    	LD	IY,(IX+%9)
0409AF FD0F00              A  1775    	LD	(IY+%0),BC
                           A  1776    ;  183	                    operand->reg_index 
                           A  1777    .LINE 183
                           A  1778    
0409B2 FD360302            A  1779    	LD	(IY+%3),%2
                           A  1780    ;  184	                    return;
                           A  1781    .LINE 184
                           A  1782    
0409B6 C3 5B 0E 04         A  1783    	JR	L_177
                           A  1784    ;  185	                case 'e':
0409BA                     A  1785    L_83:
                           A  1786    .LINE 185
                           A  1787    
                           A  1788    ;  186	                    switch(tolower(*ptr
                           A  1789    .LINE 186
                           A  1790    
0409BA DD07FD              A  1791    	LD	BC,(IX+%FFFFFFFD)
0409BD DD0FE4              A  1792    	LD	(IX+%FFFFFFE4),BC
0409C0 C5E1                A  1793    	LD	HL,BC
0409C2 7E                  A  1794    	LD	A,(HL)
0409C3 47                  A  1795    	LD	B,A
0409C4 17ED62              A  1796    	SEXT	HL
0409C7 68                  A  1797    	LD	L,B
0409C8 E5                  A  1798    	PUSH	HL
0409C9 CD 4F 64 04         A  1799    	CALL	_tolower
0409CD C1                  A  1800    	POP	BC
0409CE CD CF 60 04         A  1801    	CALL	__icmpzero
0409D2 C2 19 0E 04         A  1802    	JR	NZ,L_176
                           A  1803    ;  187	                        case 0:
                           A  1804    .LINE 187
                           A  1805    
                           A  1806    ;  188	                            operand->re
                           A  1807    .LINE 188
                           A  1808    
0409D6 01090000            A  1809    	LD	BC,9
0409DA DD3109              A  1810    	LD	IY,(IX+%9)
0409DD FD0F00              A  1811    	LD	(IY+%0),BC
                           A  1812    ;  189	                            operand->re
                           A  1813    .LINE 189
                           A  1814    
0409E0 FD360301            A  1815    	LD	(IY+%3),%1
                           A  1816    ;  190	                            return;
                           A  1817    .LINE 190
                           A  1818    
0409E4 C3 5B 0E 04         A  1819    	JR	L_177
                           A  1820    ;  191	                        default:
                           A  1821    ;  192	                            break;
                           A  1822    ;  193	                    }
                           A  1823    ;  194	                    break;
                           A  1824    ;  195	                default:
                           A  1825    ;  196	                    break;
                           A  1826    ;  197	            }
                           A  1827    ;  198	            break;
                           A  1828    ;  199	        case 'e':
0409E8                     A  1829    L_90:
                           A  1830    .LINE 199
                           A  1831    
                           A  1832    ;  200	            switch(tolower(*ptr++)) {
                           A  1833    .LINE 200
                           A  1834    
0409E8 DD07FD              A  1835    	LD	BC,(IX+%FFFFFFFD)
0409EB DD0FE1              A  1836    	LD	(IX+%FFFFFFE1),BC
0409EE DD07FD              A  1837    	LD	BC,(IX+%FFFFFFFD)
0409F1 03                  A  1838    	INC	BC
0409F2 DD0FFD              A  1839    	LD	(IX+%FFFFFFFD),BC
0409F5 DD27E1              A  1840    	LD	HL,(IX+%FFFFFFE1)
0409F8 7E                  A  1841    	LD	A,(HL)
0409F9 47                  A  1842    	LD	B,A
0409FA 17ED62              A  1843    	SEXT	HL
0409FD 68                  A  1844    	LD	L,B
0409FE E5                  A  1845    	PUSH	HL
0409FF CD 4F 64 04         A  1846    	CALL	_tolower
040A03 C1                  A  1847    	POP	BC
040A04 CD CF 60 04         A  1848    	CALL	__icmpzero
040A08 C2 19 0E 04         A  1849    	JR	NZ,L_176
                           A  1850    ;  201	                case 0:
                           A  1851    .LINE 201
                           A  1852    
                           A  1853    ;  202	                    operand->reg = R_E;
                           A  1854    .LINE 202
                           A  1855    
040A0C 01050000            A  1856    	LD	BC,5
040A10 DD3109              A  1857    	LD	IY,(IX+%9)
040A13 FD0F00              A  1858    	LD	(IY+%0),BC
                           A  1859    ;  203	                    operand->reg_index 
                           A  1860    .LINE 203
                           A  1861    
040A16 FD360303            A  1862    	LD	(IY+%3),%3
                           A  1863    ;  204	                    return;
                           A  1864    .LINE 204
                           A  1865    
040A1A C3 5B 0E 04         A  1866    	JR	L_177
                           A  1867    ;  205	                default:
                           A  1868    ;  206	                    break;
                           A  1869    ;  207	            }
                           A  1870    ;  208	            break;
                           A  1871    ;  209	        case 'h':
040A1E                     A  1872    L_95:
                           A  1873    .LINE 209
                           A  1874    
                           A  1875    ;  210	            switch(tolower(*ptr++)) {
                           A  1876    .LINE 210
                           A  1877    
040A1E DD07FD              A  1878    	LD	BC,(IX+%FFFFFFFD)
040A21 DD0FDE              A  1879    	LD	(IX+%FFFFFFDE),BC
040A24 DD07FD              A  1880    	LD	BC,(IX+%FFFFFFFD)
040A27 03                  A  1881    	INC	BC
040A28 DD0FFD              A  1882    	LD	(IX+%FFFFFFFD),BC
040A2B DD27DE              A  1883    	LD	HL,(IX+%FFFFFFDE)
040A2E 7E                  A  1884    	LD	A,(HL)
040A2F 47                  A  1885    	LD	B,A
040A30 17ED62              A  1886    	SEXT	HL
040A33 68                  A  1887    	LD	L,B
040A34 E5                  A  1888    	PUSH	HL
040A35 CD 4F 64 04         A  1889    	CALL	_tolower
040A39 C1                  A  1890    	POP	BC
040A3A CD B2 63 04         A  1891    	CALL	__case8D
040A3E E9                  A  1892    	JP	(HL)
040A3F                     A  1893    L__40:
040A3F 0200                A  1894    	DW	2
040A41 00                  A  1895    	DB	0
040A42 4C0A04              A  1896    	DW24	L_97	
                           A  1897    
040A45 6C                  A  1898    	DB	108
040A46 5E0A04              A  1899    	DW24	L_98	
                           A  1900    
040A49 190E04              A  1901    	DW24	L_176	
                           A  1902    
                           A  1903    ;  211	                case 0:
040A4C                     A  1904    L_97:
                           A  1905    .LINE 211
                           A  1906    
                           A  1907    ;  212	                    operand->reg = R_H;
                           A  1908    .LINE 212
                           A  1909    
040A4C 01060000            A  1910    	LD	BC,6
040A50 DD3109              A  1911    	LD	IY,(IX+%9)
040A53 FD0F00              A  1912    	LD	(IY+%0),BC
                           A  1913    ;  213	                    operand->reg_index 
                           A  1914    .LINE 213
                           A  1915    
040A56 FD360304            A  1916    	LD	(IY+%3),%4
                           A  1917    ;  214	                    return;
                           A  1918    .LINE 214
                           A  1919    
040A5A C3 5B 0E 04         A  1920    	JR	L_177
                           A  1921    ;  215	                case 'l':
040A5E                     A  1922    L_98:
                           A  1923    .LINE 215
                           A  1924    
                           A  1925    ;  216	                    if(tolower(*ptr == 
                           A  1926    .LINE 216
                           A  1927    
040A5E DD27FD              A  1928    	LD	HL,(IX+%FFFFFFFD)
040A61 7E                  A  1929    	LD	A,(HL)
040A62 B7                  A  1930    	OR	A,A
040A63 20 04               A  1931    	JR	NZ,L__42
040A65 3E01                A  1932    	LD	A,%1
040A67 18 01               A  1933    	JR	L__43
040A69                     A  1934    L__42:
040A69 AF                  A  1935    	XOR	A,A
040A6A                     A  1936    L__43:
040A6A 4F                  A  1937    	LD	C,A
040A6B 0600                A  1938    	LD	B,%0
040A6D C5                  A  1939    	PUSH	BC
040A6E CD 4F 64 04         A  1940    	CALL	_tolower
040A72 C1                  A  1941    	POP	BC
040A73 CD CF 60 04         A  1942    	CALL	__icmpzero
040A77 CA 19 0E 04         A  1943    	JR	Z,L_176
                           A  1944    ;  217	                        operand->reg = 
                           A  1945    .LINE 217
                           A  1946    
040A7B 010A0000            A  1947    	LD	BC,10
040A7F DD3109              A  1948    	LD	IY,(IX+%9)
040A82 FD0F00              A  1949    	LD	(IY+%0),BC
                           A  1950    ;  218	                        operand->reg_in
                           A  1951    .LINE 218
                           A  1952    
040A85 FD360302            A  1953    	LD	(IY+%3),%2
                           A  1954    ;  219	                        return;
                           A  1955    .LINE 219
                           A  1956    
040A89 C3 5B 0E 04         A  1957    	JR	L_177
                           A  1958    ;  220	                    }
                           A  1959    .LINE 220
                           A  1960    
                           A  1961    ;  221	                    break;
                           A  1962    .LINE 221
                           A  1963    
                           A  1964    ;  222	                default:
                           A  1965    ;  223	                    break;
                           A  1966    ;  224	            }
                           A  1967    ;  225	            break;
                           A  1968    ;  226	        case 'i':
040A8D                     A  1969    L_103:
                           A  1970    .LINE 226
                           A  1971    
                           A  1972    ;  227	            switch(tolower(*ptr++)) {
                           A  1973    .LINE 227
                           A  1974    
040A8D DD07FD              A  1975    	LD	BC,(IX+%FFFFFFFD)
040A90 DD0FDB              A  1976    	LD	(IX+%FFFFFFDB),BC
040A93 DD07FD              A  1977    	LD	BC,(IX+%FFFFFFFD)
040A96 03                  A  1978    	INC	BC
040A97 DD0FFD              A  1979    	LD	(IX+%FFFFFFFD),BC
040A9A DD27DB              A  1980    	LD	HL,(IX+%FFFFFFDB)
040A9D 7E                  A  1981    	LD	A,(HL)
040A9E 47                  A  1982    	LD	B,A
040A9F 17ED62              A  1983    	SEXT	HL
040AA2 68                  A  1984    	LD	L,B
040AA3 E5                  A  1985    	PUSH	HL
040AA4 CD 4F 64 04         A  1986    	CALL	_tolower
040AA8 C1                  A  1987    	POP	BC
040AA9 CD B2 63 04         A  1988    	CALL	__case8D
040AAD E9                  A  1989    	JP	(HL)
040AAE                     A  1990    L__45:
040AAE 0300                A  1991    	DW	3
040AB0 00                  A  1992    	DB	0
040AB1 BF0A04              A  1993    	DW24	L_105	
                           A  1994    
040AB4 78                  A  1995    	DB	120
040AB5 D10A04              A  1996    	DW24	L_106	
                           A  1997    
040AB8 79                  A  1998    	DB	121
040AB9 B10B04              A  1999    	DW24	L_120	
                           A  2000    
040ABC 190E04              A  2001    	DW24	L_176	
                           A  2002    
                           A  2003    ;  228	                case 0:
040ABF                     A  2004    L_105:
                           A  2005    .LINE 228
                           A  2006    
                           A  2007    ;  229	                    operand->reg = R_I;
                           A  2008    .LINE 229
                           A  2009    
040ABF 01150000            A  2010    	LD	BC,21
040AC3 DD3109              A  2011    	LD	IY,(IX+%9)
040AC6 FD0F00              A  2012    	LD	(IY+%0),BC
                           A  2013    ;  230	                    operand->reg_index 
                           A  2014    .LINE 230
                           A  2015    
040AC9 FD360300            A  2016    	LD	(IY+%3),%0
                           A  2017    ;  231	                    return;
                           A  2018    .LINE 231
                           A  2019    
040ACD C3 5B 0E 04         A  2020    	JR	L_177
                           A  2021    ;  232	                case 'x':
040AD1                     A  2022    L_106:
                           A  2023    .LINE 232
                           A  2024    
                           A  2025    ;  233	                    switch(tolower(*ptr
                           A  2026    .LINE 233
                           A  2027    
040AD1 DD07FD              A  2028    	LD	BC,(IX+%FFFFFFFD)
040AD4 DD0FD8              A  2029    	LD	(IX+%FFFFFFD8),BC
040AD7 DD07FD              A  2030    	LD	BC,(IX+%FFFFFFFD)
040ADA 03                  A  2031    	INC	BC
040ADB DD0FFD              A  2032    	LD	(IX+%FFFFFFFD),BC
040ADE DD27D8              A  2033    	LD	HL,(IX+%FFFFFFD8)
040AE1 7E                  A  2034    	LD	A,(HL)
040AE2 47                  A  2035    	LD	B,A
040AE3 17ED62              A  2036    	SEXT	HL
040AE6 68                  A  2037    	LD	L,B
040AE7 E5                  A  2038    	PUSH	HL
040AE8 CD 4F 64 04         A  2039    	CALL	_tolower
040AEC C1                  A  2040    	POP	BC
040AED CD B2 63 04         A  2041    	CALL	__case8D
040AF1 E9                  A  2042    	JP	(HL)
040AF2                     A  2043    L__46:
040AF2 0500                A  2044    	DW	5
040AF4 00                  A  2045    	DB	0
040AF5 0B0B04              A  2046    	DW24	L_108	
                           A  2047    
040AF8 2B                  A  2048    	DB	43
040AF9 390B04              A  2049    	DW24	L_111	
                           A  2050    
040AFC 2D                  A  2051    	DB	45
040AFD 390B04              A  2052    	DW24	L_112	
                           A  2053    
040B00 68                  A  2054    	DB	104
040B01 1D0B04              A  2055    	DW24	L_109	
                           A  2056    
040B04 6C                  A  2057    	DB	108
040B05 2B0B04              A  2058    	DW24	L_110	
                           A  2059    
040B08 190E04              A  2060    	DW24	L_176	
                           A  2061    
                           A  2062    ;  234	                        case 0:
040B0B                     A  2063    L_108:
                           A  2064    .LINE 234
                           A  2065    
                           A  2066    ;  235	                            operand->re
                           A  2067    .LINE 235
                           A  2068    
040B0B 010D0000            A  2069    	LD	BC,13
040B0F DD3109              A  2070    	LD	IY,(IX+%9)
040B12 FD0F00              A  2071    	LD	(IY+%0),BC
                           A  2072    ;  236	                            operand->re
                           A  2073    .LINE 236
                           A  2074    
040B15 FD360302            A  2075    	LD	(IY+%3),%2
                           A  2076    ;  237	                            return;
                           A  2077    .LINE 237
                           A  2078    
040B19 C3 5B 0E 04         A  2079    	JR	L_177
                           A  2080    ;  238	                        case 'h':
040B1D                     A  2081    L_109:
                           A  2082    .LINE 238
                           A  2083    
                           A  2084    ;  239	                            operand->re
                           A  2085    .LINE 239
                           A  2086    
040B1D 010F0000            A  2087    	LD	BC,15
040B21 DD3109              A  2088    	LD	IY,(IX+%9)
040B24 FD0F00              A  2089    	LD	(IY+%0),BC
                           A  2090    ;  240	                            return;
                           A  2091    .LINE 240
                           A  2092    
040B27 C3 5B 0E 04         A  2093    	JR	L_177
                           A  2094    ;  241	                        case 'l':
040B2B                     A  2095    L_110:
                           A  2096    .LINE 241
                           A  2097    
                           A  2098    ;  242	                            operand->re
                           A  2099    .LINE 242
                           A  2100    
040B2B 01100000            A  2101    	LD	BC,16
040B2F DD3109              A  2102    	LD	IY,(IX+%9)
040B32 FD0F00              A  2103    	LD	(IY+%0),BC
                           A  2104    ;  243	                            return;
                           A  2105    .LINE 243
                           A  2106    
040B35 C3 5B 0E 04         A  2107    	JR	L_177
                           A  2108    ;  244	                        case '+':
040B39                     A  2109    L_111:
                           A  2110    .LINE 244
                           A  2111    
                           A  2112    ;  245	                        case '-':
040B39                     A  2113    L_112:
                           A  2114    .LINE 245
                           A  2115    
                           A  2116    ;  246	                            if(isdigit(
                           A  2117    .LINE 246
                           A  2118    
040B39 DD27FD              A  2119    	LD	HL,(IX+%FFFFFFFD)
040B3C 7E                  A  2120    	LD	A,(HL)
040B3D 47                  A  2121    	LD	B,A
040B3E 17ED62              A  2122    	SEXT	HL
040B41 68                  A  2123    	LD	L,B
040B42 E5                  A  2124    	PUSH	HL
040B43 CD DB 60 04         A  2125    	CALL	_isdigit
040B47 C1                  A  2126    	POP	BC
040B48 CD CF 60 04         A  2127    	CALL	__icmpzero
040B4C CA 19 0E 04         A  2128    	JR	Z,L_176
                           A  2129    ;  247	                                operand
                           A  2130    .LINE 247
                           A  2131    
040B50 010D0000            A  2132    	LD	BC,13
040B54 DD3109              A  2133    	LD	IY,(IX+%9)
040B57 FD0F00              A  2134    	LD	(IY+%0),BC
                           A  2135    ;  248	                                operand
                           A  2136    .LINE 248
                           A  2137    
040B5A FD360901            A  2138    	LD	(IY+%9),%1
                           A  2139    ;  249	                                if(*(pt
                           A  2140    .LINE 249
                           A  2141    
040B5E DD27FD              A  2142    	LD	HL,(IX+%FFFFFFFD)
040B61 2B                  A  2143    	DEC	HL
040B62 7E                  A  2144    	LD	A,(HL)
040B63 47                  A  2145    	LD	B,A
040B64 17ED62              A  2146    	SEXT	HL
040B67 68                  A  2147    	LD	L,B
040B68 012D0000            A  2148    	LD	BC,45
040B6C B7                  A  2149    	OR	A,A
040B6D ED42                A  2150    	SBC	HL,BC
040B6F 20 22               A  2151    	JR	NZ,L_114
040B71 01010000            A  2152    	LD	BC,1
040B75 C5                  A  2153    	PUSH	BC
040B76 DD07FD              A  2154    	LD	BC,(IX+%FFFFFFFD)
040B79 C5                  A  2155    	PUSH	BC
040B7A CD 41 4A 04         A  2156    	CALL	_str2num
040B7E C1                  A  2157    	POP	BC
040B7F C1                  A  2158    	POP	BC
040B80 CD 0C 5A 04         A  2159    	CALL	__sneg
040B84 DD3109              A  2160    	LD	IY,(IX+%9)
040B87 E5C1                A  2161    	LD	BC,HL
040B89 FD7107              A  2162    	LD	(IY+%7),C
040B8C FD7008              A  2163    	LD	(IY+%8),B
                           A  2164    ;  250	                                else op
                           A  2165    .LINE 250
                           A  2166    
040B8F C3 5B 0E 04         A  2167    	JR	L_177
040B93                     A  2168    L_114:
040B93 01010000            A  2169    	LD	BC,1
040B97 C5                  A  2170    	PUSH	BC
040B98 DD07FD              A  2171    	LD	BC,(IX+%FFFFFFFD)
040B9B C5                  A  2172    	PUSH	BC
040B9C CD 41 4A 04         A  2173    	CALL	_str2num
040BA0 C1                  A  2174    	POP	BC
040BA1 C1                  A  2175    	POP	BC
040BA2 DD3109              A  2176    	LD	IY,(IX+%9)
040BA5 E5C1                A  2177    	LD	BC,HL
040BA7 FD7107              A  2178    	LD	(IY+%7),C
040BAA FD7008              A  2179    	LD	(IY+%8),B
                           A  2180    ;  251	                                return;
                           A  2181    .LINE 251
                           A  2182    
040BAD C3 5B 0E 04         A  2183    	JR	L_177
                           A  2184    ;  252	                            }
                           A  2185    .LINE 252
                           A  2186    
                           A  2187    ;  253	                            break;
                           A  2188    .LINE 253
                           A  2189    
                           A  2190    ;  254	                        default:
                           A  2191    ;  255	                            break;
                           A  2192    ;  256	                    }
                           A  2193    ;  257	                    break;
                           A  2194    ;  258	                case 'y':
040BB1                     A  2195    L_120:
                           A  2196    .LINE 258
                           A  2197    
                           A  2198    ;  259	                    switch(tolower(*ptr
                           A  2199    .LINE 259
                           A  2200    
040BB1 DD07FD              A  2201    	LD	BC,(IX+%FFFFFFFD)
040BB4 DD0FD5              A  2202    	LD	(IX+%FFFFFFD5),BC
040BB7 DD07FD              A  2203    	LD	BC,(IX+%FFFFFFFD)
040BBA 03                  A  2204    	INC	BC
040BBB DD0FFD              A  2205    	LD	(IX+%FFFFFFFD),BC
040BBE DD27D5              A  2206    	LD	HL,(IX+%FFFFFFD5)
040BC1 7E                  A  2207    	LD	A,(HL)
040BC2 47                  A  2208    	LD	B,A
040BC3 17ED62              A  2209    	SEXT	HL
040BC6 68                  A  2210    	LD	L,B
040BC7 E5                  A  2211    	PUSH	HL
040BC8 CD 4F 64 04         A  2212    	CALL	_tolower
040BCC C1                  A  2213    	POP	BC
040BCD CD B2 63 04         A  2214    	CALL	__case8D
040BD1 E9                  A  2215    	JP	(HL)
040BD2                     A  2216    L__49:
040BD2 0500                A  2217    	DW	5
040BD4 00                  A  2218    	DB	0
040BD5 EB0B04              A  2219    	DW24	L_122	
                           A  2220    
040BD8 2B                  A  2221    	DB	43
040BD9 190C04              A  2222    	DW24	L_125	
                           A  2223    
040BDC 2D                  A  2224    	DB	45
040BDD 190C04              A  2225    	DW24	L_126	
                           A  2226    
040BE0 68                  A  2227    	DB	104
040BE1 FD0B04              A  2228    	DW24	L_123	
                           A  2229    
040BE4 6C                  A  2230    	DB	108
040BE5 0B0C04              A  2231    	DW24	L_124	
                           A  2232    
040BE8 190E04              A  2233    	DW24	L_176	
                           A  2234    
                           A  2235    ;  260	                        case 0:
040BEB                     A  2236    L_122:
                           A  2237    .LINE 260
                           A  2238    
                           A  2239    ;  261	                            operand->re
                           A  2240    .LINE 261
                           A  2241    
040BEB 010E0000            A  2242    	LD	BC,14
040BEF DD3109              A  2243    	LD	IY,(IX+%9)
040BF2 FD0F00              A  2244    	LD	(IY+%0),BC
                           A  2245    ;  262	                            operand->re
                           A  2246    .LINE 262
                           A  2247    
040BF5 FD360302            A  2248    	LD	(IY+%3),%2
                           A  2249    ;  263	                            return;
                           A  2250    .LINE 263
                           A  2251    
040BF9 C3 5B 0E 04         A  2252    	JR	L_177
                           A  2253    ;  264	                        case 'h':
040BFD                     A  2254    L_123:
                           A  2255    .LINE 264
                           A  2256    
                           A  2257    ;  265	                            operand->re
                           A  2258    .LINE 265
                           A  2259    
040BFD 01110000            A  2260    	LD	BC,17
040C01 DD3109              A  2261    	LD	IY,(IX+%9)
040C04 FD0F00              A  2262    	LD	(IY+%0),BC
                           A  2263    ;  266	                            return;
                           A  2264    .LINE 266
                           A  2265    
040C07 C3 5B 0E 04         A  2266    	JR	L_177
                           A  2267    ;  267	                        case 'l':
040C0B                     A  2268    L_124:
                           A  2269    .LINE 267
                           A  2270    
                           A  2271    ;  268	                            operand->re
                           A  2272    .LINE 268
                           A  2273    
040C0B 01120000            A  2274    	LD	BC,18
040C0F DD3109              A  2275    	LD	IY,(IX+%9)
040C12 FD0F00              A  2276    	LD	(IY+%0),BC
                           A  2277    ;  269	                            return;
                           A  2278    .LINE 269
                           A  2279    
040C15 C3 5B 0E 04         A  2280    	JR	L_177
                           A  2281    ;  270	                        case '+':
040C19                     A  2282    L_125:
                           A  2283    .LINE 270
                           A  2284    
                           A  2285    ;  271	                        case '-':
040C19                     A  2286    L_126:
                           A  2287    .LINE 271
                           A  2288    
                           A  2289    ;  272	                            if(isdigit(
                           A  2290    .LINE 272
                           A  2291    
040C19 DD27FD              A  2292    	LD	HL,(IX+%FFFFFFFD)
040C1C 7E                  A  2293    	LD	A,(HL)
040C1D 47                  A  2294    	LD	B,A
040C1E 17ED62              A  2295    	SEXT	HL
040C21 68                  A  2296    	LD	L,B
040C22 E5                  A  2297    	PUSH	HL
040C23 CD DB 60 04         A  2298    	CALL	_isdigit
040C27 C1                  A  2299    	POP	BC
040C28 CD CF 60 04         A  2300    	CALL	__icmpzero
040C2C CA 19 0E 04         A  2301    	JR	Z,L_176
                           A  2302    ;  273	                                operand
                           A  2303    .LINE 273
                           A  2304    
040C30 010E0000            A  2305    	LD	BC,14
040C34 DD3109              A  2306    	LD	IY,(IX+%9)
040C37 FD0F00              A  2307    	LD	(IY+%0),BC
                           A  2308    ;  274	                                operand
                           A  2309    .LINE 274
                           A  2310    
040C3A FD360901            A  2311    	LD	(IY+%9),%1
                           A  2312    ;  275	                                if(*(pt
                           A  2313    .LINE 275
                           A  2314    
040C3E DD27FD              A  2315    	LD	HL,(IX+%FFFFFFFD)
040C41 2B                  A  2316    	DEC	HL
040C42 7E                  A  2317    	LD	A,(HL)
040C43 47                  A  2318    	LD	B,A
040C44 17ED62              A  2319    	SEXT	HL
040C47 68                  A  2320    	LD	L,B
040C48 012D0000            A  2321    	LD	BC,45
040C4C B7                  A  2322    	OR	A,A
040C4D ED42                A  2323    	SBC	HL,BC
040C4F 20 22               A  2324    	JR	NZ,L_128
040C51 01010000            A  2325    	LD	BC,1
040C55 C5                  A  2326    	PUSH	BC
040C56 DD07FD              A  2327    	LD	BC,(IX+%FFFFFFFD)
040C59 C5                  A  2328    	PUSH	BC
040C5A CD 41 4A 04         A  2329    	CALL	_str2num
040C5E C1                  A  2330    	POP	BC
040C5F C1                  A  2331    	POP	BC
040C60 CD 0C 5A 04         A  2332    	CALL	__sneg
040C64 DD3109              A  2333    	LD	IY,(IX+%9)
040C67 E5C1                A  2334    	LD	BC,HL
040C69 FD7107              A  2335    	LD	(IY+%7),C
040C6C FD7008              A  2336    	LD	(IY+%8),B
                           A  2337    ;  276	                                else op
                           A  2338    .LINE 276
                           A  2339    
040C6F C3 5B 0E 04         A  2340    	JR	L_177
040C73                     A  2341    L_128:
040C73 01010000            A  2342    	LD	BC,1
040C77 C5                  A  2343    	PUSH	BC
040C78 DD07FD              A  2344    	LD	BC,(IX+%FFFFFFFD)
040C7B C5                  A  2345    	PUSH	BC
040C7C CD 41 4A 04         A  2346    	CALL	_str2num
040C80 C1                  A  2347    	POP	BC
040C81 C1                  A  2348    	POP	BC
040C82 DD3109              A  2349    	LD	IY,(IX+%9)
040C85 E5C1                A  2350    	LD	BC,HL
040C87 FD7107              A  2351    	LD	(IY+%7),C
040C8A FD7008              A  2352    	LD	(IY+%8),B
                           A  2353    ;  277	                                return;
                           A  2354    .LINE 277
                           A  2355    
040C8D C3 5B 0E 04         A  2356    	JR	L_177
                           A  2357    ;  278	                            }
                           A  2358    .LINE 278
                           A  2359    
                           A  2360    ;  279	                            break;
                           A  2361    .LINE 279
                           A  2362    
                           A  2363    ;  280	                        default:
                           A  2364    ;  281	                            break;
                           A  2365    ;  282	                    }
                           A  2366    ;  283	                    break;
                           A  2367    ;  284	                default:
                           A  2368    ;  285	                    break;
                           A  2369    ;  286	            }
                           A  2370    ;  287	            break;
                           A  2371    ;  288	        case 'l':
040C91                     A  2372    L_136:
                           A  2373    .LINE 288
                           A  2374    
                           A  2375    ;  289	            switch(tolower(*ptr++)) {
                           A  2376    .LINE 289
                           A  2377    
040C91 DD07FD              A  2378    	LD	BC,(IX+%FFFFFFFD)
040C94 DD0FD2              A  2379    	LD	(IX+%FFFFFFD2),BC
040C97 DD07FD              A  2380    	LD	BC,(IX+%FFFFFFFD)
040C9A 03                  A  2381    	INC	BC
040C9B DD0FFD              A  2382    	LD	(IX+%FFFFFFFD),BC
040C9E DD27D2              A  2383    	LD	HL,(IX+%FFFFFFD2)
040CA1 7E                  A  2384    	LD	A,(HL)
040CA2 47                  A  2385    	LD	B,A
040CA3 17ED62              A  2386    	SEXT	HL
040CA6 68                  A  2387    	LD	L,B
040CA7 E5                  A  2388    	PUSH	HL
040CA8 CD 4F 64 04         A  2389    	CALL	_tolower
040CAC C1                  A  2390    	POP	BC
040CAD CD CF 60 04         A  2391    	CALL	__icmpzero
040CB1 C2 19 0E 04         A  2392    	JR	NZ,L_176
                           A  2393    ;  290	                case 0:
                           A  2394    .LINE 290
                           A  2395    
                           A  2396    ;  291	                    operand->reg = R_L;
                           A  2397    .LINE 291
                           A  2398    
040CB5 01070000            A  2399    	LD	BC,7
040CB9 DD3109              A  2400    	LD	IY,(IX+%9)
040CBC FD0F00              A  2401    	LD	(IY+%0),BC
                           A  2402    ;  292	                    operand->reg_index 
                           A  2403    .LINE 292
                           A  2404    
040CBF FD360305            A  2405    	LD	(IY+%3),%5
                           A  2406    ;  293	                    return;
                           A  2407    .LINE 293
                           A  2408    
040CC3 C3 5B 0E 04         A  2409    	JR	L_177
                           A  2410    ;  294	                default:
                           A  2411    ;  295	                    break;
                           A  2412    ;  296	            }
                           A  2413    ;  297	            break;
                           A  2414    ;  298	        case 'm':
040CC7                     A  2415    L_141:
                           A  2416    .LINE 298
                           A  2417    
                           A  2418    ;  299	            if((tolower(*ptr) == 'b') &
                           A  2419    .LINE 299
                           A  2420    
040CC7 DD27FD              A  2421    	LD	HL,(IX+%FFFFFFFD)
040CCA 7E                  A  2422    	LD	A,(HL)
040CCB 47                  A  2423    	LD	B,A
040CCC 17ED62              A  2424    	SEXT	HL
040CCF 68                  A  2425    	LD	L,B
040CD0 E5                  A  2426    	PUSH	HL
040CD1 CD 4F 64 04         A  2427    	CALL	_tolower
040CD5 C1                  A  2428    	POP	BC
040CD6 01620000            A  2429    	LD	BC,98
040CDA B7                  A  2430    	OR	A,A
040CDB ED42                A  2431    	SBC	HL,BC
040CDD 20 1A               A  2432    	JR	NZ,L_145
040CDF DD27FD              A  2433    	LD	HL,(IX+%FFFFFFFD)
040CE2 23                  A  2434    	INC	HL
040CE3 7E                  A  2435    	LD	A,(HL)
040CE4 B7                  A  2436    	OR	A,A
040CE5 20 12               A  2437    	JR	NZ,L_145
                           A  2438    ;  300	                operand->reg = R_MB;
                           A  2439    .LINE 300
                           A  2440    
040CE7 01140000            A  2441    	LD	BC,20
040CEB DD3109              A  2442    	LD	IY,(IX+%9)
040CEE FD0F00              A  2443    	LD	(IY+%0),BC
                           A  2444    ;  301	                operand->reg_index = R_
                           A  2445    .LINE 301
                           A  2446    
040CF1 FD360300            A  2447    	LD	(IY+%3),%0
                           A  2448    ;  302	                return;
                           A  2449    .LINE 302
                           A  2450    
040CF5 C3 5B 0E 04         A  2451    	JR	L_177
                           A  2452    ;  303	            }
040CF9                     A  2453    L_145:
                           A  2454    .LINE 303
                           A  2455    
                           A  2456    ;  304	            if((*ptr == 0)) {
                           A  2457    .LINE 304
                           A  2458    
040CF9 DD27FD              A  2459    	LD	HL,(IX+%FFFFFFFD)
040CFC 7E                  A  2460    	LD	A,(HL)
040CFD B7                  A  2461    	OR	A,A
040CFE C2 19 0E 04         A  2462    	JR	NZ,L_176
                           A  2463    ;  305	                operand->cc = true;
                           A  2464    .LINE 305
                           A  2465    
040D02 DD3109              A  2466    	LD	IY,(IX+%9)
040D05 FD360501            A  2467    	LD	(IY+%5),%1
                           A  2468    ;  306	                operand->cc_index = CC_
                           A  2469    .LINE 306
                           A  2470    
040D09 FD360607            A  2471    	LD	(IY+%6),%7
                           A  2472    ;  307	                return;
                           A  2473    .LINE 307
                           A  2474    
040D0D C3 5B 0E 04         A  2475    	JR	L_177
                           A  2476    ;  308	            }
                           A  2477    .LINE 308
                           A  2478    
                           A  2479    ;  309	            break;
                           A  2480    .LINE 309
                           A  2481    
                           A  2482    ;  310	        case 'n':
040D11                     A  2483    L_147:
                           A  2484    .LINE 310
                           A  2485    
                           A  2486    ;  311	            switch(tolower(*ptr++)) {
                           A  2487    .LINE 311
                           A  2488    
040D11 DD07FD              A  2489    	LD	BC,(IX+%FFFFFFFD)
040D14 DD0FCF              A  2490    	LD	(IX+%FFFFFFCF),BC
040D17 DD07FD              A  2491    	LD	BC,(IX+%FFFFFFFD)
040D1A 03                  A  2492    	INC	BC
040D1B DD0FFD              A  2493    	LD	(IX+%FFFFFFFD),BC
040D1E DD27CF              A  2494    	LD	HL,(IX+%FFFFFFCF)
040D21 7E                  A  2495    	LD	A,(HL)
040D22 47                  A  2496    	LD	B,A
040D23 17ED62              A  2497    	SEXT	HL
040D26 68                  A  2498    	LD	L,B
040D27 E5                  A  2499    	PUSH	HL
040D28 CD 4F 64 04         A  2500    	CALL	_tolower
040D2C C1                  A  2501    	POP	BC
040D2D CD B2 63 04         A  2502    	CALL	__case8D
040D31 E9                  A  2503    	JP	(HL)
040D32                     A  2504    L__55:
040D32 0200                A  2505    	DW	2
040D34 63                  A  2506    	DB	99
040D35 3F0D04              A  2507    	DW24	L_149	
                           A  2508    
040D38 7A                  A  2509    	DB	122
040D39 4E0D04              A  2510    	DW24	L_150	
                           A  2511    
040D3C 190E04              A  2512    	DW24	L_176	
                           A  2513    
                           A  2514    ;  312	                case 'c':   // NC
040D3F                     A  2515    L_149:
                           A  2516    .LINE 312
                           A  2517    
                           A  2518    ;  313	                    operand->cc = true;
                           A  2519    .LINE 313
                           A  2520    
040D3F DD3109              A  2521    	LD	IY,(IX+%9)
040D42 FD360501            A  2522    	LD	(IY+%5),%1
                           A  2523    ;  314	                    operand->cc_index =
                           A  2524    .LINE 314
                           A  2525    
040D46 FD360602            A  2526    	LD	(IY+%6),%2
                           A  2527    ;  315	                    return;
                           A  2528    .LINE 315
                           A  2529    
040D4A C3 5B 0E 04         A  2530    	JR	L_177
                           A  2531    ;  316	                case 'z':   // NZ
040D4E                     A  2532    L_150:
                           A  2533    .LINE 316
                           A  2534    
                           A  2535    ;  317	                    operand->cc = true;
                           A  2536    .LINE 317
                           A  2537    
040D4E DD3109              A  2538    	LD	IY,(IX+%9)
040D51 FD360501            A  2539    	LD	(IY+%5),%1
                           A  2540    ;  318	                    operand->cc_index =
                           A  2541    .LINE 318
                           A  2542    
040D55 FD360600            A  2543    	LD	(IY+%6),%0
                           A  2544    ;  319	                    return;
                           A  2545    .LINE 319
                           A  2546    
040D59 C3 5B 0E 04         A  2547    	JR	L_177
                           A  2548    ;  320	                default:
                           A  2549    ;  321	                    break;
                           A  2550    ;  322	            }
                           A  2551    ;  323	            break;
                           A  2552    ;  324	        case 'p':
040D5D                     A  2553    L_153:
                           A  2554    .LINE 324
                           A  2555    
                           A  2556    ;  325	            switch(tolower(*ptr++)) {
                           A  2557    .LINE 325
                           A  2558    
040D5D DD07FD              A  2559    	LD	BC,(IX+%FFFFFFFD)
040D60 DD0FCC              A  2560    	LD	(IX+%FFFFFFCC),BC
040D63 DD07FD              A  2561    	LD	BC,(IX+%FFFFFFFD)
040D66 03                  A  2562    	INC	BC
040D67 DD0FFD              A  2563    	LD	(IX+%FFFFFFFD),BC
040D6A DD27CC              A  2564    	LD	HL,(IX+%FFFFFFCC)
040D6D 7E                  A  2565    	LD	A,(HL)
040D6E 47                  A  2566    	LD	B,A
040D6F 17ED62              A  2567    	SEXT	HL
040D72 68                  A  2568    	LD	L,B
040D73 E5                  A  2569    	PUSH	HL
040D74 CD 4F 64 04         A  2570    	CALL	_tolower
040D78 C1                  A  2571    	POP	BC
040D79 CD B2 63 04         A  2572    	CALL	__case8D
040D7D E9                  A  2573    	JP	(HL)
040D7E                     A  2574    L__56:
040D7E 0300                A  2575    	DW	3
040D80 00                  A  2576    	DB	0
040D81 8F0D04              A  2577    	DW24	L_155	
                           A  2578    
040D84 65                  A  2579    	DB	101
040D85 9E0D04              A  2580    	DW24	L_156	
                           A  2581    
040D88 6F                  A  2582    	DB	111
040D89 AD0D04              A  2583    	DW24	L_157	
                           A  2584    
040D8C 190E04              A  2585    	DW24	L_176	
                           A  2586    
                           A  2587    ;  326	                case 0:
040D8F                     A  2588    L_155:
                           A  2589    .LINE 326
                           A  2590    
                           A  2591    ;  327	                    operand->cc = true;
                           A  2592    .LINE 327
                           A  2593    
040D8F DD3109              A  2594    	LD	IY,(IX+%9)
040D92 FD360501            A  2595    	LD	(IY+%5),%1
                           A  2596    ;  328	                    operand->cc_index =
                           A  2597    .LINE 328
                           A  2598    
040D96 FD360606            A  2599    	LD	(IY+%6),%6
                           A  2600    ;  329	                    return;
                           A  2601    .LINE 329
                           A  2602    
040D9A C3 5B 0E 04         A  2603    	JR	L_177
                           A  2604    ;  330	                case 'e':
040D9E                     A  2605    L_156:
                           A  2606    .LINE 330
                           A  2607    
                           A  2608    ;  331	                    operand->cc = true;
                           A  2609    .LINE 331
                           A  2610    
040D9E DD3109              A  2611    	LD	IY,(IX+%9)
040DA1 FD360501            A  2612    	LD	(IY+%5),%1
                           A  2613    ;  332	                    operand->cc_index =
                           A  2614    .LINE 332
                           A  2615    
040DA5 FD360605            A  2616    	LD	(IY+%6),%5
                           A  2617    ;  333	                    return;
                           A  2618    .LINE 333
                           A  2619    
040DA9 C3 5B 0E 04         A  2620    	JR	L_177
                           A  2621    ;  334	                case 'o':
040DAD                     A  2622    L_157:
                           A  2623    .LINE 334
                           A  2624    
                           A  2625    ;  335	                    operand->cc = true;
                           A  2626    .LINE 335
                           A  2627    
040DAD DD3109              A  2628    	LD	IY,(IX+%9)
040DB0 FD360501            A  2629    	LD	(IY+%5),%1
                           A  2630    ;  336	                    operand->cc_index =
                           A  2631    .LINE 336
                           A  2632    
040DB4 FD360604            A  2633    	LD	(IY+%6),%4
                           A  2634    ;  337	                    return;
                           A  2635    .LINE 337
                           A  2636    
040DB8 C3 5B 0E 04         A  2637    	JR	L_177
                           A  2638    ;  338	                default:
                           A  2639    ;  339	                    break;
                           A  2640    ;  340	            }
                           A  2641    ;  341	            break;
                           A  2642    ;  342	        case 'r':
040DBC                     A  2643    L_160:
                           A  2644    .LINE 342
                           A  2645    
                           A  2646    ;  343	            if(*ptr == 0) {
                           A  2647    .LINE 343
                           A  2648    
040DBC DD27FD              A  2649    	LD	HL,(IX+%FFFFFFFD)
040DBF 7E                  A  2650    	LD	A,(HL)
040DC0 B7                  A  2651    	OR	A,A
040DC1 20 56               A  2652    	JR	NZ,L_176
                           A  2653    ;  344	                operand->reg = R_R;
                           A  2654    .LINE 344
                           A  2655    
040DC3 01130000            A  2656    	LD	BC,19
040DC7 DD3109              A  2657    	LD	IY,(IX+%9)
040DCA FD0F00              A  2658    	LD	(IY+%0),BC
                           A  2659    ;  345	                operand->reg_index = R_
                           A  2660    .LINE 345
                           A  2661    
040DCD FD360300            A  2662    	LD	(IY+%3),%0
                           A  2663    ;  346	                return;
                           A  2664    .LINE 346
                           A  2665    
040DD1 C3 5B 0E 04         A  2666    	JR	L_177
                           A  2667    ;  347	            }
                           A  2668    .LINE 347
                           A  2669    
                           A  2670    ;  348	            break;
                           A  2671    .LINE 348
                           A  2672    
                           A  2673    ;  349	        case 's':
040DD5                     A  2674    L_163:
                           A  2675    .LINE 349
                           A  2676    
                           A  2677    ;  350	            if((tolower(*ptr) == 'p') &
                           A  2678    .LINE 350
                           A  2679    
040DD5 DD27FD              A  2680    	LD	HL,(IX+%FFFFFFFD)
040DD8 7E                  A  2681    	LD	A,(HL)
040DD9 47                  A  2682    	LD	B,A
040DDA 17ED62              A  2683    	SEXT	HL
040DDD 68                  A  2684    	LD	L,B
040DDE E5                  A  2685    	PUSH	HL
040DDF CD 4F 64 04         A  2686    	CALL	_tolower
040DE3 C1                  A  2687    	POP	BC
040DE4 01700000            A  2688    	LD	BC,112
040DE8 B7                  A  2689    	OR	A,A
040DE9 ED42                A  2690    	SBC	HL,BC
040DEB 20 2C               A  2691    	JR	NZ,L_176
040DED DD27FD              A  2692    	LD	HL,(IX+%FFFFFFFD)
040DF0 23                  A  2693    	INC	HL
040DF1 7E                  A  2694    	LD	A,(HL)
040DF2 B7                  A  2695    	OR	A,A
040DF3 20 24               A  2696    	JR	NZ,L_176
                           A  2697    ;  351	                operand->reg = R_SP;
                           A  2698    .LINE 351
                           A  2699    
040DF5 010B0000            A  2700    	LD	BC,11
040DF9 DD3109              A  2701    	LD	IY,(IX+%9)
040DFC FD0F00              A  2702    	LD	(IY+%0),BC
                           A  2703    ;  352	                operand->reg_index = R_
                           A  2704    .LINE 352
                           A  2705    
040DFF FD360303            A  2706    	LD	(IY+%3),%3
                           A  2707    ;  353	                return;
                           A  2708    .LINE 353
                           A  2709    
040E03 18 56               A  2710    	JR	L_177
                           A  2711    ;  354	            }
                           A  2712    .LINE 354
                           A  2713    
                           A  2714    ;  355	            break;
                           A  2715    .LINE 355
                           A  2716    
                           A  2717    ;  356	        case 'z':
040E05                     A  2718    L_167:
                           A  2719    .LINE 356
                           A  2720    
                           A  2721    ;  357	            if(*ptr == 0) {
                           A  2722    .LINE 357
                           A  2723    
040E05 DD27FD              A  2724    	LD	HL,(IX+%FFFFFFFD)
040E08 7E                  A  2725    	LD	A,(HL)
040E09 B7                  A  2726    	OR	A,A
040E0A 20 0D               A  2727    	JR	NZ,L_176
                           A  2728    ;  358	                operand->cc = true;
                           A  2729    .LINE 358
                           A  2730    
040E0C 3E01                A  2731    	LD	A,%1
040E0E DD3109              A  2732    	LD	IY,(IX+%9)
040E11 FD7705              A  2733    	LD	(IY+%5),A
                           A  2734    ;  359	                operand->cc_index = CC_
                           A  2735    .LINE 359
                           A  2736    
040E14 FD7706              A  2737    	LD	(IY+%6),A
                           A  2738    ;  360	                return;
                           A  2739    .LINE 360
                           A  2740    
040E17 18 42               A  2741    	JR	L_177
                           A  2742    ;  361	            }
                           A  2743    .LINE 361
                           A  2744    
                           A  2745    ;  362	            break;
                           A  2746    ;  363	        default:
                           A  2747    ;  364	            break;
                           A  2748    ;  365	    }
040E19                     A  2749    L_176:
                           A  2750    .LINE 365
                           A  2751    
                           A  2752    ;  366	    if(*string) {
                           A  2753    .LINE 366
                           A  2754    
040E19 DD2706              A  2755    	LD	HL,(IX+%6)
040E1C 7E                  A  2756    	LD	A,(HL)
040E1D B7                  A  2757    	OR	A,A
040E1E 28 3B               A  2758    	JR	Z,L_177
                           A  2759    ;  367	        if(operand->indirect) operand->
                           A  2760    .LINE 367
                           A  2761    
040E20 DD3109              A  2762    	LD	IY,(IX+%9)
040E23 FD7E04              A  2763    	LD	A,(IY+%4)
040E26 B7                  A  2764    	OR	A,A
040E27 28 15               A  2765    	JR	Z,L_173
040E29 DD0706              A  2766    	LD	BC,(IX+%6)
040E2C 03                  A  2767    	INC	BC
040E2D C5                  A  2768    	PUSH	BC
040E2E CD A6 05 04         A  2769    	CALL	_getLabelValue
040E32 C1                  A  2770    	POP	BC
040E33 DD3109              A  2771    	LD	IY,(IX+%9)
040E36 FD2F0B              A  2772    	LD	(IY+%B),HL
040E39 FD730E              A  2773    	LD	(IY+%E),E
                           A  2774    ;  368	        else operand->immediate = getLa
                           A  2775    .LINE 368
                           A  2776    
040E3C 18 12               A  2777    	JR	L_174
040E3E                     A  2778    L_173:
040E3E DD0706              A  2779    	LD	BC,(IX+%6)
040E41 C5                  A  2780    	PUSH	BC
040E42 CD A6 05 04         A  2781    	CALL	_getLabelValue
040E46 C1                  A  2782    	POP	BC
040E47 DD3109              A  2783    	LD	IY,(IX+%9)
040E4A FD2F0B              A  2784    	LD	(IY+%B),HL
040E4D FD730E              A  2785    	LD	(IY+%E),E
040E50                     A  2786    L_174:
                           A  2787    ;  369	        operand->immediate_provided = t
                           A  2788    .LINE 369
                           A  2789    
040E50 3E01                A  2790    	LD	A,%1
040E52 DD3109              A  2791    	LD	IY,(IX+%9)
040E55 FD770A              A  2792    	LD	(IY+%A),A
                           A  2793    ;  370	        operand->wasLabel = true;
                           A  2794    .LINE 370
                           A  2795    
040E58 FD770F              A  2796    	LD	(IY+%F),A
                           A  2797    ;  371	    }
                           A  2798    ;  372	}
040E5B                     A  2799    L_177:
                           A  2800    .LINE 372
                           A  2801    
040E5B DDF9                A  2802    	LD	SP,IX
040E5D DDE1                A  2803    	POP	IX
040E5F C9                  A  2804    	RET	
                           A  2805    
                           A  2806    
                           A  2807    ;**************************** _parse_operand **
                           A  2808    ;Name                         Addr/Register   S
                           A  2809    ;_str2num                            IMPORT  --
                           A  2810    ;_isdigit                            IMPORT  --
                           A  2811    ;_tolower                            IMPORT  --
                           A  2812    ;_message                            IMPORT  un
                           A  2813    ;_error                              IMPORT  --
                           A  2814    ;_strlen                             IMPORT  --
                           A  2815    ;G_3                                   IX-7    
                           A  2816    ;len                                   IX-4    
                           A  2817    ;ptr                                   IX-3    
                           A  2818    ;operand                               IX+9    
                           A  2819    ;string                                IX+6    
                           A  2820    
                           A  2821    
                           A  2822    ; Stack Frame Size: 64 (bytes)
                           A  2823    ;       Spill Code: 0 (instruction)
                           A  2824    
                           A  2825    
                           A  2826    .ENDFUNC "parse_operand",372,"_parse_operand"
                           A  2827    ;  373	
                           A  2828    ;  374	void parseLine(char *src) {
040E60                     A  2829    _parseLine:
                           A  2830    .DEFINE "_parseLine"
                           A  2831    
                           A  2832    .VALUE _parseLine
                           A  2833    
                           A  2834    .CLASS 2
                           A  2835    
                           A  2836    .TYPE 65
                           A  2837    
                           A  2838    .ENDEF
                           A  2839    
                           A  2840    .BEGFUNC "parseLine",374,"_parseLine"
                           A  2841    
                           A  2842    .LINE 374
                           A  2843    
                           A  2844    .DEFINE "src"
                           A  2845    
                           A  2846    .CLASS 65
                           A  2847    
                           A  2848    .VALUE 6
                           A  2849    
                           A  2850    .TYPE 34
                           A  2851    
                           A  2852    .ENDEF
                           A  2853    
                           A  2854    .DEFINE "state"
                           A  2855    
                           A  2856    .CLASS 65
                           A  2857    
                           A  2858    .VALUE -1
                           A  2859    
                           A  2860    .TYPE 12
                           A  2861    
                           A  2862    .ENDEF
                           A  2863    
                           A  2864    .DEFINE "argcount"
                           A  2865    
                           A  2866    .CLASS 65
                           A  2867    
                           A  2868    .VALUE -2
                           A  2869    
                           A  2870    .TYPE 12
                           A  2871    
                           A  2872    .ENDEF
                           A  2873    
                           A  2874    .DEFINE "x"
                           A  2875    
                           A  2876    .CLASS 65
                           A  2877    
                           A  2878    .VALUE -3
                           A  2879    
                           A  2880    .TYPE 12
                           A  2881    
                           A  2882    .ENDEF
                           A  2883    
                           A  2884    .DEFINE "done"
                           A  2885    
                           A  2886    .CLASS 65
                           A  2887    
                           A  2888    .VALUE -4
                           A  2889    
                           A  2890    .TYPE 12
                           A  2891    
                           A  2892    .ENDEF
                           A  2893    
                           A  2894    .DEFINE "token"
                           A  2895    
                           A  2896    .CLASS 65
                           A  2897    
                           A  2898    .VALUE -140
                           A  2899    
                           A  2900    .TAG "NONAME11"
                           A  2901    
                           A  2902    .TYPE 8
                           A  2903    
                           A  2904    .ENDEF
                           A  2905    
040E60 DDE5                A  2906    	PUSH	IX
040E62 DD210000 00         A  2907    	LD	IX,0
040E67 DD39                A  2908    	ADD	IX,SP
040E69 2174FFFF            A  2909    	LD	HL,-140
040E6D 39                  A  2910    	ADD	HL,SP
040E6E F9                  A  2911    	LD	SP,HL
                           A  2912    ;  375	    uint8_t x;
                           A  2913    ;  376	    bool done;
                           A  2914    ;  377	    uint8_t state;
                           A  2915    ;  378	    uint8_t argcount = 0;
                           A  2916    .LINE 378
                           A  2917    
040E6F DD36FE00            A  2918    	LD	(IX+%FFFFFFFE),%0
                           A  2919    ;  379	    tokentype token;
                           A  2920    ;  380	
                           A  2921    ;  381	    // default current line items
                           A  2922    ;  382	    currentline.current_instruction = N
                           A  2923    .LINE 382
                           A  2924    
040E73 01000000            A  2925    	LD	BC,0
040E77 ED43 60 8A 04       A  2926    	LD	(_currentline),BC
                           A  2927    ;  383	    currentline.next = NULL;
                           A  2928    .LINE 383
                           A  2929    
040E7C ED43 63 8A 04       A  2930    	LD	(_currentline+3),BC
                           A  2931    ;  384	    currentline.label[0] = 0;
                           A  2932    .LINE 384
                           A  2933    
040E81 AF                  A  2934    	XOR	A,A
040E82 32 66 8A 04         A  2935    	LD	(_currentline+6),A
                           A  2936    ;  385	    currentline.mnemonic[0] = 0;
                           A  2937    .LINE 385
                           A  2938    
040E86 AF                  A  2939    	XOR	A,A
040E87 32 86 8A 04         A  2940    	LD	(_currentline+38),A
                           A  2941    ;  386	    currentline.suffix[0] = 0;
                           A  2942    .LINE 386
                           A  2943    
040E8B AF                  A  2944    	XOR	A,A
040E8C 32 96 8A 04         A  2945    	LD	(_currentline+54),A
                           A  2946    ;  387	    currentline.operand1[0] = 0;
                           A  2947    .LINE 387
                           A  2948    
040E90 AF                  A  2949    	XOR	A,A
040E91 32 A6 8A 04         A  2950    	LD	(_currentline+70),A
                           A  2951    ;  388	    currentline.operand2[0] = 0;
                           A  2952    .LINE 388
                           A  2953    
040E95 AF                  A  2954    	XOR	A,A
040E96 32 C6 8A 04         A  2955    	LD	(_currentline+102),A
                           A  2956    ;  389	    currentline.comment[0] = 0;
                           A  2957    .LINE 389
                           A  2958    
040E9A AF                  A  2959    	XOR	A,A
040E9B 32 E6 8A 04         A  2960    	LD	(_currentline+134),A
                           A  2961    ;  390	    currentline.size = 0;
                           A  2962    .LINE 390
                           A  2963    
040E9F 21 66 8B 04         A  2964    	LD	HL,_currentline+262
040EA3 3600                A  2965    	LD	(HL),%0
040EA5 23                  A  2966    	INC	HL
040EA6 3600                A  2967    	LD	(HL),%0
                           A  2968    ;  391	
                           A  2969    ;  392	    empty_operand(&operand1);
                           A  2970    .LINE 392
                           A  2971    
040EA8 01 68 8B 04         A  2972    	LD	BC,_operand1
040EAC C5                  A  2973    	PUSH	BC
040EAD CD 43 04 04         A  2974    	CALL	_empty_operand
040EB1 C1                  A  2975    	POP	BC
                           A  2976    ;  393	    empty_operand(&operand2);
                           A  2977    .LINE 393
                           A  2978    
040EB2 01 78 8B 04         A  2979    	LD	BC,_operand2
040EB6 C5                  A  2980    	PUSH	BC
040EB7 CD 43 04 04         A  2981    	CALL	_empty_operand
040EBB C1                  A  2982    	POP	BC
                           A  2983    ;  394	
                           A  2984    ;  395	    state = PS_START;
                           A  2985    .LINE 395
                           A  2986    
040EBC DD36FF00            A  2987    	LD	(IX+%FFFFFFFF),%0
                           A  2988    ;  396	    done = false;
                           A  2989    .LINE 396
                           A  2990    
040EC0 DD36FC00            A  2991    	LD	(IX+%FFFFFFFC),%0
                           A  2992    ;  397	    while(!done) {
                           A  2993    .LINE 397
                           A  2994    
040EC4 C3 52 12 04         A  2995    	JR	L_227
040EC8                     A  2996    L_228:
                           A  2997    ;  398	        switch(state) {
                           A  2998    .LINE 398
                           A  2999    
040EC8 DD7EFF              A  3000    	LD	A,(IX+%FFFFFFFF)
040ECB B7ED62              A  3001    	UEXT	HL
040ECE 6F                  A  3002    	LD	L,A
040ECF CD 81 5A 04         A  3003    	CALL	__seqcaseD
040ED3 E9                  A  3004    	JP	(HL)
040ED4                     A  3005    L__64:
040ED4 0800                A  3006    	DW	8
040ED6 0000                A  3007    	DW	0
040ED8 00                  A  3008    	DB	0
040ED9 F40E04              A  3009    	DW24	L_178	
                           A  3010    
040EDC BD0F04              A  3011    	DW24	L_192	
                           A  3012    
040EDF 1F1004              A  3013    	DW24	L_199	
                           A  3014    
040EE2 461104              A  3015    	DW24	L_213	
                           A  3016    
040EE5 521204              A  3017    	DW24	L_227	
                           A  3018    
040EE8 231204              A  3019    	DW24	L_224	
                           A  3020    
040EEB 4E1204              A  3021    	DW24	L_226	
                           A  3022    
040EEE 3F1204              A  3023    	DW24	L_225	
                           A  3024    
040EF1 521204              A  3025    	DW24	L_227	
                           A  3026    
                           A  3027    ;  399	            case PS_START:
040EF4                     A  3028    L_178:
                           A  3029    .LINE 399
                           A  3030    
                           A  3031    ;  400	                if((isspace(*src) == 0)
                           A  3032    .LINE 400
                           A  3033    
040EF4 DD2706              A  3034    	LD	HL,(IX+%6)
040EF7 7E                  A  3035    	LD	A,(HL)
040EF8 47                  A  3036    	LD	B,A
040EF9 17ED62              A  3037    	SEXT	HL
040EFC 68                  A  3038    	LD	L,B
040EFD E5                  A  3039    	PUSH	HL
040EFE CD 04 61 04         A  3040    	CALL	_isspace
040F02 C1                  A  3041    	POP	BC
040F03 CD CF 60 04         A  3042    	CALL	__icmpzero
040F07 20 6C               A  3043    	JR	NZ,L_185
040F09 DD2706              A  3044    	LD	HL,(IX+%6)
040F0C 7E                  A  3045    	LD	A,(HL)
040F0D 47                  A  3046    	LD	B,A
040F0E 17ED62              A  3047    	SEXT	HL
040F11 68                  A  3048    	LD	L,B
040F12 012E0000            A  3049    	LD	BC,46
040F16 B7                  A  3050    	OR	A,A
040F17 ED42                A  3051    	SBC	HL,BC
040F19 28 5A               A  3052    	JR	Z,L_185
                           A  3053    ;  401	                    getLineToken(&token
                           A  3054    .LINE 401
                           A  3055    
040F1B 013A0000            A  3056    	LD	BC,58
040F1F C5                  A  3057    	PUSH	BC
040F20 DD0706              A  3058    	LD	BC,(IX+%6)
040F23 C5                  A  3059    	PUSH	BC
040F24 DDE5E1              A  3060    	LD	HL,IX
040F27 0174FFFF            A  3061    	LD	BC,-140
040F2B 09                  A  3062    	ADD	HL,BC
040F2C E5C1                A  3063    	LD	BC,HL
040F2E C5                  A  3064    	PUSH	BC
040F2F CD D3 4F 04         A  3065    	CALL	_getLineToken
040F33 C1                  A  3066    	POP	BC
040F34 C1                  A  3067    	POP	BC
040F35 C1                  A  3068    	POP	BC
                           A  3069    ;  402	                    switch(token.termin
                           A  3070    .LINE 402
                           A  3071    
040F36 DD7EF8              A  3072    	LD	A,(IX+%FFFFFFF8)
040F39 17ED62              A  3073    	SEXT	HL
040F3C DD6EF8              A  3074    	LD	L,(IX+%FFFFFFF8)
040F3F CD B2 63 04         A  3075    	CALL	__case8D
040F43 E9                  A  3076    	JP	(HL)
040F44                     A  3077    L__67:
040F44 0200                A  3078    	DW	2
040F46 3A                  A  3079    	DB	58
040F47 510F04              A  3080    	DW24	L_180	
                           A  3081    
040F4A 3B                  A  3082    	DB	59
040F4B 590F04              A  3083    	DW24	L_181	
                           A  3084    
040F4E 610F04              A  3085    	DW24	L_182	
                           A  3086    
                           A  3087    ;  403	                        case ':':
040F51                     A  3088    L_180:
                           A  3089    .LINE 403
                           A  3090    
                           A  3091    ;  404	                            state = PS_
                           A  3092    .LINE 404
                           A  3093    
040F51 DD36FF01            A  3094    	LD	(IX+%FFFFFFFF),%1
                           A  3095    ;  405	                            break;
                           A  3096    .LINE 405
                           A  3097    
040F55 C3 52 12 04         A  3098    	JR	L_227
                           A  3099    ;  406	                        case ';':
040F59                     A  3100    L_181:
                           A  3101    .LINE 406
                           A  3102    
                           A  3103    ;  407	                            state = PS_
                           A  3104    .LINE 407
                           A  3105    
040F59 DD36FF05            A  3106    	LD	(IX+%FFFFFFFF),%5
                           A  3107    ;  408	                            break;
                           A  3108    .LINE 408
                           A  3109    
040F5D C3 52 12 04         A  3110    	JR	L_227
                           A  3111    ;  409	                        default:
040F61                     A  3112    L_182:
                           A  3113    .LINE 409
                           A  3114    
                           A  3115    ;  410	                            error(messa
                           A  3116    .LINE 410
                           A  3117    
040F61 21 4D 67 04         A  3118    	LD	HL,_message+12
040F65 ED07                A  3119    	LD	BC,(HL)
040F67 C5                  A  3120    	PUSH	BC
040F68 CD A4 4E 04         A  3121    	CALL	_error
040F6C C1                  A  3122    	POP	BC
                           A  3123    ;  411	                            state = PS_
                           A  3124    .LINE 411
                           A  3125    
040F6D DD36FF07            A  3126    	LD	(IX+%FFFFFFFF),%7
                           A  3127    ;  412	                            break;
                           A  3128    .LINE 412
                           A  3129    
040F71 C3 52 12 04         A  3130    	JR	L_227
                           A  3131    ;  413	                    }
                           A  3132    ;  414	                    break;
                           A  3133    ;  415	                }
040F75                     A  3134    L_185:
                           A  3135    .LINE 415
                           A  3136    
                           A  3137    ;  416	                x = getLineToken(&token
                           A  3138    .LINE 416
                           A  3139    
040F75 01200000            A  3140    	LD	BC,32
040F79 C5                  A  3141    	PUSH	BC
040F7A DD0706              A  3142    	LD	BC,(IX+%6)
040F7D C5                  A  3143    	PUSH	BC
040F7E DDE5E1              A  3144    	LD	HL,IX
040F81 0174FFFF            A  3145    	LD	BC,-140
040F85 09                  A  3146    	ADD	HL,BC
040F86 E5C1                A  3147    	LD	BC,HL
040F88 C5                  A  3148    	PUSH	BC
040F89 CD D3 4F 04         A  3149    	CALL	_getLineToken
040F8D C1                  A  3150    	POP	BC
040F8E C1                  A  3151    	POP	BC
040F8F C1                  A  3152    	POP	BC
040F90 DD77FD              A  3153    	LD	(IX+%FFFFFFFD),A
                           A  3154    ;  417	                if(x) state = PS_COMMAN
                           A  3155    .LINE 417
                           A  3156    
040F93 B7                  A  3157    	OR	A,A
040F94 28 08               A  3158    	JR	Z,L_190
040F96 DD36FF02            A  3159    	LD	(IX+%FFFFFFFF),%2
                           A  3160    ;  418	                else {
                           A  3161    .LINE 418
                           A  3162    
040F9A C3 52 12 04         A  3163    	JR	L_227
040F9E                     A  3164    L_190:
                           A  3165    ;  419	                    if(token.terminator
                           A  3166    .LINE 419
                           A  3167    
040F9E DD7EF8              A  3168    	LD	A,(IX+%FFFFFFF8)
040FA1 B7                  A  3169    	OR	A,A
040FA2 20 08               A  3170    	JR	NZ,L_188
                           A  3171    ;  420	                        state = PS_DONE
                           A  3172    .LINE 420
                           A  3173    
040FA4 DD36FF06            A  3174    	LD	(IX+%FFFFFFFF),%6
                           A  3175    ;  421	                        break;
                           A  3176    .LINE 421
                           A  3177    
040FA8 C3 52 12 04         A  3178    	JR	L_227
                           A  3179    ;  422	                    }
040FAC                     A  3180    L_188:
                           A  3181    .LINE 422
                           A  3182    
                           A  3183    ;  423	                    if(token.terminator
                           A  3184    .LINE 423
                           A  3185    
040FAC DD7EF8              A  3186    	LD	A,(IX+%FFFFFFF8)
040FAF FE3B                A  3187    	CP	A,%3B
040FB1 C2 52 12 04         A  3188    	JR	NZ,L_227
                           A  3189    ;  424	                        state = PS_COMM
                           A  3190    .LINE 424
                           A  3191    
040FB5 DD36FF05            A  3192    	LD	(IX+%FFFFFFFF),%5
                           A  3193    ;  425	                        break;
                           A  3194    .LINE 425
                           A  3195    
040FB9 C3 52 12 04         A  3196    	JR	L_227
                           A  3197    ;  426	                    }
                           A  3198    ;  427	                }
                           A  3199    .LINE 427
                           A  3200    
                           A  3201    ;  428	                break;
                           A  3202    .LINE 428
                           A  3203    
                           A  3204    ;  429	            case PS_LABEL:
040FBD                     A  3205    L_192:
                           A  3206    .LINE 429
                           A  3207    
                           A  3208    ;  430	                strcpy(currentline.labe
                           A  3209    .LINE 430
                           A  3210    
040FBD DDE5E1              A  3211    	LD	HL,IX
040FC0 0174FFFF            A  3212    	LD	BC,-140
040FC4 09                  A  3213    	ADD	HL,BC
040FC5 E5C1                A  3214    	LD	BC,HL
040FC7 C5                  A  3215    	PUSH	BC
040FC8 01 66 8A 04         A  3216    	LD	BC,_currentline+6
040FCC C5                  A  3217    	PUSH	BC
040FCD CD EE 63 04         A  3218    	CALL	_strcpy
040FD1 C1                  A  3219    	POP	BC
040FD2 C1                  A  3220    	POP	BC
                           A  3221    ;  431	                advanceLocalLabel();
                           A  3222    .LINE 431
                           A  3223    
040FD3 CD 82 04 04         A  3224    	CALL	_advanceLocalLabel
                           A  3225    ;  432	                x = getLineToken(&token
                           A  3226    .LINE 432
                           A  3227    
040FD7 01200000            A  3228    	LD	BC,32
040FDB C5                  A  3229    	PUSH	BC
040FDC DD07F5              A  3230    	LD	BC,(IX+%FFFFFFF5)
040FDF C5                  A  3231    	PUSH	BC
040FE0 DDE5E1              A  3232    	LD	HL,IX
040FE3 0174FFFF            A  3233    	LD	BC,-140
040FE7 09                  A  3234    	ADD	HL,BC
040FE8 E5C1                A  3235    	LD	BC,HL
040FEA C5                  A  3236    	PUSH	BC
040FEB CD D3 4F 04         A  3237    	CALL	_getLineToken
040FEF C1                  A  3238    	POP	BC
040FF0 C1                  A  3239    	POP	BC
040FF1 C1                  A  3240    	POP	BC
040FF2 DD77FD              A  3241    	LD	(IX+%FFFFFFFD),A
                           A  3242    ;  433	                if(x) state = PS_COMMAN
                           A  3243    .LINE 433
                           A  3244    
040FF5 B7                  A  3245    	OR	A,A
040FF6 28 08               A  3246    	JR	Z,L_197
040FF8 DD36FF02            A  3247    	LD	(IX+%FFFFFFFF),%2
                           A  3248    ;  434	                else {
                           A  3249    .LINE 434
                           A  3250    
040FFC C3 52 12 04         A  3251    	JR	L_227
041000                     A  3252    L_197:
                           A  3253    ;  435	                    if(token.terminator
                           A  3254    .LINE 435
                           A  3255    
041000 DD7EF8              A  3256    	LD	A,(IX+%FFFFFFF8)
041003 B7                  A  3257    	OR	A,A
041004 20 08               A  3258    	JR	NZ,L_195
                           A  3259    ;  436	                        state = PS_DONE
                           A  3260    .LINE 436
                           A  3261    
041006 DD36FF06            A  3262    	LD	(IX+%FFFFFFFF),%6
                           A  3263    ;  437	                        break;
                           A  3264    .LINE 437
                           A  3265    
04100A C3 52 12 04         A  3266    	JR	L_227
                           A  3267    ;  438	                    }
04100E                     A  3268    L_195:
                           A  3269    .LINE 438
                           A  3270    
                           A  3271    ;  439	                    if(token.terminator
                           A  3272    .LINE 439
                           A  3273    
04100E DD7EF8              A  3274    	LD	A,(IX+%FFFFFFF8)
041011 FE3B                A  3275    	CP	A,%3B
041013 C2 52 12 04         A  3276    	JR	NZ,L_227
                           A  3277    ;  440	                        state = PS_COMM
                           A  3278    .LINE 440
                           A  3279    
041017 DD36FF05            A  3280    	LD	(IX+%FFFFFFFF),%5
                           A  3281    ;  441	                        break;
                           A  3282    .LINE 441
                           A  3283    
04101B C3 52 12 04         A  3284    	JR	L_227
                           A  3285    ;  442	                    }
                           A  3286    ;  443	                }
                           A  3287    .LINE 443
                           A  3288    
                           A  3289    ;  444	                break;
                           A  3290    .LINE 444
                           A  3291    
                           A  3292    ;  445	            case PS_COMMAND:
04101F                     A  3293    L_199:
                           A  3294    .LINE 445
                           A  3295    
                           A  3296    ;  446	                if(token.start[0] == '.
                           A  3297    .LINE 446
                           A  3298    
04101F DDE5E1              A  3299    	LD	HL,IX
041022 0174FFFF            A  3300    	LD	BC,-140
041026 09                  A  3301    	ADD	HL,BC
041027 DD2FF9              A  3302    	LD	(IX+%FFFFFFF9),HL
04102A 7E                  A  3303    	LD	A,(HL)
04102B 47                  A  3304    	LD	B,A
04102C 17ED62              A  3305    	SEXT	HL
04102F 68                  A  3306    	LD	L,B
041030 012E0000            A  3307    	LD	BC,46
041034 B7                  A  3308    	OR	A,A
041035 ED42                A  3309    	SBC	HL,BC
041037 20 12               A  3310    	JR	NZ,L_201
041039 DD07F9              A  3311    	LD	BC,(IX+%FFFFFFF9)
04103C 03                  A  3312    	INC	BC
04103D C5                  A  3313    	PUSH	BC
04103E 01 86 8A 04         A  3314    	LD	BC,_currentline+38
041042 C5                  A  3315    	PUSH	BC
041043 CD EE 63 04         A  3316    	CALL	_strcpy
041047 C1                  A  3317    	POP	BC
041048 C1                  A  3318    	POP	BC
                           A  3319    ;  447	                else split_suffix(curre
                           A  3320    .LINE 447
                           A  3321    
041049 18 15               A  3322    	JR	L_202
04104B                     A  3323    L_201:
04104B DD07F9              A  3324    	LD	BC,(IX+%FFFFFFF9)
04104E C5                  A  3325    	PUSH	BC
04104F 01 96 8A 04         A  3326    	LD	BC,_currentline+54
041053 C5                  A  3327    	PUSH	BC
041054 01 86 8A 04         A  3328    	LD	BC,_currentline+38
041058 C5                  A  3329    	PUSH	BC
041059 CD 64 4F 04         A  3330    	CALL	_split_suffix
04105D C1                  A  3331    	POP	BC
04105E C1                  A  3332    	POP	BC
04105F C1                  A  3333    	POP	BC
041060                     A  3334    L_202:
                           A  3335    ;  448	
                           A  3336    ;  449	                currentline.current_ins
                           A  3337    .LINE 449
                           A  3338    
041060 01 86 8A 04         A  3339    	LD	BC,_currentline+38
041064 C5                  A  3340    	PUSH	BC
041065 CD 91 39 04         A  3341    	CALL	_instruction_table_lookup
041069 C1                  A  3342    	POP	BC
04106A 22 60 8A 04         A  3343    	LD	(_currentline),HL
                           A  3344    ;  450	                if(currentline.current_
                           A  3345    .LINE 450
                           A  3346    
04106E CD CF 60 04         A  3347    	CALL	__icmpzero
041072 20 14               A  3348    	JR	NZ,L_205
                           A  3349    ;  451	                    error(message[ERROR
                           A  3350    .LINE 451
                           A  3351    
041074 21 53 67 04         A  3352    	LD	HL,_message+18
041078 ED07                A  3353    	LD	BC,(HL)
04107A C5                  A  3354    	PUSH	BC
04107B CD A4 4E 04         A  3355    	CALL	_error
04107F C1                  A  3356    	POP	BC
                           A  3357    ;  452	                    state = PS_ERROR;
                           A  3358    .LINE 452
                           A  3359    
041080 DD36FF07            A  3360    	LD	(IX+%FFFFFFFF),%7
                           A  3361    ;  453	                    break;
                           A  3362    .LINE 453
                           A  3363    
041084 C3 52 12 04         A  3364    	JR	L_227
                           A  3365    ;  454	                }
041088                     A  3366    L_205:
                           A  3367    .LINE 454
                           A  3368    
                           A  3369    ;  455	                if(currentline.current_
                           A  3370    .LINE 455
                           A  3371    
041088 FD2A 60 8A 04       A  3372    	LD	IY,(_currentline)
04108D FD7E08              A  3373    	LD	A,(IY+%8)
041090 FE01                A  3374    	CP	A,%1
041092 20 10               A  3375    	JR	NZ,L_207
                           A  3376    ;  456	                    currentline.next = 
                           A  3377    .LINE 456
                           A  3378    
041094 DD07F5              A  3379    	LD	BC,(IX+%FFFFFFF5)
041097 ED43 63 8A 04       A  3380    	LD	(_currentline+3),BC
                           A  3381    ;  457	                    state = PS_DONE;
                           A  3382    .LINE 457
                           A  3383    
04109C DD36FF06            A  3384    	LD	(IX+%FFFFFFFF),%6
                           A  3385    ;  458	                    break;
                           A  3386    .LINE 458
                           A  3387    
0410A0 C3 52 12 04         A  3388    	JR	L_227
                           A  3389    ;  459	                }
0410A4                     A  3390    L_207:
                           A  3391    .LINE 459
                           A  3392    
                           A  3393    ;  460	                if(token.start[0] == '.
                           A  3394    .LINE 460
                           A  3395    
0410A4 2174FFFF            A  3396    	LD	HL,-140
0410A8 DDE5C1              A  3397    	LD	BC,IX
0410AB 09                  A  3398    	ADD	HL,BC
0410AC 7E                  A  3399    	LD	A,(HL)
0410AD 47                  A  3400    	LD	B,A
0410AE 17ED62              A  3401    	SEXT	HL
0410B1 68                  A  3402    	LD	L,B
0410B2 012E0000            A  3403    	LD	BC,46
0410B6 B7                  A  3404    	OR	A,A
0410B7 ED42                A  3405    	SBC	HL,BC
0410B9 20 19               A  3406    	JR	NZ,L_211
                           A  3407    ;  461	                    error(message[ERROR
                           A  3408    .LINE 461
                           A  3409    
0410BB 21 53 67 04         A  3410    	LD	HL,_message+18
0410BF ED07                A  3411    	LD	BC,(HL)
0410C1 C5                  A  3412    	PUSH	BC
0410C2 CD A4 4E 04         A  3413    	CALL	_error
0410C6 C1                  A  3414    	POP	BC
                           A  3415    ;  462	                    currentline.mnemoni
                           A  3416    .LINE 462
                           A  3417    
0410C7 AF                  A  3418    	XOR	A,A
0410C8 32 86 8A 04         A  3419    	LD	(_currentline+38),A
                           A  3420    ;  463	                    state = PS_ERROR;  
                           A  3421    .LINE 463
                           A  3422    
0410CC DD36FF07            A  3423    	LD	(IX+%FFFFFFFF),%7
                           A  3424    ;  464	                    break;
                           A  3425    .LINE 464
                           A  3426    
0410D0 C3 52 12 04         A  3427    	JR	L_227
                           A  3428    ;  465	                }
0410D4                     A  3429    L_211:
                           A  3430    .LINE 465
                           A  3431    
                           A  3432    ;  466	                // Valid EZ80 instructi
                           A  3433    ;  467	                switch(token.terminator
                           A  3434    .LINE 467
                           A  3435    
0410D4 DD7EF8              A  3436    	LD	A,(IX+%FFFFFFF8)
0410D7 17ED62              A  3437    	SEXT	HL
0410DA DD6EF8              A  3438    	LD	L,(IX+%FFFFFFF8)
0410DD CD B2 63 04         A  3439    	CALL	__case8D
0410E1 E9                  A  3440    	JP	(HL)
0410E2                     A  3441    L__78:
0410E2 0200                A  3442    	DW	2
0410E4 00                  A  3443    	DB	0
0410E5 121104              A  3444    	DW24	L_209	
                           A  3445    
0410E8 3B                  A  3446    	DB	59
0410E9 EF1004              A  3447    	DW24	L_208	
                           A  3448    
0410EC 231104              A  3449    	DW24	L_210	
                           A  3450    
                           A  3451    ;  468	                    case ';':
0410EF                     A  3452    L_208:
                           A  3453    .LINE 468
                           A  3454    
                           A  3455    ;  469	                        getLineToken(&t
                           A  3456    .LINE 469
                           A  3457    
0410EF 01000000            A  3458    	LD	BC,0
0410F3 C5                  A  3459    	PUSH	BC
0410F4 DD07F5              A  3460    	LD	BC,(IX+%FFFFFFF5)
0410F7 C5                  A  3461    	PUSH	BC
0410F8 DDE5E1              A  3462    	LD	HL,IX
0410FB 0174FFFF            A  3463    	LD	BC,-140
0410FF 09                  A  3464    	ADD	HL,BC
041100 E5C1                A  3465    	LD	BC,HL
041102 C5                  A  3466    	PUSH	BC
041103 CD D3 4F 04         A  3467    	CALL	_getLineToken
041107 C1                  A  3468    	POP	BC
041108 C1                  A  3469    	POP	BC
041109 C1                  A  3470    	POP	BC
                           A  3471    ;  470	                        state = PS_COMM
                           A  3472    .LINE 470
                           A  3473    
04110A DD36FF05            A  3474    	LD	(IX+%FFFFFFFF),%5
                           A  3475    ;  471	                        break;
                           A  3476    .LINE 471
                           A  3477    
04110E C3 52 12 04         A  3478    	JR	L_227
                           A  3479    ;  472	                    case 0:
041112                     A  3480    L_209:
                           A  3481    .LINE 472
                           A  3482    
                           A  3483    ;  473	                        currentline.nex
                           A  3484    .LINE 473
                           A  3485    
041112 01000000            A  3486    	LD	BC,0
041116 ED43 63 8A 04       A  3487    	LD	(_currentline+3),BC
                           A  3488    ;  474	                        state = PS_DONE
                           A  3489    .LINE 474
                           A  3490    
04111B DD36FF06            A  3491    	LD	(IX+%FFFFFFFF),%6
                           A  3492    ;  475	                        break;
                           A  3493    .LINE 475
                           A  3494    
04111F C3 52 12 04         A  3495    	JR	L_227
                           A  3496    ;  476	                    default:
041123                     A  3497    L_210:
                           A  3498    .LINE 476
                           A  3499    
                           A  3500    ;  477	                        getLineToken(&t
                           A  3501    .LINE 477
                           A  3502    
041123 012C0000            A  3503    	LD	BC,44
041127 C5                  A  3504    	PUSH	BC
041128 DD07F5              A  3505    	LD	BC,(IX+%FFFFFFF5)
04112B C5                  A  3506    	PUSH	BC
04112C DDE5E1              A  3507    	LD	HL,IX
04112F 0174FFFF            A  3508    	LD	BC,-140
041133 09                  A  3509    	ADD	HL,BC
041134 E5C1                A  3510    	LD	BC,HL
041136 C5                  A  3511    	PUSH	BC
041137 CD D3 4F 04         A  3512    	CALL	_getLineToken
04113B C1                  A  3513    	POP	BC
04113C C1                  A  3514    	POP	BC
04113D C1                  A  3515    	POP	BC
                           A  3516    ;  478	                        state = PS_OP1;
                           A  3517    .LINE 478
                           A  3518    
04113E DD36FF03            A  3519    	LD	(IX+%FFFFFFFF),%3
                           A  3520    ;  479	                        break;
                           A  3521    .LINE 479
                           A  3522    
041142 C3 52 12 04         A  3523    	JR	L_227
                           A  3524    ;  480	                }                
                           A  3525    ;  481	                break;
                           A  3526    ;  482	            case PS_OP1:
041146                     A  3527    L_213:
                           A  3528    .LINE 482
                           A  3529    
                           A  3530    ;  483	                argcount++;
                           A  3531    .LINE 483
                           A  3532    
041146 DD34FE              A  3533    	INC	(IX+%FFFFFFFE)
                           A  3534    ;  484	                if(argcount == 1) {
                           A  3535    .LINE 484
                           A  3536    
041149 DD7EFE              A  3537    	LD	A,(IX+%FFFFFFFE)
04114C FE01                A  3538    	CP	A,%1
04114E 20 28               A  3539    	JR	NZ,L_216
                           A  3540    ;  485	                    strcpy(currentline.
                           A  3541    .LINE 485
                           A  3542    
041150 DDE5E1              A  3543    	LD	HL,IX
041153 0174FFFF            A  3544    	LD	BC,-140
041157 09                  A  3545    	ADD	HL,BC
041158 E5C1                A  3546    	LD	BC,HL
04115A C5                  A  3547    	PUSH	BC
04115B 01 A6 8A 04         A  3548    	LD	BC,_currentline+70
04115F C5                  A  3549    	PUSH	BC
041160 CD EE 63 04         A  3550    	CALL	_strcpy
041164 C1                  A  3551    	POP	BC
041165 C1                  A  3552    	POP	BC
                           A  3553    ;  486	                    parse_operand(curre
                           A  3554    .LINE 486
                           A  3555    
041166 01 68 8B 04         A  3556    	LD	BC,_operand1
04116A C5                  A  3557    	PUSH	BC
04116B 01 A6 8A 04         A  3558    	LD	BC,_currentline+70
04116F C5                  A  3559    	PUSH	BC
041170 CD 40 07 04         A  3560    	CALL	_parse_operand
041174 C1                  A  3561    	POP	BC
041175 C1                  A  3562    	POP	BC
                           A  3563    ;  487	                }
                           A  3564    ;  488	                else {
                           A  3565    .LINE 488
                           A  3566    
041176 18 26               A  3567    	JR	L_222
041178                     A  3568    L_216:
                           A  3569    ;  489	                    strcpy(currentline.
                           A  3570    .LINE 489
                           A  3571    
041178 DDE5E1              A  3572    	LD	HL,IX
04117B 0174FFFF            A  3573    	LD	BC,-140
04117F 09                  A  3574    	ADD	HL,BC
041180 E5C1                A  3575    	LD	BC,HL
041182 C5                  A  3576    	PUSH	BC
041183 01 C6 8A 04         A  3577    	LD	BC,_currentline+102
041187 C5                  A  3578    	PUSH	BC
041188 CD EE 63 04         A  3579    	CALL	_strcpy
04118C C1                  A  3580    	POP	BC
04118D C1                  A  3581    	POP	BC
                           A  3582    ;  490	                    parse_operand(curre
                           A  3583    .LINE 490
                           A  3584    
04118E 01 78 8B 04         A  3585    	LD	BC,_operand2
041192 C5                  A  3586    	PUSH	BC
041193 01 C6 8A 04         A  3587    	LD	BC,_currentline+102
041197 C5                  A  3588    	PUSH	BC
041198 CD 40 07 04         A  3589    	CALL	_parse_operand
04119C C1                  A  3590    	POP	BC
04119D C1                  A  3591    	POP	BC
                           A  3592    ;  491	                }
04119E                     A  3593    L_222:
                           A  3594    .LINE 491
                           A  3595    
                           A  3596    ;  492	                switch(token.terminator
                           A  3597    .LINE 492
                           A  3598    
04119E DD7EF8              A  3599    	LD	A,(IX+%FFFFFFF8)
0411A1 17ED62              A  3600    	SEXT	HL
0411A4 DD6EF8              A  3601    	LD	L,(IX+%FFFFFFF8)
0411A7 CD B2 63 04         A  3602    	CALL	__case8D
0411AB E9                  A  3603    	JP	(HL)
0411AC                     A  3604    L__80:
0411AC 0300                A  3605    	DW	3
0411AE 00                  A  3606    	DB	0
0411AF DE1104              A  3607    	DW24	L_218	
                           A  3608    
0411B2 2C                  A  3609    	DB	44
0411B3 ED1104              A  3610    	DW24	L_219	
                           A  3611    
0411B6 3B                  A  3612    	DB	59
0411B7 BD1104              A  3613    	DW24	L_217	
                           A  3614    
0411BA 521204              A  3615    	DW24	L_227	
                           A  3616    
                           A  3617    ;  493	                    case ';':
0411BD                     A  3618    L_217:
                           A  3619    .LINE 493
                           A  3620    
                           A  3621    ;  494	                        getLineToken(&t
                           A  3622    .LINE 494
                           A  3623    
0411BD 01000000            A  3624    	LD	BC,0
0411C1 C5                  A  3625    	PUSH	BC
0411C2 DD07F5              A  3626    	LD	BC,(IX+%FFFFFFF5)
0411C5 C5                  A  3627    	PUSH	BC
0411C6 DDE5E1              A  3628    	LD	HL,IX
0411C9 0174FFFF            A  3629    	LD	BC,-140
0411CD 09                  A  3630    	ADD	HL,BC
0411CE E5C1                A  3631    	LD	BC,HL
0411D0 C5                  A  3632    	PUSH	BC
0411D1 CD D3 4F 04         A  3633    	CALL	_getLineToken
0411D5 C1                  A  3634    	POP	BC
0411D6 C1                  A  3635    	POP	BC
0411D7 C1                  A  3636    	POP	BC
                           A  3637    ;  495	                        state = PS_COMM
                           A  3638    .LINE 495
                           A  3639    
0411D8 DD36FF05            A  3640    	LD	(IX+%FFFFFFFF),%5
                           A  3641    ;  496	                        break;
                           A  3642    .LINE 496
                           A  3643    
0411DC 18 74               A  3644    	JR	L_227
                           A  3645    ;  497	                    case 0:
0411DE                     A  3646    L_218:
                           A  3647    .LINE 497
                           A  3648    
                           A  3649    ;  498	                        currentline.nex
                           A  3650    .LINE 498
                           A  3651    
0411DE 01000000            A  3652    	LD	BC,0
0411E2 ED43 63 8A 04       A  3653    	LD	(_currentline+3),BC
                           A  3654    ;  499	                        state = PS_DONE
                           A  3655    .LINE 499
                           A  3656    
0411E7 DD36FF06            A  3657    	LD	(IX+%FFFFFFFF),%6
                           A  3658    ;  500	                        break;
                           A  3659    .LINE 500
                           A  3660    
0411EB 18 65               A  3661    	JR	L_227
                           A  3662    ;  501	                    case ',':
0411ED                     A  3663    L_219:
                           A  3664    .LINE 501
                           A  3665    
                           A  3666    ;  502	                        if(argcount == 
                           A  3667    .LINE 502
                           A  3668    
0411ED DD7EFE              A  3669    	LD	A,(IX+%FFFFFFFE)
0411F0 FE02                A  3670    	CP	A,%2
0411F2 20 12               A  3671    	JR	NZ,L_221
                           A  3672    ;  503	                            error(messa
                           A  3673    .LINE 503
                           A  3674    
0411F4 21 98 67 04         A  3675    	LD	HL,_message+87
0411F8 ED07                A  3676    	LD	BC,(HL)
0411FA C5                  A  3677    	PUSH	BC
0411FB CD A4 4E 04         A  3678    	CALL	_error
0411FF C1                  A  3679    	POP	BC
                           A  3680    ;  504	                            state = PS_
                           A  3681    .LINE 504
                           A  3682    
041200 DD36FF07            A  3683    	LD	(IX+%FFFFFFFF),%7
                           A  3684    ;  505	                            break;
                           A  3685    .LINE 505
                           A  3686    
041204 18 4C               A  3687    	JR	L_227
                           A  3688    ;  506	                        }
041206                     A  3689    L_221:
                           A  3690    .LINE 506
                           A  3691    
                           A  3692    ;  507	                        getLineToken(&t
                           A  3693    .LINE 507
                           A  3694    
041206 012C0000            A  3695    	LD	BC,44
04120A C5                  A  3696    	PUSH	BC
04120B DD07F5              A  3697    	LD	BC,(IX+%FFFFFFF5)
04120E C5                  A  3698    	PUSH	BC
04120F DDE5E1              A  3699    	LD	HL,IX
041212 0174FFFF            A  3700    	LD	BC,-140
041216 09                  A  3701    	ADD	HL,BC
041217 E5C1                A  3702    	LD	BC,HL
041219 C5                  A  3703    	PUSH	BC
04121A CD D3 4F 04         A  3704    	CALL	_getLineToken
04121E C1                  A  3705    	POP	BC
04121F C1                  A  3706    	POP	BC
041220 C1                  A  3707    	POP	BC
                           A  3708    ;  508	                        break;
                           A  3709    .LINE 508
                           A  3710    
041221 18 2F               A  3711    	JR	L_227
                           A  3712    ;  509	                }
                           A  3713    ;  510	                break;
                           A  3714    ;  511	            case PS_COMMENT:
041223                     A  3715    L_224:
                           A  3716    .LINE 511
                           A  3717    
                           A  3718    ;  512	                strcpy(currentline.comm
                           A  3719    .LINE 512
                           A  3720    
041223 DDE5E1              A  3721    	LD	HL,IX
041226 0174FFFF            A  3722    	LD	BC,-140
04122A 09                  A  3723    	ADD	HL,BC
04122B E5C1                A  3724    	LD	BC,HL
04122D C5                  A  3725    	PUSH	BC
04122E 01 E6 8A 04         A  3726    	LD	BC,_currentline+134
041232 C5                  A  3727    	PUSH	BC
041233 CD EE 63 04         A  3728    	CALL	_strcpy
041237 C1                  A  3729    	POP	BC
041238 C1                  A  3730    	POP	BC
                           A  3731    ;  513	                state = PS_DONE;
                           A  3732    .LINE 513
                           A  3733    
041239 DD36FF06            A  3734    	LD	(IX+%FFFFFFFF),%6
                           A  3735    ;  514	                break;
                           A  3736    .LINE 514
                           A  3737    
04123D 18 13               A  3738    	JR	L_227
                           A  3739    ;  515	            case PS_ERROR:
04123F                     A  3740    L_225:
                           A  3741    .LINE 515
                           A  3742    
                           A  3743    ;  516	                //error(message[ERROR_P
                           A  3744    ;  517	                currentline.next = NULL
                           A  3745    .LINE 517
                           A  3746    
04123F 01000000            A  3747    	LD	BC,0
041243 ED43 63 8A 04       A  3748    	LD	(_currentline+3),BC
                           A  3749    ;  518	                state = PS_DONE;
                           A  3750    .LINE 518
                           A  3751    
041248 DD36FF06            A  3752    	LD	(IX+%FFFFFFFF),%6
                           A  3753    ;  519	                break;
                           A  3754    .LINE 519
                           A  3755    
04124C 18 04               A  3756    	JR	L_227
                           A  3757    ;  520	            case PS_DONE:
04124E                     A  3758    L_226:
                           A  3759    .LINE 520
                           A  3760    
                           A  3761    ;  521	                done = true;
                           A  3762    .LINE 521
                           A  3763    
04124E DD36FC01            A  3764    	LD	(IX+%FFFFFFFC),%1
                           A  3765    ;  522	                break;
                           A  3766    ;  523	        }
                           A  3767    ;  524	    }
041252                     A  3768    L_227:
                           A  3769    .LINE 524
                           A  3770    
041252 DD7EFC              A  3771    	LD	A,(IX+%FFFFFFFC)
041255 B7                  A  3772    	OR	A,A
041256 CA C8 0E 04         A  3773    	JR	Z,L_228
                           A  3774    ;  525	}
                           A  3775    .LINE 525
                           A  3776    
04125A DDF9                A  3777    	LD	SP,IX
04125C DDE1                A  3778    	POP	IX
04125E C9                  A  3779    	RET	
                           A  3780    
                           A  3781    
                           A  3782    ;**************************** _parseLine ******
                           A  3783    ;Name                         Addr/Register   S
                           A  3784    ;_instruction_table_lookup           IMPORT  --
                           A  3785    ;_split_suffix                       IMPORT  --
                           A  3786    ;_strcpy                             IMPORT  --
                           A  3787    ;_message                            IMPORT  un
                           A  3788    ;_error                              IMPORT  --
                           A  3789    ;_getLineToken                       IMPORT  --
                           A  3790    ;_isspace                            IMPORT  --
                           A  3791    ;_operand2                           IMPORT    
                           A  3792    ;_operand1                           IMPORT    
                           A  3793    ;_currentline                        IMPORT    
                           A  3794    ;token                               IX-140    
                           A  3795    ;G_4                                   IX-7    
                           A  3796    ;done                                  IX-4    
                           A  3797    ;x                                     IX-3    
                           A  3798    ;argcount                              IX-2    
                           A  3799    ;state                                 IX-1    
                           A  3800    ;src                                   IX+6    
                           A  3801    
                           A  3802    
                           A  3803    ; Stack Frame Size: 149 (bytes)
                           A  3804    ;       Spill Code: 0 (instruction)
                           A  3805    
                           A  3806    
                           A  3807    .ENDFUNC "parseLine",525,"_parseLine"
                           A  3808    ;  526	
                           A  3809    ;  527	void definelabel(int32_t num){
04125F                     A  3810    _definelabel:
                           A  3811    .DEFINE "_definelabel"
                           A  3812    
                           A  3813    .VALUE _definelabel
                           A  3814    
                           A  3815    .CLASS 2
                           A  3816    
                           A  3817    .TYPE 65
                           A  3818    
                           A  3819    .ENDEF
                           A  3820    
                           A  3821    .BEGFUNC "definelabel",527,"_definelabel"
                           A  3822    
                           A  3823    .LINE 527
                           A  3824    
                           A  3825    .DEFINE "num"
                           A  3826    
                           A  3827    .CLASS 65
                           A  3828    
                           A  3829    .VALUE 6
                           A  3830    
                           A  3831    .TYPE 5
                           A  3832    
                           A  3833    .ENDEF
                           A  3834    
04125F DDE5                A  3835    	PUSH	IX
041261 DD210000 00         A  3836    	LD	IX,0
041266 DD39                A  3837    	ADD	IX,SP
041268 C5                  A  3838    	PUSH	BC
                           A  3839    ;  528	    if(strlen(currentline.label)) {
                           A  3840    .LINE 528
                           A  3841    
041269 01 66 8A 04         A  3842    	LD	BC,_currentline+6
04126D C5                  A  3843    	PUSH	BC
04126E CD F9 5C 04         A  3844    	CALL	_strlen
041272 C1                  A  3845    	POP	BC
041273 CD CF 60 04         A  3846    	CALL	__icmpzero
041277 CA 0C 13 04         A  3847    	JR	Z,L_238
                           A  3848    ;  529	        if(currentline.label[0] == '@')
                           A  3849    .LINE 529
                           A  3850    
04127B 01 66 8A 04         A  3851    	LD	BC,_currentline+6
04127F DD0FFD              A  3852    	LD	(IX+%FFFFFFFD),BC
041282 C5E1                A  3853    	LD	HL,BC
041284 7E                  A  3854    	LD	A,(HL)
041285 47                  A  3855    	LD	B,A
041286 17ED62              A  3856    	SEXT	HL
041289 68                  A  3857    	LD	L,B
04128A 01400000            A  3858    	LD	BC,64
04128E B7                  A  3859    	OR	A,A
04128F ED42                A  3860    	SBC	HL,BC
041291 20 4B               A  3861    	JR	NZ,L_236
                           A  3862    ;  530	            if(currentline.label[1] == 
                           A  3863    .LINE 530
                           A  3864    
041293 DD27FD              A  3865    	LD	HL,(IX+%FFFFFFFD)
041296 23                  A  3866    	INC	HL
041297 7E                  A  3867    	LD	A,(HL)
041298 47                  A  3868    	LD	B,A
041299 17ED62              A  3869    	SEXT	HL
04129C 68                  A  3870    	LD	L,B
04129D 01400000            A  3871    	LD	BC,64
0412A1 B7                  A  3872    	OR	A,A
0412A2 ED42                A  3873    	SBC	HL,BC
0412A4 20 12               A  3874    	JR	NZ,L_232
                           A  3875    ;  531	                writeAnonymousLabel(num
                           A  3876    .LINE 531
                           A  3877    
0412A6 DD4E09              A  3878    	LD	C,(IX+%9)
0412A9 0600                A  3879    	LD	B,%0
0412AB C5                  A  3880    	PUSH	BC
0412AC DD0706              A  3881    	LD	BC,(IX+%6)
0412AF C5                  A  3882    	PUSH	BC
0412B0 CD E7 3E 04         A  3883    	CALL	_writeAnonymousLabel
0412B4 C1                  A  3884    	POP	BC
0412B5 C1                  A  3885    	POP	BC
                           A  3886    ;  532	                return;
                           A  3887    .LINE 532
                           A  3888    
0412B6 18 54               A  3889    	JR	L_238
                           A  3890    ;  533	            }
0412B8                     A  3891    L_232:
                           A  3892    .LINE 533
                           A  3893    
                           A  3894    ;  534	            if(insertLocalLabel(current
                           A  3895    .LINE 534
                           A  3896    
0412B8 DD4E09              A  3897    	LD	C,(IX+%9)
0412BB 0600                A  3898    	LD	B,%0
0412BD C5                  A  3899    	PUSH	BC
0412BE DD0706              A  3900    	LD	BC,(IX+%6)
0412C1 C5                  A  3901    	PUSH	BC
0412C2 DD07FD              A  3902    	LD	BC,(IX+%FFFFFFFD)
0412C5 C5                  A  3903    	PUSH	BC
0412C6 CD 8E 3F 04         A  3904    	CALL	_insertLocalLabel
0412CA C1                  A  3905    	POP	BC
0412CB C1                  A  3906    	POP	BC
0412CC C1                  A  3907    	POP	BC
0412CD B7                  A  3908    	OR	A,A
0412CE 20 3C               A  3909    	JR	NZ,L_238
                           A  3910    ;  535	                error(message[ERROR_CRE
                           A  3911    .LINE 535
                           A  3912    
0412D0 21 9E 67 04         A  3913    	LD	HL,_message+93
0412D4 ED07                A  3914    	LD	BC,(HL)
0412D6 C5                  A  3915    	PUSH	BC
0412D7 CD A4 4E 04         A  3916    	CALL	_error
0412DB C1                  A  3917    	POP	BC
                           A  3918    ;  536	                return;
                           A  3919    .LINE 536
                           A  3920    
0412DC 18 2E               A  3921    	JR	L_238
                           A  3922    ;  537	            }
                           A  3923    ;  538	        }
                           A  3924    ;  539	        else {
0412DE                     A  3925    L_236:
                           A  3926    .LINE 539
                           A  3927    
                           A  3928    ;  540	            if(insertGlobalLabel(curren
                           A  3929    .LINE 540
                           A  3930    
0412DE DD4E09              A  3931    	LD	C,(IX+%9)
0412E1 0600                A  3932    	LD	B,%0
0412E3 C5                  A  3933    	PUSH	BC
0412E4 DD0706              A  3934    	LD	BC,(IX+%6)
0412E7 C5                  A  3935    	PUSH	BC
0412E8 DD07FD              A  3936    	LD	BC,(IX+%FFFFFFFD)
0412EB C5                  A  3937    	PUSH	BC
0412EC CD 8A 41 04         A  3938    	CALL	_insertGlobalLabel
0412F0 C1                  A  3939    	POP	BC
0412F1 C1                  A  3940    	POP	BC
0412F2 C1                  A  3941    	POP	BC
0412F3 B7                  A  3942    	OR	A,A
0412F4 20 0E               A  3943    	JR	NZ,L_234
                           A  3944    ;  541	                error(message[ERROR_CRE
                           A  3945    .LINE 541
                           A  3946    
0412F6 21 9E 67 04         A  3947    	LD	HL,_message+93
0412FA ED07                A  3948    	LD	BC,(HL)
0412FC C5                  A  3949    	PUSH	BC
0412FD CD A4 4E 04         A  3950    	CALL	_error
041301 C1                  A  3951    	POP	BC
                           A  3952    ;  542	                return;
                           A  3953    .LINE 542
                           A  3954    
041302 18 08               A  3955    	JR	L_238
                           A  3956    ;  543	            }
041304                     A  3957    L_234:
                           A  3958    .LINE 543
                           A  3959    
                           A  3960    ;  544	            writeLocalLabels();
                           A  3961    .LINE 544
                           A  3962    
041304 CD E0 3C 04         A  3963    	CALL	_writeLocalLabels
                           A  3964    ;  545	            clearLocalLabels();
                           A  3965    .LINE 545
                           A  3966    
041308 CD E7 3B 04         A  3967    	CALL	_clearLocalLabels
                           A  3968    ;  546	        }
                           A  3969    ;  547	    }
                           A  3970    ;  548	}
04130C                     A  3971    L_238:
                           A  3972    .LINE 548
                           A  3973    
04130C DDF9                A  3974    	LD	SP,IX
04130E DDE1                A  3975    	POP	IX
041310 C9                  A  3976    	RET	
                           A  3977    
                           A  3978    
                           A  3979    ;**************************** _definelabel ****
                           A  3980    ;Name                         Addr/Register   S
                           A  3981    ;_clearLocalLabels                   IMPORT  --
                           A  3982    ;_writeLocalLabels                   IMPORT  --
                           A  3983    ;_insertGlobalLabel                  IMPORT  --
                           A  3984    ;_message                            IMPORT  un
                           A  3985    ;_error                              IMPORT  --
                           A  3986    ;_insertLocalLabel                   IMPORT  --
                           A  3987    ;_writeAnonymousLabel                IMPORT  --
                           A  3988    ;_currentline                        IMPORT    
                           A  3989    ;_strlen                             IMPORT  --
                           A  3990    ;G_6                                   IX-3    
                           A  3991    ;num                                   IX+6    
                           A  3992    
                           A  3993    
                           A  3994    ; Stack Frame Size: 15 (bytes)
                           A  3995    ;       Spill Code: 0 (instruction)
                           A  3996    
                           A  3997    
                           A  3998    .ENDFUNC "definelabel",548,"_definelabel"
                           A  3999    ;  549	
                           A  4000    ;  550	void refreshlocalLabels(void) {
041311                     A  4001    _refreshlocalLabels:
                           A  4002    .DEFINE "_refreshlocalLabels"
                           A  4003    
                           A  4004    .VALUE _refreshlocalLabels
                           A  4005    
                           A  4006    .CLASS 2
                           A  4007    
                           A  4008    .TYPE 65
                           A  4009    
                           A  4010    .ENDEF
                           A  4011    
                           A  4012    .BEGFUNC "refreshlocalLabels",550,"_refreshloca
                           A  4013    
041311 DDE5                A  4014    	PUSH	IX
041313 DD210000 00         A  4015    	LD	IX,0
041318 DD39                A  4016    	ADD	IX,SP
                           A  4017    ;  551	    if(pass == 2) {
                           A  4018    .LINE 551
                           A  4019    
04131A 01020000            A  4020    	LD	BC,2
04131E 2A 52 8A 04         A  4021    	LD	HL,(_pass)
041322 B7                  A  4022    	OR	A,A
041323 ED42                A  4023    	SBC	HL,BC
041325 20 27               A  4024    	JR	NZ,L_242
                           A  4025    ;  552	        if(notEmpty(currentline.label))
                           A  4026    .LINE 552
                           A  4027    
041327 01 66 8A 04         A  4028    	LD	BC,_currentline+6
04132B C5                  A  4029    	PUSH	BC
04132C CD 8A 4E 04         A  4030    	CALL	_notEmpty
041330 C1                  A  4031    	POP	BC
041331 B7                  A  4032    	OR	A,A
041332 28 1A               A  4033    	JR	Z,L_242
                           A  4034    ;  553	            if(currentline.label[0] != 
                           A  4035    .LINE 553
                           A  4036    
041334 3A 66 8A 04         A  4037    	LD	A,(_currentline+6)
041338 47                  A  4038    	LD	B,A
041339 17ED62              A  4039    	SEXT	HL
04133C 68                  A  4040    	LD	L,B
04133D 01400000            A  4041    	LD	BC,64
041341 B7                  A  4042    	OR	A,A
041342 ED42                A  4043    	SBC	HL,BC
041344 28 08               A  4044    	JR	Z,L_242
                           A  4045    ;  554	                clearLocalLabels();
                           A  4046    .LINE 554
                           A  4047    
041346 CD E7 3B 04         A  4048    	CALL	_clearLocalLabels
                           A  4049    ;  555	                readLocalLabels();
                           A  4050    .LINE 555
                           A  4051    
04134A CD E3 3D 04         A  4052    	CALL	_readLocalLabels
                           A  4053    ;  556	            }
                           A  4054    ;  557	        }
                           A  4055    ;  558	    }
                           A  4056    ;  559	}
04134E                     A  4057    L_242:
                           A  4058    .LINE 559
                           A  4059    
04134E DDF9                A  4060    	LD	SP,IX
041350 DDE1                A  4061    	POP	IX
041352 C9                  A  4062    	RET	
                           A  4063    
                           A  4064    
                           A  4065    ;**************************** _refreshlocalLabe
                           A  4066    ;Name                         Addr/Register   S
                           A  4067    ;_readLocalLabels                    IMPORT  --
                           A  4068    ;_clearLocalLabels                   IMPORT  --
                           A  4069    ;_currentline                        IMPORT    
                           A  4070    ;_notEmpty                           IMPORT  --
                           A  4071    ;_pass                               IMPORT    
                           A  4072    
                           A  4073    
                           A  4074    ; Stack Frame Size: 6 (bytes)
                           A  4075    ;       Spill Code: 0 (instruction)
                           A  4076    
                           A  4077    
                           A  4078    .ENDFUNC "refreshlocalLabels",559,"_refreshloca
                           A  4079    ;  560	
                           A  4080    ;  561	// return ADL prefix bitfield, or 0 if 
                           A  4081    ;  562	uint8_t getADLsuffix(void) {
041353                     A  4082    _getADLsuffix:
                           A  4083    .DEFINE "_getADLsuffix"
                           A  4084    
                           A  4085    .VALUE _getADLsuffix
                           A  4086    
                           A  4087    .CLASS 2
                           A  4088    
                           A  4089    .TYPE 76
                           A  4090    
                           A  4091    .ENDEF
                           A  4092    
                           A  4093    .BEGFUNC "getADLsuffix",562,"_getADLsuffix"
                           A  4094    
041353 DDE5                A  4095    	PUSH	IX
041355 DD210000 00         A  4096    	LD	IX,0
04135A DD39                A  4097    	ADD	IX,SP
04135C ED22F4              A  4098    	LEA	HL,IX+%FFFFFFF4
04135F F9                  A  4099    	LD	SP,HL
                           A  4100    ;  563	    if(notEmpty(currentline.suffix)) {
                           A  4101    .LINE 563
                           A  4102    
041360 01 96 8A 04         A  4103    	LD	BC,_currentline+54
041364 C5                  A  4104    	PUSH	BC
041365 CD 8A 4E 04         A  4105    	CALL	_notEmpty
041369 C1                  A  4106    	POP	BC
04136A B7                  A  4107    	OR	A,A
04136B CA F6 14 04         A  4108    	JR	Z,L_285
                           A  4109    ;  564	        switch(strlen(currentline.suffi
                           A  4110    .LINE 564
                           A  4111    
04136F 01 96 8A 04         A  4112    	LD	BC,_currentline+54
041373 C5                  A  4113    	PUSH	BC
041374 CD F9 5C 04         A  4114    	CALL	_strlen
041378 C1                  A  4115    	POP	BC
041379 CD 81 5A 04         A  4116    	CALL	__seqcaseD
04137D E9                  A  4117    	JP	(HL)
04137E                     A  4118    L__95:
04137E 0300                A  4119    	DW	3
041380 0100                A  4120    	DW	1
041382 00                  A  4121    	DB	0
041383 8F1304              A  4122    	DW24	L_243	
                           A  4123    
041386 D61304              A  4124    	DW24	L_254	
                           A  4125    
041389 3E1404              A  4126    	DW24	L_267	
                           A  4127    
04138C EA1404              A  4128    	DW24	L_283	
                           A  4129    
                           A  4130    ;  565	            case 1: // .s or .l
04138F                     A  4131    L_243:
                           A  4132    .LINE 565
                           A  4133    
                           A  4134    ;  566	                switch(tolower(currentl
                           A  4135    .LINE 566
                           A  4136    
04138F 3A 96 8A 04         A  4137    	LD	A,(_currentline+54)
041393 47                  A  4138    	LD	B,A
041394 17ED62              A  4139    	SEXT	HL
041397 68                  A  4140    	LD	L,B
041398 E5                  A  4141    	PUSH	HL
041399 CD 4F 64 04         A  4142    	CALL	_tolower
04139D C1                  A  4143    	POP	BC
04139E CD B2 63 04         A  4144    	CALL	__case8D
0413A2 E9                  A  4145    	JP	(HL)
0413A3                     A  4146    L__96:
0413A3 0200                A  4147    	DW	2
0413A5 6C                  A  4148    	DB	108
0413A6 C31304              A  4149    	DW24	L_248	
                           A  4150    
0413A9 73                  A  4151    	DB	115
0413AA B01304              A  4152    	DW24	L_244	
                           A  4153    
0413AD EA1404              A  4154    	DW24	L_283	
                           A  4155    
                           A  4156    ;  567	                    case 's':
0413B0                     A  4157    L_244:
                           A  4158    .LINE 567
                           A  4159    
                           A  4160    ;  568	                        if(adlmode) ret
                           A  4161    .LINE 568
                           A  4162    
0413B0 3A 5F 8A 04         A  4163    	LD	A,(_adlmode)
0413B4 B7                  A  4164    	OR	A,A
0413B5 28 06               A  4165    	JR	Z,L_246
0413B7 3E04                A  4166    	LD	A,%4
0413B9 C3 F7 14 04         A  4167    	JR	L_286
                           A  4168    ;  569	                        else return S_S
0413BD                     A  4169    L_246:
                           A  4170    .LINE 569
                           A  4171    
0413BD 3E01                A  4172    	LD	A,%1
0413BF C3 F7 14 04         A  4173    	JR	L_286
                           A  4174    ;  570	                        break;
                           A  4175    ;  571	                    case 'l':
0413C3                     A  4176    L_248:
                           A  4177    .LINE 571
                           A  4178    
                           A  4179    ;  572	                        if(adlmode) ret
                           A  4180    .LINE 572
                           A  4181    
0413C3 3A 5F 8A 04         A  4182    	LD	A,(_adlmode)
0413C7 B7                  A  4183    	OR	A,A
0413C8 28 06               A  4184    	JR	Z,L_250
0413CA 3E08                A  4185    	LD	A,%8
0413CC C3 F7 14 04         A  4186    	JR	L_286
                           A  4187    ;  573	                        else return S_L
0413D0                     A  4188    L_250:
                           A  4189    .LINE 573
                           A  4190    
0413D0 3E02                A  4191    	LD	A,%2
0413D2 C3 F7 14 04         A  4192    	JR	L_286
                           A  4193    ;  574	                        break;
                           A  4194    ;  575	                    default: // illegal
                           A  4195    ;  576	                        break;
                           A  4196    ;  577	                }
                           A  4197    ;  578	                break;
                           A  4198    ;  579	            case 2: // .is or .il
0413D6                     A  4199    L_254:
                           A  4200    .LINE 579
                           A  4201    
                           A  4202    ;  580	                if(tolower(currentline.
                           A  4203    .LINE 580
                           A  4204    
0413D6 01 96 8A 04         A  4205    	LD	BC,_currentline+54
0413DA DD0FFA              A  4206    	LD	(IX+%FFFFFFFA),BC
0413DD C5E1                A  4207    	LD	HL,BC
0413DF 7E                  A  4208    	LD	A,(HL)
0413E0 47                  A  4209    	LD	B,A
0413E1 17ED62              A  4210    	SEXT	HL
0413E4 68                  A  4211    	LD	L,B
0413E5 E5                  A  4212    	PUSH	HL
0413E6 CD 4F 64 04         A  4213    	CALL	_tolower
0413EA C1                  A  4214    	POP	BC
0413EB 01690000            A  4215    	LD	BC,105
0413EF B7                  A  4216    	OR	A,A
0413F0 ED42                A  4217    	SBC	HL,BC
0413F2 C2 EA 14 04         A  4218    	JR	NZ,L_283
                           A  4219    ;  581	                switch(tolower(currentl
                           A  4220    .LINE 581
                           A  4221    
0413F6 DD27FA              A  4222    	LD	HL,(IX+%FFFFFFFA)
0413F9 23                  A  4223    	INC	HL
0413FA 7E                  A  4224    	LD	A,(HL)
0413FB 47                  A  4225    	LD	B,A
0413FC 17ED62              A  4226    	SEXT	HL
0413FF 68                  A  4227    	LD	L,B
041400 E5                  A  4228    	PUSH	HL
041401 CD 4F 64 04         A  4229    	CALL	_tolower
041405 C1                  A  4230    	POP	BC
041406 CD B2 63 04         A  4231    	CALL	__case8D
04140A E9                  A  4232    	JP	(HL)
04140B                     A  4233    L__100:
04140B 0200                A  4234    	DW	2
04140D 6C                  A  4235    	DB	108
04140E 2B1404              A  4236    	DW24	L_260	
                           A  4237    
041411 73                  A  4238    	DB	115
041412 181404              A  4239    	DW24	L_256	
                           A  4240    
041415 EA1404              A  4241    	DW24	L_283	
                           A  4242    
                           A  4243    ;  582	                    case 's':
041418                     A  4244    L_256:
                           A  4245    .LINE 582
                           A  4246    
                           A  4247    ;  583	                        if(adlmode) ret
                           A  4248    .LINE 583
                           A  4249    
041418 3A 5F 8A 04         A  4250    	LD	A,(_adlmode)
04141C B7                  A  4251    	OR	A,A
04141D 28 06               A  4252    	JR	Z,L_258
04141F 3E02                A  4253    	LD	A,%2
041421 C3 F7 14 04         A  4254    	JR	L_286
                           A  4255    ;  584	                        else return S_S
041425                     A  4256    L_258:
                           A  4257    .LINE 584
                           A  4258    
041425 3E01                A  4259    	LD	A,%1
041427 C3 F7 14 04         A  4260    	JR	L_286
                           A  4261    ;  585	                        break;
                           A  4262    ;  586	                    case 'l':
04142B                     A  4263    L_260:
                           A  4264    .LINE 586
                           A  4265    
                           A  4266    ;  587	                        if(adlmode) ret
                           A  4267    .LINE 587
                           A  4268    
04142B 3A 5F 8A 04         A  4269    	LD	A,(_adlmode)
04142F B7                  A  4270    	OR	A,A
041430 28 06               A  4271    	JR	Z,L_262
041432 3E08                A  4272    	LD	A,%8
041434 C3 F7 14 04         A  4273    	JR	L_286
                           A  4274    ;  588	                        else return S_S
041438                     A  4275    L_262:
                           A  4276    .LINE 588
                           A  4277    
041438 3E04                A  4278    	LD	A,%4
04143A C3 F7 14 04         A  4279    	JR	L_286
                           A  4280    ;  589	                        break;
                           A  4281    ;  590	                    default: // illegal
                           A  4282    ;  591	                        break;
                           A  4283    ;  592	                }
                           A  4284    ;  593	                break;
                           A  4285    ;  594	            case 3:
04143E                     A  4286    L_267:
                           A  4287    .LINE 594
                           A  4288    
                           A  4289    ;  595	                if(tolower(currentline.
                           A  4290    .LINE 595
                           A  4291    
04143E 01 96 8A 04         A  4292    	LD	BC,_currentline+54
041442 DD0FFD              A  4293    	LD	(IX+%FFFFFFFD),BC
041445 C5E1                A  4294    	LD	HL,BC
041447 23                  A  4295    	INC	HL
041448 7E                  A  4296    	LD	A,(HL)
041449 47                  A  4297    	LD	B,A
04144A 17ED62              A  4298    	SEXT	HL
04144D 68                  A  4299    	LD	L,B
04144E E5                  A  4300    	PUSH	HL
04144F CD 4F 64 04         A  4301    	CALL	_tolower
041453 C1                  A  4302    	POP	BC
041454 01690000            A  4303    	LD	BC,105
041458 B7                  A  4304    	OR	A,A
041459 ED42                A  4305    	SBC	HL,BC
04145B C2 EA 14 04         A  4306    	JR	NZ,L_283
                           A  4307    ;  596	                switch(tolower(currentl
                           A  4308    .LINE 596
                           A  4309    
04145F DD27FD              A  4310    	LD	HL,(IX+%FFFFFFFD)
041462 7E                  A  4311    	LD	A,(HL)
041463 47                  A  4312    	LD	B,A
041464 17ED62              A  4313    	SEXT	HL
041467 68                  A  4314    	LD	L,B
041468 E5                  A  4315    	PUSH	HL
041469 CD 4F 64 04         A  4316    	CALL	_tolower
04146D C1                  A  4317    	POP	BC
04146E CD B2 63 04         A  4318    	CALL	__case8D
041472 E9                  A  4319    	JP	(HL)
041473                     A  4320    L__104:
041473 0200                A  4321    	DW	2
041475 6C                  A  4322    	DB	108
041476 B51404              A  4323    	DW24	L_274	
                           A  4324    
041479 73                  A  4325    	DB	115
04147A 801404              A  4326    	DW24	L_269	
                           A  4327    
04147D EA1404              A  4328    	DW24	L_283	
                           A  4329    
                           A  4330    ;  597	                    case 's':
041480                     A  4331    L_269:
                           A  4332    .LINE 597
                           A  4333    
                           A  4334    ;  598	                        if(currentline.
                           A  4335    .LINE 598
                           A  4336    
041480 DD31FD              A  4337    	LD	IY,(IX+%FFFFFFFD)
041483 ED3302              A  4338    	LEA	IY,IY+%2
041486 DD3EF7              A  4339    	LD	(IX+%FFFFFFF7),IY
041489 DD27F7              A  4340    	LD	HL,(IX+%FFFFFFF7)
04148C 7E                  A  4341    	LD	A,(HL)
04148D 47                  A  4342    	LD	B,A
04148E 17ED62              A  4343    	SEXT	HL
041491 68                  A  4344    	LD	L,B
041492 01730000            A  4345    	LD	BC,115
041496 B7                  A  4346    	OR	A,A
041497 ED42                A  4347    	SBC	HL,BC
041499 20 04               A  4348    	JR	NZ,L_272
04149B 3E01                A  4349    	LD	A,%1
04149D 18 58               A  4350    	JR	L_286
04149F                     A  4351    L_272:
                           A  4352    ;  599	                        if(currentline.
                           A  4353    .LINE 599
                           A  4354    
04149F DD27F7              A  4355    	LD	HL,(IX+%FFFFFFF7)
0414A2 7E                  A  4356    	LD	A,(HL)
0414A3 47                  A  4357    	LD	B,A
0414A4 17ED62              A  4358    	SEXT	HL
0414A7 68                  A  4359    	LD	L,B
0414A8 016C0000            A  4360    	LD	BC,108
0414AC B7                  A  4361    	OR	A,A
0414AD ED42                A  4362    	SBC	HL,BC
0414AF 20 39               A  4363    	JR	NZ,L_283
0414B1 3E04                A  4364    	LD	A,%4
0414B3 18 42               A  4365    	JR	L_286
                           A  4366    ;  600	                        // illegal suff
                           A  4367    ;  601	                        break;
                           A  4368    .LINE 601
                           A  4369    
                           A  4370    ;  602	                    case 'l':
0414B5                     A  4371    L_274:
                           A  4372    .LINE 602
                           A  4373    
                           A  4374    ;  603	                        if(currentline.
                           A  4375    .LINE 603
                           A  4376    
0414B5 DD31FD              A  4377    	LD	IY,(IX+%FFFFFFFD)
0414B8 ED3302              A  4378    	LEA	IY,IY+%2
0414BB DD3EF4              A  4379    	LD	(IX+%FFFFFFF4),IY
0414BE DD27F4              A  4380    	LD	HL,(IX+%FFFFFFF4)
0414C1 7E                  A  4381    	LD	A,(HL)
0414C2 47                  A  4382    	LD	B,A
0414C3 17ED62              A  4383    	SEXT	HL
0414C6 68                  A  4384    	LD	L,B
0414C7 01730000            A  4385    	LD	BC,115
0414CB B7                  A  4386    	OR	A,A
0414CC ED42                A  4387    	SBC	HL,BC
0414CE 20 04               A  4388    	JR	NZ,L_277
0414D0 3E02                A  4389    	LD	A,%2
0414D2 18 23               A  4390    	JR	L_286
0414D4                     A  4391    L_277:
                           A  4392    ;  604	                        if(currentline.
                           A  4393    .LINE 604
                           A  4394    
0414D4 DD27F4              A  4395    	LD	HL,(IX+%FFFFFFF4)
0414D7 7E                  A  4396    	LD	A,(HL)
0414D8 47                  A  4397    	LD	B,A
0414D9 17ED62              A  4398    	SEXT	HL
0414DC 68                  A  4399    	LD	L,B
0414DD 016C0000            A  4400    	LD	BC,108
0414E1 B7                  A  4401    	OR	A,A
0414E2 ED42                A  4402    	SBC	HL,BC
0414E4 20 04               A  4403    	JR	NZ,L_283
0414E6 3E08                A  4404    	LD	A,%8
0414E8 18 0D               A  4405    	JR	L_286
                           A  4406    ;  605	                        // illegal suff
                           A  4407    ;  606	                        break;
                           A  4408    ;  607	                    default: // illegal
                           A  4409    ;  608	                        break;
                           A  4410    ;  609	                }
                           A  4411    ;  610	                break;
                           A  4412    ;  611	            default: // illegal suffix
                           A  4413    ;  612	                break;
                           A  4414    ;  613	        }
0414EA                     A  4415    L_283:
                           A  4416    .LINE 613
                           A  4417    
                           A  4418    ;  614	        error(message[ERROR_INVALIDSUFF
                           A  4419    .LINE 614
                           A  4420    
0414EA 21 65 67 04         A  4421    	LD	HL,_message+36
0414EE ED07                A  4422    	LD	BC,(HL)
0414F0 C5                  A  4423    	PUSH	BC
0414F1 CD A4 4E 04         A  4424    	CALL	_error
0414F5 C1                  A  4425    	POP	BC
                           A  4426    ;  615	    }
0414F6                     A  4427    L_285:
                           A  4428    .LINE 615
                           A  4429    
                           A  4430    ;  616	    return 0;
                           A  4431    .LINE 616
                           A  4432    
0414F6 AF                  A  4433    	XOR	A,A
                           A  4434    ;  617	}
0414F7                     A  4435    L_286:
                           A  4436    .LINE 617
                           A  4437    
0414F7 DDF9                A  4438    	LD	SP,IX
0414F9 DDE1                A  4439    	POP	IX
0414FB C9                  A  4440    	RET	
                           A  4441    
                           A  4442    
                           A  4443    ;**************************** _getADLsuffix ***
                           A  4444    ;Name                         Addr/Register   S
                           A  4445    ;_message                            IMPORT  un
                           A  4446    ;_error                              IMPORT  --
                           A  4447    ;_adlmode                            IMPORT    
                           A  4448    ;_tolower                            IMPORT  --
                           A  4449    ;_strlen                             IMPORT  --
                           A  4450    ;_currentline                        IMPORT    
                           A  4451    ;_notEmpty                           IMPORT  --
                           A  4452    ;G_14                                 IX-12    
                           A  4453    ;G_12                                  IX-9    
                           A  4454    ;G_9                                   IX-6    
                           A  4455    ;G_10                                  IX-3    
                           A  4456    
                           A  4457    
                           A  4458    ; Stack Frame Size: 18 (bytes)
                           A  4459    ;       Spill Code: 0 (instruction)
                           A  4460    
                           A  4461    
                           A  4462    .ENDFUNC "getADLsuffix",617,"_getADLsuffix"
                           A  4463    ;  618	
                           A  4464    ;  619	void adl_action() {
0414FC                     A  4465    _adl_action:
                           A  4466    .DEFINE "_adl_action"
                           A  4467    
                           A  4468    .VALUE _adl_action
                           A  4469    
                           A  4470    .CLASS 2
                           A  4471    
                           A  4472    .TYPE 65
                           A  4473    
                           A  4474    .ENDEF
                           A  4475    
                           A  4476    .BEGFUNC "adl_action",619,"_adl_action"
                           A  4477    
0414FC DDE5                A  4478    	PUSH	IX
0414FE DD210000 00         A  4479    	LD	IX,0
041503 DD39                A  4480    	ADD	IX,SP
                           A  4481    ;  620	    if(strcmp(currentline.operand1, "0"
                           A  4482    .LINE 620
                           A  4483    
041505 01 AF 82 04         A  4484    	LD	BC,L__110
041509 C5                  A  4485    	PUSH	BC
04150A 01 A6 8A 04         A  4486    	LD	BC,_currentline+70
04150E C5                  A  4487    	PUSH	BC
04150F CD 65 5C 04         A  4488    	CALL	_strcmp
041513 C1                  A  4489    	POP	BC
041514 C1                  A  4490    	POP	BC
041515 CD CF 60 04         A  4491    	CALL	__icmpzero
041519 20 05               A  4492    	JR	NZ,L_289
04151B AF                  A  4493    	XOR	A,A
04151C 32 5F 8A 04         A  4494    	LD	(_adlmode),A
041520                     A  4495    L_289:
                           A  4496    ;  621	    if(strcmp(currentline.operand1, "1"
                           A  4497    .LINE 621
                           A  4498    
041520 01 B1 82 04         A  4499    	LD	BC,L__112
041524 C5                  A  4500    	PUSH	BC
041525 01 A6 8A 04         A  4501    	LD	BC,_currentline+70
041529 C5                  A  4502    	PUSH	BC
04152A CD 65 5C 04         A  4503    	CALL	_strcmp
04152E C1                  A  4504    	POP	BC
04152F C1                  A  4505    	POP	BC
041530 CD CF 60 04         A  4506    	CALL	__icmpzero
041534 20 06               A  4507    	JR	NZ,L_290
041536 3E01                A  4508    	LD	A,%1
041538 32 5F 8A 04         A  4509    	LD	(_adlmode),A
                           A  4510    ;  622	}
04153C                     A  4511    L_290:
                           A  4512    .LINE 622
                           A  4513    
04153C DDF9                A  4514    	LD	SP,IX
04153E DDE1                A  4515    	POP	IX
041540 C9                  A  4516    	RET	
                           A  4517    
                           A  4518    
                           A  4519    ;**************************** _adl_action *****
                           A  4520    ;Name                         Addr/Register   S
                           A  4521    ;_adlmode                            IMPORT    
                           A  4522    ;_currentline                        IMPORT    
                           A  4523    ;_strcmp                             IMPORT  --
                           A  4524    
                           A  4525    
                           A  4526    ; Stack Frame Size: 6 (bytes)
                           A  4527    ;       Spill Code: 0 (instruction)
                           A  4528    
                           A  4529    
                           A  4530    .ENDFUNC "adl_action",622,"_adl_action"
                           A  4531    	SEGMENT STRSECT
0482AF                     A  4532    L__110:
0482AF 30                  A  4533    	DB	"0"
0482B0 00                  A  4534    	DB	0
0482B1                     A  4535    L__112:
0482B1 31                  A  4536    	DB	"1"
0482B2 00                  A  4537    	DB	0
                           A  4538    	SEGMENT CODE
                           A  4539    ;  623	
                           A  4540    ;  624	// get the number of bytes to emit from
                           A  4541    ;  625	uint8_t get_immediate_size(operand *op,
041541                     A  4542    _get_immediate_size:
                           A  4543    .DEFINE "_get_immediate_size"
                           A  4544    
                           A  4545    .VALUE _get_immediate_size
                           A  4546    
                           A  4547    .CLASS 2
                           A  4548    
                           A  4549    .TYPE 76
                           A  4550    
                           A  4551    .ENDEF
                           A  4552    
                           A  4553    .BEGFUNC "get_immediate_size",625,"_get_immedia
                           A  4554    
                           A  4555    .LINE 625
                           A  4556    
                           A  4557    .DEFINE "op"
                           A  4558    
                           A  4559    .CLASS 65
                           A  4560    
                           A  4561    .VALUE 6
                           A  4562    
                           A  4563    .TAG "NONAME3"
                           A  4564    
                           A  4565    .TYPE 40
                           A  4566    
                           A  4567    .ENDEF
                           A  4568    
                           A  4569    .DEFINE "suffix"
                           A  4570    
                           A  4571    .CLASS 65
                           A  4572    
                           A  4573    .VALUE 9
                           A  4574    
                           A  4575    .TYPE 12
                           A  4576    
                           A  4577    .ENDEF
                           A  4578    
                           A  4579    .DEFINE "num"
                           A  4580    
                           A  4581    .CLASS 65
                           A  4582    
                           A  4583    .VALUE -1
                           A  4584    
                           A  4585    .TYPE 12
                           A  4586    
                           A  4587    .ENDEF
                           A  4588    
041541 DDE5                A  4589    	PUSH	IX
041543 DD210000 00         A  4590    	LD	IX,0
041548 DD39                A  4591    	ADD	IX,SP
04154A 3B                  A  4592    	DEC	SP
                           A  4593    ;  626	    uint8_t num;
                           A  4594    ;  627	    switch(suffix) {
                           A  4595    .LINE 627
                           A  4596    
04154B DD7E09              A  4597    	LD	A,(IX+%9)
04154E B7ED62              A  4598    	UEXT	HL
041551 6F                  A  4599    	LD	L,A
041552 CD B2 63 04         A  4600    	CALL	__case8D
041556 E9                  A  4601    	JP	(HL)
041557                     A  4602    L__115:
041557 0500                A  4603    	DW	5
041559 00                  A  4604    	DB	0
04155A 7C1504              A  4605    	DW24	L_295	
                           A  4606    
04155D 01                  A  4607    	DB	1
04155E 701504              A  4608    	DW24	L_291	
                           A  4609    
041561 02                  A  4610    	DB	2
041562 701504              A  4611    	DW24	L_292	
                           A  4612    
041565 04                  A  4613    	DB	4
041566 761504              A  4614    	DW24	L_293	
                           A  4615    
041569 08                  A  4616    	DB	8
04156A 761504              A  4617    	DW24	L_294	
                           A  4618    
04156D 8F1504              A  4619    	DW24	L_299	
                           A  4620    
                           A  4621    ;  628	        case S_SIS:
041570                     A  4622    L_291:
                           A  4623    .LINE 628
                           A  4624    
                           A  4625    ;  629	        case S_LIS:
041570                     A  4626    L_292:
                           A  4627    .LINE 629
                           A  4628    
                           A  4629    ;  630	            num = 2;
                           A  4630    .LINE 630
                           A  4631    
041570 DD36FF02            A  4632    	LD	(IX+%FFFFFFFF),%2
                           A  4633    ;  631	            break;
                           A  4634    .LINE 631
                           A  4635    
041574 18 28               A  4636    	JR	L_302
                           A  4637    ;  632	        case S_SIL:
041576                     A  4638    L_293:
                           A  4639    .LINE 632
                           A  4640    
                           A  4641    ;  633	        case S_LIL:
041576                     A  4642    L_294:
                           A  4643    .LINE 633
                           A  4644    
                           A  4645    ;  634	            num = 3;
                           A  4646    .LINE 634
                           A  4647    
041576 DD36FF03            A  4648    	LD	(IX+%FFFFFFFF),%3
                           A  4649    ;  635	            break;
                           A  4650    .LINE 635
                           A  4651    
04157A 18 22               A  4652    	JR	L_302
                           A  4653    ;  636	        case 0: // Use current ADL mode
04157C                     A  4654    L_295:
                           A  4655    .LINE 636
                           A  4656    
                           A  4657    ;  637	            if(adlmode) num = 3;
                           A  4658    .LINE 637
                           A  4659    
04157C 3A 5F 8A 04         A  4660    	LD	A,(_adlmode)
041580 B7                  A  4661    	OR	A,A
041581 28 06               A  4662    	JR	Z,L_297
041583 DD36FF03            A  4663    	LD	(IX+%FFFFFFFF),%3
                           A  4664    ;  638	            else num = 2;
                           A  4665    .LINE 638
                           A  4666    
041587 18 15               A  4667    	JR	L_302
041589                     A  4668    L_297:
041589 DD36FF02            A  4669    	LD	(IX+%FFFFFFFF),%2
                           A  4670    ;  639	            break;
                           A  4671    .LINE 639
                           A  4672    
04158D 18 0F               A  4673    	JR	L_302
                           A  4674    ;  640	        default:
04158F                     A  4675    L_299:
                           A  4676    .LINE 640
                           A  4677    
                           A  4678    ;  641	            error(message[ERROR_INVALID
                           A  4679    .LINE 641
                           A  4680    
04158F 21 53 67 04         A  4681    	LD	HL,_message+18
041593 ED07                A  4682    	LD	BC,(HL)
041595 C5                  A  4683    	PUSH	BC
041596 CD A4 4E 04         A  4684    	CALL	_error
04159A C1                  A  4685    	POP	BC
                           A  4686    ;  642	            return 0;
                           A  4687    .LINE 642
                           A  4688    
04159B AF                  A  4689    	XOR	A,A
04159C 18 2D               A  4690    	JR	L_304
                           A  4691    ;  643	    }
04159E                     A  4692    L_302:
                           A  4693    .LINE 643
                           A  4694    
                           A  4695    ;  644	    if((num == 2) && (op->immediate > 0
                           A  4696    .LINE 644
                           A  4697    
04159E DD7EFF              A  4698    	LD	A,(IX+%FFFFFFFF)
0415A1 FE02                A  4699    	CP	A,%2
0415A3 20 23               A  4700    	JR	NZ,L_303
0415A5 21FFFF00            A  4701    	LD	HL,65535
0415A9 1E00                A  4702    	LD	E,%0
0415AB DD3106              A  4703    	LD	IY,(IX+%6)
0415AE FD070B              A  4704    	LD	BC,(IY+%B)
0415B1 FD7E0E              A  4705    	LD	A,(IY+%E)
0415B4 CD 9C 63 04         A  4706    	CALL	__lcmps
0415B8 F2 C8 15 04         A  4707    	JP	P,L_303
0415BC 21 68 67 04         A  4708    	LD	HL,_message+39
0415C0 ED07                A  4709    	LD	BC,(HL)
0415C2 C5                  A  4710    	PUSH	BC
0415C3 CD A4 4E 04         A  4711    	CALL	_error
0415C7 C1                  A  4712    	POP	BC
0415C8                     A  4713    L_303:
                           A  4714    ;  645	    return num;
                           A  4715    .LINE 645
                           A  4716    
0415C8 DD7EFF              A  4717    	LD	A,(IX+%FFFFFFFF)
                           A  4718    ;  646	}
0415CB                     A  4719    L_304:
                           A  4720    .LINE 646
                           A  4721    
0415CB DDF9                A  4722    	LD	SP,IX
0415CD DDE1                A  4723    	POP	IX
0415CF C9                  A  4724    	RET	
                           A  4725    
                           A  4726    
                           A  4727    ;**************************** _get_immediate_si
                           A  4728    ;Name                         Addr/Register   S
                           A  4729    ;_message                            IMPORT  un
                           A  4730    ;_error                              IMPORT  --
                           A  4731    ;_adlmode                            IMPORT    
                           A  4732    ;num                                   IX-1    
                           A  4733    ;suffix                                IX+9    
                           A  4734    ;op                                    IX+6    
                           A  4735    
                           A  4736    
                           A  4737    ; Stack Frame Size: 13 (bytes)
                           A  4738    ;       Spill Code: 0 (instruction)
                           A  4739    
                           A  4740    
                           A  4741    .ENDFUNC "get_immediate_size",646,"_get_immedia
                           A  4742    ;  647	// Emit a 16 or 24 bit immediate number
                           A  4743    ;  648	// given suffix bit, or in lack of it, 
                           A  4744    ;  649	void emit_immediate(operand *op, uint8_
0415D0                     A  4745    _emit_immediate:
                           A  4746    .DEFINE "_emit_immediate"
                           A  4747    
                           A  4748    .VALUE _emit_immediate
                           A  4749    
                           A  4750    .CLASS 2
                           A  4751    
                           A  4752    .TYPE 65
                           A  4753    
                           A  4754    .ENDEF
                           A  4755    
                           A  4756    .BEGFUNC "emit_immediate",649,"_emit_immediate"
                           A  4757    
                           A  4758    .LINE 649
                           A  4759    
                           A  4760    .DEFINE "op"
                           A  4761    
                           A  4762    .CLASS 65
                           A  4763    
                           A  4764    .VALUE 6
                           A  4765    
                           A  4766    .TAG "NONAME3"
                           A  4767    
                           A  4768    .TYPE 40
                           A  4769    
                           A  4770    .ENDEF
                           A  4771    
                           A  4772    .DEFINE "suffix"
                           A  4773    
                           A  4774    .CLASS 65
                           A  4775    
                           A  4776    .VALUE 9
                           A  4777    
                           A  4778    .TYPE 12
                           A  4779    
                           A  4780    .ENDEF
                           A  4781    
                           A  4782    .DEFINE "num"
                           A  4783    
                           A  4784    .CLASS 65
                           A  4785    
                           A  4786    .VALUE -1
                           A  4787    
                           A  4788    .TYPE 12
                           A  4789    
                           A  4790    .ENDEF
                           A  4791    
0415D0 DDE5                A  4792    	PUSH	IX
0415D2 DD210000 00         A  4793    	LD	IX,0
0415D7 DD39                A  4794    	ADD	IX,SP
0415D9 3B                  A  4795    	DEC	SP
                           A  4796    ;  650	    uint8_t num;
                           A  4797    ;  651	
                           A  4798    ;  652	    num = get_immediate_size(op, suffix
                           A  4799    .LINE 652
                           A  4800    
0415DA DD4E09              A  4801    	LD	C,(IX+%9)
0415DD 0600                A  4802    	LD	B,%0
0415DF C5                  A  4803    	PUSH	BC
0415E0 DD0706              A  4804    	LD	BC,(IX+%6)
0415E3 C5                  A  4805    	PUSH	BC
0415E4 CD 41 15 04         A  4806    	CALL	_get_immediate_size
0415E8 C1                  A  4807    	POP	BC
0415E9 C1                  A  4808    	POP	BC
0415EA DD77FF              A  4809    	LD	(IX+%FFFFFFFF),A
                           A  4810    ;  653	    emit_8bit(op->immediate & 0xFF);
                           A  4811    .LINE 653
                           A  4812    
0415ED DD3106              A  4813    	LD	IY,(IX+%6)
0415F0 FD460B              A  4814    	LD	B,(IY+%B)
0415F3 78                  A  4815    	LD	A,B
0415F4 4F                  A  4816    	LD	C,A
0415F5 0600                A  4817    	LD	B,%0
0415F7 C5                  A  4818    	PUSH	BC
0415F8 CD 84 1D 04         A  4819    	CALL	_emit_8bit
0415FC C1                  A  4820    	POP	BC
                           A  4821    ;  654	    emit_8bit((op->immediate >> 8) & 0x
                           A  4822    .LINE 654
                           A  4823    
0415FD DD3106              A  4824    	LD	IY,(IX+%6)
041600 FD070B              A  4825    	LD	BC,(IY+%B)
041603 FD7E0E              A  4826    	LD	A,(IY+%E)
041606 2E08                A  4827    	LD	L,%8
041608 CD 5B 60 04         A  4828    	CALL	__lshrs
04160C 0600                A  4829    	LD	B,%0
04160E C5                  A  4830    	PUSH	BC
04160F CD 84 1D 04         A  4831    	CALL	_emit_8bit
041613 C1                  A  4832    	POP	BC
                           A  4833    ;  655	    if(num == 3) emit_8bit((op->immedia
                           A  4834    .LINE 655
                           A  4835    
041614 DD7EFF              A  4836    	LD	A,(IX+%FFFFFFFF)
041617 FE03                A  4837    	CP	A,%3
041619 20 17               A  4838    	JR	NZ,L_306
04161B DD3106              A  4839    	LD	IY,(IX+%6)
04161E FD070B              A  4840    	LD	BC,(IY+%B)
041621 FD7E0E              A  4841    	LD	A,(IY+%E)
041624 2E10                A  4842    	LD	L,%10
041626 CD 5B 60 04         A  4843    	CALL	__lshrs
04162A 0600                A  4844    	LD	B,%0
04162C C5                  A  4845    	PUSH	BC
04162D CD 84 1D 04         A  4846    	CALL	_emit_8bit
041631 C1                  A  4847    	POP	BC
                           A  4848    ;  656	}
041632                     A  4849    L_306:
                           A  4850    .LINE 656
                           A  4851    
041632 DDF9                A  4852    	LD	SP,IX
041634 DDE1                A  4853    	POP	IX
041636 C9                  A  4854    	RET	
                           A  4855    
                           A  4856    
                           A  4857    ;**************************** _emit_immediate *
                           A  4858    ;Name                         Addr/Register   S
                           A  4859    ;_emit_8bit                          IMPORT  --
                           A  4860    ;num                                   IX-1    
                           A  4861    ;suffix                                IX+9    
                           A  4862    ;op                                    IX+6    
                           A  4863    
                           A  4864    
                           A  4865    ; Stack Frame Size: 13 (bytes)
                           A  4866    ;       Spill Code: 0 (instruction)
                           A  4867    
                           A  4868    
                           A  4869    .ENDFUNC "emit_immediate",656,"_emit_immediate"
                           A  4870    ;  657	
                           A  4871    ;  658	void emit_adlsuffix_code(uint8_t suffix
041637                     A  4872    _emit_adlsuffix_code:
                           A  4873    .DEFINE "_emit_adlsuffix_code"
                           A  4874    
                           A  4875    .VALUE _emit_adlsuffix_code
                           A  4876    
                           A  4877    .CLASS 2
                           A  4878    
                           A  4879    .TYPE 65
                           A  4880    
                           A  4881    .ENDEF
                           A  4882    
                           A  4883    .BEGFUNC "emit_adlsuffix_code",658,"_emit_adlsu
                           A  4884    
                           A  4885    .LINE 658
                           A  4886    
                           A  4887    .DEFINE "suffix"
                           A  4888    
                           A  4889    .CLASS 65
                           A  4890    
                           A  4891    .VALUE 6
                           A  4892    
                           A  4893    .TYPE 12
                           A  4894    
                           A  4895    .ENDEF
                           A  4896    
                           A  4897    .DEFINE "code"
                           A  4898    
                           A  4899    .CLASS 65
                           A  4900    
                           A  4901    .VALUE -1
                           A  4902    
                           A  4903    .TYPE 12
                           A  4904    
                           A  4905    .ENDEF
                           A  4906    
041637 DDE5                A  4907    	PUSH	IX
041639 DD210000 00         A  4908    	LD	IX,0
04163E DD39                A  4909    	ADD	IX,SP
041640 3B                  A  4910    	DEC	SP
                           A  4911    ;  659	    uint8_t code;
                           A  4912    ;  660	    switch(suffix) {
                           A  4913    .LINE 660
                           A  4914    
041641 DD7E06              A  4915    	LD	A,(IX+%6)
041644 B7ED62              A  4916    	UEXT	HL
041647 6F                  A  4917    	LD	L,A
041648 CD B2 63 04         A  4918    	CALL	__case8D
04164C E9                  A  4919    	JP	(HL)
04164D                     A  4920    L__122:
04164D 0400                A  4921    	DW	4
04164F 01                  A  4922    	DB	1
041650 621604              A  4923    	DW24	L_307	
                           A  4924    
041653 02                  A  4925    	DB	2
041654 681604              A  4926    	DW24	L_308	
                           A  4927    
041657 04                  A  4928    	DB	4
041658 6E1604              A  4929    	DW24	L_309	
                           A  4930    
04165B 08                  A  4931    	DB	8
04165C 741604              A  4932    	DW24	L_310	
                           A  4933    
04165F 7A1604              A  4934    	DW24	L_311	
                           A  4935    
                           A  4936    ;  661	        case S_SIS:
041662                     A  4937    L_307:
                           A  4938    .LINE 661
                           A  4939    
                           A  4940    ;  662	            code = CODE_SIS;
                           A  4941    .LINE 662
                           A  4942    
041662 DD36FF40            A  4943    	LD	(IX+%FFFFFFFF),%40
                           A  4944    ;  663	            break;
                           A  4945    .LINE 663
                           A  4946    
041666 18 20               A  4947    	JR	L_312
                           A  4948    ;  664	        case S_LIS:
041668                     A  4949    L_308:
                           A  4950    .LINE 664
                           A  4951    
                           A  4952    ;  665	            code = CODE_LIS;
                           A  4953    .LINE 665
                           A  4954    
041668 DD36FF49            A  4955    	LD	(IX+%FFFFFFFF),%49
                           A  4956    ;  666	            break;
                           A  4957    .LINE 666
                           A  4958    
04166C 18 1A               A  4959    	JR	L_312
                           A  4960    ;  667	        case S_SIL:
04166E                     A  4961    L_309:
                           A  4962    .LINE 667
                           A  4963    
                           A  4964    ;  668	            code = CODE_SIL;
                           A  4965    .LINE 668
                           A  4966    
04166E DD36FF52            A  4967    	LD	(IX+%FFFFFFFF),%52
                           A  4968    ;  669	            break;
                           A  4969    .LINE 669
                           A  4970    
041672 18 14               A  4971    	JR	L_312
                           A  4972    ;  670	        case S_LIL:
041674                     A  4973    L_310:
                           A  4974    .LINE 670
                           A  4975    
                           A  4976    ;  671	            code = CODE_LIL;
                           A  4977    .LINE 671
                           A  4978    
041674 DD36FF5B            A  4979    	LD	(IX+%FFFFFFFF),%5B
                           A  4980    ;  672	            break;
                           A  4981    .LINE 672
                           A  4982    
041678 18 0E               A  4983    	JR	L_312
                           A  4984    ;  673	        default:
04167A                     A  4985    L_311:
                           A  4986    .LINE 673
                           A  4987    
                           A  4988    ;  674	            error(message[ERROR_INVALID
                           A  4989    .LINE 674
                           A  4990    
04167A 21 65 67 04         A  4991    	LD	HL,_message+36
04167E ED07                A  4992    	LD	BC,(HL)
041680 C5                  A  4993    	PUSH	BC
041681 CD A4 4E 04         A  4994    	CALL	_error
041685 C1                  A  4995    	POP	BC
                           A  4996    ;  675	            return;
                           A  4997    .LINE 675
                           A  4998    
041686 18 0B               A  4999    	JR	L_313
                           A  5000    ;  676	    }
041688                     A  5001    L_312:
                           A  5002    .LINE 676
                           A  5003    
                           A  5004    ;  677	    emit_8bit(code);
                           A  5005    .LINE 677
                           A  5006    
041688 DD4EFF              A  5007    	LD	C,(IX+%FFFFFFFF)
04168B 0600                A  5008    	LD	B,%0
04168D C5                  A  5009    	PUSH	BC
04168E CD 84 1D 04         A  5010    	CALL	_emit_8bit
041692 C1                  A  5011    	POP	BC
                           A  5012    ;  678	}
041693                     A  5013    L_313:
                           A  5014    .LINE 678
                           A  5015    
041693 DDF9                A  5016    	LD	SP,IX
041695 DDE1                A  5017    	POP	IX
041697 C9                  A  5018    	RET	
                           A  5019    
                           A  5020    
                           A  5021    ;**************************** _emit_adlsuffix_c
                           A  5022    ;Name                         Addr/Register   S
                           A  5023    ;_emit_8bit                          IMPORT  --
                           A  5024    ;_message                            IMPORT  un
                           A  5025    ;_error                              IMPORT  --
                           A  5026    ;code                                  IX-1    
                           A  5027    ;suffix                                IX+6    
                           A  5028    
                           A  5029    
                           A  5030    ; Stack Frame Size: 10 (bytes)
                           A  5031    ;       Spill Code: 0 (instruction)
                           A  5032    
                           A  5033    
                           A  5034    .ENDFUNC "emit_adlsuffix_code",678,"_emit_adlsu
                           A  5035    ;  679	
                           A  5036    ;  680	uint8_t get_ddfd_prefix(cpuregister reg
041698                     A  5037    _get_ddfd_prefix:
                           A  5038    .DEFINE "_get_ddfd_prefix"
                           A  5039    
                           A  5040    .VALUE _get_ddfd_prefix
                           A  5041    
                           A  5042    .CLASS 2
                           A  5043    
                           A  5044    .TYPE 76
                           A  5045    
                           A  5046    .ENDEF
                           A  5047    
                           A  5048    .BEGFUNC "get_ddfd_prefix",680,"_get_ddfd_prefi
                           A  5049    
                           A  5050    .LINE 680
                           A  5051    
                           A  5052    .DEFINE "reg"
                           A  5053    
                           A  5054    .CLASS 65
                           A  5055    
                           A  5056    .VALUE 6
                           A  5057    
                           A  5058    .TYPE 4
                           A  5059    
                           A  5060    .ENDEF
                           A  5061    
041698 DDE5                A  5062    	PUSH	IX
04169A DD210000 00         A  5063    	LD	IX,0
04169F DD39                A  5064    	ADD	IX,SP
                           A  5065    ;  681	    switch(reg) {
                           A  5066    .LINE 681
                           A  5067    
0416A1 DD2706              A  5068    	LD	HL,(IX+%6)
0416A4 CD 81 5A 04         A  5069    	CALL	__seqcaseD
0416A8 E9                  A  5070    	JP	(HL)
0416A9                     A  5071    L__124:
0416A9 0600                A  5072    	DW	6
0416AB 0D00                A  5073    	DW	13
0416AD 00                  A  5074    	DB	0
0416AE C31604              A  5075    	DW24	L_314	
                           A  5076    
0416B1 C71604              A  5077    	DW24	L_317	
                           A  5078    
0416B4 C31604              A  5079    	DW24	L_315	
                           A  5080    
0416B7 C31604              A  5081    	DW24	L_316	
                           A  5082    
0416BA C71604              A  5083    	DW24	L_318	
                           A  5084    
0416BD C71604              A  5085    	DW24	L_319	
                           A  5086    
0416C0 CB1604              A  5087    	DW24	L_321	
                           A  5088    
                           A  5089    ;  682	        case R_IX:
0416C3                     A  5090    L_314:
                           A  5091    .LINE 682
                           A  5092    
                           A  5093    ;  683	        case R_IXH:
0416C3                     A  5094    L_315:
                           A  5095    .LINE 683
                           A  5096    
                           A  5097    ;  684	        case R_IXL:
0416C3                     A  5098    L_316:
                           A  5099    .LINE 684
                           A  5100    
                           A  5101    ;  685	            return 0xDD;
                           A  5102    .LINE 685
                           A  5103    
0416C3 3EDD                A  5104    	LD	A,%DD
0416C5 18 05               A  5105    	JR	L_322
                           A  5106    ;  686	        case R_IY:
0416C7                     A  5107    L_317:
                           A  5108    .LINE 686
                           A  5109    
                           A  5110    ;  687	        case R_IYH:
0416C7                     A  5111    L_318:
                           A  5112    .LINE 687
                           A  5113    
                           A  5114    ;  688	        case R_IYL:
0416C7                     A  5115    L_319:
                           A  5116    .LINE 688
                           A  5117    
                           A  5118    ;  689	            return 0xFD;
                           A  5119    .LINE 689
                           A  5120    
0416C7 3EFD                A  5121    	LD	A,%FD
0416C9 18 01               A  5122    	JR	L_322
                           A  5123    ;  690	        default:
                           A  5124    ;  691	            break;
                           A  5125    ;  692	    }
0416CB                     A  5126    L_321:
                           A  5127    .LINE 692
                           A  5128    
                           A  5129    ;  693	    return 0;    
                           A  5130    .LINE 693
                           A  5131    
0416CB AF                  A  5132    	XOR	A,A
                           A  5133    ;  694	}
0416CC                     A  5134    L_322:
                           A  5135    .LINE 694
                           A  5136    
0416CC DDF9                A  5137    	LD	SP,IX
0416CE DDE1                A  5138    	POP	IX
0416D0 C9                  A  5139    	RET	
                           A  5140    
                           A  5141    
                           A  5142    ;**************************** _get_ddfd_prefix 
                           A  5143    ;Name                         Addr/Register   S
                           A  5144    ;reg                                   IX+6    
                           A  5145    
                           A  5146    
                           A  5147    ; Stack Frame Size: 9 (bytes)
                           A  5148    ;       Spill Code: 0 (instruction)
                           A  5149    
                           A  5150    
                           A  5151    .ENDFUNC "get_ddfd_prefix",694,"_get_ddfd_prefi
                           A  5152    ;  695	
                           A  5153    ;  696	void prefix_ddfd_suffix(operandlist *op
0416D1                     A  5154    _prefix_ddfd_suffix:
                           A  5155    .DEFINE "_prefix_ddfd_suffix"
                           A  5156    
                           A  5157    .VALUE _prefix_ddfd_suffix
                           A  5158    
                           A  5159    .CLASS 2
                           A  5160    
                           A  5161    .TYPE 65
                           A  5162    
                           A  5163    .ENDEF
                           A  5164    
                           A  5165    .BEGFUNC "prefix_ddfd_suffix",696,"_prefix_ddfd
                           A  5166    
                           A  5167    .LINE 696
                           A  5168    
                           A  5169    .DEFINE "op"
                           A  5170    
                           A  5171    .CLASS 65
                           A  5172    
                           A  5173    .VALUE 6
                           A  5174    
                           A  5175    .TAG "NONAME5"
                           A  5176    
                           A  5177    .TYPE 40
                           A  5178    
                           A  5179    .ENDEF
                           A  5180    
                           A  5181    .DEFINE "prefix2"
                           A  5182    
                           A  5183    .CLASS 65
                           A  5184    
                           A  5185    .VALUE -1
                           A  5186    
                           A  5187    .TYPE 12
                           A  5188    
                           A  5189    .ENDEF
                           A  5190    
                           A  5191    .DEFINE "prefix1"
                           A  5192    
                           A  5193    .CLASS 65
                           A  5194    
                           A  5195    .VALUE -2
                           A  5196    
                           A  5197    .TYPE 12
                           A  5198    
                           A  5199    .ENDEF
                           A  5200    
0416D1 DDE5                A  5201    	PUSH	IX
0416D3 DD210000 00         A  5202    	LD	IX,0
0416D8 DD39                A  5203    	ADD	IX,SP
0416DA 3B                  A  5204    	DEC	SP
0416DB 3B                  A  5205    	DEC	SP
                           A  5206    ;  697	    uint8_t prefix1, prefix2;
                           A  5207    ;  698	
                           A  5208    ;  699	    if(op->ddfdpermitted) {
                           A  5209    .LINE 699
                           A  5210    
0416DC DD3106              A  5211    	LD	IY,(IX+%6)
0416DF FD7E06              A  5212    	LD	A,(IY+%6)
0416E2 B7                  A  5213    	OR	A,A
0416E3 28 57               A  5214    	JR	Z,L_331
                           A  5215    ;  700	        prefix1 = get_ddfd_prefix(opera
                           A  5216    .LINE 700
                           A  5217    
0416E5 ED4B 68 8B 04       A  5218    	LD	BC,(_operand1)
0416EA C5                  A  5219    	PUSH	BC
0416EB CD 98 16 04         A  5220    	CALL	_get_ddfd_prefix
0416EF C1                  A  5221    	POP	BC
0416F0 DD77FE              A  5222    	LD	(IX+%FFFFFFFE),A
                           A  5223    ;  701	        prefix2 = get_ddfd_prefix(opera
                           A  5224    .LINE 701
                           A  5225    
0416F3 ED4B 78 8B 04       A  5226    	LD	BC,(_operand2)
0416F8 C5                  A  5227    	PUSH	BC
0416F9 CD 98 16 04         A  5228    	CALL	_get_ddfd_prefix
0416FD C1                  A  5229    	POP	BC
0416FE DD77FF              A  5230    	LD	(IX+%FFFFFFFF),A
                           A  5231    ;  702	
                           A  5232    ;  703	
                           A  5233    ;  704	        // prefix in either of these tw
                           A  5234    ;  705	        if(prefix1) {
                           A  5235    .LINE 705
                           A  5236    
041701 DD7EFE              A  5237    	LD	A,(IX+%FFFFFFFE)
041704 B7                  A  5238    	OR	A,A
041705 28 28               A  5239    	JR	Z,L_329
                           A  5240    ;  706	            if(prefix2) {
                           A  5241    .LINE 706
                           A  5242    
041707 DD7EFF              A  5243    	LD	A,(IX+%FFFFFFFF)
04170A B7                  A  5244    	OR	A,A
04170B 28 19               A  5245    	JR	Z,L_326
                           A  5246    ;  707	                // both prefixes set
                           A  5247    ;  708	                if(operand1.indirect) {
                           A  5248    .LINE 708
                           A  5249    
04170D 3A 6C 8B 04         A  5250    	LD	A,(_operand1+4)
041711 B7                  A  5251    	OR	A,A
041712 28 09               A  5252    	JR	Z,L_324
                           A  5253    ;  709	                    output.prefix1 = pr
                           A  5254    .LINE 709
                           A  5255    
041714 DD7EFE              A  5256    	LD	A,(IX+%FFFFFFFE)
041717 32 89 8B 04         A  5257    	LD	(_output+1),A
                           A  5258    ;  710	                }
                           A  5259    ;  711	                else {
                           A  5260    .LINE 711
                           A  5261    
04171B 18 1F               A  5262    	JR	L_331
04171D                     A  5263    L_324:
                           A  5264    ;  712	                    output.prefix1 = pr
                           A  5265    .LINE 712
                           A  5266    
04171D DD7EFF              A  5267    	LD	A,(IX+%FFFFFFFF)
041720 32 89 8B 04         A  5268    	LD	(_output+1),A
                           A  5269    ;  713	                }
                           A  5270    ;  714	            }
                           A  5271    ;  715	            else {
                           A  5272    .LINE 715
                           A  5273    
041724 18 16               A  5274    	JR	L_331
041726                     A  5275    L_326:
                           A  5276    ;  716	                output.prefix1 = prefix
                           A  5277    .LINE 716
                           A  5278    
041726 DD7EFE              A  5279    	LD	A,(IX+%FFFFFFFE)
041729 32 89 8B 04         A  5280    	LD	(_output+1),A
                           A  5281    ;  717	            }
                           A  5282    ;  718	        }
                           A  5283    ;  719	        else {
                           A  5284    .LINE 719
                           A  5285    
04172D 18 0D               A  5286    	JR	L_331
04172F                     A  5287    L_329:
                           A  5288    ;  720	            if(prefix2) {
                           A  5289    .LINE 720
                           A  5290    
04172F DD7EFF              A  5291    	LD	A,(IX+%FFFFFFFF)
041732 B7                  A  5292    	OR	A,A
041733 28 07               A  5293    	JR	Z,L_331
                           A  5294    ;  721	                output.prefix1 = prefix
                           A  5295    .LINE 721
                           A  5296    
041735 DD7EFF              A  5297    	LD	A,(IX+%FFFFFFFF)
041738 32 89 8B 04         A  5298    	LD	(_output+1),A
                           A  5299    ;  722	            }
                           A  5300    ;  723	        }
                           A  5301    ;  724	    }
                           A  5302    ;  725	}
04173C                     A  5303    L_331:
                           A  5304    .LINE 725
                           A  5305    
04173C DDF9                A  5306    	LD	SP,IX
04173E DDE1                A  5307    	POP	IX
041740 C9                  A  5308    	RET	
                           A  5309    
                           A  5310    
                           A  5311    ;**************************** _prefix_ddfd_suff
                           A  5312    ;Name                         Addr/Register   S
                           A  5313    ;_output                             IMPORT    
                           A  5314    ;_operand2                           IMPORT    
                           A  5315    ;_operand1                           IMPORT    
                           A  5316    ;prefix1                               IX-2    
                           A  5317    ;prefix2                               IX-1    
                           A  5318    ;op                                    IX+6    
                           A  5319    
                           A  5320    
                           A  5321    ; Stack Frame Size: 11 (bytes)
                           A  5322    ;       Spill Code: 0 (instruction)
                           A  5323    
                           A  5324    
                           A  5325    .ENDFUNC "prefix_ddfd_suffix",725,"_prefix_ddfd
                           A  5326    ;  726	
                           A  5327    ;  727	void transform_instruction(operand *op,
041741                     A  5328    _transform_instruction:
                           A  5329    .DEFINE "_transform_instruction"
                           A  5330    
                           A  5331    .VALUE _transform_instruction
                           A  5332    
                           A  5333    .CLASS 2
                           A  5334    
                           A  5335    .TYPE 65
                           A  5336    
                           A  5337    .ENDEF
                           A  5338    
                           A  5339    .BEGFUNC "transform_instruction",727,"_transfor
                           A  5340    
                           A  5341    .LINE 727
                           A  5342    
                           A  5343    .DEFINE "op"
                           A  5344    
                           A  5345    .CLASS 65
                           A  5346    
                           A  5347    .VALUE 6
                           A  5348    
                           A  5349    .TAG "NONAME3"
                           A  5350    
                           A  5351    .TYPE 40
                           A  5352    
                           A  5353    .ENDEF
                           A  5354    
                           A  5355    .DEFINE "type"
                           A  5356    
                           A  5357    .CLASS 65
                           A  5358    
                           A  5359    .VALUE 9
                           A  5360    
                           A  5361    .TYPE 4
                           A  5362    
                           A  5363    .ENDEF
                           A  5364    
                           A  5365    .DEFINE "y"
                           A  5366    
                           A  5367    .CLASS 65
                           A  5368    
                           A  5369    .VALUE -1
                           A  5370    
                           A  5371    .TYPE 12
                           A  5372    
                           A  5373    .ENDEF
                           A  5374    
                           A  5375    .DEFINE "rel"
                           A  5376    
                           A  5377    .CLASS 65
                           A  5378    
                           A  5379    .VALUE -5
                           A  5380    
                           A  5381    .TYPE 5
                           A  5382    
                           A  5383    .ENDEF
                           A  5384    
041741 DDE5                A  5385    	PUSH	IX
041743 DD210000 00         A  5386    	LD	IX,0
041748 DD39                A  5387    	ADD	IX,SP
04174A ED22F4              A  5388    	LEA	HL,IX+%FFFFFFF4
04174D F9                  A  5389    	LD	SP,HL
                           A  5390    ;  728	    uint8_t y;
                           A  5391    ;  729	    int32_t rel;
                           A  5392    ;  730	
                           A  5393    ;  731	    switch(type) {
                           A  5394    .LINE 731
                           A  5395    
04174E DD2709              A  5396    	LD	HL,(IX+%9)
041751 CD B2 63 04         A  5397    	CALL	__case8D
041755 E9                  A  5398    	JP	(HL)
041756                     A  5399    L__132:
041756 0B00                A  5400    	DW	11
041758 00                  A  5401    	DB	0
041759 951904              A  5402    	DW24	L_366	
                           A  5403    
04175C 02                  A  5404    	DB	2
04175D FB1704              A  5405    	DW24	L_341	
                           A  5406    
041760 03                  A  5407    	DB	3
041761 E91704              A  5408    	DW24	L_340	
                           A  5409    
041764 04                  A  5410    	DB	4
041765 321804              A  5411    	DW24	L_345	
                           A  5412    
041768 07                  A  5413    	DB	7
041769 4A1804              A  5414    	DW24	L_346	
                           A  5415    
04176C 08                  A  5416    	DB	8
04176D 871704              A  5417    	DW24	L_332	
                           A  5418    
041770 09                  A  5419    	DB	9
041771 B81704              A  5420    	DW24	L_336	
                           A  5421    
041774 0A                  A  5422    	DB	10
041775 931804              A  5423    	DW24	L_349	
                           A  5424    
041778 0B                  A  5425    	DB	11
041779 611804              A  5426    	DW24	L_347	
                           A  5427    
04177C 0C                  A  5428    	DB	12
04177D 781804              A  5429    	DW24	L_348	
                           A  5430    
041780 0D                  A  5431    	DB	13
041781 E01804              A  5432    	DW24	L_355	
                           A  5433    
041784 891904              A  5434    	DW24	L_365	
                           A  5435    
                           A  5436    ;  732	        case TRANSFORM_IR0:
041787                     A  5437    L_332:
                           A  5438    .LINE 732
                           A  5439    
                           A  5440    ;  733	            if((op->reg == R_IXL) || (o
                           A  5441    .LINE 733
                           A  5442    
041787 DD3106              A  5443    	LD	IY,(IX+%6)
04178A FD0700              A  5444    	LD	BC,(IY+%0)
04178D DD0FF8              A  5445    	LD	(IX+%FFFFFFF8),BC
041790 01100000            A  5446    	LD	BC,16
041794 DD27F8              A  5447    	LD	HL,(IX+%FFFFFFF8)
041797 B7                  A  5448    	OR	A,A
041798 ED42                A  5449    	SBC	HL,BC
04179A 28 0E               A  5450    	JR	Z,L_334
04179C 01120000            A  5451    	LD	BC,18
0417A0 DD27F8              A  5452    	LD	HL,(IX+%FFFFFFF8)
0417A3 B7                  A  5453    	OR	A,A
0417A4 ED42                A  5454    	SBC	HL,BC
0417A6 C2 95 19 04         A  5455    	JR	NZ,L_366
0417AA                     A  5456    L_334:
0417AA 3A 8B 8B 04         A  5457    	LD	A,(_output+3)
0417AE CBC7                A  5458    	SET	%0,A
0417B0 32 8B 8B 04         A  5459    	LD	(_output+3),A
                           A  5460    ;  734	            break;
                           A  5461    .LINE 734
                           A  5462    
0417B4 C3 95 19 04         A  5463    	JR	L_366
                           A  5464    ;  735	        case TRANSFORM_IR3:
0417B8                     A  5465    L_336:
                           A  5466    .LINE 735
                           A  5467    
                           A  5468    ;  736	            if((op->reg == R_IXL) || (o
                           A  5469    .LINE 736
                           A  5470    
0417B8 DD3106              A  5471    	LD	IY,(IX+%6)
0417BB FD0700              A  5472    	LD	BC,(IY+%0)
0417BE DD0FF5              A  5473    	LD	(IX+%FFFFFFF5),BC
0417C1 01100000            A  5474    	LD	BC,16
0417C5 DD27F5              A  5475    	LD	HL,(IX+%FFFFFFF5)
0417C8 B7                  A  5476    	OR	A,A
0417C9 ED42                A  5477    	SBC	HL,BC
0417CB 28 0E               A  5478    	JR	Z,L_338
0417CD 01120000            A  5479    	LD	BC,18
0417D1 DD27F5              A  5480    	LD	HL,(IX+%FFFFFFF5)
0417D4 B7                  A  5481    	OR	A,A
0417D5 ED42                A  5482    	SBC	HL,BC
0417D7 C2 95 19 04         A  5483    	JR	NZ,L_366
0417DB                     A  5484    L_338:
0417DB 3A 8B 8B 04         A  5485    	LD	A,(_output+3)
0417DF CBDF                A  5486    	SET	%3,A
0417E1 32 8B 8B 04         A  5487    	LD	(_output+3),A
                           A  5488    ;  737	            break;
                           A  5489    .LINE 737
                           A  5490    
0417E5 C3 95 19 04         A  5491    	JR	L_366
                           A  5492    ;  738	        case TRANSFORM_Z:
0417E9                     A  5493    L_340:
                           A  5494    .LINE 738
                           A  5495    
                           A  5496    ;  739	            output.opcode |= op->reg_in
                           A  5497    .LINE 739
                           A  5498    
0417E9 3A 8B 8B 04         A  5499    	LD	A,(_output+3)
0417ED DD3106              A  5500    	LD	IY,(IX+%6)
0417F0 FDB603              A  5501    	OR	A,(IY+%3)
0417F3 32 8B 8B 04         A  5502    	LD	(_output+3),A
                           A  5503    ;  740	            break;
                           A  5504    .LINE 740
                           A  5505    
0417F7 C3 95 19 04         A  5506    	JR	L_366
                           A  5507    ;  741	        case TRANSFORM_Y:
0417FB                     A  5508    L_341:
                           A  5509    .LINE 741
                           A  5510    
                           A  5511    ;  742	            if(op->immediate_provided) 
                           A  5512    .LINE 742
                           A  5513    
0417FB DD3106              A  5514    	LD	IY,(IX+%6)
0417FE FD7E0A              A  5515    	LD	A,(IY+%A)
041801 B7                  A  5516    	OR	A,A
041802 28 17               A  5517    	JR	Z,L_343
041804 DD3106              A  5518    	LD	IY,(IX+%6)
041807 FD7E0B              A  5519    	LD	A,(IY+%B)
04180A 87                  A  5520    	ADD	A,A
04180B 87                  A  5521    	ADD	A,A
04180C 87                  A  5522    	ADD	A,A
04180D ED4B 8B 8B 04       A  5523    	LD	BC,(_output+3)
041812 B1                  A  5524    	OR	A,C
041813 32 8B 8B 04         A  5525    	LD	(_output+3),A
                           A  5526    ;  743	            else output.opcode |= (op->
                           A  5527    .LINE 743
                           A  5528    
041817 C3 95 19 04         A  5529    	JR	L_366
04181B                     A  5530    L_343:
04181B DD3106              A  5531    	LD	IY,(IX+%6)
04181E FD7E03              A  5532    	LD	A,(IY+%3)
041821 87                  A  5533    	ADD	A,A
041822 87                  A  5534    	ADD	A,A
041823 87                  A  5535    	ADD	A,A
041824 47                  A  5536    	LD	B,A
041825 3A 8B 8B 04         A  5537    	LD	A,(_output+3)
041829 B0                  A  5538    	OR	A,B
04182A 32 8B 8B 04         A  5539    	LD	(_output+3),A
                           A  5540    ;  744	            break;
                           A  5541    .LINE 744
                           A  5542    
04182E C3 95 19 04         A  5543    	JR	L_366
                           A  5544    ;  745	        case TRANSFORM_P:
041832                     A  5545    L_345:
                           A  5546    .LINE 745
                           A  5547    
                           A  5548    ;  746	            output.opcode |= (op->reg_i
                           A  5549    .LINE 746
                           A  5550    
041832 DD3106              A  5551    	LD	IY,(IX+%6)
041835 FD7E03              A  5552    	LD	A,(IY+%3)
041838 87                  A  5553    	ADD	A,A
041839 87                  A  5554    	ADD	A,A
04183A 87                  A  5555    	ADD	A,A
04183B 87                  A  5556    	ADD	A,A
04183C 47                  A  5557    	LD	B,A
04183D 3A 8B 8B 04         A  5558    	LD	A,(_output+3)
041841 B0                  A  5559    	OR	A,B
041842 32 8B 8B 04         A  5560    	LD	(_output+3),A
                           A  5561    ;  747	            break;
                           A  5562    .LINE 747
                           A  5563    
041846 C3 95 19 04         A  5564    	JR	L_366
                           A  5565    ;  748	        case TRANSFORM_CC:
04184A                     A  5566    L_346:
                           A  5567    .LINE 748
                           A  5568    
                           A  5569    ;  749	            output.opcode |= (op->cc_in
                           A  5570    .LINE 749
                           A  5571    
04184A DD3106              A  5572    	LD	IY,(IX+%6)
04184D FD7E06              A  5573    	LD	A,(IY+%6)
041850 87                  A  5574    	ADD	A,A
041851 87                  A  5575    	ADD	A,A
041852 87                  A  5576    	ADD	A,A
041853 47                  A  5577    	LD	B,A
041854 3A 8B 8B 04         A  5578    	LD	A,(_output+3)
041858 B0                  A  5579    	OR	A,B
041859 32 8B 8B 04         A  5580    	LD	(_output+3),A
                           A  5581    ;  750	            break;
                           A  5582    .LINE 750
                           A  5583    
04185D C3 95 19 04         A  5584    	JR	L_366
                           A  5585    ;  751	        case TRANSFORM_N:
041861                     A  5586    L_347:
                           A  5587    .LINE 751
                           A  5588    
                           A  5589    ;  752	            output.opcode |= op->immedi
                           A  5590    .LINE 752
                           A  5591    
041861 DD3106              A  5592    	LD	IY,(IX+%6)
041864 FD460B              A  5593    	LD	B,(IY+%B)
041867 3A 8B 8B 04         A  5594    	LD	A,(_output+3)
04186B B0                  A  5595    	OR	A,B
04186C 32 8B 8B 04         A  5596    	LD	(_output+3),A
                           A  5597    ;  753	            op->immediate_provided = fa
                           A  5598    .LINE 753
                           A  5599    
041870 FD360A00            A  5600    	LD	(IY+%A),%0
                           A  5601    ;  754	            break;
                           A  5602    .LINE 754
                           A  5603    
041874 C3 95 19 04         A  5604    	JR	L_366
                           A  5605    ;  755	        case TRANSFORM_BIT:
041878                     A  5606    L_348:
                           A  5607    .LINE 755
                           A  5608    
                           A  5609    ;  756	            output.opcode |= (op->immed
                           A  5610    .LINE 756
                           A  5611    
041878 DD3106              A  5612    	LD	IY,(IX+%6)
04187B FD7E0B              A  5613    	LD	A,(IY+%B)
04187E 87                  A  5614    	ADD	A,A
04187F 87                  A  5615    	ADD	A,A
041880 87                  A  5616    	ADD	A,A
041881 ED4B 8B 8B 04       A  5617    	LD	BC,(_output+3)
041886 B1                  A  5618    	OR	A,C
041887 32 8B 8B 04         A  5619    	LD	(_output+3),A
                           A  5620    ;  757	            op->immediate_provided = fa
                           A  5621    .LINE 757
                           A  5622    
04188B FD360A00            A  5623    	LD	(IY+%A),%0
                           A  5624    ;  758	            break;
                           A  5625    .LINE 758
                           A  5626    
04188F C3 95 19 04         A  5627    	JR	L_366
                           A  5628    ;  759	        case TRANSFORM_SELECT:
041893                     A  5629    L_349:
                           A  5630    .LINE 759
                           A  5631    
                           A  5632    ;  760	            switch(op->immediate) {
                           A  5633    .LINE 760
                           A  5634    
041893 DD3106              A  5635    	LD	IY,(IX+%6)
041896 FD270B              A  5636    	LD	HL,(IY+%B)
041899 CD 81 5A 04         A  5637    	CALL	__seqcaseD
04189D E9                  A  5638    	JP	(HL)
04189E                     A  5639    L__138:
04189E 0300                A  5640    	DW	3
0418A0 0000                A  5641    	DW	0
0418A2 00                  A  5642    	DB	0
0418A3 AF1804              A  5643    	DW24	L_350	
                           A  5644    
0418A6 B51804              A  5645    	DW24	L_351	
                           A  5646    
0418A9 BB1804              A  5647    	DW24	L_352	
                           A  5648    
0418AC C11804              A  5649    	DW24	L_353	
                           A  5650    
                           A  5651    ;  761	                case 0:
0418AF                     A  5652    L_350:
                           A  5653    .LINE 761
                           A  5654    
                           A  5655    ;  762	                    y = 0;
                           A  5656    .LINE 762
                           A  5657    
0418AF DD36FF00            A  5658    	LD	(IX+%FFFFFFFF),%0
                           A  5659    ;  763	                    break;
                           A  5660    .LINE 763
                           A  5661    
0418B3 18 10               A  5662    	JR	L_354
                           A  5663    ;  764	                case 1:
0418B5                     A  5664    L_351:
                           A  5665    .LINE 764
                           A  5666    
                           A  5667    ;  765	                    y = 2;
                           A  5668    .LINE 765
                           A  5669    
0418B5 DD36FF02            A  5670    	LD	(IX+%FFFFFFFF),%2
                           A  5671    ;  766	                    break;
                           A  5672    .LINE 766
                           A  5673    
0418B9 18 0A               A  5674    	JR	L_354
                           A  5675    ;  767	                case 2:
0418BB                     A  5676    L_352:
                           A  5677    .LINE 767
                           A  5678    
                           A  5679    ;  768	                    y = 3;
                           A  5680    .LINE 768
                           A  5681    
0418BB DD36FF03            A  5682    	LD	(IX+%FFFFFFFF),%3
                           A  5683    ;  769	                    break;
                           A  5684    .LINE 769
                           A  5685    
0418BF 18 04               A  5686    	JR	L_354
                           A  5687    ;  770	                default:
0418C1                     A  5688    L_353:
                           A  5689    .LINE 770
                           A  5690    
                           A  5691    ;  771	                    y = 0;
                           A  5692    .LINE 771
                           A  5693    
0418C1 DD36FF00            A  5694    	LD	(IX+%FFFFFFFF),%0
                           A  5695    ;  772	            }
0418C5                     A  5696    L_354:
                           A  5697    .LINE 772
                           A  5698    
                           A  5699    ;  773	            output.opcode |= (y << 3); 
                           A  5700    .LINE 773
                           A  5701    
0418C5 DD7EFF              A  5702    	LD	A,(IX+%FFFFFFFF)
0418C8 87                  A  5703    	ADD	A,A
0418C9 87                  A  5704    	ADD	A,A
0418CA 87                  A  5705    	ADD	A,A
0418CB 47                  A  5706    	LD	B,A
0418CC 3A 8B 8B 04         A  5707    	LD	A,(_output+3)
0418D0 B0                  A  5708    	OR	A,B
0418D1 32 8B 8B 04         A  5709    	LD	(_output+3),A
                           A  5710    ;  774	            op->immediate_provided = fa
                           A  5711    .LINE 774
                           A  5712    
0418D5 DD3106              A  5713    	LD	IY,(IX+%6)
0418D8 FD360A00            A  5714    	LD	(IY+%A),%0
                           A  5715    ;  775	            break;
                           A  5716    .LINE 775
                           A  5717    
0418DC C3 95 19 04         A  5718    	JR	L_366
                           A  5719    ;  776	        case TRANSFORM_REL:
0418E0                     A  5720    L_355:
                           A  5721    .LINE 776
                           A  5722    
                           A  5723    ;  777	            if(pass == 2) {
                           A  5724    .LINE 777
                           A  5725    
0418E0 01020000            A  5726    	LD	BC,2
0418E4 2A 52 8A 04         A  5727    	LD	HL,(_pass)
0418E8 B7                  A  5728    	OR	A,A
0418E9 ED42                A  5729    	SBC	HL,BC
0418EB C2 95 19 04         A  5730    	JR	NZ,L_366
                           A  5731    ;  778	                // label still potentia
                           A  5732    ;  779	                if(op->wasLabel) rel = 
                           A  5733    .LINE 779
                           A  5734    
0418EF DD3106              A  5735    	LD	IY,(IX+%6)
0418F2 FD7E0F              A  5736    	LD	A,(IY+%F)
0418F5 B7                  A  5737    	OR	A,A
0418F6 28 28               A  5738    	JR	Z,L_357
0418F8 DD3106              A  5739    	LD	IY,(IX+%6)
0418FB FD270B              A  5740    	LD	HL,(IY+%B)
0418FE FD5E0E              A  5741    	LD	E,(IY+%E)
041901 ED4B 55 8A 04       A  5742    	LD	BC,(_address)
041906 3A 58 8A 04         A  5743    	LD	A,(_address+3)
04190A CD 9F 60 04         A  5744    	CALL	__lsub
04190E 01FEFFFF            A  5745    	LD	BC,16777214
041912 3EFF                A  5746    	LD	A,%FF
041914 CD 06 5A 04         A  5747    	CALL	__ladd
041918 DD2FFB              A  5748    	LD	(IX+%FFFFFFFB),HL
04191B DD73FE              A  5749    	LD	(IX+%FFFFFFFE),E
                           A  5750    ;  780	                else rel = op->immediat
                           A  5751    .LINE 780
                           A  5752    
04191E 18 0F               A  5753    	JR	L_360
041920                     A  5754    L_357:
041920 DD3106              A  5755    	LD	IY,(IX+%6)
041923 FD070B              A  5756    	LD	BC,(IY+%B)
041926 FD7E0E              A  5757    	LD	A,(IY+%E)
041929 DD0FFB              A  5758    	LD	(IX+%FFFFFFFB),BC
04192C DD77FE              A  5759    	LD	(IX+%FFFFFFFE),A
04192F                     A  5760    L_360:
                           A  5761    ;  781	                if((rel > 127) || (rel 
                           A  5762    .LINE 781
                           A  5763    
04192F 217F0000            A  5764    	LD	HL,127
041933 1E00                A  5765    	LD	E,%0
041935 DD07FB              A  5766    	LD	BC,(IX+%FFFFFFFB)
041938 DD7EFE              A  5767    	LD	A,(IX+%FFFFFFFE)
04193B CD 9C 63 04         A  5768    	CALL	__lcmps
04193F FA 5B 19 04         A  5769    	JP	M,L_359
041943 DD27FB              A  5770    	LD	HL,(IX+%FFFFFFFB)
041946 DD5EFE              A  5771    	LD	E,(IX+%FFFFFFFE)
041949 0180FFFF            A  5772    	LD	BC,16777088
04194D 3EFF                A  5773    	LD	A,%FF
04194F CD 9C 63 04         A  5774    	CALL	__lcmps
041953 CD 15 5A 04         A  5775    	CALL	__setflag
041957 F2 6D 19 04         A  5776    	JP	P,L_361
04195B                     A  5777    L_359:
04195B 21 83 67 04         A  5778    	LD	HL,_message+66
04195F ED07                A  5779    	LD	BC,(HL)
041961 C5                  A  5780    	PUSH	BC
041962 DD77F4              A  5781    	LD	(IX+%FFFFFFF4),A
041965 CD A4 4E 04         A  5782    	CALL	_error
041969 DD7EF4              A  5783    	LD	A,(IX+%FFFFFFF4)
04196C C1                  A  5784    	POP	BC
04196D                     A  5785    L_361:
                           A  5786    ;  782	                op->immediate = ((int8_
                           A  5787    .LINE 782
                           A  5788    
04196D B7ED62              A  5789    	UEXT	HL
041970 DD6EFB              A  5790    	LD	L,(IX+%FFFFFFFB)
041973 E5C1                A  5791    	LD	BC,HL
041975 79                  A  5792    	LD	A,C
041976 17ED62              A  5793    	SEXT	HL
041979 69                  A  5794    	LD	L,C
04197A DD3106              A  5795    	LD	IY,(IX+%6)
04197D FD2F0B              A  5796    	LD	(IY+%B),HL
041980 FD740E              A  5797    	LD	(IY+%E),H
                           A  5798    ;  783	                op->immediate_provided 
                           A  5799    .LINE 783
                           A  5800    
041983 FD360A01            A  5801    	LD	(IY+%A),%1
                           A  5802    ;  784	            }
                           A  5803    .LINE 784
                           A  5804    
                           A  5805    ;  785	            break;
                           A  5806    .LINE 785
                           A  5807    
041987 18 0C               A  5808    	JR	L_366
                           A  5809    ;  786	        case TRANSFORM_NONE:
                           A  5810    ;  787	            break;
                           A  5811    ;  788	        default:
041989                     A  5812    L_365:
                           A  5813    .LINE 788
                           A  5814    
                           A  5815    ;  789	            error(message[ERROR_TRANSFO
                           A  5816    .LINE 789
                           A  5817    
041989 21 5C 67 04         A  5818    	LD	HL,_message+27
04198D ED07                A  5819    	LD	BC,(HL)
04198F C5                  A  5820    	PUSH	BC
041990 CD A4 4E 04         A  5821    	CALL	_error
041994 C1                  A  5822    	POP	BC
                           A  5823    ;  790	            break;
                           A  5824    ;  791	    }
041995                     A  5825    L_366:
                           A  5826    .LINE 791
                           A  5827    
                           A  5828    ;  792	    return;
                           A  5829    ;  793	}
                           A  5830    .LINE 793
                           A  5831    
041995 DDF9                A  5832    	LD	SP,IX
041997 DDE1                A  5833    	POP	IX
041999 C9                  A  5834    	RET	
                           A  5835    
                           A  5836    
                           A  5837    ;**************************** _transform_instru
                           A  5838    ;Name                         Addr/Register   S
                           A  5839    ;_message                            IMPORT  un
                           A  5840    ;_error                              IMPORT  --
                           A  5841    ;_address                            IMPORT    
                           A  5842    ;_pass                               IMPORT    
                           A  5843    ;_output                             IMPORT    
                           A  5844    ;G_16                                 IX-11    
                           A  5845    ;G_15                                  IX-8    
                           A  5846    ;rel                                   IX-5    
                           A  5847    ;y                                     IX-1    
                           A  5848    ;type                                  IX+9    
                           A  5849    ;op                                    IX+6    
                           A  5850    
                           A  5851    
                           A  5852    ; Stack Frame Size: 24 (bytes)
                           A  5853    ;       Spill Code: 0 (instruction)
                           A  5854    
                           A  5855    
                           A  5856    .ENDFUNC "transform_instruction",793,"_transfor
                           A  5857    ;  794	
                           A  5858    ;  795	void emit_instruction(operandlist *list
04199A                     A  5859    _emit_instruction:
                           A  5860    .DEFINE "_emit_instruction"
                           A  5861    
                           A  5862    .VALUE _emit_instruction
                           A  5863    
                           A  5864    .CLASS 2
                           A  5865    
                           A  5866    .TYPE 65
                           A  5867    
                           A  5868    .ENDEF
                           A  5869    
                           A  5870    .BEGFUNC "emit_instruction",795,"_emit_instruct
                           A  5871    
                           A  5872    .LINE 795
                           A  5873    
                           A  5874    .DEFINE "list"
                           A  5875    
                           A  5876    .CLASS 65
                           A  5877    
                           A  5878    .VALUE 6
                           A  5879    
                           A  5880    .TAG "NONAME5"
                           A  5881    
                           A  5882    .TYPE 40
                           A  5883    
                           A  5884    .ENDEF
                           A  5885    
                           A  5886    .DEFINE "ddbeforeopcode"
                           A  5887    
                           A  5888    .CLASS 65
                           A  5889    
                           A  5890    .VALUE -1
                           A  5891    
                           A  5892    .TYPE 12
                           A  5893    
                           A  5894    .ENDEF
                           A  5895    
04199A DDE5                A  5896    	PUSH	IX
04199C DD210000 00         A  5897    	LD	IX,0
0419A1 DD39                A  5898    	ADD	IX,SP
0419A3 ED22EA              A  5899    	LEA	HL,IX+%FFFFFFEA
0419A6 F9                  A  5900    	LD	SP,HL
                           A  5901    ;  796	    bool ddbeforeopcode; // determine p
                           A  5902    ;  797	
                           A  5903    ;  798	    // Transform necessary prefix/opcod
                           A  5904    ;  799	    output.suffix = getADLsuffix();
                           A  5905    .LINE 799
                           A  5906    
0419A7 CD 53 13 04         A  5907    	CALL	_getADLsuffix
0419AB 32 88 8B 04         A  5908    	LD	(_output),A
                           A  5909    ;  800	    output.prefix1 = 0;
                           A  5910    .LINE 800
                           A  5911    
0419AF AF                  A  5912    	XOR	A,A
0419B0 32 89 8B 04         A  5913    	LD	(_output+1),A
                           A  5914    ;  801	    output.prefix2 = list->prefix;
                           A  5915    .LINE 801
                           A  5916    
0419B4 DD3106              A  5917    	LD	IY,(IX+%6)
0419B7 FD7E0D              A  5918    	LD	A,(IY+%D)
0419BA 32 8A 8B 04         A  5919    	LD	(_output+2),A
                           A  5920    ;  802	    output.opcode = list->opcode;
                           A  5921    .LINE 802
                           A  5922    
0419BE FD7E0E              A  5923    	LD	A,(IY+%E)
0419C1 32 8B 8B 04         A  5924    	LD	(_output+3),A
                           A  5925    ;  803	
                           A  5926    ;  804	    if(pass == 1) definelabel(address);
                           A  5927    .LINE 804
                           A  5928    
0419C5 01010000            A  5929    	LD	BC,1
0419C9 2A 52 8A 04         A  5930    	LD	HL,(_pass)
0419CD B7                  A  5931    	OR	A,A
0419CE ED42                A  5932    	SBC	HL,BC
0419D0 20 14               A  5933    	JR	NZ,L_380
0419D2 3A 58 8A 04         A  5934    	LD	A,(_address+3)
0419D6 4F                  A  5935    	LD	C,A
0419D7 0600                A  5936    	LD	B,%0
0419D9 C5                  A  5937    	PUSH	BC
0419DA ED4B 55 8A 04       A  5938    	LD	BC,(_address)
0419DF C5                  A  5939    	PUSH	BC
0419E0 CD 5F 12 04         A  5940    	CALL	_definelabel
0419E4 C1                  A  5941    	POP	BC
0419E5 C1                  A  5942    	POP	BC
0419E6                     A  5943    L_380:
                           A  5944    ;  805	
                           A  5945    ;  806	    // issue any errors here
                           A  5946    ;  807	    if((list->transformA != TRANSFORM_R
                           A  5947    .LINE 807
                           A  5948    
0419E6 010D0000            A  5949    	LD	BC,13
0419EA DD3106              A  5950    	LD	IY,(IX+%6)
0419ED FD2707              A  5951    	LD	HL,(IY+%7)
0419F0 B7                  A  5952    	OR	A,A
0419F1 ED42                A  5953    	SBC	HL,BC
0419F3 CA CA 1A 04         A  5954    	JR	Z,L_383
0419F7 DD3106              A  5955    	LD	IY,(IX+%6)
0419FA FD270A              A  5956    	LD	HL,(IY+%A)
0419FD B7                  A  5957    	OR	A,A
0419FE ED42                A  5958    	SBC	HL,BC
041A00 CA CA 1A 04         A  5959    	JR	Z,L_383
                           A  5960    ;  808	        if(((list->operandA == OPTYPE_N
                           A  5961    .LINE 808
                           A  5962    
041A04 DD3106              A  5963    	LD	IY,(IX+%6)
041A07 FD0700              A  5964    	LD	BC,(IY+%0)
041A0A DD0FF9              A  5965    	LD	(IX+%FFFFFFF9),BC
041A0D 01080000            A  5966    	LD	BC,8
041A11 DD27F9              A  5967    	LD	HL,(IX+%FFFFFFF9)
041A14 B7                  A  5968    	OR	A,A
041A15 ED42                A  5969    	SBC	HL,BC
041A17 28 0C               A  5970    	JR	Z,L_372
041A19 01190000            A  5971    	LD	BC,25
041A1D DD27F9              A  5972    	LD	HL,(IX+%FFFFFFF9)
041A20 B7                  A  5973    	OR	A,A
041A21 ED42                A  5974    	SBC	HL,BC
041A23 20 42               A  5975    	JR	NZ,L_378
041A25                     A  5976    L_372:
041A25 21FF0000            A  5977    	LD	HL,255
041A29 1E00                A  5978    	LD	E,%0
041A2B ED4B 73 8B 04       A  5979    	LD	BC,(_operand1+11)
041A30 3A 76 8B 04         A  5980    	LD	A,(_operand1+14)
041A34 CD 9C 63 04         A  5981    	CALL	__lcmps
041A38 CD 15 5A 04         A  5982    	CALL	__setflag
041A3C FA 5B 1A 04         A  5983    	JP	M,L_373
041A40 2A 73 8B 04         A  5984    	LD	HL,(_operand1+11)
041A44 3A 76 8B 04         A  5985    	LD	A,(_operand1+14)
041A48 5F                  A  5986    	LD	E,A
041A49 0180FFFF            A  5987    	LD	BC,16777088
041A4D 3EFF                A  5988    	LD	A,%FF
041A4F CD 9C 63 04         A  5989    	CALL	__lcmps
041A53 CD 15 5A 04         A  5990    	CALL	__setflag
041A57 F2 67 1A 04         A  5991    	JP	P,L_378
041A5B                     A  5992    L_373:
041A5B 21 62 67 04         A  5993    	LD	HL,_message+33
041A5F ED07                A  5994    	LD	BC,(HL)
041A61 C5                  A  5995    	PUSH	BC
041A62 CD A4 4E 04         A  5996    	CALL	_error
041A66 C1                  A  5997    	POP	BC
041A67                     A  5998    L_378:
                           A  5999    ;  809	        if(((list->operandB == OPTYPE_N
                           A  6000    .LINE 809
                           A  6001    
041A67 DD3106              A  6002    	LD	IY,(IX+%6)
041A6A FD0703              A  6003    	LD	BC,(IY+%3)
041A6D DD0FF6              A  6004    	LD	(IX+%FFFFFFF6),BC
041A70 01080000            A  6005    	LD	BC,8
041A74 DD27F6              A  6006    	LD	HL,(IX+%FFFFFFF6)
041A77 B7                  A  6007    	OR	A,A
041A78 ED42                A  6008    	SBC	HL,BC
041A7A 28 0C               A  6009    	JR	Z,L_376
041A7C 01190000            A  6010    	LD	BC,25
041A80 DD27F6              A  6011    	LD	HL,(IX+%FFFFFFF6)
041A83 B7                  A  6012    	OR	A,A
041A84 ED42                A  6013    	SBC	HL,BC
041A86 20 42               A  6014    	JR	NZ,L_383
041A88                     A  6015    L_376:
041A88 21FF0000            A  6016    	LD	HL,255
041A8C 1E00                A  6017    	LD	E,%0
041A8E ED4B 83 8B 04       A  6018    	LD	BC,(_operand2+11)
041A93 3A 86 8B 04         A  6019    	LD	A,(_operand2+14)
041A97 CD 9C 63 04         A  6020    	CALL	__lcmps
041A9B CD 15 5A 04         A  6021    	CALL	__setflag
041A9F FA BE 1A 04         A  6022    	JP	M,L_377
041AA3 2A 83 8B 04         A  6023    	LD	HL,(_operand2+11)
041AA7 3A 86 8B 04         A  6024    	LD	A,(_operand2+14)
041AAB 5F                  A  6025    	LD	E,A
041AAC 0180FFFF            A  6026    	LD	BC,16777088
041AB0 3EFF                A  6027    	LD	A,%FF
041AB2 CD 9C 63 04         A  6028    	CALL	__lcmps
041AB6 CD 15 5A 04         A  6029    	CALL	__setflag
041ABA F2 CA 1A 04         A  6030    	JP	P,L_383
041ABE                     A  6031    L_377:
041ABE 21 62 67 04         A  6032    	LD	HL,_message+33
041AC2 ED07                A  6033    	LD	BC,(HL)
041AC4 C5                  A  6034    	PUSH	BC
041AC5 CD A4 4E 04         A  6035    	CALL	_error
041AC9 C1                  A  6036    	POP	BC
                           A  6037    ;  810	    }
041ACA                     A  6038    L_383:
                           A  6039    .LINE 810
                           A  6040    
                           A  6041    ;  811	    if((output.suffix) && ((list->adl &
                           A  6042    .LINE 811
                           A  6043    
041ACA 3A 88 8B 04         A  6044    	LD	A,(_output)
041ACE B7                  A  6045    	OR	A,A
041ACF 28 18               A  6046    	JR	Z,L_387
041AD1 3A 88 8B 04         A  6047    	LD	A,(_output)
041AD5 DD3106              A  6048    	LD	IY,(IX+%6)
041AD8 FDA60F              A  6049    	AND	A,(IY+%F)
041ADB 20 0C               A  6050    	JR	NZ,L_387
041ADD 21 6B 67 04         A  6051    	LD	HL,_message+42
041AE1 ED07                A  6052    	LD	BC,(HL)
041AE3 C5                  A  6053    	PUSH	BC
041AE4 CD A4 4E 04         A  6054    	CALL	_error
041AE8 C1                  A  6055    	POP	BC
041AE9                     A  6056    L_387:
                           A  6057    ;  812	    if((operand2.displacement_provided)
                           A  6058    .LINE 812
                           A  6059    
041AE9 3A 81 8B 04         A  6060    	LD	A,(_operand2+9)
041AED B7                  A  6061    	OR	A,A
041AEE 28 31               A  6062    	JR	Z,L_390
041AF0 490180FF            A  6063    	LD.LIS	BC,-128
041AF4 2A 7F 8B 04         A  6064    	LD	HL,(_operand2+7)
041AF8 B7                  A  6065    	OR	A,A
041AF9 40ED42              A  6066    	SBC.SIS	HL,BC
041AFC FA 15 1B 04         A  6067    	JP	M,L_386
041B00 ED4B 7F 8B 04       A  6068    	LD	BC,(_operand2+7)
041B05 49217F00            A  6069    	LD.LIS	HL,127
041B09 B7                  A  6070    	OR	A,A
041B0A 40ED42              A  6071    	SBC.SIS	HL,BC
041B0D CD 15 5A 04         A  6072    	CALL	__setflag
041B11 F2 21 1B 04         A  6073    	JP	P,L_390
041B15                     A  6074    L_386:
041B15 21 6E 67 04         A  6075    	LD	HL,_message+45
041B19 ED07                A  6076    	LD	BC,(HL)
041B1B C5                  A  6077    	PUSH	BC
041B1C CD A4 4E 04         A  6078    	CALL	_error
041B20 C1                  A  6079    	POP	BC
041B21                     A  6080    L_390:
                           A  6081    ;  813	
                           A  6082    ;  814	    // Specific checks
                           A  6083    ;  815	    if((list->operandA == OPTYPE_BIT) &
                           A  6084    .LINE 815
                           A  6085    
041B21 01150000            A  6086    	LD	BC,21
041B25 DD3106              A  6087    	LD	IY,(IX+%6)
041B28 FD2700              A  6088    	LD	HL,(IY+%0)
041B2B B7                  A  6089    	OR	A,A
041B2C ED42                A  6090    	SBC	HL,BC
041B2E 20 27               A  6091    	JR	NZ,L_393
041B30 21070000            A  6092    	LD	HL,7
041B34 1E00                A  6093    	LD	E,%0
041B36 ED4B 73 8B 04       A  6094    	LD	BC,(_operand1+11)
041B3B 3A 76 8B 04         A  6095    	LD	A,(_operand1+14)
041B3F CD 9C 63 04         A  6096    	CALL	__lcmps
041B43 CD 15 5A 04         A  6097    	CALL	__setflag
041B47 F2 57 1B 04         A  6098    	JP	P,L_393
041B4B 21 86 67 04         A  6099    	LD	HL,_message+69
041B4F ED07                A  6100    	LD	BC,(HL)
041B51 C5                  A  6101    	PUSH	BC
041B52 CD A4 4E 04         A  6102    	CALL	_error
041B56 C1                  A  6103    	POP	BC
041B57                     A  6104    L_393:
                           A  6105    ;  816	    if((list->operandA == OPTYPE_NSELEC
                           A  6106    .LINE 816
                           A  6107    
041B57 01180000            A  6108    	LD	BC,24
041B5B DD3106              A  6109    	LD	IY,(IX+%6)
041B5E FD2700              A  6110    	LD	HL,(IY+%0)
041B61 B7                  A  6111    	OR	A,A
041B62 ED42                A  6112    	SBC	HL,BC
041B64 20 27               A  6113    	JR	NZ,L_396
041B66 21020000            A  6114    	LD	HL,2
041B6A 1E00                A  6115    	LD	E,%0
041B6C ED4B 73 8B 04       A  6116    	LD	BC,(_operand1+11)
041B71 3A 76 8B 04         A  6117    	LD	A,(_operand1+14)
041B75 CD 9C 63 04         A  6118    	CALL	__lcmps
041B79 CD 15 5A 04         A  6119    	CALL	__setflag
041B7D F2 8D 1B 04         A  6120    	JP	P,L_396
041B81 21 89 67 04         A  6121    	LD	HL,_message+72
041B85 ED07                A  6122    	LD	BC,(HL)
041B87 C5                  A  6123    	PUSH	BC
041B88 CD A4 4E 04         A  6124    	CALL	_error
041B8C C1                  A  6125    	POP	BC
041B8D                     A  6126    L_396:
                           A  6127    ;  817	    if((list->transformA == TRANSFORM_N
                           A  6128    .LINE 817
                           A  6129    
041B8D 010B0000            A  6130    	LD	BC,11
041B91 DD3106              A  6131    	LD	IY,(IX+%6)
041B94 FD2707              A  6132    	LD	HL,(IY+%7)
041B97 B7                  A  6133    	OR	A,A
041B98 ED42                A  6134    	SBC	HL,BC
041B9A 20 1D               A  6135    	JR	NZ,L_397
041B9C 3A 73 8B 04         A  6136    	LD	A,(_operand1+11)
041BA0 E647                A  6137    	AND	A,%47
041BA2 B7ED62              A  6138    	UEXT	HL
041BA5 6F                  A  6139    	LD	L,A
041BA6 5C                  A  6140    	LD	E,H
041BA7 CD 2D 5D 04         A  6141    	CALL	__lcmpzero
041BAB 28 0C               A  6142    	JR	Z,L_397
041BAD 21 8C 67 04         A  6143    	LD	HL,_message+75
041BB1 ED07                A  6144    	LD	BC,(HL)
041BB3 C5                  A  6145    	PUSH	BC
041BB4 CD A4 4E 04         A  6146    	CALL	_error
041BB8 C1                  A  6147    	POP	BC
041BB9                     A  6148    L_397:
                           A  6149    ;  818	
                           A  6150    ;  819	    // prepare extra DD/FD suffix if ne
                           A  6151    ;  820	    prefix_ddfd_suffix(list);
                           A  6152    .LINE 820
                           A  6153    
041BB9 DD0706              A  6154    	LD	BC,(IX+%6)
041BBC C5                  A  6155    	PUSH	BC
041BBD CD D1 16 04         A  6156    	CALL	_prefix_ddfd_suffix
041BC1 C1                  A  6157    	POP	BC
                           A  6158    ;  821	    // Transform the opcode and potenti
                           A  6159    ;  822	    transform_instruction(&operand1, li
                           A  6160    .LINE 822
                           A  6161    
041BC2 DD3106              A  6162    	LD	IY,(IX+%6)
041BC5 FD0707              A  6163    	LD	BC,(IY+%7)
041BC8 C5                  A  6164    	PUSH	BC
041BC9 01 68 8B 04         A  6165    	LD	BC,_operand1
041BCD C5                  A  6166    	PUSH	BC
041BCE CD 41 17 04         A  6167    	CALL	_transform_instruction
041BD2 C1                  A  6168    	POP	BC
041BD3 C1                  A  6169    	POP	BC
                           A  6170    ;  823	    transform_instruction(&operand2, li
                           A  6171    .LINE 823
                           A  6172    
041BD4 DD3106              A  6173    	LD	IY,(IX+%6)
041BD7 FD070A              A  6174    	LD	BC,(IY+%A)
041BDA C5                  A  6175    	PUSH	BC
041BDB 01 78 8B 04         A  6176    	LD	BC,_operand2
041BDF C5                  A  6177    	PUSH	BC
041BE0 CD 41 17 04         A  6178    	CALL	_transform_instruction
041BE4 C1                  A  6179    	POP	BC
041BE5 C1                  A  6180    	POP	BC
                           A  6181    ;  824	    // determine position of dd
                           A  6182    ;  825	    ddbeforeopcode = (((output.prefix1 
                           A  6183    .LINE 825
                           A  6184    
041BE6 3A 89 8B 04         A  6185    	LD	A,(_output+1)
041BEA FEDD                A  6186    	CP	A,%DD
041BEC 28 08               A  6187    	JR	Z,L_399
041BEE 3A 89 8B 04         A  6188    	LD	A,(_output+1)
041BF2 FEFD                A  6189    	CP	A,%FD
041BF4 20 1F               A  6190    	JR	NZ,L_403
041BF6                     A  6191    L_399:
041BF6 3A 8A 8B 04         A  6192    	LD	A,(_output+2)
041BFA FECB                A  6193    	CP	A,%CB
041BFC 20 17               A  6194    	JR	NZ,L_403
                           A  6195    ;  826	                ((operand1.displacement
                           A  6196    .LINE 826
                           A  6197    
041BFE 3A 71 8B 04         A  6198    	LD	A,(_operand1+9)
041C02 B7                  A  6199    	OR	A,A
041C03 20 07               A  6200    	JR	NZ,L_402
041C05 3A 81 8B 04         A  6201    	LD	A,(_operand2+9)
041C09 B7                  A  6202    	OR	A,A
041C0A 28 09               A  6203    	JR	Z,L_403
041C0C                     A  6204    L_402:
041C0C 01010000            A  6205    	LD	BC,1
041C10 DD0FFC              A  6206    	LD	(IX+%FFFFFFFC),BC
041C13 18 07               A  6207    	JR	L_404
041C15                     A  6208    L_403:
041C15 01000000            A  6209    	LD	BC,0
041C19 DD0FFC              A  6210    	LD	(IX+%FFFFFFFC),BC
041C1C                     A  6211    L_404:
041C1C DD7EFC              A  6212    	LD	A,(IX+%FFFFFFFC)
041C1F DD77FF              A  6213    	LD	(IX+%FFFFFFFF),A
                           A  6214    ;  827	    
                           A  6215    ;  828	    // output adl suffix and any prefix
                           A  6216    ;  829	    if(output.suffix > 0) emit_adlsuffi
                           A  6217    .LINE 829
                           A  6218    
041C22 AF                  A  6219    	XOR	A,A
041C23 21 88 8B 04         A  6220    	LD	HL,_output
041C27 BE                  A  6221    	CP	A,(HL)
041C28 30 0D               A  6222    	JR	NC,L_408
041C2A 3A 88 8B 04         A  6223    	LD	A,(_output)
041C2E 4F                  A  6224    	LD	C,A
041C2F 0600                A  6225    	LD	B,%0
041C31 C5                  A  6226    	PUSH	BC
041C32 CD 37 16 04         A  6227    	CALL	_emit_adlsuffix_code
041C36 C1                  A  6228    	POP	BC
041C37                     A  6229    L_408:
                           A  6230    ;  830	    if(output.prefix1) emit_8bit(output
                           A  6231    .LINE 830
                           A  6232    
041C37 3A 89 8B 04         A  6233    	LD	A,(_output+1)
041C3B B7                  A  6234    	OR	A,A
041C3C 28 0D               A  6235    	JR	Z,L_410
041C3E 3A 89 8B 04         A  6236    	LD	A,(_output+1)
041C42 4F                  A  6237    	LD	C,A
041C43 0600                A  6238    	LD	B,%0
041C45 C5                  A  6239    	PUSH	BC
041C46 CD 84 1D 04         A  6240    	CALL	_emit_8bit
041C4A C1                  A  6241    	POP	BC
041C4B                     A  6242    L_410:
                           A  6243    ;  831	    if(output.prefix2) emit_8bit(output
                           A  6244    .LINE 831
                           A  6245    
041C4B 3A 8A 8B 04         A  6246    	LD	A,(_output+2)
041C4F B7                  A  6247    	OR	A,A
041C50 28 0D               A  6248    	JR	Z,L_412
041C52 3A 8A 8B 04         A  6249    	LD	A,(_output+2)
041C56 4F                  A  6250    	LD	C,A
041C57 0600                A  6251    	LD	B,%0
041C59 C5                  A  6252    	PUSH	BC
041C5A CD 84 1D 04         A  6253    	CALL	_emit_8bit
041C5E C1                  A  6254    	POP	BC
041C5F                     A  6255    L_412:
                           A  6256    ;  832	
                           A  6257    ;  833	    // opcode in normal position
                           A  6258    ;  834	    if(!ddbeforeopcode) emit_8bit(outpu
                           A  6259    .LINE 834
                           A  6260    
041C5F DD7EFF              A  6261    	LD	A,(IX+%FFFFFFFF)
041C62 B7                  A  6262    	OR	A,A
041C63 20 0D               A  6263    	JR	NZ,L_414
041C65 3A 8B 8B 04         A  6264    	LD	A,(_output+3)
041C69 4F                  A  6265    	LD	C,A
041C6A 0600                A  6266    	LD	B,%0
041C6C C5                  A  6267    	PUSH	BC
041C6D CD 84 1D 04         A  6268    	CALL	_emit_8bit
041C71 C1                  A  6269    	POP	BC
041C72                     A  6270    L_414:
                           A  6271    ;  835	    
                           A  6272    ;  836	    // output displacement
                           A  6273    ;  837	    if(operand1.displacement_provided) 
                           A  6274    .LINE 837
                           A  6275    
041C72 3A 71 8B 04         A  6276    	LD	A,(_operand1+9)
041C76 B7                  A  6277    	OR	A,A
041C77 28 0D               A  6278    	JR	Z,L_416
041C79 3A 6F 8B 04         A  6279    	LD	A,(_operand1+7)
041C7D 4F                  A  6280    	LD	C,A
041C7E 0600                A  6281    	LD	B,%0
041C80 C5                  A  6282    	PUSH	BC
041C81 CD 84 1D 04         A  6283    	CALL	_emit_8bit
041C85 C1                  A  6284    	POP	BC
041C86                     A  6285    L_416:
                           A  6286    ;  838	    if(operand2.displacement_provided) 
                           A  6287    .LINE 838
                           A  6288    
041C86 3A 81 8B 04         A  6289    	LD	A,(_operand2+9)
041C8A B7                  A  6290    	OR	A,A
041C8B 28 0D               A  6291    	JR	Z,L_420
041C8D 3A 7F 8B 04         A  6292    	LD	A,(_operand2+7)
041C91 4F                  A  6293    	LD	C,A
041C92 0600                A  6294    	LD	B,%0
041C94 C5                  A  6295    	PUSH	BC
041C95 CD 84 1D 04         A  6296    	CALL	_emit_8bit
041C99 C1                  A  6297    	POP	BC
041C9A                     A  6298    L_420:
                           A  6299    ;  839	    // output n
                           A  6300    ;  840	    if((operand1.immediate_provided) &&
                           A  6301    .LINE 840
                           A  6302    
041C9A 3A 72 8B 04         A  6303    	LD	A,(_operand1+10)
041C9E B7                  A  6304    	OR	A,A
041C9F 28 2E               A  6305    	JR	Z,L_424
041CA1 DD3106              A  6306    	LD	IY,(IX+%6)
041CA4 FD0700              A  6307    	LD	BC,(IY+%0)
041CA7 DD0FF3              A  6308    	LD	(IX+%FFFFFFF3),BC
041CAA 01080000            A  6309    	LD	BC,8
041CAE DD27F3              A  6310    	LD	HL,(IX+%FFFFFFF3)
041CB1 B7                  A  6311    	OR	A,A
041CB2 ED42                A  6312    	SBC	HL,BC
041CB4 28 0C               A  6313    	JR	Z,L_419
041CB6 01190000            A  6314    	LD	BC,25
041CBA DD27F3              A  6315    	LD	HL,(IX+%FFFFFFF3)
041CBD B7                  A  6316    	OR	A,A
041CBE ED42                A  6317    	SBC	HL,BC
041CC0 20 0D               A  6318    	JR	NZ,L_424
041CC2                     A  6319    L_419:
041CC2 3A 73 8B 04         A  6320    	LD	A,(_operand1+11)
041CC6 4F                  A  6321    	LD	C,A
041CC7 0600                A  6322    	LD	B,%0
041CC9 C5                  A  6323    	PUSH	BC
041CCA CD 84 1D 04         A  6324    	CALL	_emit_8bit
041CCE C1                  A  6325    	POP	BC
041CCF                     A  6326    L_424:
                           A  6327    ;  841	    if((operand2.immediate_provided) &&
                           A  6328    .LINE 841
                           A  6329    
041CCF 3A 82 8B 04         A  6330    	LD	A,(_operand2+10)
041CD3 B7                  A  6331    	OR	A,A
041CD4 28 2E               A  6332    	JR	Z,L_426
041CD6 DD3106              A  6333    	LD	IY,(IX+%6)
041CD9 FD0703              A  6334    	LD	BC,(IY+%3)
041CDC DD0FF0              A  6335    	LD	(IX+%FFFFFFF0),BC
041CDF 01080000            A  6336    	LD	BC,8
041CE3 DD27F0              A  6337    	LD	HL,(IX+%FFFFFFF0)
041CE6 B7                  A  6338    	OR	A,A
041CE7 ED42                A  6339    	SBC	HL,BC
041CE9 28 0C               A  6340    	JR	Z,L_423
041CEB 01190000            A  6341    	LD	BC,25
041CEF DD27F0              A  6342    	LD	HL,(IX+%FFFFFFF0)
041CF2 B7                  A  6343    	OR	A,A
041CF3 ED42                A  6344    	SBC	HL,BC
041CF5 20 0D               A  6345    	JR	NZ,L_426
041CF7                     A  6346    L_423:
041CF7 3A 83 8B 04         A  6347    	LD	A,(_operand2+11)
041CFB 4F                  A  6348    	LD	C,A
041CFC 0600                A  6349    	LD	B,%0
041CFE C5                  A  6350    	PUSH	BC
041CFF CD 84 1D 04         A  6351    	CALL	_emit_8bit
041D03 C1                  A  6352    	POP	BC
041D04                     A  6353    L_426:
                           A  6354    ;  842	
                           A  6355    ;  843	
                           A  6356    ;  844	    // opcode in DDCBdd/DFCBdd position
                           A  6357    ;  845	    if(ddbeforeopcode) emit_8bit(output
                           A  6358    .LINE 845
                           A  6359    
041D04 DD7EFF              A  6360    	LD	A,(IX+%FFFFFFFF)
041D07 B7                  A  6361    	OR	A,A
041D08 28 0D               A  6362    	JR	Z,L_429
041D0A 3A 8B 8B 04         A  6363    	LD	A,(_output+3)
041D0E 4F                  A  6364    	LD	C,A
041D0F 0600                A  6365    	LD	B,%0
041D11 C5                  A  6366    	PUSH	BC
041D12 CD 84 1D 04         A  6367    	CALL	_emit_8bit
041D16 C1                  A  6368    	POP	BC
041D17                     A  6369    L_429:
                           A  6370    ;  846	
                           A  6371    ;  847	    //output remaining immediate bytes
                           A  6372    ;  848	    if((list->operandA == OPTYPE_MMN) |
                           A  6373    .LINE 848
                           A  6374    
041D17 DD3106              A  6375    	LD	IY,(IX+%6)
041D1A FD0700              A  6376    	LD	BC,(IY+%0)
041D1D DD0FED              A  6377    	LD	(IX+%FFFFFFED),BC
041D20 01060000            A  6378    	LD	BC,6
041D24 DD27ED              A  6379    	LD	HL,(IX+%FFFFFFED)
041D27 B7                  A  6380    	OR	A,A
041D28 ED42                A  6381    	SBC	HL,BC
041D2A 28 0C               A  6382    	JR	Z,L_428
041D2C 01070000            A  6383    	LD	BC,7
041D30 DD27ED              A  6384    	LD	HL,(IX+%FFFFFFED)
041D33 B7                  A  6385    	OR	A,A
041D34 ED42                A  6386    	SBC	HL,BC
041D36 20 13               A  6387    	JR	NZ,L_432
041D38                     A  6388    L_428:
041D38 3A 88 8B 04         A  6389    	LD	A,(_output)
041D3C 4F                  A  6390    	LD	C,A
041D3D 0600                A  6391    	LD	B,%0
041D3F C5                  A  6392    	PUSH	BC
041D40 01 68 8B 04         A  6393    	LD	BC,_operand1
041D44 C5                  A  6394    	PUSH	BC
041D45 CD D0 15 04         A  6395    	CALL	_emit_immediate
041D49 C1                  A  6396    	POP	BC
041D4A C1                  A  6397    	POP	BC
041D4B                     A  6398    L_432:
                           A  6399    ;  849	    if((list->operandB == OPTYPE_MMN) |
                           A  6400    .LINE 849
                           A  6401    
041D4B DD3106              A  6402    	LD	IY,(IX+%6)
041D4E FD0703              A  6403    	LD	BC,(IY+%3)
041D51 DD0FEA              A  6404    	LD	(IX+%FFFFFFEA),BC
041D54 01060000            A  6405    	LD	BC,6
041D58 DD27EA              A  6406    	LD	HL,(IX+%FFFFFFEA)
041D5B B7                  A  6407    	OR	A,A
041D5C ED42                A  6408    	SBC	HL,BC
041D5E 28 0C               A  6409    	JR	Z,L_431
041D60 01070000            A  6410    	LD	BC,7
041D64 DD27EA              A  6411    	LD	HL,(IX+%FFFFFFEA)
041D67 B7                  A  6412    	OR	A,A
041D68 ED42                A  6413    	SBC	HL,BC
041D6A 20 13               A  6414    	JR	NZ,L_433
041D6C                     A  6415    L_431:
041D6C 3A 88 8B 04         A  6416    	LD	A,(_output)
041D70 4F                  A  6417    	LD	C,A
041D71 0600                A  6418    	LD	B,%0
041D73 C5                  A  6419    	PUSH	BC
041D74 01 78 8B 04         A  6420    	LD	BC,_operand2
041D78 C5                  A  6421    	PUSH	BC
041D79 CD D0 15 04         A  6422    	CALL	_emit_immediate
041D7D C1                  A  6423    	POP	BC
041D7E C1                  A  6424    	POP	BC
                           A  6425    ;  850	}
041D7F                     A  6426    L_433:
                           A  6427    .LINE 850
                           A  6428    
041D7F DDF9                A  6429    	LD	SP,IX
041D81 DDE1                A  6430    	POP	IX
041D83 C9                  A  6431    	RET	
                           A  6432    
                           A  6433    
                           A  6434    ;**************************** _emit_instruction
                           A  6435    ;Name                         Addr/Register   S
                           A  6436    ;_emit_8bit                          IMPORT  --
                           A  6437    ;_operand2                           IMPORT    
                           A  6438    ;_message                            IMPORT  un
                           A  6439    ;_error                              IMPORT  --
                           A  6440    ;_operand1                           IMPORT    
                           A  6441    ;_address                            IMPORT    
                           A  6442    ;_pass                               IMPORT    
                           A  6443    ;_output                             IMPORT    
                           A  6444    ;G_22                                 IX-22    
                           A  6445    ;G_21                                 IX-19    
                           A  6446    ;G_20                                 IX-16    
                           A  6447    ;G_19                                 IX-13    
                           A  6448    ;G_18                                 IX-10    
                           A  6449    ;G_17                                  IX-7    
                           A  6450    ;temp405                               IX-4    
                           A  6451    ;ddbeforeopcode                        IX-1    
                           A  6452    ;list                                  IX+6    
                           A  6453    
                           A  6454    
                           A  6455    ; Stack Frame Size: 31 (bytes)
                           A  6456    ;       Spill Code: 0 (instruction)
                           A  6457    
                           A  6458    
                           A  6459    .ENDFUNC "emit_instruction",850,"_emit_instruct
                           A  6460    ;  851	
                           A  6461    ;  852	void emit_8bit(uint8_t value) {
041D84                     A  6462    _emit_8bit:
                           A  6463    .DEFINE "_emit_8bit"
                           A  6464    
                           A  6465    .VALUE _emit_8bit
                           A  6466    
                           A  6467    .CLASS 2
                           A  6468    
                           A  6469    .TYPE 65
                           A  6470    
                           A  6471    .ENDEF
                           A  6472    
                           A  6473    .BEGFUNC "emit_8bit",852,"_emit_8bit"
                           A  6474    
                           A  6475    .LINE 852
                           A  6476    
                           A  6477    .DEFINE "value"
                           A  6478    
                           A  6479    .CLASS 65
                           A  6480    
                           A  6481    .VALUE 6
                           A  6482    
                           A  6483    .TYPE 12
                           A  6484    
                           A  6485    .ENDEF
                           A  6486    
041D84 DDE5                A  6487    	PUSH	IX
041D86 DD210000 00         A  6488    	LD	IX,0
041D8B DD39                A  6489    	ADD	IX,SP
                           A  6490    ;  853	    if(pass == 2) {
                           A  6491    .LINE 853
                           A  6492    
041D8D 01020000            A  6493    	LD	BC,2
041D91 2A 52 8A 04         A  6494    	LD	HL,(_pass)
041D95 B7                  A  6495    	OR	A,A
041D96 ED42                A  6496    	SBC	HL,BC
041D98 20 21               A  6497    	JR	NZ,L_436
                           A  6498    ;  854	        listEmit8bit(value);
                           A  6499    .LINE 854
                           A  6500    
041D9A DD4E06              A  6501    	LD	C,(IX+%6)
041D9D 0600                A  6502    	LD	B,%0
041D9F C5                  A  6503    	PUSH	BC
041DA0 CD 1E 48 04         A  6504    	CALL	_listEmit8bit
041DA4 C1                  A  6505    	POP	BC
                           A  6506    ;  855	        agon_fwrite(&value, sizeof(char
                           A  6507    .LINE 855
                           A  6508    
041DA5 01020000            A  6509    	LD	BC,2
041DA9 C5                  A  6510    	PUSH	BC
041DAA 01010000            A  6511    	LD	BC,1
041DAE C5                  A  6512    	PUSH	BC
041DAF C5                  A  6513    	PUSH	BC
041DB0 ED6506              A  6514    	PEA	IX+%6
041DB3 CD 2C 58 04         A  6515    	CALL	_agon_fwrite
041DB7 C1                  A  6516    	POP	BC
041DB8 C1                  A  6517    	POP	BC
041DB9 C1                  A  6518    	POP	BC
041DBA C1                  A  6519    	POP	BC
                           A  6520    ;  856	    }
041DBB                     A  6521    L_436:
                           A  6522    .LINE 856
                           A  6523    
                           A  6524    ;  857	    address++;
                           A  6525    .LINE 857
                           A  6526    
041DBB 2A 55 8A 04         A  6527    	LD	HL,(_address)
041DBF 3A 58 8A 04         A  6528    	LD	A,(_address+3)
041DC3 5F                  A  6529    	LD	E,A
041DC4 3E01                A  6530    	LD	A,%1
041DC6 CD F7 59 04         A  6531    	CALL	__ladd_b
041DCA 22 55 8A 04         A  6532    	LD	(_address),HL
041DCE 7B                  A  6533    	LD	A,E
041DCF 32 58 8A 04         A  6534    	LD	(_address+3),A
                           A  6535    ;  858	    totalsize++;
                           A  6536    .LINE 858
                           A  6537    
041DD3 2A 59 8A 04         A  6538    	LD	HL,(_totalsize)
041DD7 3A 5C 8A 04         A  6539    	LD	A,(_totalsize+3)
041DDB 5F                  A  6540    	LD	E,A
041DDC 3E01                A  6541    	LD	A,%1
041DDE CD F7 59 04         A  6542    	CALL	__ladd_b
041DE2 22 59 8A 04         A  6543    	LD	(_totalsize),HL
041DE6 7B                  A  6544    	LD	A,E
041DE7 32 5C 8A 04         A  6545    	LD	(_totalsize+3),A
                           A  6546    ;  859	}
                           A  6547    .LINE 859
                           A  6548    
041DEB DDF9                A  6549    	LD	SP,IX
041DED DDE1                A  6550    	POP	IX
041DEF C9                  A  6551    	RET	
                           A  6552    
                           A  6553    
                           A  6554    ;**************************** _emit_8bit ******
                           A  6555    ;Name                         Addr/Register   S
                           A  6556    ;_totalsize                          IMPORT    
                           A  6557    ;_address                            IMPORT    
                           A  6558    ;_agon_fwrite                        IMPORT  --
                           A  6559    ;_listEmit8bit                       IMPORT  --
                           A  6560    ;_pass                               IMPORT    
                           A  6561    ;value                                 IX+6    
                           A  6562    
                           A  6563    
                           A  6564    ; Stack Frame Size: 9 (bytes)
                           A  6565    ;       Spill Code: 0 (instruction)
                           A  6566    
                           A  6567    
                           A  6568    .ENDFUNC "emit_8bit",859,"_emit_8bit"
                           A  6569    ;  860	
                           A  6570    ;  861	void emit_16bit(uint16_t value) {
041DF0                     A  6571    _emit_16bit:
                           A  6572    .DEFINE "_emit_16bit"
                           A  6573    
                           A  6574    .VALUE _emit_16bit
                           A  6575    
                           A  6576    .CLASS 2
                           A  6577    
                           A  6578    .TYPE 65
                           A  6579    
                           A  6580    .ENDEF
                           A  6581    
                           A  6582    .BEGFUNC "emit_16bit",861,"_emit_16bit"
                           A  6583    
                           A  6584    .LINE 861
                           A  6585    
                           A  6586    .DEFINE "value"
                           A  6587    
                           A  6588    .CLASS 65
                           A  6589    
                           A  6590    .VALUE 6
                           A  6591    
                           A  6592    .TYPE 13
                           A  6593    
                           A  6594    .ENDEF
                           A  6595    
041DF0 DDE5                A  6596    	PUSH	IX
041DF2 DD210000 00         A  6597    	LD	IX,0
041DF7 DD39                A  6598    	ADD	IX,SP
                           A  6599    ;  862	    emit_8bit(value&0xFF);
                           A  6600    .LINE 862
                           A  6601    
041DF9 DD7E06              A  6602    	LD	A,(IX+%6)
041DFC 4F                  A  6603    	LD	C,A
041DFD 0600                A  6604    	LD	B,%0
041DFF C5                  A  6605    	PUSH	BC
041E00 CD 84 1D 04         A  6606    	CALL	_emit_8bit
041E04 C1                  A  6607    	POP	BC
                           A  6608    ;  863	    emit_8bit((value>>8)&0xFF);
                           A  6609    .LINE 863
                           A  6610    
041E05 DD0706              A  6611    	LD	BC,(IX+%6)
041E08 CD 82 5C 04         A  6612    	CALL	__stoiu
041E0C 3E08                A  6613    	LD	A,%8
041E0E CD 5C 5A 04         A  6614    	CALL	__ishrs_b
041E12 7D                  A  6615    	LD	A,L
041E13 4F                  A  6616    	LD	C,A
041E14 0600                A  6617    	LD	B,%0
041E16 C5                  A  6618    	PUSH	BC
041E17 CD 84 1D 04         A  6619    	CALL	_emit_8bit
041E1B C1                  A  6620    	POP	BC
                           A  6621    ;  864	}
                           A  6622    .LINE 864
                           A  6623    
041E1C DDF9                A  6624    	LD	SP,IX
041E1E DDE1                A  6625    	POP	IX
041E20 C9                  A  6626    	RET	
                           A  6627    
                           A  6628    
                           A  6629    ;**************************** _emit_16bit *****
                           A  6630    ;Name                         Addr/Register   S
                           A  6631    ;_emit_8bit                          IMPORT  --
                           A  6632    ;value                                 IX+6    
                           A  6633    
                           A  6634    
                           A  6635    ; Stack Frame Size: 9 (bytes)
                           A  6636    ;       Spill Code: 0 (instruction)
                           A  6637    
                           A  6638    
                           A  6639    .ENDFUNC "emit_16bit",864,"_emit_16bit"
                           A  6640    ;  865	
                           A  6641    ;  866	void emit_24bit(uint32_t value) {
041E21                     A  6642    _emit_24bit:
                           A  6643    .DEFINE "_emit_24bit"
                           A  6644    
                           A  6645    .VALUE _emit_24bit
                           A  6646    
                           A  6647    .CLASS 2
                           A  6648    
                           A  6649    .TYPE 65
                           A  6650    
                           A  6651    .ENDEF
                           A  6652    
                           A  6653    .BEGFUNC "emit_24bit",866,"_emit_24bit"
                           A  6654    
                           A  6655    .LINE 866
                           A  6656    
                           A  6657    .DEFINE "value"
                           A  6658    
                           A  6659    .CLASS 65
                           A  6660    
                           A  6661    .VALUE 6
                           A  6662    
                           A  6663    .TYPE 15
                           A  6664    
                           A  6665    .ENDEF
                           A  6666    
041E21 DDE5                A  6667    	PUSH	IX
041E23 DD210000 00         A  6668    	LD	IX,0
041E28 DD39                A  6669    	ADD	IX,SP
                           A  6670    ;  867	    emit_8bit(value&0xFF);
                           A  6671    .LINE 867
                           A  6672    
041E2A DD7E06              A  6673    	LD	A,(IX+%6)
041E2D 4F                  A  6674    	LD	C,A
041E2E 0600                A  6675    	LD	B,%0
041E30 C5                  A  6676    	PUSH	BC
041E31 CD 84 1D 04         A  6677    	CALL	_emit_8bit
041E35 C1                  A  6678    	POP	BC
                           A  6679    ;  868	    emit_8bit((value>>8)&0xFF);
                           A  6680    .LINE 868
                           A  6681    
041E36 DD0706              A  6682    	LD	BC,(IX+%6)
041E39 DD7E09              A  6683    	LD	A,(IX+%9)
041E3C 2E08                A  6684    	LD	L,%8
041E3E CD 7D 60 04         A  6685    	CALL	__lshru
041E42 0600                A  6686    	LD	B,%0
041E44 C5                  A  6687    	PUSH	BC
041E45 CD 84 1D 04         A  6688    	CALL	_emit_8bit
041E49 C1                  A  6689    	POP	BC
                           A  6690    ;  869	    emit_8bit((value>>16)&0xFF);
                           A  6691    .LINE 869
                           A  6692    
041E4A DD0706              A  6693    	LD	BC,(IX+%6)
041E4D DD7E09              A  6694    	LD	A,(IX+%9)
041E50 2E10                A  6695    	LD	L,%10
041E52 CD 7D 60 04         A  6696    	CALL	__lshru
041E56 0600                A  6697    	LD	B,%0
041E58 C5                  A  6698    	PUSH	BC
041E59 CD 84 1D 04         A  6699    	CALL	_emit_8bit
041E5D C1                  A  6700    	POP	BC
                           A  6701    ;  870	}
                           A  6702    .LINE 870
                           A  6703    
041E5E DDF9                A  6704    	LD	SP,IX
041E60 DDE1                A  6705    	POP	IX
041E62 C9                  A  6706    	RET	
                           A  6707    
                           A  6708    
                           A  6709    ;**************************** _emit_24bit *****
                           A  6710    ;Name                         Addr/Register   S
                           A  6711    ;_emit_8bit                          IMPORT  --
                           A  6712    ;value                                 IX+6    
                           A  6713    
                           A  6714    
                           A  6715    ; Stack Frame Size: 12 (bytes)
                           A  6716    ;       Spill Code: 0 (instruction)
                           A  6717    
                           A  6718    
                           A  6719    .ENDFUNC "emit_24bit",870,"_emit_24bit"
                           A  6720    ;  871	
                           A  6721    ;  872	void emit_32bit(uint32_t value) {
041E63                     A  6722    _emit_32bit:
                           A  6723    .DEFINE "_emit_32bit"
                           A  6724    
                           A  6725    .VALUE _emit_32bit
                           A  6726    
                           A  6727    .CLASS 2
                           A  6728    
                           A  6729    .TYPE 65
                           A  6730    
                           A  6731    .ENDEF
                           A  6732    
                           A  6733    .BEGFUNC "emit_32bit",872,"_emit_32bit"
                           A  6734    
                           A  6735    .LINE 872
                           A  6736    
                           A  6737    .DEFINE "value"
                           A  6738    
                           A  6739    .CLASS 65
                           A  6740    
                           A  6741    .VALUE 6
                           A  6742    
                           A  6743    .TYPE 15
                           A  6744    
                           A  6745    .ENDEF
                           A  6746    
041E63 DDE5                A  6747    	PUSH	IX
041E65 DD210000 00         A  6748    	LD	IX,0
041E6A DD39                A  6749    	ADD	IX,SP
                           A  6750    ;  873	    emit_8bit(value&0xFF);
                           A  6751    .LINE 873
                           A  6752    
041E6C DD7E06              A  6753    	LD	A,(IX+%6)
041E6F 4F                  A  6754    	LD	C,A
041E70 0600                A  6755    	LD	B,%0
041E72 C5                  A  6756    	PUSH	BC
041E73 CD 84 1D 04         A  6757    	CALL	_emit_8bit
041E77 C1                  A  6758    	POP	BC
                           A  6759    ;  874	    emit_8bit((value>>8)&0xFF);
                           A  6760    .LINE 874
                           A  6761    
041E78 DD0706              A  6762    	LD	BC,(IX+%6)
041E7B DD7E09              A  6763    	LD	A,(IX+%9)
041E7E 2E08                A  6764    	LD	L,%8
041E80 CD 7D 60 04         A  6765    	CALL	__lshru
041E84 0600                A  6766    	LD	B,%0
041E86 C5                  A  6767    	PUSH	BC
041E87 CD 84 1D 04         A  6768    	CALL	_emit_8bit
041E8B C1                  A  6769    	POP	BC
                           A  6770    ;  875	    emit_8bit((value>>16)&0xFF);
                           A  6771    .LINE 875
                           A  6772    
041E8C DD0706              A  6773    	LD	BC,(IX+%6)
041E8F DD7E09              A  6774    	LD	A,(IX+%9)
041E92 2E10                A  6775    	LD	L,%10
041E94 CD 7D 60 04         A  6776    	CALL	__lshru
041E98 0600                A  6777    	LD	B,%0
041E9A C5                  A  6778    	PUSH	BC
041E9B CD 84 1D 04         A  6779    	CALL	_emit_8bit
041E9F C1                  A  6780    	POP	BC
                           A  6781    ;  876	    emit_8bit((value>>24)&0xFF);
                           A  6782    .LINE 876
                           A  6783    
041EA0 DD7E09              A  6784    	LD	A,(IX+%9)
041EA3 B7ED62              A  6785    	UEXT	HL
041EA6 6F                  A  6786    	LD	L,A
041EA7 E5C1                A  6787    	LD	BC,HL
041EA9 0600                A  6788    	LD	B,%0
041EAB C5                  A  6789    	PUSH	BC
041EAC CD 84 1D 04         A  6790    	CALL	_emit_8bit
041EB0 C1                  A  6791    	POP	BC
                           A  6792    ;  877	}
                           A  6793    .LINE 877
                           A  6794    
041EB1 DDF9                A  6795    	LD	SP,IX
041EB3 DDE1                A  6796    	POP	IX
041EB5 C9                  A  6797    	RET	
                           A  6798    
                           A  6799    
                           A  6800    ;**************************** _emit_32bit *****
                           A  6801    ;Name                         Addr/Register   S
                           A  6802    ;_emit_8bit                          IMPORT  --
                           A  6803    ;value                                 IX+6    
                           A  6804    
                           A  6805    
                           A  6806    ; Stack Frame Size: 12 (bytes)
                           A  6807    ;       Spill Code: 0 (instruction)
                           A  6808    
                           A  6809    
                           A  6810    .ENDFUNC "emit_32bit",877,"_emit_32bit"
                           A  6811    ;  878	
                           A  6812    ;  879	// return the value of a previously esc
                           A  6813    ;  880	uint8_t get_escaped_char(char n) {
041EB6                     A  6814    _get_escaped_char:
                           A  6815    .DEFINE "_get_escaped_char"
                           A  6816    
                           A  6817    .VALUE _get_escaped_char
                           A  6818    
                           A  6819    .CLASS 2
                           A  6820    
                           A  6821    .TYPE 76
                           A  6822    
                           A  6823    .ENDEF
                           A  6824    
                           A  6825    .BEGFUNC "get_escaped_char",880,"_get_escaped_c
                           A  6826    
                           A  6827    .LINE 880
                           A  6828    
                           A  6829    .DEFINE "n"
                           A  6830    
                           A  6831    .CLASS 65
                           A  6832    
                           A  6833    .VALUE 6
                           A  6834    
                           A  6835    .TYPE 2
                           A  6836    
                           A  6837    .ENDEF
                           A  6838    
041EB6 DDE5                A  6839    	PUSH	IX
041EB8 DD210000 00         A  6840    	LD	IX,0
041EBD DD39                A  6841    	ADD	IX,SP
                           A  6842    ;  881	    switch(n) {
                           A  6843    .LINE 881
                           A  6844    
041EBF DD7E06              A  6845    	LD	A,(IX+%6)
041EC2 17ED62              A  6846    	SEXT	HL
041EC5 DD6E06              A  6847    	LD	L,(IX+%6)
041EC8 CD B2 63 04         A  6848    	CALL	__case8D
041ECC E9                  A  6849    	JP	(HL)
041ECD                     A  6850    L__194:
041ECD 0700                A  6851    	DW	7
041ECF 22                  A  6852    	DB	34
041ED0 021F04              A  6853    	DW24	L_447	
                           A  6854    
041ED3 27                  A  6855    	DB	39
041ED4 061F04              A  6856    	DW24	L_448	
                           A  6857    
041ED7 62                  A  6858    	DB	98
041ED8 FA1E04              A  6859    	DW24	L_445	
                           A  6860    
041EDB 65                  A  6861    	DB	101
041EDC FE1E04              A  6862    	DW24	L_446	
                           A  6863    
041EDF 6E                  A  6864    	DB	110
041EE0 EE1E04              A  6865    	DW24	L_442	
                           A  6866    
041EE3 72                  A  6867    	DB	114
041EE4 F21E04              A  6868    	DW24	L_443	
                           A  6869    
041EE7 74                  A  6870    	DB	116
041EE8 F61E04              A  6871    	DW24	L_444	
                           A  6872    
041EEB 0A1F04              A  6873    	DW24	L_449	
                           A  6874    
                           A  6875    ;  882	        case 'n':
041EEE                     A  6876    L_442:
                           A  6877    .LINE 882
                           A  6878    
                           A  6879    ;  883	            return(0x0a);
                           A  6880    .LINE 883
                           A  6881    
041EEE 3E0A                A  6882    	LD	A,%A
041EF0 18 1B               A  6883    	JR	L_450
                           A  6884    ;  884	        case 'r':
041EF2                     A  6885    L_443:
                           A  6886    .LINE 884
                           A  6887    
                           A  6888    ;  885	            return(0x0d);
                           A  6889    .LINE 885
                           A  6890    
041EF2 3E0D                A  6891    	LD	A,%D
041EF4 18 17               A  6892    	JR	L_450
                           A  6893    ;  886	        case 't':
041EF6                     A  6894    L_444:
                           A  6895    .LINE 886
                           A  6896    
                           A  6897    ;  887	            return(0x09);
                           A  6898    .LINE 887
                           A  6899    
041EF6 3E09                A  6900    	LD	A,%9
041EF8 18 13               A  6901    	JR	L_450
                           A  6902    ;  888	        case 'b':
041EFA                     A  6903    L_445:
                           A  6904    .LINE 888
                           A  6905    
                           A  6906    ;  889	            return(0x08);
                           A  6907    .LINE 889
                           A  6908    
041EFA 3E08                A  6909    	LD	A,%8
041EFC 18 0F               A  6910    	JR	L_450
                           A  6911    ;  890	        case 'e':
041EFE                     A  6912    L_446:
                           A  6913    .LINE 890
                           A  6914    
                           A  6915    ;  891	            return(0x1b);
                           A  6916    .LINE 891
                           A  6917    
041EFE 3E1B                A  6918    	LD	A,%1B
041F00 18 0B               A  6919    	JR	L_450
                           A  6920    ;  892	        case '\"':
041F02                     A  6921    L_447:
                           A  6922    .LINE 892
                           A  6923    
                           A  6924    ;  893	            return('\"');
                           A  6925    .LINE 893
                           A  6926    
041F02 3E22                A  6927    	LD	A,%22
041F04 18 07               A  6928    	JR	L_450
                           A  6929    ;  894	        case '\'':
041F06                     A  6930    L_448:
                           A  6931    .LINE 894
                           A  6932    
                           A  6933    ;  895	            return('\'');
                           A  6934    .LINE 895
                           A  6935    
041F06 3E27                A  6936    	LD	A,%27
041F08 18 03               A  6937    	JR	L_450
                           A  6938    ;  896	        default:
041F0A                     A  6939    L_449:
                           A  6940    .LINE 896
                           A  6941    
                           A  6942    ;  897	            return(n);
                           A  6943    .LINE 897
                           A  6944    
041F0A DD7E06              A  6945    	LD	A,(IX+%6)
                           A  6946    ;  898	    }
                           A  6947    ;  899	}
041F0D                     A  6948    L_450:
                           A  6949    .LINE 899
                           A  6950    
041F0D DDF9                A  6951    	LD	SP,IX
041F0F DDE1                A  6952    	POP	IX
041F11 C9                  A  6953    	RET	
                           A  6954    
                           A  6955    
                           A  6956    ;**************************** _get_escaped_char
                           A  6957    ;Name                         Addr/Register   S
                           A  6958    ;n                                     IX+6    
                           A  6959    
                           A  6960    
                           A  6961    ; Stack Frame Size: 9 (bytes)
                           A  6962    ;       Spill Code: 0 (instruction)
                           A  6963    
                           A  6964    
                           A  6965    .ENDFUNC "get_escaped_char",899,"_get_escaped_c
                           A  6966    ;  900	
                           A  6967    ;  901	// emits a string surrounded by literal
                           A  6968    ;  902	void emit_quotedstring(char *str) {
041F12                     A  6969    _emit_quotedstring:
                           A  6970    .DEFINE "_emit_quotedstring"
                           A  6971    
                           A  6972    .VALUE _emit_quotedstring
                           A  6973    
                           A  6974    .CLASS 2
                           A  6975    
                           A  6976    .TYPE 65
                           A  6977    
                           A  6978    .ENDEF
                           A  6979    
                           A  6980    .BEGFUNC "emit_quotedstring",902,"_emit_quoteds
                           A  6981    
                           A  6982    .LINE 902
                           A  6983    
                           A  6984    .DEFINE "str"
                           A  6985    
                           A  6986    .CLASS 65
                           A  6987    
                           A  6988    .VALUE 6
                           A  6989    
                           A  6990    .TYPE 34
                           A  6991    
                           A  6992    .ENDEF
                           A  6993    
                           A  6994    .DEFINE "escaped"
                           A  6995    
                           A  6996    .CLASS 65
                           A  6997    
                           A  6998    .VALUE -1
                           A  6999    
                           A  7000    .TYPE 12
                           A  7001    
                           A  7002    .ENDEF
                           A  7003    
041F12 DDE5                A  7004    	PUSH	IX
041F14 DD210000 00         A  7005    	LD	IX,0
041F19 DD39                A  7006    	ADD	IX,SP
041F1B 3B                  A  7007    	DEC	SP
                           A  7008    ;  903	    bool escaped = false;
                           A  7009    .LINE 903
                           A  7010    
041F1C DD36FF00            A  7011    	LD	(IX+%FFFFFFFF),%0
                           A  7012    ;  904	
                           A  7013    ;  905	    if(*str == '\"') {
                           A  7014    .LINE 905
                           A  7015    
041F20 DD2706              A  7016    	LD	HL,(IX+%6)
041F23 7E                  A  7017    	LD	A,(HL)
041F24 47                  A  7018    	LD	B,A
041F25 17ED62              A  7019    	SEXT	HL
041F28 68                  A  7020    	LD	L,B
041F29 01220000            A  7021    	LD	BC,34
041F2D B7                  A  7022    	OR	A,A
041F2E ED42                A  7023    	SBC	HL,BC
041F30 C2 13 20 04         A  7024    	JR	NZ,L_478
                           A  7025    ;  906	        str++;
                           A  7026    .LINE 906
                           A  7027    
041F34 DD0706              A  7028    	LD	BC,(IX+%6)
041F37 03                  A  7029    	INC	BC
041F38 DD0F06              A  7030    	LD	(IX+%6),BC
                           A  7031    ;  907	        while(*str) {
                           A  7032    .LINE 907
                           A  7033    
041F3B C3 FC 1F 04         A  7034    	JR	L_474
041F3F                     A  7035    L_475:
                           A  7036    ;  908	            switch(*str) {
                           A  7037    .LINE 908
                           A  7038    
041F3F DD2706              A  7039    	LD	HL,(IX+%6)
041F42 7E                  A  7040    	LD	A,(HL)
041F43 47                  A  7041    	LD	B,A
041F44 17ED62              A  7042    	SEXT	HL
041F47 68                  A  7043    	LD	L,B
041F48 CD B2 63 04         A  7044    	CALL	__case8D
041F4C E9                  A  7045    	JP	(HL)
041F4D                     A  7046    L__197:
041F4D 0800                A  7047    	DW	8
041F4F 22                  A  7048    	DB	34
041F50 BD1F04              A  7049    	DW24	L_465	
                           A  7050    
041F53 27                  A  7051    	DB	39
041F54 8E1F04              A  7052    	DW24	L_461	
                           A  7053    
041F57 5C                  A  7054    	DB	92
041F58 721F04              A  7055    	DW24	L_452	
                           A  7056    
041F5B 62                  A  7057    	DB	98
041F5C 8E1F04              A  7058    	DW24	L_459	
                           A  7059    
041F5F 65                  A  7060    	DB	101
041F60 8E1F04              A  7061    	DW24	L_460	
                           A  7062    
041F63 6E                  A  7063    	DB	110
041F64 8E1F04              A  7064    	DW24	L_456	
                           A  7065    
041F67 72                  A  7066    	DB	114
041F68 8E1F04              A  7067    	DW24	L_457	
                           A  7068    
041F6B 74                  A  7069    	DB	116
041F6C 8E1F04              A  7070    	DW24	L_458	
                           A  7071    
041F6F E91F04              A  7072    	DW24	L_471	
                           A  7073    
                           A  7074    ;  909	                case '\\':
041F72                     A  7075    L_452:
                           A  7076    .LINE 909
                           A  7077    
                           A  7078    ;  910	                    if(escaped) {
                           A  7079    .LINE 910
                           A  7080    
041F72 DD7EFF              A  7081    	LD	A,(IX+%FFFFFFFF)
041F75 B7                  A  7082    	OR	A,A
041F76 28 10               A  7083    	JR	Z,L_454
                           A  7084    ;  911	                        emit_8bit('\\')
                           A  7085    .LINE 911
                           A  7086    
041F78 015C0000            A  7087    	LD	BC,92
041F7C C5                  A  7088    	PUSH	BC
041F7D CD 84 1D 04         A  7089    	CALL	_emit_8bit
041F81 C1                  A  7090    	POP	BC
                           A  7091    ;  912	                        escaped = false
                           A  7092    .LINE 912
                           A  7093    
041F82 DD36FF00            A  7094    	LD	(IX+%FFFFFFFF),%0
                           A  7095    ;  913	                    }
                           A  7096    ;  914	                    else escaped = true
                           A  7097    .LINE 914
                           A  7098    
041F86 18 6D               A  7099    	JR	L_473
041F88                     A  7100    L_454:
041F88 DD36FF01            A  7101    	LD	(IX+%FFFFFFFF),%1
                           A  7102    ;  915	                    break;
                           A  7103    .LINE 915
                           A  7104    
041F8C 18 67               A  7105    	JR	L_473
                           A  7106    ;  916	                case 'n':
041F8E                     A  7107    L_456:
                           A  7108    .LINE 916
                           A  7109    
                           A  7110    ;  917	                case 'r':
041F8E                     A  7111    L_457:
                           A  7112    .LINE 917
                           A  7113    
                           A  7114    ;  918	                case 't':
041F8E                     A  7115    L_458:
                           A  7116    .LINE 918
                           A  7117    
                           A  7118    ;  919	                case 'b':
041F8E                     A  7119    L_459:
                           A  7120    .LINE 919
                           A  7121    
                           A  7122    ;  920	                case 'e':
041F8E                     A  7123    L_460:
                           A  7124    .LINE 920
                           A  7125    
                           A  7126    ;  921	                case '\'':
041F8E                     A  7127    L_461:
                           A  7128    .LINE 921
                           A  7129    
                           A  7130    ;  922	                    if(escaped) emit_8b
                           A  7131    .LINE 922
                           A  7132    
041F8E DD7EFF              A  7133    	LD	A,(IX+%FFFFFFFF)
041F91 B7                  A  7134    	OR	A,A
041F92 28 17               A  7135    	JR	Z,L_463
041F94 DD2706              A  7136    	LD	HL,(IX+%6)
041F97 4E                  A  7137    	LD	C,(HL)
041F98 0600                A  7138    	LD	B,%0
041F9A C5                  A  7139    	PUSH	BC
041F9B CD B6 1E 04         A  7140    	CALL	_get_escaped_char
041F9F C1                  A  7141    	POP	BC
041FA0 4F                  A  7142    	LD	C,A
041FA1 0600                A  7143    	LD	B,%0
041FA3 C5                  A  7144    	PUSH	BC
041FA4 CD 84 1D 04         A  7145    	CALL	_emit_8bit
041FA8 C1                  A  7146    	POP	BC
                           A  7147    ;  923	                    else emit_8bit(*str
                           A  7148    .LINE 923
                           A  7149    
041FA9 18 0C               A  7150    	JR	L_464
041FAB                     A  7151    L_463:
041FAB DD2706              A  7152    	LD	HL,(IX+%6)
041FAE 4E                  A  7153    	LD	C,(HL)
041FAF 0600                A  7154    	LD	B,%0
041FB1 C5                  A  7155    	PUSH	BC
041FB2 CD 84 1D 04         A  7156    	CALL	_emit_8bit
041FB6 C1                  A  7157    	POP	BC
041FB7                     A  7158    L_464:
                           A  7159    ;  924	                    escaped = false;
                           A  7160    .LINE 924
                           A  7161    
041FB7 DD36FF00            A  7162    	LD	(IX+%FFFFFFFF),%0
                           A  7163    ;  925	                    break;
                           A  7164    .LINE 925
                           A  7165    
041FBB 18 38               A  7166    	JR	L_473
                           A  7167    ;  926	                case '\"':
041FBD                     A  7168    L_465:
                           A  7169    .LINE 926
                           A  7170    
                           A  7171    ;  927	                    if(escaped) {
                           A  7172    .LINE 927
                           A  7173    
041FBD DD7EFF              A  7174    	LD	A,(IX+%FFFFFFFF)
041FC0 B7                  A  7175    	OR	A,A
041FC1 28 10               A  7176    	JR	Z,L_469
                           A  7177    ;  928	                        emit_8bit('\"')
                           A  7178    .LINE 928
                           A  7179    
041FC3 01220000            A  7180    	LD	BC,34
041FC7 C5                  A  7181    	PUSH	BC
041FC8 CD 84 1D 04         A  7182    	CALL	_emit_8bit
041FCC C1                  A  7183    	POP	BC
                           A  7184    ;  929	                        escaped = false
                           A  7185    .LINE 929
                           A  7186    
041FCD DD36FF00            A  7187    	LD	(IX+%FFFFFFFF),%0
                           A  7188    ;  930	                    }
                           A  7189    ;  931	                    else {
                           A  7190    .LINE 931
                           A  7191    
041FD1 18 22               A  7192    	JR	L_473
041FD3                     A  7193    L_469:
                           A  7194    ;  932	                        if(*(str+1) != 
                           A  7195    .LINE 932
                           A  7196    
041FD3 DD2706              A  7197    	LD	HL,(IX+%6)
041FD6 23                  A  7198    	INC	HL
041FD7 7E                  A  7199    	LD	A,(HL)
041FD8 B7                  A  7200    	OR	A,A
041FD9 28 44               A  7201    	JR	Z,L_479
041FDB 21 80 67 04         A  7202    	LD	HL,_message+63
041FDF ED07                A  7203    	LD	BC,(HL)
041FE1 C5                  A  7204    	PUSH	BC
041FE2 CD A4 4E 04         A  7205    	CALL	_error
041FE6 C1                  A  7206    	POP	BC
                           A  7207    ;  933	                        return; // end 
                           A  7208    .LINE 933
                           A  7209    
041FE7 18 36               A  7210    	JR	L_479
                           A  7211    ;  934	                    }
                           A  7212    ;  935	                    break;
                           A  7213    ;  936	                default:
041FE9                     A  7214    L_471:
                           A  7215    .LINE 936
                           A  7216    
                           A  7217    ;  937	                    emit_8bit(*str);
                           A  7218    .LINE 937
                           A  7219    
041FE9 DD2706              A  7220    	LD	HL,(IX+%6)
041FEC 4E                  A  7221    	LD	C,(HL)
041FED 0600                A  7222    	LD	B,%0
041FEF C5                  A  7223    	PUSH	BC
041FF0 CD 84 1D 04         A  7224    	CALL	_emit_8bit
041FF4 C1                  A  7225    	POP	BC
                           A  7226    ;  938	            }
041FF5                     A  7227    L_473:
                           A  7228    .LINE 938
                           A  7229    
                           A  7230    ;  939	            str++;
                           A  7231    .LINE 939
                           A  7232    
041FF5 DD0706              A  7233    	LD	BC,(IX+%6)
041FF8 03                  A  7234    	INC	BC
041FF9 DD0F06              A  7235    	LD	(IX+%6),BC
                           A  7236    ;  940	        }
041FFC                     A  7237    L_474:
                           A  7238    .LINE 940
                           A  7239    
041FFC DD2706              A  7240    	LD	HL,(IX+%6)
041FFF 7E                  A  7241    	LD	A,(HL)
042000 B7                  A  7242    	OR	A,A
042001 C2 3F 1F 04         A  7243    	JR	NZ,L_475
                           A  7244    ;  941	        // we missed an end-quote to th
                           A  7245    ;  942	        error(message[ERROR_STRINGFORMA
                           A  7246    .LINE 942
                           A  7247    
042005 21 80 67 04         A  7248    	LD	HL,_message+63
042009 ED07                A  7249    	LD	BC,(HL)
04200B C5                  A  7250    	PUSH	BC
04200C CD A4 4E 04         A  7251    	CALL	_error
042010 C1                  A  7252    	POP	BC
                           A  7253    ;  943	    }
                           A  7254    ;  944	    else error(message[ERROR_STRINGFORM
                           A  7255    .LINE 944
                           A  7256    
042011 18 0C               A  7257    	JR	L_479
042013                     A  7258    L_478:
042013 21 80 67 04         A  7259    	LD	HL,_message+63
042017 ED07                A  7260    	LD	BC,(HL)
042019 C5                  A  7261    	PUSH	BC
04201A CD A4 4E 04         A  7262    	CALL	_error
04201E C1                  A  7263    	POP	BC
                           A  7264    ;  945	}
04201F                     A  7265    L_479:
                           A  7266    .LINE 945
                           A  7267    
04201F DDF9                A  7268    	LD	SP,IX
042021 DDE1                A  7269    	POP	IX
042023 C9                  A  7270    	RET	
                           A  7271    
                           A  7272    
                           A  7273    ;**************************** _emit_quotedstrin
                           A  7274    ;Name                         Addr/Register   S
                           A  7275    ;_message                            IMPORT  un
                           A  7276    ;_error                              IMPORT  --
                           A  7277    ;_emit_8bit                          IMPORT  --
                           A  7278    ;escaped                               IX-1    
                           A  7279    ;str                                   IX+6    
                           A  7280    
                           A  7281    
                           A  7282    ; Stack Frame Size: 10 (bytes)
                           A  7283    ;       Spill Code: 0 (instruction)
                           A  7284    
                           A  7285    
                           A  7286    .ENDFUNC "emit_quotedstring",945,"_emit_quoteds
                           A  7287    ;  946	
                           A  7288    ;  947	void parse_asm_single_immediate(void) {
042024                     A  7289    _parse_asm_single_immediate:
                           A  7290    .DEFINE "_parse_asm_single_immediate"
                           A  7291    
                           A  7292    .VALUE _parse_asm_single_immediate
                           A  7293    
                           A  7294    .CLASS 2
                           A  7295    
                           A  7296    .TYPE 65
                           A  7297    
                           A  7298    .ENDEF
                           A  7299    
                           A  7300    .BEGFUNC "parse_asm_single_immediate",947,"_par
                           A  7301    
                           A  7302    .LINE 947
                           A  7303    
                           A  7304    .DEFINE "token"
                           A  7305    
                           A  7306    .CLASS 65
                           A  7307    
                           A  7308    .VALUE -133
                           A  7309    
                           A  7310    .TAG "NONAME11"
                           A  7311    
                           A  7312    .TYPE 8
                           A  7313    
                           A  7314    .ENDEF
                           A  7315    
042024 DDE5                A  7316    	PUSH	IX
042026 DD210000 00         A  7317    	LD	IX,0
04202B DD39                A  7318    	ADD	IX,SP
04202D 217BFFFF            A  7319    	LD	HL,-133
042031 39                  A  7320    	ADD	HL,SP
042032 F9                  A  7321    	LD	SP,HL
                           A  7322    ;  948	    tokentype token;
                           A  7323    ;  949	
                           A  7324    ;  950	    if(currentline.next) {
                           A  7325    .LINE 950
                           A  7326    
042033 2A 63 8A 04         A  7327    	LD	HL,(_currentline+3)
042037 CD CF 60 04         A  7328    	CALL	__icmpzero
04203B 28 77               A  7329    	JR	Z,L_484
                           A  7330    ;  951	        getLineToken(&token, currentlin
                           A  7331    .LINE 951
                           A  7332    
04203D 01000000            A  7333    	LD	BC,0
042041 C5                  A  7334    	PUSH	BC
042042 ED4B 63 8A 04       A  7335    	LD	BC,(_currentline+3)
042047 C5                  A  7336    	PUSH	BC
042048 DDE5E1              A  7337    	LD	HL,IX
04204B 017BFFFF            A  7338    	LD	BC,-133
04204F 09                  A  7339    	ADD	HL,BC
042050 E5C1                A  7340    	LD	BC,HL
042052 C5                  A  7341    	PUSH	BC
042053 CD D3 4F 04         A  7342    	CALL	_getLineToken
042057 C1                  A  7343    	POP	BC
042058 C1                  A  7344    	POP	BC
042059 C1                  A  7345    	POP	BC
                           A  7346    ;  952	        if(notEmpty(token.start)) {
                           A  7347    .LINE 952
                           A  7348    
04205A DDE5E1              A  7349    	LD	HL,IX
04205D 017BFFFF            A  7350    	LD	BC,-133
042061 09                  A  7351    	ADD	HL,BC
042062 E5C1                A  7352    	LD	BC,HL
042064 C5                  A  7353    	PUSH	BC
042065 CD 8A 4E 04         A  7354    	CALL	_notEmpty
042069 C1                  A  7355    	POP	BC
04206A B7                  A  7356    	OR	A,A
04206B 28 39               A  7357    	JR	Z,L_482
                           A  7358    ;  953	            operand1.immediate = str2nu
                           A  7359    .LINE 953
                           A  7360    
04206D 01010000            A  7361    	LD	BC,1
042071 C5                  A  7362    	PUSH	BC
042072 DDE5E1              A  7363    	LD	HL,IX
042075 017BFFFF            A  7364    	LD	BC,-133
042079 09                  A  7365    	ADD	HL,BC
04207A E5C1                A  7366    	LD	BC,HL
04207C C5                  A  7367    	PUSH	BC
04207D CD 41 4A 04         A  7368    	CALL	_str2num
042081 C1                  A  7369    	POP	BC
042082 C1                  A  7370    	POP	BC
042083 22 73 8B 04         A  7371    	LD	(_operand1+11),HL
042087 7B                  A  7372    	LD	A,E
042088 32 76 8B 04         A  7373    	LD	(_operand1+14),A
                           A  7374    ;  954	            operand1.immediate_provided
                           A  7375    .LINE 954
                           A  7376    
04208C 3E01                A  7377    	LD	A,%1
04208E 32 72 8B 04         A  7378    	LD	(_operand1+10),A
                           A  7379    ;  955	            if(token.terminator != 0) e
                           A  7380    .LINE 955
                           A  7381    
042092 DD7EFF              A  7382    	LD	A,(IX+%FFFFFFFF)
042095 B7                  A  7383    	OR	A,A
042096 28 28               A  7384    	JR	Z,L_485
042098 21 98 67 04         A  7385    	LD	HL,_message+87
04209C ED07                A  7386    	LD	BC,(HL)
04209E C5                  A  7387    	PUSH	BC
04209F CD A4 4E 04         A  7388    	CALL	_error
0420A3 C1                  A  7389    	POP	BC
                           A  7390    ;  956	        }
                           A  7391    ;  957	        else error(message[ERROR_MISSIN
                           A  7392    .LINE 957
                           A  7393    
0420A4 18 1A               A  7394    	JR	L_485
0420A6                     A  7395    L_482:
0420A6 21 50 67 04         A  7396    	LD	HL,_message+15
0420AA ED07                A  7397    	LD	BC,(HL)
0420AC C5                  A  7398    	PUSH	BC
0420AD CD A4 4E 04         A  7399    	CALL	_error
0420B1 C1                  A  7400    	POP	BC
                           A  7401    ;  958	    }
                           A  7402    ;  959	    else error(message[ERROR_MISSINGOPE
                           A  7403    .LINE 959
                           A  7404    
0420B2 18 0C               A  7405    	JR	L_485
0420B4                     A  7406    L_484:
0420B4 21 50 67 04         A  7407    	LD	HL,_message+15
0420B8 ED07                A  7408    	LD	BC,(HL)
0420BA C5                  A  7409    	PUSH	BC
0420BB CD A4 4E 04         A  7410    	CALL	_error
0420BF C1                  A  7411    	POP	BC
                           A  7412    ;  960	}
0420C0                     A  7413    L_485:
                           A  7414    .LINE 960
                           A  7415    
0420C0 DDF9                A  7416    	LD	SP,IX
0420C2 DDE1                A  7417    	POP	IX
0420C4 C9                  A  7418    	RET	
                           A  7419    
                           A  7420    
                           A  7421    ;**************************** _parse_asm_single
                           A  7422    ;Name                         Addr/Register   S
                           A  7423    ;_message                            IMPORT  un
                           A  7424    ;_error                              IMPORT  --
                           A  7425    ;_operand1                           IMPORT    
                           A  7426    ;_str2num                            IMPORT  --
                           A  7427    ;_notEmpty                           IMPORT  --
                           A  7428    ;_getLineToken                       IMPORT  --
                           A  7429    ;_currentline                        IMPORT    
                           A  7430    ;token                               IX-133    
                           A  7431    
                           A  7432    
                           A  7433    ; Stack Frame Size: 139 (bytes)
                           A  7434    ;       Spill Code: 0 (instruction)
                           A  7435    
                           A  7436    
                           A  7437    .ENDFUNC "parse_asm_single_immediate",960,"_par
                           A  7438    ;  961	
                           A  7439    ;  962	void parse_asm_keyval_pair(void) {
0420C5                     A  7440    _parse_asm_keyval_pair:
                           A  7441    .DEFINE "_parse_asm_keyval_pair"
                           A  7442    
                           A  7443    .VALUE _parse_asm_keyval_pair
                           A  7444    
                           A  7445    .CLASS 2
                           A  7446    
                           A  7447    .TYPE 65
                           A  7448    
                           A  7449    .ENDEF
                           A  7450    
                           A  7451    .BEGFUNC "parse_asm_keyval_pair",962,"_parse_as
                           A  7452    
                           A  7453    .LINE 962
                           A  7454    
                           A  7455    .DEFINE "token"
                           A  7456    
                           A  7457    .CLASS 65
                           A  7458    
                           A  7459    .VALUE -133
                           A  7460    
                           A  7461    .TAG "NONAME11"
                           A  7462    
                           A  7463    .TYPE 8
                           A  7464    
                           A  7465    .ENDEF
                           A  7466    
0420C5 DDE5                A  7467    	PUSH	IX
0420C7 DD210000 00         A  7468    	LD	IX,0
0420CC DD39                A  7469    	ADD	IX,SP
0420CE 217BFFFF            A  7470    	LD	HL,-133
0420D2 39                  A  7471    	ADD	HL,SP
0420D3 F9                  A  7472    	LD	SP,HL
                           A  7473    ;  963	    tokentype token;
                           A  7474    ;  964	
                           A  7475    ;  965	    if(currentline.next) {
                           A  7476    .LINE 965
                           A  7477    
0420D4 2A 63 8A 04         A  7478    	LD	HL,(_currentline+3)
0420D8 CD CF 60 04         A  7479    	CALL	__icmpzero
0420DC CA 8B 21 04         A  7480    	JR	Z,L_491
                           A  7481    ;  966	        getLineToken(&token, currentlin
                           A  7482    .LINE 966
                           A  7483    
0420E0 013D0000            A  7484    	LD	BC,61
0420E4 C5                  A  7485    	PUSH	BC
0420E5 ED4B 63 8A 04       A  7486    	LD	BC,(_currentline+3)
0420EA C5                  A  7487    	PUSH	BC
0420EB DDE5E1              A  7488    	LD	HL,IX
0420EE 017BFFFF            A  7489    	LD	BC,-133
0420F2 09                  A  7490    	ADD	HL,BC
0420F3 E5C1                A  7491    	LD	BC,HL
0420F5 C5                  A  7492    	PUSH	BC
0420F6 CD D3 4F 04         A  7493    	CALL	_getLineToken
0420FA C1                  A  7494    	POP	BC
0420FB C1                  A  7495    	POP	BC
0420FC C1                  A  7496    	POP	BC
                           A  7497    ;  967	        strcpy(currentline.operand1, to
                           A  7498    .LINE 967
                           A  7499    
0420FD DDE5E1              A  7500    	LD	HL,IX
042100 017BFFFF            A  7501    	LD	BC,-133
042104 09                  A  7502    	ADD	HL,BC
042105 E5C1                A  7503    	LD	BC,HL
042107 C5                  A  7504    	PUSH	BC
042108 01 A6 8A 04         A  7505    	LD	BC,_currentline+70
04210C C5                  A  7506    	PUSH	BC
04210D CD EE 63 04         A  7507    	CALL	_strcpy
042111 C1                  A  7508    	POP	BC
042112 C1                  A  7509    	POP	BC
                           A  7510    ;  968	        if(token.terminator == '=') {
                           A  7511    .LINE 968
                           A  7512    
042113 DD7EFF              A  7513    	LD	A,(IX+%FFFFFFFF)
042116 FE3D                A  7514    	CP	A,%3D
042118 20 63               A  7515    	JR	NZ,L_489
                           A  7516    ;  969	            getLineToken(&token, token.
                           A  7517    .LINE 969
                           A  7518    
04211A 01000000            A  7519    	LD	BC,0
04211E C5                  A  7520    	PUSH	BC
04211F DD07FC              A  7521    	LD	BC,(IX+%FFFFFFFC)
042122 C5                  A  7522    	PUSH	BC
042123 DDE5E1              A  7523    	LD	HL,IX
042126 017BFFFF            A  7524    	LD	BC,-133
04212A 09                  A  7525    	ADD	HL,BC
04212B E5C1                A  7526    	LD	BC,HL
04212D C5                  A  7527    	PUSH	BC
04212E CD D3 4F 04         A  7528    	CALL	_getLineToken
042132 C1                  A  7529    	POP	BC
042133 C1                  A  7530    	POP	BC
042134 C1                  A  7531    	POP	BC
                           A  7532    ;  970	            if(notEmpty(token.start)) {
                           A  7533    .LINE 970
                           A  7534    
042135 DDE5E1              A  7535    	LD	HL,IX
042138 017BFFFF            A  7536    	LD	BC,-133
04213C 09                  A  7537    	ADD	HL,BC
04213D E5C1                A  7538    	LD	BC,HL
04213F C5                  A  7539    	PUSH	BC
042140 CD 8A 4E 04         A  7540    	CALL	_notEmpty
042144 C1                  A  7541    	POP	BC
042145 B7                  A  7542    	OR	A,A
042146 28 27               A  7543    	JR	Z,L_487
                           A  7544    ;  971	                operand2.immediate = st
                           A  7545    .LINE 971
                           A  7546    
042148 01010000            A  7547    	LD	BC,1
04214C C5                  A  7548    	PUSH	BC
04214D DDE5E1              A  7549    	LD	HL,IX
042150 017BFFFF            A  7550    	LD	BC,-133
042154 09                  A  7551    	ADD	HL,BC
042155 E5C1                A  7552    	LD	BC,HL
042157 C5                  A  7553    	PUSH	BC
042158 CD 41 4A 04         A  7554    	CALL	_str2num
04215C C1                  A  7555    	POP	BC
04215D C1                  A  7556    	POP	BC
04215E 22 83 8B 04         A  7557    	LD	(_operand2+11),HL
042162 7B                  A  7558    	LD	A,E
042163 32 86 8B 04         A  7559    	LD	(_operand2+14),A
                           A  7560    ;  972	                operand2.immediate_prov
                           A  7561    .LINE 972
                           A  7562    
042167 3E01                A  7563    	LD	A,%1
042169 32 82 8B 04         A  7564    	LD	(_operand2+10),A
                           A  7565    ;  973	            }
                           A  7566    ;  974	            else error(message[ERROR_MI
                           A  7567    .LINE 974
                           A  7568    
04216D 18 28               A  7569    	JR	L_492
04216F                     A  7570    L_487:
04216F 21 50 67 04         A  7571    	LD	HL,_message+15
042173 ED07                A  7572    	LD	BC,(HL)
042175 C5                  A  7573    	PUSH	BC
042176 CD A4 4E 04         A  7574    	CALL	_error
04217A C1                  A  7575    	POP	BC
                           A  7576    ;  975	        }        
                           A  7577    ;  976	        else error(message[ERROR_MISSIN
                           A  7578    .LINE 976
                           A  7579    
04217B 18 1A               A  7580    	JR	L_492
04217D                     A  7581    L_489:
04217D 21 50 67 04         A  7582    	LD	HL,_message+15
042181 ED07                A  7583    	LD	BC,(HL)
042183 C5                  A  7584    	PUSH	BC
042184 CD A4 4E 04         A  7585    	CALL	_error
042188 C1                  A  7586    	POP	BC
                           A  7587    ;  977	    }
                           A  7588    ;  978	    else error(message[ERROR_MISSINGOPE
                           A  7589    .LINE 978
                           A  7590    
042189 18 0C               A  7591    	JR	L_492
04218B                     A  7592    L_491:
04218B 21 50 67 04         A  7593    	LD	HL,_message+15
04218F ED07                A  7594    	LD	BC,(HL)
042191 C5                  A  7595    	PUSH	BC
042192 CD A4 4E 04         A  7596    	CALL	_error
042196 C1                  A  7597    	POP	BC
                           A  7598    ;  979	}
042197                     A  7599    L_492:
                           A  7600    .LINE 979
                           A  7601    
042197 DDF9                A  7602    	LD	SP,IX
042199 DDE1                A  7603    	POP	IX
04219B C9                  A  7604    	RET	
                           A  7605    
                           A  7606    
                           A  7607    ;**************************** _parse_asm_keyval
                           A  7608    ;Name                         Addr/Register   S
                           A  7609    ;_message                            IMPORT  un
                           A  7610    ;_error                              IMPORT  --
                           A  7611    ;_operand2                           IMPORT    
                           A  7612    ;_str2num                            IMPORT  --
                           A  7613    ;_notEmpty                           IMPORT  --
                           A  7614    ;_strcpy                             IMPORT  --
                           A  7615    ;_getLineToken                       IMPORT  --
                           A  7616    ;_currentline                        IMPORT    
                           A  7617    ;token                               IX-133    
                           A  7618    
                           A  7619    
                           A  7620    ; Stack Frame Size: 139 (bytes)
                           A  7621    ;       Spill Code: 0 (instruction)
                           A  7622    
                           A  7623    
                           A  7624    .ENDFUNC "parse_asm_keyval_pair",979,"_parse_as
                           A  7625    ;  980	
                           A  7626    ;  981	void handle_asm_db(void) {
04219C                     A  7627    _handle_asm_db:
                           A  7628    .DEFINE "_handle_asm_db"
                           A  7629    
                           A  7630    .VALUE _handle_asm_db
                           A  7631    
                           A  7632    .CLASS 2
                           A  7633    
                           A  7634    .TYPE 65
                           A  7635    
                           A  7636    .ENDEF
                           A  7637    
                           A  7638    .BEGFUNC "handle_asm_db",981,"_handle_asm_db"
                           A  7639    
                           A  7640    .LINE 981
                           A  7641    
                           A  7642    .DEFINE "token"
                           A  7643    
                           A  7644    .CLASS 65
                           A  7645    
                           A  7646    .VALUE -136
                           A  7647    
                           A  7648    .TAG "NONAME11"
                           A  7649    
                           A  7650    .TYPE 8
                           A  7651    
                           A  7652    .ENDEF
                           A  7653    
04219C DDE5                A  7654    	PUSH	IX
04219E DD210000 00         A  7655    	LD	IX,0
0421A3 DD39                A  7656    	ADD	IX,SP
0421A5 2178FFFF            A  7657    	LD	HL,-136
0421A9 39                  A  7658    	ADD	HL,SP
0421AA F9                  A  7659    	LD	SP,HL
                           A  7660    ;  982	    tokentype token;
                           A  7661    ;  983	
                           A  7662    ;  984	    if(pass == 1) {
                           A  7663    .LINE 984
                           A  7664    
0421AB 01010000            A  7665    	LD	BC,1
0421AF 2A 52 8A 04         A  7666    	LD	HL,(_pass)
0421B3 B7                  A  7667    	OR	A,A
0421B4 ED42                A  7668    	SBC	HL,BC
0421B6 20 14               A  7669    	JR	NZ,L_509
                           A  7670    ;  985	        // Output label at this address
                           A  7671    ;  986	        definelabel(address);
                           A  7672    .LINE 986
                           A  7673    
0421B8 3A 58 8A 04         A  7674    	LD	A,(_address+3)
0421BC 4F                  A  7675    	LD	C,A
0421BD 0600                A  7676    	LD	B,%0
0421BF C5                  A  7677    	PUSH	BC
0421C0 ED4B 55 8A 04       A  7678    	LD	BC,(_address)
0421C5 C5                  A  7679    	PUSH	BC
0421C6 CD 5F 12 04         A  7680    	CALL	_definelabel
0421CA C1                  A  7681    	POP	BC
0421CB C1                  A  7682    	POP	BC
                           A  7683    ;  987	    }
0421CC                     A  7684    L_509:
                           A  7685    .LINE 987
                           A  7686    
                           A  7687    ;  988	    if(currentline.next) {
                           A  7688    .LINE 988
                           A  7689    
0421CC 2A 63 8A 04         A  7690    	LD	HL,(_currentline+3)
0421D0 CD CF 60 04         A  7691    	CALL	__icmpzero
0421D4 C2 A2 22 04         A  7692    	JR	NZ,L_505
0421D8 C3 B0 22 04         A  7693    	JR	L_508
                           A  7694    ;  989	        while(currentline.next) {
0421DC                     A  7695    L_506:
                           A  7696    .LINE 989
                           A  7697    
                           A  7698    ;  990	            getLineToken(&token, curren
                           A  7699    .LINE 990
                           A  7700    
0421DC 012C0000            A  7701    	LD	BC,44
0421E0 C5                  A  7702    	PUSH	BC
0421E1 ED4B 63 8A 04       A  7703    	LD	BC,(_currentline+3)
0421E6 C5                  A  7704    	PUSH	BC
0421E7 DDE5E1              A  7705    	LD	HL,IX
0421EA 0178FFFF            A  7706    	LD	BC,-136
0421EE 09                  A  7707    	ADD	HL,BC
0421EF E5C1                A  7708    	LD	BC,HL
0421F1 C5                  A  7709    	PUSH	BC
0421F2 CD D3 4F 04         A  7710    	CALL	_getLineToken
0421F6 C1                  A  7711    	POP	BC
0421F7 C1                  A  7712    	POP	BC
0421F8 C1                  A  7713    	POP	BC
                           A  7714    ;  991	            if(notEmpty(token.start)) {
                           A  7715    .LINE 991
                           A  7716    
0421F9 DDE5E1              A  7717    	LD	HL,IX
0421FC 0178FFFF            A  7718    	LD	BC,-136
042200 09                  A  7719    	ADD	HL,BC
042201 E5C1                A  7720    	LD	BC,HL
042203 C5                  A  7721    	PUSH	BC
042204 CD 8A 4E 04         A  7722    	CALL	_notEmpty
042208 C1                  A  7723    	POP	BC
042209 B7                  A  7724    	OR	A,A
04220A 28 63               A  7725    	JR	Z,L_504
                           A  7726    ;  992	                switch(token.start[0]) 
                           A  7727    .LINE 992
                           A  7728    
04220C DDE5E1              A  7729    	LD	HL,IX
04220F 0178FFFF            A  7730    	LD	BC,-136
042213 09                  A  7731    	ADD	HL,BC
042214 DD2FFD              A  7732    	LD	(IX+%FFFFFFFD),HL
042217 7E                  A  7733    	LD	A,(HL)
042218 47                  A  7734    	LD	B,A
042219 17ED62              A  7735    	SEXT	HL
04221C 68                  A  7736    	LD	L,B
04221D 01220000            A  7737    	LD	BC,34
042221 B7                  A  7738    	OR	A,A
042222 ED42                A  7739    	SBC	HL,BC
042224 20 0B               A  7740    	JR	NZ,L_495
                           A  7741    ;  993	                    case '\"':
                           A  7742    .LINE 993
                           A  7743    
                           A  7744    ;  994	                        emit_quotedstri
                           A  7745    .LINE 994
                           A  7746    
042226 DD07FD              A  7747    	LD	BC,(IX+%FFFFFFFD)
042229 C5                  A  7748    	PUSH	BC
04222A CD 12 1F 04         A  7749    	CALL	_emit_quotedstring
04222E C1                  A  7750    	POP	BC
                           A  7751    ;  995	                        break;
                           A  7752    .LINE 995
                           A  7753    
04222F 18 3E               A  7754    	JR	L_504
                           A  7755    ;  996	                    default:
042231                     A  7756    L_495:
                           A  7757    .LINE 996
                           A  7758    
                           A  7759    ;  997	                        operand1.immedi
                           A  7760    .LINE 997
                           A  7761    
042231 DD07FD              A  7762    	LD	BC,(IX+%FFFFFFFD)
042234 C5                  A  7763    	PUSH	BC
042235 CD A6 05 04         A  7764    	CALL	_getLabelValue
042239 C1                  A  7765    	POP	BC
04223A 22 73 8B 04         A  7766    	LD	(_operand1+11),HL
04223E 7B                  A  7767    	LD	A,E
04223F 32 76 8B 04         A  7768    	LD	(_operand1+14),A
                           A  7769    ;  998	                        if(operand1.imm
                           A  7770    .LINE 998
                           A  7771    
042243 21FF0000            A  7772    	LD	HL,255
042247 1E00                A  7773    	LD	E,%0
042249 ED4B 73 8B 04       A  7774    	LD	BC,(_operand1+11)
04224E CD 9C 63 04         A  7775    	CALL	__lcmps
042252 F2 62 22 04         A  7776    	JP	P,L_497
042256 21 5F 67 04         A  7777    	LD	HL,_message+30
04225A ED07                A  7778    	LD	BC,(HL)
04225C C5                  A  7779    	PUSH	BC
04225D CD A4 4E 04         A  7780    	CALL	_error
042261 C1                  A  7781    	POP	BC
042262                     A  7782    L_497:
                           A  7783    ;  999	                        emit_8bit(opera
                           A  7784    .LINE 999
                           A  7785    
042262 3A 73 8B 04         A  7786    	LD	A,(_operand1+11)
042266 4F                  A  7787    	LD	C,A
042267 0600                A  7788    	LD	B,%0
042269 C5                  A  7789    	PUSH	BC
04226A CD 84 1D 04         A  7790    	CALL	_emit_8bit
04226E C1                  A  7791    	POP	BC
                           A  7792    ; 1000	                        break;
                           A  7793    ; 1001	                        
                           A  7794    ; 1002	                }
                           A  7795    ; 1003	            }
04226F                     A  7796    L_504:
                           A  7797    .LINE 1003
                           A  7798    
                           A  7799    ; 1004	            if(token.terminator == ',')
                           A  7800    .LINE 1004
                           A  7801    
04226F DD7EFC              A  7802    	LD	A,(IX+%FFFFFFFC)
042272 FE2C                A  7803    	CP	A,%2C
042274 20 0A               A  7804    	JR	NZ,L_503
042276 DD07F9              A  7805    	LD	BC,(IX+%FFFFFFF9)
042279 ED43 63 8A 04       A  7806    	LD	(_currentline+3),BC
                           A  7807    ; 1005	            else {
                           A  7808    .LINE 1005
                           A  7809    
04227E 18 22               A  7810    	JR	L_505
042280                     A  7811    L_503:
                           A  7812    ; 1006	                if((token.terminator !=
                           A  7813    .LINE 1006
                           A  7814    
042280 DD7EFC              A  7815    	LD	A,(IX+%FFFFFFFC)
042283 B7                  A  7816    	OR	A,A
042284 28 13               A  7817    	JR	Z,L_501
042286 DD7EFC              A  7818    	LD	A,(IX+%FFFFFFFC)
042289 FE3B                A  7819    	CP	A,%3B
04228B 28 0C               A  7820    	JR	Z,L_501
04228D 21 9B 67 04         A  7821    	LD	HL,_message+90
042291 ED07                A  7822    	LD	BC,(HL)
042293 C5                  A  7823    	PUSH	BC
042294 CD A4 4E 04         A  7824    	CALL	_error
042298 C1                  A  7825    	POP	BC
042299                     A  7826    L_501:
                           A  7827    ; 1007	                currentline.next = NULL
                           A  7828    .LINE 1007
                           A  7829    
042299 01000000            A  7830    	LD	BC,0
04229D ED43 63 8A 04       A  7831    	LD	(_currentline+3),BC
                           A  7832    ; 1008	            }
                           A  7833    ; 1009	        }
0422A2                     A  7834    L_505:
                           A  7835    .LINE 1009
                           A  7836    
0422A2 2A 63 8A 04         A  7837    	LD	HL,(_currentline+3)
0422A6 CD CF 60 04         A  7838    	CALL	__icmpzero
0422AA C2 DC 21 04         A  7839    	JR	NZ,L_506
0422AE 18 0C               A  7840    	JR	L_510
                           A  7841    ; 1010	    }
                           A  7842    ; 1011	    else error(message[ERROR_MISSINGOPE
0422B0                     A  7843    L_508:
                           A  7844    .LINE 1011
                           A  7845    
0422B0 21 50 67 04         A  7846    	LD	HL,_message+15
0422B4 ED07                A  7847    	LD	BC,(HL)
0422B6 C5                  A  7848    	PUSH	BC
0422B7 CD A4 4E 04         A  7849    	CALL	_error
0422BB C1                  A  7850    	POP	BC
                           A  7851    ; 1012	}
0422BC                     A  7852    L_510:
                           A  7853    .LINE 1012
                           A  7854    
0422BC DDF9                A  7855    	LD	SP,IX
0422BE DDE1                A  7856    	POP	IX
0422C0 C9                  A  7857    	RET	
                           A  7858    
                           A  7859    
                           A  7860    ;**************************** _handle_asm_db **
                           A  7861    ;Name                         Addr/Register   S
                           A  7862    ;_emit_8bit                          IMPORT  --
                           A  7863    ;_message                            IMPORT  un
                           A  7864    ;_error                              IMPORT  --
                           A  7865    ;_operand1                           IMPORT    
                           A  7866    ;_notEmpty                           IMPORT  --
                           A  7867    ;_getLineToken                       IMPORT  --
                           A  7868    ;_currentline                        IMPORT    
                           A  7869    ;_address                            IMPORT    
                           A  7870    ;_pass                               IMPORT    
                           A  7871    ;token                               IX-136    
                           A  7872    ;G_23                                  IX-3    
                           A  7873    
                           A  7874    
                           A  7875    ; Stack Frame Size: 142 (bytes)
                           A  7876    ;       Spill Code: 0 (instruction)
                           A  7877    
                           A  7878    
                           A  7879    .ENDFUNC "handle_asm_db",1012,"_handle_asm_db"
                           A  7880    ; 1013	
                           A  7881    ; 1014	void handle_asm_dw(bool longword) {
0422C1                     A  7882    _handle_asm_dw:
                           A  7883    .DEFINE "_handle_asm_dw"
                           A  7884    
                           A  7885    .VALUE _handle_asm_dw
                           A  7886    
                           A  7887    .CLASS 2
                           A  7888    
                           A  7889    .TYPE 65
                           A  7890    
                           A  7891    .ENDEF
                           A  7892    
                           A  7893    .BEGFUNC "handle_asm_dw",1014,"_handle_asm_dw"
                           A  7894    
                           A  7895    .LINE 1014
                           A  7896    
                           A  7897    .DEFINE "longword"
                           A  7898    
                           A  7899    .CLASS 65
                           A  7900    
                           A  7901    .VALUE 6
                           A  7902    
                           A  7903    .TYPE 12
                           A  7904    
                           A  7905    .ENDEF
                           A  7906    
                           A  7907    .DEFINE "lbl"
                           A  7908    
                           A  7909    .CLASS 65
                           A  7910    
                           A  7911    .VALUE -3
                           A  7912    
                           A  7913    .TAG "NONAME8"
                           A  7914    
                           A  7915    .TYPE 40
                           A  7916    
                           A  7917    .ENDEF
                           A  7918    
                           A  7919    .DEFINE "token"
                           A  7920    
                           A  7921    .CLASS 65
                           A  7922    
                           A  7923    .VALUE -136
                           A  7924    
                           A  7925    .TAG "NONAME11"
                           A  7926    
                           A  7927    .TYPE 8
                           A  7928    
                           A  7929    .ENDEF
                           A  7930    
0422C1 DDE5                A  7931    	PUSH	IX
0422C3 DD210000 00         A  7932    	LD	IX,0
0422C8 DD39                A  7933    	ADD	IX,SP
0422CA 2178FFFF            A  7934    	LD	HL,-136
0422CE 39                  A  7935    	ADD	HL,SP
0422CF F9                  A  7936    	LD	SP,HL
                           A  7937    ; 1015	    label *lbl;
                           A  7938    ; 1016	    tokentype token;
                           A  7939    ; 1017	    if(pass == 1) {
                           A  7940    .LINE 1017
                           A  7941    
0422D0 01010000            A  7942    	LD	BC,1
0422D4 2A 52 8A 04         A  7943    	LD	HL,(_pass)
0422D8 B7                  A  7944    	OR	A,A
0422D9 ED42                A  7945    	SBC	HL,BC
0422DB 20 14               A  7946    	JR	NZ,L_530
                           A  7947    ; 1018	        // Output label at this address
                           A  7948    ; 1019	        definelabel(address);
                           A  7949    .LINE 1019
                           A  7950    
0422DD 3A 58 8A 04         A  7951    	LD	A,(_address+3)
0422E1 4F                  A  7952    	LD	C,A
0422E2 0600                A  7953    	LD	B,%0
0422E4 C5                  A  7954    	PUSH	BC
0422E5 ED4B 55 8A 04       A  7955    	LD	BC,(_address)
0422EA C5                  A  7956    	PUSH	BC
0422EB CD 5F 12 04         A  7957    	CALL	_definelabel
0422EF C1                  A  7958    	POP	BC
0422F0 C1                  A  7959    	POP	BC
                           A  7960    ; 1020	    }
0422F1                     A  7961    L_530:
                           A  7962    .LINE 1020
                           A  7963    
                           A  7964    ; 1021	    if(currentline.next) {
                           A  7965    .LINE 1021
                           A  7966    
0422F1 2A 63 8A 04         A  7967    	LD	HL,(_currentline+3)
0422F5 CD CF 60 04         A  7968    	CALL	__icmpzero
0422F9 C2 FC 23 04         A  7969    	JR	NZ,L_526
0422FD C3 0A 24 04         A  7970    	JR	L_529
                           A  7971    ; 1022	        while(currentline.next) {
042301                     A  7972    L_527:
                           A  7973    .LINE 1022
                           A  7974    
                           A  7975    ; 1023	            getLineToken(&token, curren
                           A  7976    .LINE 1023
                           A  7977    
042301 012C0000            A  7978    	LD	BC,44
042305 C5                  A  7979    	PUSH	BC
042306 ED4B 63 8A 04       A  7980    	LD	BC,(_currentline+3)
04230B C5                  A  7981    	PUSH	BC
04230C DDE5E1              A  7982    	LD	HL,IX
04230F 0178FFFF            A  7983    	LD	BC,-136
042313 09                  A  7984    	ADD	HL,BC
042314 E5C1                A  7985    	LD	BC,HL
042316 C5                  A  7986    	PUSH	BC
042317 CD D3 4F 04         A  7987    	CALL	_getLineToken
04231B C1                  A  7988    	POP	BC
04231C C1                  A  7989    	POP	BC
04231D C1                  A  7990    	POP	BC
                           A  7991    ; 1024	            if(notEmpty(token.start)) {
                           A  7992    .LINE 1024
                           A  7993    
04231E DDE5E1              A  7994    	LD	HL,IX
042321 0178FFFF            A  7995    	LD	BC,-136
042325 09                  A  7996    	ADD	HL,BC
042326 E5C1                A  7997    	LD	BC,HL
042328 C5                  A  7998    	PUSH	BC
042329 CD 8A 4E 04         A  7999    	CALL	_notEmpty
04232D C1                  A  8000    	POP	BC
04232E B7                  A  8001    	OR	A,A
04232F CA C9 23 04         A  8002    	JR	Z,L_525
                           A  8003    ; 1025	                lbl = findLabel(token.s
                           A  8004    .LINE 1025
                           A  8005    
042333 DDE5E1              A  8006    	LD	HL,IX
042336 0178FFFF            A  8007    	LD	BC,-136
04233A 09                  A  8008    	ADD	HL,BC
04233B E5C1                A  8009    	LD	BC,HL
04233D C5                  A  8010    	PUSH	BC
04233E CD 86 43 04         A  8011    	CALL	_findLabel
042342 C1                  A  8012    	POP	BC
042343 DD2FFD              A  8013    	LD	(IX+%FFFFFFFD),HL
                           A  8014    ; 1026	                if(lbl) operand1.immedi
                           A  8015    .LINE 1026
                           A  8016    
042346 CD CF 60 04         A  8017    	CALL	__icmpzero
04234A 28 14               A  8018    	JR	Z,L_513
04234C DD31FD              A  8019    	LD	IY,(IX+%FFFFFFFD)
04234F FD0703              A  8020    	LD	BC,(IY+%3)
042352 FD7E06              A  8021    	LD	A,(IY+%6)
042355 ED43 73 8B 04       A  8022    	LD	(_operand1+11),BC
04235A 32 76 8B 04         A  8023    	LD	(_operand1+14),A
                           A  8024    ; 1027	                else operand1.immediate
                           A  8025    .LINE 1027
                           A  8026    
04235E 18 1F               A  8027    	JR	L_518
042360                     A  8028    L_513:
042360 01010000            A  8029    	LD	BC,1
042364 C5                  A  8030    	PUSH	BC
042365 DDE5E1              A  8031    	LD	HL,IX
042368 0178FFFF            A  8032    	LD	BC,-136
04236C 09                  A  8033    	ADD	HL,BC
04236D E5C1                A  8034    	LD	BC,HL
04236F C5                  A  8035    	PUSH	BC
042370 CD 41 4A 04         A  8036    	CALL	_str2num
042374 C1                  A  8037    	POP	BC
042375 C1                  A  8038    	POP	BC
042376 22 73 8B 04         A  8039    	LD	(_operand1+11),HL
04237A 7B                  A  8040    	LD	A,E
04237B 32 76 8B 04         A  8041    	LD	(_operand1+14),A
04237F                     A  8042    L_518:
                           A  8043    ; 1028	                
                           A  8044    ; 1029	                if(longword) {
                           A  8045    .LINE 1029
                           A  8046    
04237F DD7E06              A  8047    	LD	A,(IX+%6)
042382 B7                  A  8048    	OR	A,A
042383 28 16               A  8049    	JR	Z,L_517
                           A  8050    ; 1030	                    emit_24bit(operand1
                           A  8051    .LINE 1030
                           A  8052    
042385 3A 76 8B 04         A  8053    	LD	A,(_operand1+14)
042389 4F                  A  8054    	LD	C,A
04238A 0600                A  8055    	LD	B,%0
04238C C5                  A  8056    	PUSH	BC
04238D ED4B 73 8B 04       A  8057    	LD	BC,(_operand1+11)
042392 C5                  A  8058    	PUSH	BC
042393 CD 21 1E 04         A  8059    	CALL	_emit_24bit
042397 C1                  A  8060    	POP	BC
042398 C1                  A  8061    	POP	BC
                           A  8062    ; 1031	                }
                           A  8063    ; 1032	                else {
                           A  8064    .LINE 1032
                           A  8065    
042399 18 2E               A  8066    	JR	L_525
04239B                     A  8067    L_517:
                           A  8068    ; 1033	                    if(operand1.immedia
                           A  8069    .LINE 1033
                           A  8070    
04239B 21FFFFFF            A  8071    	LD	HL,16777215
04239F 1E00                A  8072    	LD	E,%0
0423A1 ED4B 73 8B 04       A  8073    	LD	BC,(_operand1+11)
0423A6 3A 76 8B 04         A  8074    	LD	A,(_operand1+14)
0423AA CD 9C 63 04         A  8075    	CALL	__lcmps
0423AE F2 BE 23 04         A  8076    	JP	P,L_515
0423B2 21 95 67 04         A  8077    	LD	HL,_message+84
0423B6 ED07                A  8078    	LD	BC,(HL)
0423B8 C5                  A  8079    	PUSH	BC
0423B9 CD A4 4E 04         A  8080    	CALL	_error
0423BD C1                  A  8081    	POP	BC
0423BE                     A  8082    L_515:
                           A  8083    ; 1034	                    emit_16bit(operand1
                           A  8084    .LINE 1034
                           A  8085    
0423BE ED4B 73 8B 04       A  8086    	LD	BC,(_operand1+11)
0423C3 C5                  A  8087    	PUSH	BC
0423C4 CD F0 1D 04         A  8088    	CALL	_emit_16bit
0423C8 C1                  A  8089    	POP	BC
                           A  8090    ; 1035	                }
                           A  8091    ; 1036	            }
0423C9                     A  8092    L_525:
                           A  8093    .LINE 1036
                           A  8094    
                           A  8095    ; 1037	            if(token.terminator == ',')
                           A  8096    .LINE 1037
                           A  8097    
0423C9 DD7EFC              A  8098    	LD	A,(IX+%FFFFFFFC)
0423CC FE2C                A  8099    	CP	A,%2C
0423CE 20 0A               A  8100    	JR	NZ,L_524
0423D0 DD07F9              A  8101    	LD	BC,(IX+%FFFFFFF9)
0423D3 ED43 63 8A 04       A  8102    	LD	(_currentline+3),BC
                           A  8103    ; 1038	            else {
                           A  8104    .LINE 1038
                           A  8105    
0423D8 18 22               A  8106    	JR	L_526
0423DA                     A  8107    L_524:
                           A  8108    ; 1039	                if((token.terminator !=
                           A  8109    .LINE 1039
                           A  8110    
0423DA DD7EFC              A  8111    	LD	A,(IX+%FFFFFFFC)
0423DD B7                  A  8112    	OR	A,A
0423DE 28 13               A  8113    	JR	Z,L_522
0423E0 DD7EFC              A  8114    	LD	A,(IX+%FFFFFFFC)
0423E3 FE3B                A  8115    	CP	A,%3B
0423E5 28 0C               A  8116    	JR	Z,L_522
0423E7 21 9B 67 04         A  8117    	LD	HL,_message+90
0423EB ED07                A  8118    	LD	BC,(HL)
0423ED C5                  A  8119    	PUSH	BC
0423EE CD A4 4E 04         A  8120    	CALL	_error
0423F2 C1                  A  8121    	POP	BC
0423F3                     A  8122    L_522:
                           A  8123    ; 1040	                currentline.next = NULL
                           A  8124    .LINE 1040
                           A  8125    
0423F3 01000000            A  8126    	LD	BC,0
0423F7 ED43 63 8A 04       A  8127    	LD	(_currentline+3),BC
                           A  8128    ; 1041	            }
                           A  8129    ; 1042	        }
0423FC                     A  8130    L_526:
                           A  8131    .LINE 1042
                           A  8132    
0423FC 2A 63 8A 04         A  8133    	LD	HL,(_currentline+3)
042400 CD CF 60 04         A  8134    	CALL	__icmpzero
042404 C2 01 23 04         A  8135    	JR	NZ,L_527
042408 18 0C               A  8136    	JR	L_531
                           A  8137    ; 1043	    }
                           A  8138    ; 1044	    else error(message[ERROR_MISSINGOPE
04240A                     A  8139    L_529:
                           A  8140    .LINE 1044
                           A  8141    
04240A 21 50 67 04         A  8142    	LD	HL,_message+15
04240E ED07                A  8143    	LD	BC,(HL)
042410 C5                  A  8144    	PUSH	BC
042411 CD A4 4E 04         A  8145    	CALL	_error
042415 C1                  A  8146    	POP	BC
                           A  8147    ; 1045	}
042416                     A  8148    L_531:
                           A  8149    .LINE 1045
                           A  8150    
042416 DDF9                A  8151    	LD	SP,IX
042418 DDE1                A  8152    	POP	IX
04241A C9                  A  8153    	RET	
                           A  8154    
                           A  8155    
                           A  8156    ;**************************** _handle_asm_dw **
                           A  8157    ;Name                         Addr/Register   S
                           A  8158    ;_emit_16bit                         IMPORT  --
                           A  8159    ;_message                            IMPORT  un
                           A  8160    ;_error                              IMPORT  --
                           A  8161    ;_emit_24bit                         IMPORT  --
                           A  8162    ;_str2num                            IMPORT  --
                           A  8163    ;_operand1                           IMPORT    
                           A  8164    ;_findLabel                          IMPORT  --
                           A  8165    ;_notEmpty                           IMPORT  --
                           A  8166    ;_getLineToken                       IMPORT  --
                           A  8167    ;_currentline                        IMPORT    
                           A  8168    ;_address                            IMPORT    
                           A  8169    ;_pass                               IMPORT    
                           A  8170    ;token                               IX-136    
                           A  8171    ;lbl                                   IX-3    
                           A  8172    ;longword                              IX+6    
                           A  8173    
                           A  8174    
                           A  8175    ; Stack Frame Size: 145 (bytes)
                           A  8176    ;       Spill Code: 0 (instruction)
                           A  8177    
                           A  8178    
                           A  8179    .ENDFUNC "handle_asm_dw",1045,"_handle_asm_dw"
                           A  8180    ; 1046	
                           A  8181    ; 1047	void handle_asm_equ(void) {
04241B                     A  8182    _handle_asm_equ:
                           A  8183    .DEFINE "_handle_asm_equ"
                           A  8184    
                           A  8185    .VALUE _handle_asm_equ
                           A  8186    
                           A  8187    .CLASS 2
                           A  8188    
                           A  8189    .TYPE 65
                           A  8190    
                           A  8191    .ENDEF
                           A  8192    
                           A  8193    .BEGFUNC "handle_asm_equ",1047,"_handle_asm_equ
                           A  8194    
                           A  8195    .LINE 1047
                           A  8196    
                           A  8197    .DEFINE "lbl"
                           A  8198    
                           A  8199    .CLASS 65
                           A  8200    
                           A  8201    .VALUE -3
                           A  8202    
                           A  8203    .TAG "NONAME8"
                           A  8204    
                           A  8205    .TYPE 40
                           A  8206    
                           A  8207    .ENDEF
                           A  8208    
                           A  8209    .DEFINE "token"
                           A  8210    
                           A  8211    .CLASS 65
                           A  8212    
                           A  8213    .VALUE -136
                           A  8214    
                           A  8215    .TAG "NONAME11"
                           A  8216    
                           A  8217    .TYPE 8
                           A  8218    
                           A  8219    .ENDEF
                           A  8220    
04241B DDE5                A  8221    	PUSH	IX
04241D DD210000 00         A  8222    	LD	IX,0
042422 DD39                A  8223    	ADD	IX,SP
042424 2178FFFF            A  8224    	LD	HL,-136
042428 39                  A  8225    	ADD	HL,SP
042429 F9                  A  8226    	LD	SP,HL
                           A  8227    ; 1048	    label *lbl;
                           A  8228    ; 1049	    tokentype token;
                           A  8229    ; 1050	
                           A  8230    ; 1051	    if(currentline.next) {
                           A  8231    .LINE 1051
                           A  8232    
04242A 2A 63 8A 04         A  8233    	LD	HL,(_currentline+3)
04242E CD CF 60 04         A  8234    	CALL	__icmpzero
042432 CA EF 24 04         A  8235    	JR	Z,L_543
                           A  8236    ; 1052	        getLineToken(&token, currentlin
                           A  8237    .LINE 1052
                           A  8238    
042436 01000000            A  8239    	LD	BC,0
04243A C5                  A  8240    	PUSH	BC
04243B ED4B 63 8A 04       A  8241    	LD	BC,(_currentline+3)
042440 C5                  A  8242    	PUSH	BC
042441 DDE5E1              A  8243    	LD	HL,IX
042444 0178FFFF            A  8244    	LD	BC,-136
042448 09                  A  8245    	ADD	HL,BC
042449 E5C1                A  8246    	LD	BC,HL
04244B C5                  A  8247    	PUSH	BC
04244C CD D3 4F 04         A  8248    	CALL	_getLineToken
042450 C1                  A  8249    	POP	BC
042451 C1                  A  8250    	POP	BC
042452 C1                  A  8251    	POP	BC
                           A  8252    ; 1053	        if(notEmpty(token.start)) {
                           A  8253    .LINE 1053
                           A  8254    
042453 DDE5E1              A  8255    	LD	HL,IX
042456 0178FFFF            A  8256    	LD	BC,-136
04245A 09                  A  8257    	ADD	HL,BC
04245B E5C1                A  8258    	LD	BC,HL
04245D C5                  A  8259    	PUSH	BC
04245E CD 8A 4E 04         A  8260    	CALL	_notEmpty
042462 C1                  A  8261    	POP	BC
042463 B7                  A  8262    	OR	A,A
042464 28 7B               A  8263    	JR	Z,L_541
                           A  8264    ; 1054	            if((token.terminator != 0) 
                           A  8265    .LINE 1054
                           A  8266    
042466 DD7EFC              A  8267    	LD	A,(IX+%FFFFFFFC)
042469 B7                  A  8268    	OR	A,A
04246A 28 13               A  8269    	JR	Z,L_535
04246C DD7EFC              A  8270    	LD	A,(IX+%FFFFFFFC)
04246F FE3B                A  8271    	CP	A,%3B
042471 28 0C               A  8272    	JR	Z,L_535
042473 21 98 67 04         A  8273    	LD	HL,_message+87
042477 ED07                A  8274    	LD	BC,(HL)
042479 C5                  A  8275    	PUSH	BC
04247A CD A4 4E 04         A  8276    	CALL	_error
04247E C1                  A  8277    	POP	BC
04247F                     A  8278    L_535:
                           A  8279    ; 1055	            if(pass == 1) definelabel(0
                           A  8280    .LINE 1055
                           A  8281    
04247F 01010000            A  8282    	LD	BC,1
042483 2A 52 8A 04         A  8283    	LD	HL,(_pass)
042487 B7                  A  8284    	OR	A,A
042488 ED42                A  8285    	SBC	HL,BC
04248A 20 0C               A  8286    	JR	NZ,L_539
04248C 01000000            A  8287    	LD	BC,0
042490 C5                  A  8288    	PUSH	BC
042491 C5                  A  8289    	PUSH	BC
042492 CD 5F 12 04         A  8290    	CALL	_definelabel
042496 C1                  A  8291    	POP	BC
042497 C1                  A  8292    	POP	BC
042498                     A  8293    L_539:
                           A  8294    ; 1056	            if(pass == 2) {
                           A  8295    .LINE 1056
                           A  8296    
042498 01020000            A  8297    	LD	BC,2
04249C 2A 52 8A 04         A  8298    	LD	HL,(_pass)
0424A0 B7                  A  8299    	OR	A,A
0424A1 ED42                A  8300    	SBC	HL,BC
0424A3 20 56               A  8301    	JR	NZ,L_544
                           A  8302    ; 1057	                lbl = findLabel(current
                           A  8303    .LINE 1057
                           A  8304    
0424A5 01 66 8A 04         A  8305    	LD	BC,_currentline+6
0424A9 C5                  A  8306    	PUSH	BC
0424AA CD 86 43 04         A  8307    	CALL	_findLabel
0424AE C1                  A  8308    	POP	BC
0424AF DD2FFD              A  8309    	LD	(IX+%FFFFFFFD),HL
                           A  8310    ; 1058	                if(lbl) lbl->address = 
                           A  8311    .LINE 1058
                           A  8312    
0424B2 CD CF 60 04         A  8313    	CALL	__icmpzero
0424B6 28 1B               A  8314    	JR	Z,L_537
0424B8 DDE5E1              A  8315    	LD	HL,IX
0424BB 0178FFFF            A  8316    	LD	BC,-136
0424BF 09                  A  8317    	ADD	HL,BC
0424C0 E5C1                A  8318    	LD	BC,HL
0424C2 C5                  A  8319    	PUSH	BC
0424C3 CD A6 05 04         A  8320    	CALL	_getLabelValue
0424C7 C1                  A  8321    	POP	BC
0424C8 DD31FD              A  8322    	LD	IY,(IX+%FFFFFFFD)
0424CB FD2F03              A  8323    	LD	(IY+%3),HL
0424CE FD7306              A  8324    	LD	(IY+%6),E
                           A  8325    ; 1059	                else error(message[ERRO
                           A  8326    .LINE 1059
                           A  8327    
0424D1 18 28               A  8328    	JR	L_544
0424D3                     A  8329    L_537:
0424D3 21 92 67 04         A  8330    	LD	HL,_message+81
0424D7 ED07                A  8331    	LD	BC,(HL)
0424D9 C5                  A  8332    	PUSH	BC
0424DA CD A4 4E 04         A  8333    	CALL	_error
0424DE C1                  A  8334    	POP	BC
                           A  8335    ; 1060	            }
                           A  8336    ; 1061	        }
                           A  8337    ; 1062	        else error(message[ERROR_MISSIN
                           A  8338    .LINE 1062
                           A  8339    
0424DF 18 1A               A  8340    	JR	L_544
0424E1                     A  8341    L_541:
0424E1 21 50 67 04         A  8342    	LD	HL,_message+15
0424E5 ED07                A  8343    	LD	BC,(HL)
0424E7 C5                  A  8344    	PUSH	BC
0424E8 CD A4 4E 04         A  8345    	CALL	_error
0424EC C1                  A  8346    	POP	BC
                           A  8347    ; 1063	    }
                           A  8348    ; 1064	    else error(message[ERROR_MISSINGOPE
                           A  8349    .LINE 1064
                           A  8350    
0424ED 18 0C               A  8351    	JR	L_544
0424EF                     A  8352    L_543:
0424EF 21 50 67 04         A  8353    	LD	HL,_message+15
0424F3 ED07                A  8354    	LD	BC,(HL)
0424F5 C5                  A  8355    	PUSH	BC
0424F6 CD A4 4E 04         A  8356    	CALL	_error
0424FA C1                  A  8357    	POP	BC
                           A  8358    ; 1065	}
0424FB                     A  8359    L_544:
                           A  8360    .LINE 1065
                           A  8361    
0424FB DDF9                A  8362    	LD	SP,IX
0424FD DDE1                A  8363    	POP	IX
0424FF C9                  A  8364    	RET	
                           A  8365    
                           A  8366    
                           A  8367    ;**************************** _handle_asm_equ *
                           A  8368    ;Name                         Addr/Register   S
                           A  8369    ;_findLabel                          IMPORT  --
                           A  8370    ;_pass                               IMPORT    
                           A  8371    ;_message                            IMPORT  un
                           A  8372    ;_error                              IMPORT  --
                           A  8373    ;_notEmpty                           IMPORT  --
                           A  8374    ;_getLineToken                       IMPORT  --
                           A  8375    ;_currentline                        IMPORT    
                           A  8376    ;token                               IX-136    
                           A  8377    ;lbl                                   IX-3    
                           A  8378    
                           A  8379    
                           A  8380    ; Stack Frame Size: 142 (bytes)
                           A  8381    ;       Spill Code: 0 (instruction)
                           A  8382    
                           A  8383    
                           A  8384    .ENDFUNC "handle_asm_equ",1065,"_handle_asm_equ
                           A  8385    ; 1066	
                           A  8386    ; 1067	void handle_asm_adl(void) {
042500                     A  8387    _handle_asm_adl:
                           A  8388    .DEFINE "_handle_asm_adl"
                           A  8389    
                           A  8390    .VALUE _handle_asm_adl
                           A  8391    
                           A  8392    .CLASS 2
                           A  8393    
                           A  8394    .TYPE 65
                           A  8395    
                           A  8396    .ENDEF
                           A  8397    
                           A  8398    .BEGFUNC "handle_asm_adl",1067,"_handle_asm_adl
                           A  8399    
042500 DDE5                A  8400    	PUSH	IX
042502 DD210000 00         A  8401    	LD	IX,0
042507 DD39                A  8402    	ADD	IX,SP
                           A  8403    ; 1068	    parse_asm_keyval_pair();
                           A  8404    .LINE 1068
                           A  8405    
042509 CD C5 20 04         A  8406    	CALL	_parse_asm_keyval_pair
                           A  8407    ; 1069	    if(strcasecmp(currentline.operand1,
                           A  8408    .LINE 1069
                           A  8409    
04250D 01 B3 82 04         A  8410    	LD	BC,L__240
042511 C5                  A  8411    	PUSH	BC
042512 01 A6 8A 04         A  8412    	LD	BC,_currentline+70
042516 C5                  A  8413    	PUSH	BC
042517 CD 4B 59 04         A  8414    	CALL	_strcasecmp
04251B C1                  A  8415    	POP	BC
04251C C1                  A  8416    	POP	BC
04251D CD CF 60 04         A  8417    	CALL	__icmpzero
042521 20 3B               A  8418    	JR	NZ,L_549
                           A  8419    ; 1070	        if((operand2.immediate == 0) ||
                           A  8420    .LINE 1070
                           A  8421    
042523 2A 83 8B 04         A  8422    	LD	HL,(_operand2+11)
042527 3A 86 8B 04         A  8423    	LD	A,(_operand2+14)
04252B 5F                  A  8424    	LD	E,A
04252C CD 2D 5D 04         A  8425    	CALL	__lcmpzero
042530 28 14               A  8426    	JR	Z,L_546
042532 2A 83 8B 04         A  8427    	LD	HL,(_operand2+11)
042536 3A 86 8B 04         A  8428    	LD	A,(_operand2+14)
04253A 5F                  A  8429    	LD	E,A
04253B 01010000            A  8430    	LD	BC,1
04253F AF                  A  8431    	XOR	A,A
042540 CD 9C 63 04         A  8432    	CALL	__lcmps
042544 20 0A               A  8433    	JR	NZ,L_547
042546                     A  8434    L_546:
                           A  8435    ; 1071	            adlmode = operand2.immediat
                           A  8436    .LINE 1071
                           A  8437    
042546 3A 83 8B 04         A  8438    	LD	A,(_operand2+11)
04254A 32 5F 8A 04         A  8439    	LD	(_adlmode),A
                           A  8440    ; 1072	        }
                           A  8441    ; 1073	        else error(message[ERROR_INVALI
                           A  8442    .LINE 1073
                           A  8443    
04254E 18 1A               A  8444    	JR	L_550
042550                     A  8445    L_547:
042550 21 74 67 04         A  8446    	LD	HL,_message+51
042554 ED07                A  8447    	LD	BC,(HL)
042556 C5                  A  8448    	PUSH	BC
042557 CD A4 4E 04         A  8449    	CALL	_error
04255B C1                  A  8450    	POP	BC
                           A  8451    ; 1074	    }
                           A  8452    ; 1075	    else error(message[ERROR_INVALIDOPE
                           A  8453    .LINE 1075
                           A  8454    
04255C 18 0C               A  8455    	JR	L_550
04255E                     A  8456    L_549:
04255E 21 56 67 04         A  8457    	LD	HL,_message+21
042562 ED07                A  8458    	LD	BC,(HL)
042564 C5                  A  8459    	PUSH	BC
042565 CD A4 4E 04         A  8460    	CALL	_error
042569 C1                  A  8461    	POP	BC
                           A  8462    ; 1076	}
04256A                     A  8463    L_550:
                           A  8464    .LINE 1076
                           A  8465    
04256A DDF9                A  8466    	LD	SP,IX
04256C DDE1                A  8467    	POP	IX
04256E C9                  A  8468    	RET	
                           A  8469    
                           A  8470    
                           A  8471    ;**************************** _handle_asm_adl *
                           A  8472    ;Name                         Addr/Register   S
                           A  8473    ;_message                            IMPORT  un
                           A  8474    ;_error                              IMPORT  --
                           A  8475    ;_adlmode                            IMPORT    
                           A  8476    ;_operand2                           IMPORT    
                           A  8477    ;_currentline                        IMPORT    
                           A  8478    ;_strcasecmp                         IMPORT  --
                           A  8479    
                           A  8480    
                           A  8481    ; Stack Frame Size: 6 (bytes)
                           A  8482    ;       Spill Code: 0 (instruction)
                           A  8483    
                           A  8484    
                           A  8485    .ENDFUNC "handle_asm_adl",1076,"_handle_asm_adl
                           A  8486    	SEGMENT STRSECT
0482B3                     A  8487    L__240:
0482B3 61646C              A  8488    	DB	"adl"
0482B6 00                  A  8489    	DB	0
                           A  8490    	SEGMENT CODE
                           A  8491    ; 1077	
                           A  8492    ; 1078	void handle_asm_org(void) {
04256F                     A  8493    _handle_asm_org:
                           A  8494    .DEFINE "_handle_asm_org"
                           A  8495    
                           A  8496    .VALUE _handle_asm_org
                           A  8497    
                           A  8498    .CLASS 2
                           A  8499    
                           A  8500    .TYPE 65
                           A  8501    
                           A  8502    .ENDEF
                           A  8503    
                           A  8504    .BEGFUNC "handle_asm_org",1078,"_handle_asm_org
                           A  8505    
                           A  8506    .LINE 1078
                           A  8507    
                           A  8508    .DEFINE "newaddress"
                           A  8509    
                           A  8510    .CLASS 65
                           A  8511    
                           A  8512    .VALUE -4
                           A  8513    
                           A  8514    .TYPE 15
                           A  8515    
                           A  8516    .ENDEF
                           A  8517    
04256F DDE5                A  8518    	PUSH	IX
042571 DD210000 00         A  8519    	LD	IX,0
042576 DD39                A  8520    	ADD	IX,SP
042578 C5                  A  8521    	PUSH	BC
042579 3B                  A  8522    	DEC	SP
                           A  8523    ; 1079	    uint32_t newaddress;
                           A  8524    ; 1080	    
                           A  8525    ; 1081	    parse_asm_single_immediate(); // ge
                           A  8526    .LINE 1081
                           A  8527    
04257A CD 24 20 04         A  8528    	CALL	_parse_asm_single_immediate
                           A  8529    ; 1082	    newaddress = operand1.immediate;
                           A  8530    .LINE 1082
                           A  8531    
04257E ED4B 73 8B 04       A  8532    	LD	BC,(_operand1+11)
042583 3A 76 8B 04         A  8533    	LD	A,(_operand1+14)
042587 DD0FFC              A  8534    	LD	(IX+%FFFFFFFC),BC
04258A DD77FF              A  8535    	LD	(IX+%FFFFFFFF),A
                           A  8536    ; 1083	    if((adlmode == 0) && (newaddress > 
                           A  8537    .LINE 1083
                           A  8538    
04258D 3A 5F 8A 04         A  8539    	LD	A,(_adlmode)
042591 B7                  A  8540    	OR	A,A
042592 20 1E               A  8541    	JR	NZ,L_557
042594 21FFFF00            A  8542    	LD	HL,65535
042598 1E00                A  8543    	LD	E,%0
04259A DD07FC              A  8544    	LD	BC,(IX+%FFFFFFFC)
04259D DD7EFF              A  8545    	LD	A,(IX+%FFFFFFFF)
0425A0 CD 9C 63 04         A  8546    	CALL	__lcmpu
0425A4 30 0C               A  8547    	JR	NC,L_557
0425A6 21 7D 67 04         A  8548    	LD	HL,_message+60
0425AA ED07                A  8549    	LD	BC,(HL)
0425AC C5                  A  8550    	PUSH	BC
0425AD CD A4 4E 04         A  8551    	CALL	_error
0425B1 C1                  A  8552    	POP	BC
0425B2                     A  8553    L_557:
                           A  8554    ; 1084	    if(newaddress >= address) {
                           A  8555    .LINE 1084
                           A  8556    
0425B2 DD27FC              A  8557    	LD	HL,(IX+%FFFFFFFC)
0425B5 DD5EFF              A  8558    	LD	E,(IX+%FFFFFFFF)
0425B8 ED4B 55 8A 04       A  8559    	LD	BC,(_address)
0425BD 3A 58 8A 04         A  8560    	LD	A,(_address+3)
0425C1 CD 9C 63 04         A  8561    	CALL	__lcmpu
0425C5 38 32               A  8562    	JR	C,L_556
                           A  8563    ; 1085	        if(pass == 1) {
                           A  8564    .LINE 1085
                           A  8565    
0425C7 01010000            A  8566    	LD	BC,1
0425CB 2A 52 8A 04         A  8567    	LD	HL,(_pass)
0425CF B7                  A  8568    	OR	A,A
0425D0 ED42                A  8569    	SBC	HL,BC
0425D2 20 14               A  8570    	JR	NZ,L_554
                           A  8571    ; 1086	            // Output label at this add
                           A  8572    ; 1087	            definelabel(address); // se
                           A  8573    .LINE 1087
                           A  8574    
0425D4 3A 58 8A 04         A  8575    	LD	A,(_address+3)
0425D8 4F                  A  8576    	LD	C,A
0425D9 0600                A  8577    	LD	B,%0
0425DB C5                  A  8578    	PUSH	BC
0425DC ED4B 55 8A 04       A  8579    	LD	BC,(_address)
0425E1 C5                  A  8580    	PUSH	BC
0425E2 CD 5F 12 04         A  8581    	CALL	_definelabel
0425E6 C1                  A  8582    	POP	BC
0425E7 C1                  A  8583    	POP	BC
                           A  8584    ; 1088	        }
0425E8                     A  8585    L_554:
                           A  8586    .LINE 1088
                           A  8587    
                           A  8588    ; 1089	        address = newaddress;
                           A  8589    .LINE 1089
                           A  8590    
0425E8 DD07FC              A  8591    	LD	BC,(IX+%FFFFFFFC)
0425EB ED43 55 8A 04       A  8592    	LD	(_address),BC
0425F0 DD7EFF              A  8593    	LD	A,(IX+%FFFFFFFF)
0425F3 32 58 8A 04         A  8594    	LD	(_address+3),A
                           A  8595    ; 1090	    }
                           A  8596    ; 1091	    else error(message[ERROR_ADDRESSLOW
                           A  8597    .LINE 1091
                           A  8598    
0425F7 18 0C               A  8599    	JR	L_558
0425F9                     A  8600    L_556:
0425F9 21 7A 67 04         A  8601    	LD	HL,_message+57
0425FD ED07                A  8602    	LD	BC,(HL)
0425FF C5                  A  8603    	PUSH	BC
042600 CD A4 4E 04         A  8604    	CALL	_error
042604 C1                  A  8605    	POP	BC
                           A  8606    ; 1092	}
042605                     A  8607    L_558:
                           A  8608    .LINE 1092
                           A  8609    
042605 DDF9                A  8610    	LD	SP,IX
042607 DDE1                A  8611    	POP	IX
042609 C9                  A  8612    	RET	
                           A  8613    
                           A  8614    
                           A  8615    ;**************************** _handle_asm_org *
                           A  8616    ;Name                         Addr/Register   S
                           A  8617    ;_pass                               IMPORT    
                           A  8618    ;_address                            IMPORT    
                           A  8619    ;_message                            IMPORT  un
                           A  8620    ;_error                              IMPORT  --
                           A  8621    ;_adlmode                            IMPORT    
                           A  8622    ;_operand1                           IMPORT    
                           A  8623    ;newaddress                            IX-4    
                           A  8624    
                           A  8625    
                           A  8626    ; Stack Frame Size: 10 (bytes)
                           A  8627    ;       Spill Code: 0 (instruction)
                           A  8628    
                           A  8629    
                           A  8630    .ENDFUNC "handle_asm_org",1092,"_handle_asm_org
                           A  8631    ; 1093	
                           A  8632    ; 1094	void handle_asm_include(void) {
04260A                     A  8633    _handle_asm_include:
                           A  8634    .DEFINE "_handle_asm_include"
                           A  8635    
                           A  8636    .VALUE _handle_asm_include
                           A  8637    
                           A  8638    .CLASS 2
                           A  8639    
                           A  8640    .TYPE 65
                           A  8641    
                           A  8642    .ENDEF
                           A  8643    
                           A  8644    .BEGFUNC "handle_asm_include",1094,"_handle_asm
                           A  8645    
                           A  8646    .LINE 1094
                           A  8647    
                           A  8648    .DEFINE "fsi"
                           A  8649    
                           A  8650    .CLASS 65
                           A  8651    
                           A  8652    .VALUE -70
                           A  8653    
                           A  8654    .TAG "NONAME12"
                           A  8655    
                           A  8656    .TYPE 8
                           A  8657    
                           A  8658    .ENDEF
                           A  8659    
                           A  8660    .DEFINE "token"
                           A  8661    
                           A  8662    .CLASS 65
                           A  8663    
                           A  8664    .VALUE -203
                           A  8665    
                           A  8666    .TAG "NONAME11"
                           A  8667    
                           A  8668    .TYPE 8
                           A  8669    
                           A  8670    .ENDEF
                           A  8671    
04260A DDE5                A  8672    	PUSH	IX
04260C DD210000 00         A  8673    	LD	IX,0
042611 DD39                A  8674    	ADD	IX,SP
042613 2132FFFF            A  8675    	LD	HL,-206
042617 39                  A  8676    	ADD	HL,SP
042618 F9                  A  8677    	LD	SP,HL
                           A  8678    ; 1095	    tokentype token;
                           A  8679    ; 1096	    filestackitem fsi;
                           A  8680    ; 1097	    if(currentline.next) {
                           A  8681    .LINE 1097
                           A  8682    
042619 2A 63 8A 04         A  8683    	LD	HL,(_currentline+3)
04261D CD CF 60 04         A  8684    	CALL	__icmpzero
042621 CA 07 27 04         A  8685    	JR	Z,L_566
                           A  8686    ; 1098	        getLineToken(&token, currentlin
                           A  8687    .LINE 1098
                           A  8688    
042625 01000000            A  8689    	LD	BC,0
042629 C5                  A  8690    	PUSH	BC
04262A ED4B 63 8A 04       A  8691    	LD	BC,(_currentline+3)
04262F C5                  A  8692    	PUSH	BC
042630 DDE5E1              A  8693    	LD	HL,IX
042633 0135FFFF            A  8694    	LD	BC,-203
042637 09                  A  8695    	ADD	HL,BC
042638 E5C1                A  8696    	LD	BC,HL
04263A C5                  A  8697    	PUSH	BC
04263B CD D3 4F 04         A  8698    	CALL	_getLineToken
04263F C1                  A  8699    	POP	BC
042640 C1                  A  8700    	POP	BC
042641 C1                  A  8701    	POP	BC
                           A  8702    ; 1099	        if(token.start[0] == '\"') {
                           A  8703    .LINE 1099
                           A  8704    
042642 DDE5E1              A  8705    	LD	HL,IX
042645 0135FFFF            A  8706    	LD	BC,-203
042649 09                  A  8707    	ADD	HL,BC
04264A DD2FFD              A  8708    	LD	(IX+%FFFFFFFD),HL
04264D 7E                  A  8709    	LD	A,(HL)
04264E 47                  A  8710    	LD	B,A
04264F 17ED62              A  8711    	SEXT	HL
042652 68                  A  8712    	LD	L,B
042653 01220000            A  8713    	LD	BC,34
042657 B7                  A  8714    	OR	A,A
042658 ED42                A  8715    	SBC	HL,BC
04265A C2 E7 26 04         A  8716    	JR	NZ,L_562
                           A  8717    ; 1100	            token.start[strlen(token.st
                           A  8718    .LINE 1100
                           A  8719    
04265E DD07FD              A  8720    	LD	BC,(IX+%FFFFFFFD)
042661 C5                  A  8721    	PUSH	BC
042662 CD F9 5C 04         A  8722    	CALL	_strlen
042666 C1                  A  8723    	POP	BC
042667 DD07FD              A  8724    	LD	BC,(IX+%FFFFFFFD)
04266A 09                  A  8725    	ADD	HL,BC
04266B 2B                  A  8726    	DEC	HL
04266C 3600                A  8727    	LD	(HL),%0
                           A  8728    ; 1101	            fsi.linenumber = linenumber
                           A  8729    .LINE 1101
                           A  8730    
04266E 2A 4F 8A 04         A  8731    	LD	HL,(_linenumber)
042672 DD75BA              A  8732    	LD	(IX+%FFFFFFBA),L
042675 DD74BB              A  8733    	LD	(IX+%FFFFFFBB),H
                           A  8734    ; 1102	            fsi.fp = filehandle[FILE_CU
                           A  8735    .LINE 1102
                           A  8736    
042678 3A 46 8A 04         A  8737    	LD	A,(_filehandle)
04267C DD77BC              A  8738    	LD	(IX+%FFFFFFBC),A
                           A  8739    ; 1103	            strcpy(fsi.filename, filena
                           A  8740    .LINE 1103
                           A  8741    
04267F 01 C6 88 04         A  8742    	LD	BC,_filename
042683 C5                  A  8743    	PUSH	BC
042684 ED65BD              A  8744    	PEA	IX+%FFFFFFBD
042687 CD EE 63 04         A  8745    	CALL	_strcpy
04268B C1                  A  8746    	POP	BC
04268C C1                  A  8747    	POP	BC
                           A  8748    ; 1104	            filestackPush(&fsi);
                           A  8749    .LINE 1104
                           A  8750    
04268D ED65BA              A  8751    	PEA	IX+%FFFFFFBA
042690 CD 30 2F 04         A  8752    	CALL	_filestackPush
042694 C1                  A  8753    	POP	BC
                           A  8754    ; 1105	            filehandle[FILE_CURRENT] = 
                           A  8755    .LINE 1105
                           A  8756    
042695 DD07FD              A  8757    	LD	BC,(IX+%FFFFFFFD)
042698 03                  A  8758    	INC	BC
042699 ED5580              A  8759    	LEA	IY,IX+%FFFFFF80
04269C FD0FB2              A  8760    	LD	(IY+%FFFFFFB2),BC
04269F 01010000            A  8761    	LD	BC,1
0426A3 C5                  A  8762    	PUSH	BC
0426A4 FD07B2              A  8763    	LD	BC,(IY+%FFFFFFB2)
0426A7 C5                  A  8764    	PUSH	BC
0426A8 CD A4 03 04         A  8765    	CALL	_mos_fopen
0426AC C1                  A  8766    	POP	BC
0426AD C1                  A  8767    	POP	BC
0426AE 32 46 8A 04         A  8768    	LD	(_filehandle),A
                           A  8769    ; 1106	            strcpy(filename[FILE_CURREN
                           A  8770    .LINE 1106
                           A  8771    
0426B2 ED5580              A  8772    	LEA	IY,IX+%FFFFFF80
0426B5 FD07B2              A  8773    	LD	BC,(IY+%FFFFFFB2)
0426B8 C5                  A  8774    	PUSH	BC
0426B9 01 C6 88 04         A  8775    	LD	BC,_filename
0426BD C5                  A  8776    	PUSH	BC
0426BE CD EE 63 04         A  8777    	CALL	_strcpy
0426C2 C1                  A  8778    	POP	BC
0426C3 C1                  A  8779    	POP	BC
                           A  8780    ; 1107	            if(filehandle[FILE_CURRENT]
                           A  8781    .LINE 1107
                           A  8782    
0426C4 3A 46 8A 04         A  8783    	LD	A,(_filehandle)
0426C8 B7                  A  8784    	OR	A,A
0426C9 20 14               A  8785    	JR	NZ,L_560
                           A  8786    ; 1108	                filestackPop(&fsi);
                           A  8787    .LINE 1108
                           A  8788    
0426CB ED65BA              A  8789    	PEA	IX+%FFFFFFBA
0426CE CD B7 2F 04         A  8790    	CALL	_filestackPop
0426D2 C1                  A  8791    	POP	BC
                           A  8792    ; 1109	                error(message[ERROR_INC
                           A  8793    .LINE 1109
                           A  8794    
0426D3 21 A7 67 04         A  8795    	LD	HL,_message+102
0426D7 ED07                A  8796    	LD	BC,(HL)
0426D9 C5                  A  8797    	PUSH	BC
0426DA CD A4 4E 04         A  8798    	CALL	_error
0426DE C1                  A  8799    	POP	BC
                           A  8800    ; 1110	            }
0426DF                     A  8801    L_560:
                           A  8802    .LINE 1110
                           A  8803    
                           A  8804    ; 1111	            lineNumberNeedsReset = true
                           A  8805    .LINE 1111
                           A  8806    
0426DF 3E01                A  8807    	LD	A,%1
0426E1 32 4E 8A 04         A  8808    	LD	(_lineNumberNeedsReset),A
                           A  8809    ; 1112	        }
                           A  8810    ; 1113	        else error(message[ERROR_STRING
                           A  8811    .LINE 1113
                           A  8812    
0426E5 18 0C               A  8813    	JR	L_564
0426E7                     A  8814    L_562:
0426E7 21 80 67 04         A  8815    	LD	HL,_message+63
0426EB ED07                A  8816    	LD	BC,(HL)
0426ED C5                  A  8817    	PUSH	BC
0426EE CD A4 4E 04         A  8818    	CALL	_error
0426F2 C1                  A  8819    	POP	BC
0426F3                     A  8820    L_564:
                           A  8821    ; 1114	        if(token.terminator != 0) error
                           A  8822    .LINE 1114
                           A  8823    
0426F3 DD7EB9              A  8824    	LD	A,(IX+%FFFFFFB9)
0426F6 B7                  A  8825    	OR	A,A
0426F7 28 1A               A  8826    	JR	Z,L_567
0426F9 21 98 67 04         A  8827    	LD	HL,_message+87
0426FD ED07                A  8828    	LD	BC,(HL)
0426FF C5                  A  8829    	PUSH	BC
042700 CD A4 4E 04         A  8830    	CALL	_error
042704 C1                  A  8831    	POP	BC
                           A  8832    ; 1115	    }
                           A  8833    ; 1116	    else error(message[ERROR_MISSINGOPE
                           A  8834    .LINE 1116
                           A  8835    
042705 18 0C               A  8836    	JR	L_567
042707                     A  8837    L_566:
042707 21 50 67 04         A  8838    	LD	HL,_message+15
04270B ED07                A  8839    	LD	BC,(HL)
04270D C5                  A  8840    	PUSH	BC
04270E CD A4 4E 04         A  8841    	CALL	_error
042712 C1                  A  8842    	POP	BC
                           A  8843    ; 1117	}
042713                     A  8844    L_567:
                           A  8845    .LINE 1117
                           A  8846    
042713 DDF9                A  8847    	LD	SP,IX
042715 DDE1                A  8848    	POP	IX
042717 C9                  A  8849    	RET	
                           A  8850    
                           A  8851    
                           A  8852    ;**************************** _handle_asm_inclu
                           A  8853    ;Name                         Addr/Register   S
                           A  8854    ;_lineNumberNeedsReset               IMPORT    
                           A  8855    ;_message                            IMPORT  un
                           A  8856    ;_error                              IMPORT  --
                           A  8857    ;_filestackPop                       IMPORT  --
                           A  8858    ;_mos_fopen                          IMPORT  --
                           A  8859    ;_filestackPush                      IMPORT  --
                           A  8860    ;_filename                           IMPORT    
                           A  8861    ;_strcpy                             IMPORT  --
                           A  8862    ;_filehandle                         IMPORT    
                           A  8863    ;_linenumber                         IMPORT    
                           A  8864    ;_strlen                             IMPORT  --
                           A  8865    ;_getLineToken                       IMPORT  --
                           A  8866    ;_currentline                        IMPORT    
                           A  8867    ;token                               IX-203    
                           A  8868    ;fsi                                  IX-70    
                           A  8869    ;G_25                                  IX-3    
                           A  8870    
                           A  8871    
                           A  8872    ; Stack Frame Size: 212 (bytes)
                           A  8873    ;       Spill Code: 0 (instruction)
                           A  8874    
                           A  8875    
                           A  8876    .ENDFUNC "handle_asm_include",1117,"_handle_asm
                           A  8877    ; 1118	
                           A  8878    ; 1119	
                           A  8879    ; 1120	
                           A  8880    ; 1121	void handle_asm_blk(uint8_t width) {
042718                     A  8881    _handle_asm_blk:
                           A  8882    .DEFINE "_handle_asm_blk"
                           A  8883    
                           A  8884    .VALUE _handle_asm_blk
                           A  8885    
                           A  8886    .CLASS 2
                           A  8887    
                           A  8888    .TYPE 65
                           A  8889    
                           A  8890    .ENDEF
                           A  8891    
                           A  8892    .BEGFUNC "handle_asm_blk",1121,"_handle_asm_blk
                           A  8893    
                           A  8894    .LINE 1121
                           A  8895    
                           A  8896    .DEFINE "width"
                           A  8897    
                           A  8898    .CLASS 65
                           A  8899    
                           A  8900    .VALUE 6
                           A  8901    
                           A  8902    .TYPE 12
                           A  8903    
                           A  8904    .ENDEF
                           A  8905    
                           A  8906    .DEFINE "val"
                           A  8907    
                           A  8908    .CLASS 65
                           A  8909    
                           A  8910    .VALUE -4
                           A  8911    
                           A  8912    .TYPE 5
                           A  8913    
                           A  8914    .ENDEF
                           A  8915    
                           A  8916    .DEFINE "num"
                           A  8917    
                           A  8918    .CLASS 65
                           A  8919    
                           A  8920    .VALUE -6
                           A  8921    
                           A  8922    .TYPE 13
                           A  8923    
                           A  8924    .ENDEF
                           A  8925    
                           A  8926    .DEFINE "token"
                           A  8927    
                           A  8928    .CLASS 65
                           A  8929    
                           A  8930    .VALUE -142
                           A  8931    
                           A  8932    .TAG "NONAME11"
                           A  8933    
                           A  8934    .TYPE 8
                           A  8935    
                           A  8936    .ENDEF
                           A  8937    
042718 DDE5                A  8938    	PUSH	IX
04271A DD210000 00         A  8939    	LD	IX,0
04271F DD39                A  8940    	ADD	IX,SP
042721 2172FFFF            A  8941    	LD	HL,-142
042725 39                  A  8942    	ADD	HL,SP
042726 F9                  A  8943    	LD	SP,HL
                           A  8944    ; 1122	    uint16_t num;
                           A  8945    ; 1123	    int32_t val = 0;
                           A  8946    .LINE 1123
                           A  8947    
042727 01000000            A  8948    	LD	BC,0
04272B AF                  A  8949    	XOR	A,A
04272C DD0FFC              A  8950    	LD	(IX+%FFFFFFFC),BC
04272F DD77FF              A  8951    	LD	(IX+%FFFFFFFF),A
                           A  8952    ; 1124	    tokentype token;
                           A  8953    ; 1125	
                           A  8954    ; 1126	    if(pass == 1) {
                           A  8955    .LINE 1126
                           A  8956    
042732 01010000            A  8957    	LD	BC,1
042736 2A 52 8A 04         A  8958    	LD	HL,(_pass)
04273A B7                  A  8959    	OR	A,A
04273B ED42                A  8960    	SBC	HL,BC
04273D 20 14               A  8961    	JR	NZ,L_589
                           A  8962    ; 1127	        // Output label at this address
                           A  8963    ; 1128	        definelabel(address);
                           A  8964    .LINE 1128
                           A  8965    
04273F 3A 58 8A 04         A  8966    	LD	A,(_address+3)
042743 4F                  A  8967    	LD	C,A
042744 0600                A  8968    	LD	B,%0
042746 C5                  A  8969    	PUSH	BC
042747 ED4B 55 8A 04       A  8970    	LD	BC,(_address)
04274C C5                  A  8971    	PUSH	BC
04274D CD 5F 12 04         A  8972    	CALL	_definelabel
042751 C1                  A  8973    	POP	BC
042752 C1                  A  8974    	POP	BC
                           A  8975    ; 1129	    }
042753                     A  8976    L_589:
                           A  8977    .LINE 1129
                           A  8978    
                           A  8979    ; 1130	
                           A  8980    ; 1131	    if(currentline.next) {
                           A  8981    .LINE 1131
                           A  8982    
042753 2A 63 8A 04         A  8983    	LD	HL,(_currentline+3)
042757 CD CF 60 04         A  8984    	CALL	__icmpzero
04275B CA D8 28 04         A  8985    	JR	Z,L_588
                           A  8986    ; 1132	        getLineToken(&token, currentlin
                           A  8987    .LINE 1132
                           A  8988    
04275F 012C0000            A  8989    	LD	BC,44
042763 C5                  A  8990    	PUSH	BC
042764 ED4B 63 8A 04       A  8991    	LD	BC,(_currentline+3)
042769 C5                  A  8992    	PUSH	BC
04276A DDE5E1              A  8993    	LD	HL,IX
04276D 0172FFFF            A  8994    	LD	BC,-142
042771 09                  A  8995    	ADD	HL,BC
042772 E5C1                A  8996    	LD	BC,HL
042774 C5                  A  8997    	PUSH	BC
042775 CD D3 4F 04         A  8998    	CALL	_getLineToken
042779 C1                  A  8999    	POP	BC
04277A C1                  A  9000    	POP	BC
04277B C1                  A  9001    	POP	BC
                           A  9002    ; 1133	        if(notEmpty(token.start)) {
                           A  9003    .LINE 1133
                           A  9004    
04277C DDE5E1              A  9005    	LD	HL,IX
04277F 0172FFFF            A  9006    	LD	BC,-142
042783 09                  A  9007    	ADD	HL,BC
042784 E5C1                A  9008    	LD	BC,HL
042786 C5                  A  9009    	PUSH	BC
042787 CD 8A 4E 04         A  9010    	CALL	_notEmpty
04278B C1                  A  9011    	POP	BC
04278C B7                  A  9012    	OR	A,A
04278D CA CA 28 04         A  9013    	JR	Z,L_586
                           A  9014    ; 1134	            num = str2num(token.start,t
                           A  9015    .LINE 1134
                           A  9016    
042791 01010000            A  9017    	LD	BC,1
042795 C5                  A  9018    	PUSH	BC
042796 DDE5E1              A  9019    	LD	HL,IX
042799 0172FFFF            A  9020    	LD	BC,-142
04279D 09                  A  9021    	ADD	HL,BC
04279E E5C1                A  9022    	LD	BC,HL
0427A0 C5                  A  9023    	PUSH	BC
0427A1 CD 41 4A 04         A  9024    	CALL	_str2num
0427A5 C1                  A  9025    	POP	BC
0427A6 C1                  A  9026    	POP	BC
0427A7 DD75FA              A  9027    	LD	(IX+%FFFFFFFA),L
0427AA DD74FB              A  9028    	LD	(IX+%FFFFFFFB),H
                           A  9029    ; 1135	
                           A  9030    ; 1136	            if(token.terminator == ',')
                           A  9031    .LINE 1136
                           A  9032    
0427AD DD7EF6              A  9033    	LD	A,(IX+%FFFFFFF6)
0427B0 FE2C                A  9034    	CP	A,%2C
0427B2 C2 3C 28 04         A  9035    	JR	NZ,L_576
                           A  9036    ; 1137	                getLineToken(&token, to
                           A  9037    .LINE 1137
                           A  9038    
0427B6 01000000            A  9039    	LD	BC,0
0427BA C5                  A  9040    	PUSH	BC
0427BB DD07F3              A  9041    	LD	BC,(IX+%FFFFFFF3)
0427BE C5                  A  9042    	PUSH	BC
0427BF DDE5E1              A  9043    	LD	HL,IX
0427C2 0172FFFF            A  9044    	LD	BC,-142
0427C6 09                  A  9045    	ADD	HL,BC
0427C7 E5C1                A  9046    	LD	BC,HL
0427C9 C5                  A  9047    	PUSH	BC
0427CA CD D3 4F 04         A  9048    	CALL	_getLineToken
0427CE C1                  A  9049    	POP	BC
0427CF C1                  A  9050    	POP	BC
0427D0 C1                  A  9051    	POP	BC
                           A  9052    ; 1138	                if(notEmpty(token.start
                           A  9053    .LINE 1138
                           A  9054    
0427D1 DDE5E1              A  9055    	LD	HL,IX
0427D4 0172FFFF            A  9056    	LD	BC,-142
0427D8 09                  A  9057    	ADD	HL,BC
0427D9 E5C1                A  9058    	LD	BC,HL
0427DB C5                  A  9059    	PUSH	BC
0427DC CD 8A 4E 04         A  9060    	CALL	_notEmpty
0427E0 C1                  A  9061    	POP	BC
0427E1 B7                  A  9062    	OR	A,A
0427E2 28 4A               A  9063    	JR	Z,L_572
                           A  9064    ; 1139	                    if(token.start[0] =
                           A  9065    .LINE 1139
                           A  9066    
0427E4 DDE5E1              A  9067    	LD	HL,IX
0427E7 0172FFFF            A  9068    	LD	BC,-142
0427EB 09                  A  9069    	ADD	HL,BC
0427EC DD2FF7              A  9070    	LD	(IX+%FFFFFFF7),HL
0427EF 7E                  A  9071    	LD	A,(HL)
0427F0 47                  A  9072    	LD	B,A
0427F1 17ED62              A  9073    	SEXT	HL
0427F4 68                  A  9074    	LD	L,B
0427F5 01270000            A  9075    	LD	BC,39
0427F9 B7                  A  9076    	OR	A,A
0427FA ED42                A  9077    	SBC	HL,BC
0427FC 20 17               A  9078    	JR	NZ,L_570
0427FE DD07F7              A  9079    	LD	BC,(IX+%FFFFFFF7)
042801 C5                  A  9080    	PUSH	BC
042802 CD BA 04 04         A  9081    	CALL	_getAsciiValue
042806 C1                  A  9082    	POP	BC
042807 B7ED62              A  9083    	UEXT	HL
04280A 6F                  A  9084    	LD	L,A
04280B DD2FFC              A  9085    	LD	(IX+%FFFFFFFC),HL
04280E DD74FF              A  9086    	LD	(IX+%FFFFFFFF),H
                           A  9087    ; 1140	                    else val = str2num(
                           A  9088    .LINE 1140
                           A  9089    
042811 C3 B1 28 04         A  9090    	JR	L_582
042815                     A  9091    L_570:
042815 01010000            A  9092    	LD	BC,1
042819 C5                  A  9093    	PUSH	BC
04281A DD07F7              A  9094    	LD	BC,(IX+%FFFFFFF7)
04281D C5                  A  9095    	PUSH	BC
04281E CD 41 4A 04         A  9096    	CALL	_str2num
042822 C1                  A  9097    	POP	BC
042823 C1                  A  9098    	POP	BC
042824 DD2FFC              A  9099    	LD	(IX+%FFFFFFFC),HL
042827 DD73FF              A  9100    	LD	(IX+%FFFFFFFF),E
                           A  9101    ; 1141	                }
                           A  9102    ; 1142	                else error(message[ERRO
                           A  9103    .LINE 1142
                           A  9104    
04282A C3 B1 28 04         A  9105    	JR	L_582
04282E                     A  9106    L_572:
04282E 21 50 67 04         A  9107    	LD	HL,_message+15
042832 ED07                A  9108    	LD	BC,(HL)
042834 C5                  A  9109    	PUSH	BC
042835 CD A4 4E 04         A  9110    	CALL	_error
042839 C1                  A  9111    	POP	BC
                           A  9112    ; 1143	            }
                           A  9113    ; 1144	            else if((token.terminator !
                           A  9114    .LINE 1144
                           A  9115    
04283A 18 75               A  9116    	JR	L_582
04283C                     A  9117    L_576:
04283C DD7EF6              A  9118    	LD	A,(IX+%FFFFFFF6)
04283F B7                  A  9119    	OR	A,A
042840 28 6F               A  9120    	JR	Z,L_582
042842 DD7EF6              A  9121    	LD	A,(IX+%FFFFFFF6)
042845 FE3B                A  9122    	CP	A,%3B
042847 28 68               A  9123    	JR	Z,L_582
042849 21 9B 67 04         A  9124    	LD	HL,_message+90
04284D ED07                A  9125    	LD	BC,(HL)
04284F C5                  A  9126    	PUSH	BC
042850 CD A4 4E 04         A  9127    	CALL	_error
042854 C1                  A  9128    	POP	BC
                           A  9129    ; 1145	            while(num--) {
                           A  9130    .LINE 1145
                           A  9131    
042855 18 5A               A  9132    	JR	L_582
042857                     A  9133    L_583:
                           A  9134    ; 1146	                switch(width) {
                           A  9135    .LINE 1146
                           A  9136    
042857 DD7E06              A  9137    	LD	A,(IX+%6)
04285A B7ED62              A  9138    	UEXT	HL
04285D 6F                  A  9139    	LD	L,A
04285E CD 81 5A 04         A  9140    	CALL	__seqcaseD
042862 E9                  A  9141    	JP	(HL)
042863                     A  9142    L__263:
042863 0400                A  9143    	DW	4
042865 0100                A  9144    	DW	1
042867 00                  A  9145    	DB	0
042868 772804              A  9146    	DW24	L_578	
                           A  9147    
04286B 842804              A  9148    	DW24	L_579	
                           A  9149    
04286E 8F2804              A  9150    	DW24	L_580	
                           A  9151    
042871 A12804              A  9152    	DW24	L_581	
                           A  9153    
042874 B12804              A  9154    	DW24	L_582	
                           A  9155    
                           A  9156    ; 1147	                    case 1:
042877                     A  9157    L_578:
                           A  9158    .LINE 1147
                           A  9159    
                           A  9160    ; 1148	                        emit_8bit(val);
                           A  9161    .LINE 1148
                           A  9162    
042877 DD4EFC              A  9163    	LD	C,(IX+%FFFFFFFC)
04287A 0600                A  9164    	LD	B,%0
04287C C5                  A  9165    	PUSH	BC
04287D CD 84 1D 04         A  9166    	CALL	_emit_8bit
042881 C1                  A  9167    	POP	BC
                           A  9168    ; 1149	                        break;
                           A  9169    .LINE 1149
                           A  9170    
042882 18 2D               A  9171    	JR	L_582
                           A  9172    ; 1150	                    case 2:
042884                     A  9173    L_579:
                           A  9174    .LINE 1150
                           A  9175    
                           A  9176    ; 1151	                        emit_16bit(val)
                           A  9177    .LINE 1151
                           A  9178    
042884 DD07FC              A  9179    	LD	BC,(IX+%FFFFFFFC)
042887 C5                  A  9180    	PUSH	BC
042888 CD F0 1D 04         A  9181    	CALL	_emit_16bit
04288C C1                  A  9182    	POP	BC
                           A  9183    ; 1152	                        break;
                           A  9184    .LINE 1152
                           A  9185    
04288D 18 22               A  9186    	JR	L_582
                           A  9187    ; 1153	                    case 3:
04288F                     A  9188    L_580:
                           A  9189    .LINE 1153
                           A  9190    
                           A  9191    ; 1154	                        emit_24bit(val)
                           A  9192    .LINE 1154
                           A  9193    
04288F DD4EFF              A  9194    	LD	C,(IX+%FFFFFFFF)
042892 0600                A  9195    	LD	B,%0
042894 C5                  A  9196    	PUSH	BC
042895 DD07FC              A  9197    	LD	BC,(IX+%FFFFFFFC)
042898 C5                  A  9198    	PUSH	BC
042899 CD 21 1E 04         A  9199    	CALL	_emit_24bit
04289D C1                  A  9200    	POP	BC
04289E C1                  A  9201    	POP	BC
                           A  9202    ; 1155	                        break;
                           A  9203    .LINE 1155
                           A  9204    
04289F 18 10               A  9205    	JR	L_582
                           A  9206    ; 1156	                    case 4:
0428A1                     A  9207    L_581:
                           A  9208    .LINE 1156
                           A  9209    
                           A  9210    ; 1157	                        emit_32bit(val)
                           A  9211    .LINE 1157
                           A  9212    
0428A1 DD4EFF              A  9213    	LD	C,(IX+%FFFFFFFF)
0428A4 0600                A  9214    	LD	B,%0
0428A6 C5                  A  9215    	PUSH	BC
0428A7 DD07FC              A  9216    	LD	BC,(IX+%FFFFFFFC)
0428AA C5                  A  9217    	PUSH	BC
0428AB CD 63 1E 04         A  9218    	CALL	_emit_32bit
0428AF C1                  A  9219    	POP	BC
0428B0 C1                  A  9220    	POP	BC
                           A  9221    ; 1158	                        break;
                           A  9222    ; 1159	                }
                           A  9223    ; 1160	            }
0428B1                     A  9224    L_582:
                           A  9225    .LINE 1160
                           A  9226    
0428B1 DD07FA              A  9227    	LD	BC,(IX+%FFFFFFFA)
0428B4 DD31FA              A  9228    	LD	IY,(IX+%FFFFFFFA)
0428B7 ED23FF              A  9229    	LEA	HL,IY+%FFFFFFFF
0428BA DD75FA              A  9230    	LD	(IX+%FFFFFFFA),L
0428BD DD74FB              A  9231    	LD	(IX+%FFFFFFFB),H
0428C0 C5E1                A  9232    	LD	HL,BC
0428C2 CD 08 64 04         A  9233    	CALL	__scmpzero
0428C6 20 8F               A  9234    	JR	NZ,L_583
0428C8 18 1A               A  9235    	JR	L_590
                           A  9236    ; 1161	        }
                           A  9237    ; 1162	        else error(message[ERROR_MISSIN
0428CA                     A  9238    L_586:
                           A  9239    .LINE 1162
                           A  9240    
0428CA 21 50 67 04         A  9241    	LD	HL,_message+15
0428CE ED07                A  9242    	LD	BC,(HL)
0428D0 C5                  A  9243    	PUSH	BC
0428D1 CD A4 4E 04         A  9244    	CALL	_error
0428D5 C1                  A  9245    	POP	BC
                           A  9246    ; 1163	    }
                           A  9247    ; 1164	    else error(message[ERROR_MISSINGOPE
                           A  9248    .LINE 1164
                           A  9249    
0428D6 18 0C               A  9250    	JR	L_590
0428D8                     A  9251    L_588:
0428D8 21 50 67 04         A  9252    	LD	HL,_message+15
0428DC ED07                A  9253    	LD	BC,(HL)
0428DE C5                  A  9254    	PUSH	BC
0428DF CD A4 4E 04         A  9255    	CALL	_error
0428E3 C1                  A  9256    	POP	BC
                           A  9257    ; 1165	}
0428E4                     A  9258    L_590:
                           A  9259    .LINE 1165
                           A  9260    
0428E4 DDF9                A  9261    	LD	SP,IX
0428E6 DDE1                A  9262    	POP	IX
0428E8 C9                  A  9263    	RET	
                           A  9264    
                           A  9265    
                           A  9266    ;**************************** _handle_asm_blk *
                           A  9267    ;Name                         Addr/Register   S
                           A  9268    ;_emit_24bit                         IMPORT  --
                           A  9269    ;_emit_16bit                         IMPORT  --
                           A  9270    ;_emit_8bit                          IMPORT  --
                           A  9271    ;_message                            IMPORT  un
                           A  9272    ;_error                              IMPORT  --
                           A  9273    ;_str2num                            IMPORT  --
                           A  9274    ;_notEmpty                           IMPORT  --
                           A  9275    ;_getLineToken                       IMPORT  --
                           A  9276    ;_currentline                        IMPORT    
                           A  9277    ;_address                            IMPORT    
                           A  9278    ;_pass                               IMPORT    
                           A  9279    ;token                               IX-142    
                           A  9280    ;G_27                                  IX-9    
                           A  9281    ;num                                   IX-6    
                           A  9282    ;val                                   IX-4    
                           A  9283    ;width                                 IX+6    
                           A  9284    
                           A  9285    
                           A  9286    ; Stack Frame Size: 151 (bytes)
                           A  9287    ;       Spill Code: 0 (instruction)
                           A  9288    
                           A  9289    
                           A  9290    .ENDFUNC "handle_asm_blk",1165,"_handle_asm_blk
                           A  9291    ; 1166	
                           A  9292    ; 1167	void handle_asm_align(void) {
0428E9                     A  9293    _handle_asm_align:
                           A  9294    .DEFINE "_handle_asm_align"
                           A  9295    
                           A  9296    .VALUE _handle_asm_align
                           A  9297    
                           A  9298    .CLASS 2
                           A  9299    
                           A  9300    .TYPE 65
                           A  9301    
                           A  9302    .ENDEF
                           A  9303    
                           A  9304    .BEGFUNC "handle_asm_align",1167,"_handle_asm_a
                           A  9305    
                           A  9306    .LINE 1167
                           A  9307    
                           A  9308    .DEFINE "base"
                           A  9309    
                           A  9310    .CLASS 65
                           A  9311    
                           A  9312    .VALUE -4
                           A  9313    
                           A  9314    .TYPE 15
                           A  9315    
                           A  9316    .ENDEF
                           A  9317    
                           A  9318    .DEFINE "delta"
                           A  9319    
                           A  9320    .CLASS 65
                           A  9321    
                           A  9322    .VALUE -8
                           A  9323    
                           A  9324    .TYPE 15
                           A  9325    
                           A  9326    .ENDEF
                           A  9327    
                           A  9328    .DEFINE "alignment"
                           A  9329    
                           A  9330    .CLASS 65
                           A  9331    
                           A  9332    .VALUE -12
                           A  9333    
                           A  9334    .TYPE 15
                           A  9335    
                           A  9336    .ENDEF
                           A  9337    
0428E9 DDE5                A  9338    	PUSH	IX
0428EB DD210000 00         A  9339    	LD	IX,0
0428F0 DD39                A  9340    	ADD	IX,SP
0428F2 ED22EC              A  9341    	LEA	HL,IX+%FFFFFFEC
0428F5 F9                  A  9342    	LD	SP,HL
                           A  9343    ; 1168	uint32_t alignment;
                           A  9344    ; 1169	uint32_t base;
                           A  9345    ; 1170	uint32_t delta;
                           A  9346    ; 1171	
                           A  9347    ; 1172	    if(pass == 1) {
                           A  9348    .LINE 1172
                           A  9349    
0428F6 01010000            A  9350    	LD	BC,1
0428FA 2A 52 8A 04         A  9351    	LD	HL,(_pass)
0428FE B7                  A  9352    	OR	A,A
0428FF ED42                A  9353    	SBC	HL,BC
042901 20 14               A  9354    	JR	NZ,L_592
                           A  9355    ; 1173	        // Output label at this address
                           A  9356    ; 1174	        definelabel(address);
                           A  9357    .LINE 1174
                           A  9358    
042903 3A 58 8A 04         A  9359    	LD	A,(_address+3)
042907 4F                  A  9360    	LD	C,A
042908 0600                A  9361    	LD	B,%0
04290A C5                  A  9362    	PUSH	BC
04290B ED4B 55 8A 04       A  9363    	LD	BC,(_address)
042910 C5                  A  9364    	PUSH	BC
042911 CD 5F 12 04         A  9365    	CALL	_definelabel
042915 C1                  A  9366    	POP	BC
042916 C1                  A  9367    	POP	BC
                           A  9368    ; 1175	    }
042917                     A  9369    L_592:
                           A  9370    .LINE 1175
                           A  9371    
                           A  9372    ; 1176	
                           A  9373    ; 1177	    parse_asm_single_immediate();
                           A  9374    .LINE 1177
                           A  9375    
042917 CD 24 20 04         A  9376    	CALL	_parse_asm_single_immediate
                           A  9377    ; 1178	    if(operand1.immediate > 0) {
                           A  9378    .LINE 1178
                           A  9379    
04291B B7                  A  9380    	OR	A,A
04291C ED62                A  9381    	SBC	HL,HL
04291E 1E00                A  9382    	LD	E,%0
042920 ED4B 73 8B 04       A  9383    	LD	BC,(_operand1+11)
042925 3A 76 8B 04         A  9384    	LD	A,(_operand1+14)
042929 CD 9C 63 04         A  9385    	CALL	__lcmps
04292D F2 61 2A 04         A  9386    	JP	P,L_603
                           A  9387    ; 1179	        if((operand1.immediate & (opera
                           A  9388    .LINE 1179
                           A  9389    
042931 2A 73 8B 04         A  9390    	LD	HL,(_operand1+11)
042935 3A 76 8B 04         A  9391    	LD	A,(_operand1+14)
042939 5F                  A  9392    	LD	E,A
04293A 01FFFFFF            A  9393    	LD	BC,16777215
04293E 3EFF                A  9394    	LD	A,%FF
042940 CD 06 5A 04         A  9395    	CALL	__ladd
042944 ED4B 73 8B 04       A  9396    	LD	BC,(_operand1+11)
042949 3A 76 8B 04         A  9397    	LD	A,(_operand1+14)
04294D CD E2 66 04         A  9398    	CALL	__land
042951 CD 2D 5D 04         A  9399    	CALL	__lcmpzero
042955 C2 53 2A 04         A  9400    	JR	NZ,L_601
                           A  9401    ; 1180	            alignment = operand1.immedi
                           A  9402    .LINE 1180
                           A  9403    
042959 ED4B 73 8B 04       A  9404    	LD	BC,(_operand1+11)
04295E 3A 76 8B 04         A  9405    	LD	A,(_operand1+14)
042962 DD0FF4              A  9406    	LD	(IX+%FFFFFFF4),BC
042965 DD77F7              A  9407    	LD	(IX+%FFFFFFF7),A
                           A  9408    ; 1181	            base = (~(operand1.immediat
                           A  9409    .LINE 1181
                           A  9410    
042968 2A 73 8B 04         A  9411    	LD	HL,(_operand1+11)
04296C 3A 76 8B 04         A  9412    	LD	A,(_operand1+14)
042970 5F                  A  9413    	LD	E,A
042971 01FFFFFF            A  9414    	LD	BC,16777215
042975 3EFF                A  9415    	LD	A,%FF
042977 CD 06 5A 04         A  9416    	CALL	__ladd
04297B CD C8 64 04         A  9417    	CALL	__lnot
04297F ED4B 55 8A 04       A  9418    	LD	BC,(_address)
042984 3A 58 8A 04         A  9419    	LD	A,(_address+3)
042988 CD E2 66 04         A  9420    	CALL	__land
04298C DD2FFC              A  9421    	LD	(IX+%FFFFFFFC),HL
04298F DD73FF              A  9422    	LD	(IX+%FFFFFFFF),E
                           A  9423    ; 1182	
                           A  9424    ; 1183	            if(address & (operand1.imme
                           A  9425    .LINE 1183
                           A  9426    
042992 2A 73 8B 04         A  9427    	LD	HL,(_operand1+11)
042996 3A 76 8B 04         A  9428    	LD	A,(_operand1+14)
04299A 5F                  A  9429    	LD	E,A
04299B 01FFFFFF            A  9430    	LD	BC,16777215
04299F 3EFF                A  9431    	LD	A,%FF
0429A1 CD 06 5A 04         A  9432    	CALL	__ladd
0429A5 ED4B 55 8A 04       A  9433    	LD	BC,(_address)
0429AA 3A 58 8A 04         A  9434    	LD	A,(_address+3)
0429AE CD E2 66 04         A  9435    	CALL	__land
0429B2 CD 2D 5D 04         A  9436    	CALL	__lcmpzero
0429B6 28 16               A  9437    	JR	Z,L_594
0429B8 DD27F4              A  9438    	LD	HL,(IX+%FFFFFFF4)
0429BB DD5EF7              A  9439    	LD	E,(IX+%FFFFFFF7)
0429BE DD07FC              A  9440    	LD	BC,(IX+%FFFFFFFC)
0429C1 DD7EFF              A  9441    	LD	A,(IX+%FFFFFFFF)
0429C4 CD 06 5A 04         A  9442    	CALL	__ladd
0429C8 DD2FFC              A  9443    	LD	(IX+%FFFFFFFC),HL
0429CB DD73FF              A  9444    	LD	(IX+%FFFFFFFF),E
0429CE                     A  9445    L_594:
                           A  9446    ; 1184	            delta = base - address;
                           A  9447    .LINE 1184
                           A  9448    
0429CE DD27FC              A  9449    	LD	HL,(IX+%FFFFFFFC)
0429D1 DD5EFF              A  9450    	LD	E,(IX+%FFFFFFFF)
0429D4 ED4B 55 8A 04       A  9451    	LD	BC,(_address)
0429D9 3A 58 8A 04         A  9452    	LD	A,(_address+3)
0429DD CD 9F 60 04         A  9453    	CALL	__lsub
0429E1 DD2FF8              A  9454    	LD	(IX+%FFFFFFF8),HL
0429E4 DD73FB              A  9455    	LD	(IX+%FFFFFFFB),E
                           A  9456    ; 1185	            while(delta--) emit_8bit(FI
                           A  9457    .LINE 1185
                           A  9458    
0429E7 18 0A               A  9459    	JR	L_596
0429E9                     A  9460    L_597:
0429E9 01000000            A  9461    	LD	BC,0
0429ED C5                  A  9462    	PUSH	BC
0429EE CD 84 1D 04         A  9463    	CALL	_emit_8bit
0429F2 C1                  A  9464    	POP	BC
0429F3                     A  9465    L_596:
0429F3 DD07F8              A  9466    	LD	BC,(IX+%FFFFFFF8)
0429F6 DD0FEC              A  9467    	LD	(IX+%FFFFFFEC),BC	; spill
0429F9 DD66FB              A  9468    	LD	H,(IX+%FFFFFFFB)
0429FC DD74F2              A  9469    	LD	(IX+%FFFFFFF2),H	; spill
0429FF DD27F8              A  9470    	LD	HL,(IX+%FFFFFFF8)
042A02 DD5EFB              A  9471    	LD	E,(IX+%FFFFFFFB)
042A05 01010000            A  9472    	LD	BC,1
042A09 AF                  A  9473    	XOR	A,A
042A0A CD 9F 60 04         A  9474    	CALL	__lsub
042A0E DD2FF8              A  9475    	LD	(IX+%FFFFFFF8),HL
042A11 DD73FB              A  9476    	LD	(IX+%FFFFFFFB),E
042A14 DD66F2              A  9477    	LD	H,(IX+%FFFFFFF2)	; unspill
042A17 5C                  A  9478    	LD	E,H
042A18 DD27EC              A  9479    	LD	HL,(IX+%FFFFFFEC)
042A1B CD 2D 5D 04         A  9480    	CALL	__lcmpzero
042A1F 20 C8               A  9481    	JR	NZ,L_597
                           A  9482    ; 1186	
                           A  9483    ; 1187	            address = base;
                           A  9484    .LINE 1187
                           A  9485    
042A21 DD07FC              A  9486    	LD	BC,(IX+%FFFFFFFC)
042A24 ED43 55 8A 04       A  9487    	LD	(_address),BC
042A29 DD7EFF              A  9488    	LD	A,(IX+%FFFFFFFF)
042A2C 32 58 8A 04         A  9489    	LD	(_address+3),A
                           A  9490    ; 1188	            if(pass == 1) {
                           A  9491    .LINE 1188
                           A  9492    
042A30 01010000            A  9493    	LD	BC,1
042A34 2A 52 8A 04         A  9494    	LD	HL,(_pass)
042A38 B7                  A  9495    	OR	A,A
042A39 ED42                A  9496    	SBC	HL,BC
042A3B 20 30               A  9497    	JR	NZ,L_604
                           A  9498    ; 1189	                definelabel(address); /
                           A  9499    .LINE 1189
                           A  9500    
042A3D 3A 58 8A 04         A  9501    	LD	A,(_address+3)
042A41 4F                  A  9502    	LD	C,A
042A42 0600                A  9503    	LD	B,%0
042A44 C5                  A  9504    	PUSH	BC
042A45 ED4B 55 8A 04       A  9505    	LD	BC,(_address)
042A4A C5                  A  9506    	PUSH	BC
042A4B CD 5F 12 04         A  9507    	CALL	_definelabel
042A4F C1                  A  9508    	POP	BC
042A50 C1                  A  9509    	POP	BC
                           A  9510    ; 1190	            }
                           A  9511    ; 1191	        }
                           A  9512    ; 1192	        else error(message[ERROR_POWER2
                           A  9513    .LINE 1192
                           A  9514    
042A51 18 1A               A  9515    	JR	L_604
042A53                     A  9516    L_601:
042A53 21 B6 67 04         A  9517    	LD	HL,_message+117
042A57 ED07                A  9518    	LD	BC,(HL)
042A59 C5                  A  9519    	PUSH	BC
042A5A CD A4 4E 04         A  9520    	CALL	_error
042A5E C1                  A  9521    	POP	BC
                           A  9522    ; 1193	    }
                           A  9523    ; 1194	    else error(message[ERROR_INVALIDNUM
                           A  9524    .LINE 1194
                           A  9525    
042A5F 18 0C               A  9526    	JR	L_604
042A61                     A  9527    L_603:
042A61 21 4A 67 04         A  9528    	LD	HL,_message+9
042A65 ED07                A  9529    	LD	BC,(HL)
042A67 C5                  A  9530    	PUSH	BC
042A68 CD A4 4E 04         A  9531    	CALL	_error
042A6C C1                  A  9532    	POP	BC
                           A  9533    ; 1195	}
042A6D                     A  9534    L_604:
                           A  9535    .LINE 1195
                           A  9536    
042A6D DDF9                A  9537    	LD	SP,IX
042A6F DDE1                A  9538    	POP	IX
042A71 C9                  A  9539    	RET	
                           A  9540    
                           A  9541    
                           A  9542    ;**************************** _handle_asm_align
                           A  9543    ;Name                         Addr/Register   S
                           A  9544    ;_message                            IMPORT  un
                           A  9545    ;_error                              IMPORT  --
                           A  9546    ;_emit_8bit                          IMPORT  --
                           A  9547    ;_operand1                           IMPORT    
                           A  9548    ;_address                            IMPORT    
                           A  9549    ;_pass                               IMPORT    
                           A  9550    ;alignment                            IX-12    
                           A  9551    ;delta                                 IX-8    
                           A  9552    ;base                                  IX-4    
                           A  9553    
                           A  9554    
                           A  9555    ; Stack Frame Size: 26 (bytes)
                           A  9556    ;       Spill Code: -1 (instruction)
                           A  9557    
                           A  9558    
                           A  9559    .ENDFUNC "handle_asm_align",1195,"_handle_asm_a
                           A  9560    ; 1196	
                           A  9561    ; 1197	void handle_assembler_command(void) {
042A72                     A  9562    _handle_assembler_command:
                           A  9563    .DEFINE "_handle_assembler_command"
                           A  9564    
                           A  9565    .VALUE _handle_assembler_command
                           A  9566    
                           A  9567    .CLASS 2
                           A  9568    
                           A  9569    .TYPE 65
                           A  9570    
                           A  9571    .ENDEF
                           A  9572    
                           A  9573    .BEGFUNC "handle_assembler_command",1197,"_hand
                           A  9574    
042A72 DDE5                A  9575    	PUSH	IX
042A74 DD210000 00         A  9576    	LD	IX,0
042A79 DD39                A  9577    	ADD	IX,SP
                           A  9578    ; 1198	    switch(currentline.current_instruct
                           A  9579    .LINE 1198
                           A  9580    
042A7B FD2A 60 8A 04       A  9581    	LD	IY,(_currentline)
042A80 FD7E09              A  9582    	LD	A,(IY+%9)
042A83 B7ED62              A  9583    	UEXT	HL
042A86 6F                  A  9584    	LD	L,A
042A87 CD 81 5A 04         A  9585    	CALL	__seqcaseD
042A8B E9                  A  9586    	JP	(HL)
042A8C                     A  9587    L__273:
042A8C 0E00                A  9588    	DW	14
042A8E 0000                A  9589    	DW	0
042A90 00                  A  9590    	DB	0
042A91 422B04              A  9591    	DW24	L_618	
                           A  9592    
042A94 BE2A04              A  9593    	DW24	L_605	
                           A  9594    
042A97 C62A04              A  9595    	DW24	L_606	
                           A  9596    
042A9A CC2A04              A  9597    	DW24	L_607	
                           A  9598    
042A9D D22A04              A  9599    	DW24	L_608	
                           A  9600    
042AA0 DE2A04              A  9601    	DW24	L_609	
                           A  9602    
042AA3 EA2A04              A  9603    	DW24	L_610	
                           A  9604    
042AA6 F62A04              A  9605    	DW24	L_611	
                           A  9606    
042AA9 062B04              A  9607    	DW24	L_612	
                           A  9608    
042AAC 0C2B04              A  9609    	DW24	L_613	
                           A  9610    
042AAF 122B04              A  9611    	DW24	L_614	
                           A  9612    
042AB2 1E2B04              A  9613    	DW24	L_615	
                           A  9614    
042AB5 2A2B04              A  9615    	DW24	L_616	
                           A  9616    
042AB8 362B04              A  9617    	DW24	L_617	
                           A  9618    
042ABB 462B04              A  9619    	DW24	L_619	
                           A  9620    
                           A  9621    ; 1199	    case(ASM_ADL):
042ABE                     A  9622    L_605:
                           A  9623    .LINE 1199
                           A  9624    
                           A  9625    ; 1200	        handle_asm_adl();
                           A  9626    .LINE 1200
                           A  9627    
042ABE CD 00 25 04         A  9628    	CALL	_handle_asm_adl
                           A  9629    ; 1201	        break;
                           A  9630    .LINE 1201
                           A  9631    
042AC2 C3 46 2B 04         A  9632    	JR	L_619
                           A  9633    ; 1202	    case(ASM_ORG):
042AC6                     A  9634    L_606:
                           A  9635    .LINE 1202
                           A  9636    
                           A  9637    ; 1203	        handle_asm_org();
                           A  9638    .LINE 1203
                           A  9639    
042AC6 CD 6F 25 04         A  9640    	CALL	_handle_asm_org
                           A  9641    ; 1204	        break;
                           A  9642    .LINE 1204
                           A  9643    
042ACA 18 7A               A  9644    	JR	L_619
                           A  9645    ; 1205	    case(ASM_DB):
042ACC                     A  9646    L_607:
                           A  9647    .LINE 1205
                           A  9648    
                           A  9649    ; 1206	        handle_asm_db();
                           A  9650    .LINE 1206
                           A  9651    
042ACC CD 9C 21 04         A  9652    	CALL	_handle_asm_db
                           A  9653    ; 1207	        break;
                           A  9654    .LINE 1207
                           A  9655    
042AD0 18 74               A  9656    	JR	L_619
                           A  9657    ; 1208	    case(ASM_DS):
042AD2                     A  9658    L_608:
                           A  9659    .LINE 1208
                           A  9660    
                           A  9661    ; 1209	        handle_asm_blk(1);
                           A  9662    .LINE 1209
                           A  9663    
042AD2 01010000            A  9664    	LD	BC,1
042AD6 C5                  A  9665    	PUSH	BC
042AD7 CD 18 27 04         A  9666    	CALL	_handle_asm_blk
042ADB C1                  A  9667    	POP	BC
                           A  9668    ; 1210	        break;
                           A  9669    .LINE 1210
                           A  9670    
042ADC 18 68               A  9671    	JR	L_619
                           A  9672    ; 1211	    case(ASM_DW):
042ADE                     A  9673    L_609:
                           A  9674    .LINE 1211
                           A  9675    
                           A  9676    ; 1212	        handle_asm_dw(false);
                           A  9677    .LINE 1212
                           A  9678    
042ADE 01000000            A  9679    	LD	BC,0
042AE2 C5                  A  9680    	PUSH	BC
042AE3 CD C1 22 04         A  9681    	CALL	_handle_asm_dw
042AE7 C1                  A  9682    	POP	BC
                           A  9683    ; 1213	        break;
                           A  9684    .LINE 1213
                           A  9685    
042AE8 18 5C               A  9686    	JR	L_619
                           A  9687    ; 1214	    case(ASM_DW24):
042AEA                     A  9688    L_610:
                           A  9689    .LINE 1214
                           A  9690    
                           A  9691    ; 1215	        handle_asm_dw(true);
                           A  9692    .LINE 1215
                           A  9693    
042AEA 01010000            A  9694    	LD	BC,1
042AEE C5                  A  9695    	PUSH	BC
042AEF CD C1 22 04         A  9696    	CALL	_handle_asm_dw
042AF3 C1                  A  9697    	POP	BC
                           A  9698    ; 1216	        break;
                           A  9699    .LINE 1216
                           A  9700    
042AF4 18 50               A  9701    	JR	L_619
                           A  9702    ; 1217	    case(ASM_ASCIZ):
042AF6                     A  9703    L_611:
                           A  9704    .LINE 1217
                           A  9705    
                           A  9706    ; 1218	        handle_asm_db();
                           A  9707    .LINE 1218
                           A  9708    
042AF6 CD 9C 21 04         A  9709    	CALL	_handle_asm_db
                           A  9710    ; 1219	        emit_8bit(0);
                           A  9711    .LINE 1219
                           A  9712    
042AFA 01000000            A  9713    	LD	BC,0
042AFE C5                  A  9714    	PUSH	BC
042AFF CD 84 1D 04         A  9715    	CALL	_emit_8bit
042B03 C1                  A  9716    	POP	BC
                           A  9717    ; 1220	        break;
                           A  9718    .LINE 1220
                           A  9719    
042B04 18 40               A  9720    	JR	L_619
                           A  9721    ; 1221	    case(ASM_EQU):
042B06                     A  9722    L_612:
                           A  9723    .LINE 1221
                           A  9724    
                           A  9725    ; 1222	        handle_asm_equ();
                           A  9726    .LINE 1222
                           A  9727    
042B06 CD 1B 24 04         A  9728    	CALL	_handle_asm_equ
                           A  9729    ; 1223	        break;
                           A  9730    .LINE 1223
                           A  9731    
042B0A 18 3A               A  9732    	JR	L_619
                           A  9733    ; 1224	    case(ASM_INCLUDE):
042B0C                     A  9734    L_613:
                           A  9735    .LINE 1224
                           A  9736    
                           A  9737    ; 1225	        handle_asm_include();
                           A  9738    .LINE 1225
                           A  9739    
042B0C CD 0A 26 04         A  9740    	CALL	_handle_asm_include
                           A  9741    ; 1226	        break;
                           A  9742    .LINE 1226
                           A  9743    
042B10 18 34               A  9744    	JR	L_619
                           A  9745    ; 1227	    case(ASM_BLKB):
042B12                     A  9746    L_614:
                           A  9747    .LINE 1227
                           A  9748    
                           A  9749    ; 1228	        handle_asm_blk(1);
                           A  9750    .LINE 1228
                           A  9751    
042B12 01010000            A  9752    	LD	BC,1
042B16 C5                  A  9753    	PUSH	BC
042B17 CD 18 27 04         A  9754    	CALL	_handle_asm_blk
042B1B C1                  A  9755    	POP	BC
                           A  9756    ; 1229	        break;
                           A  9757    .LINE 1229
                           A  9758    
042B1C 18 28               A  9759    	JR	L_619
                           A  9760    ; 1230	    case(ASM_BLKW):
042B1E                     A  9761    L_615:
                           A  9762    .LINE 1230
                           A  9763    
                           A  9764    ; 1231	        handle_asm_blk(2);
                           A  9765    .LINE 1231
                           A  9766    
042B1E 01020000            A  9767    	LD	BC,2
042B22 C5                  A  9768    	PUSH	BC
042B23 CD 18 27 04         A  9769    	CALL	_handle_asm_blk
042B27 C1                  A  9770    	POP	BC
                           A  9771    ; 1232	        break;
                           A  9772    .LINE 1232
                           A  9773    
042B28 18 1C               A  9774    	JR	L_619
                           A  9775    ; 1233	    case(ASM_BLKP):
042B2A                     A  9776    L_616:
                           A  9777    .LINE 1233
                           A  9778    
                           A  9779    ; 1234	        handle_asm_blk(3);
                           A  9780    .LINE 1234
                           A  9781    
042B2A 01030000            A  9782    	LD	BC,3
042B2E C5                  A  9783    	PUSH	BC
042B2F CD 18 27 04         A  9784    	CALL	_handle_asm_blk
042B33 C1                  A  9785    	POP	BC
                           A  9786    ; 1235	        break;
                           A  9787    .LINE 1235
                           A  9788    
042B34 18 10               A  9789    	JR	L_619
                           A  9790    ; 1236	    case(ASM_BLKL):
042B36                     A  9791    L_617:
                           A  9792    .LINE 1236
                           A  9793    
                           A  9794    ; 1237	        handle_asm_blk(4);
                           A  9795    .LINE 1237
                           A  9796    
042B36 01040000            A  9797    	LD	BC,4
042B3A C5                  A  9798    	PUSH	BC
042B3B CD 18 27 04         A  9799    	CALL	_handle_asm_blk
042B3F C1                  A  9800    	POP	BC
                           A  9801    ; 1238	        break;
                           A  9802    .LINE 1238
                           A  9803    
042B40 18 04               A  9804    	JR	L_619
                           A  9805    ; 1239	    case(ASM_ALIGN):
042B42                     A  9806    L_618:
                           A  9807    .LINE 1239
                           A  9808    
                           A  9809    ; 1240	        handle_asm_align();
                           A  9810    .LINE 1240
                           A  9811    
042B42 CD E9 28 04         A  9812    	CALL	_handle_asm_align
                           A  9813    ; 1241	        break;
                           A  9814    ; 1242	    }
042B46                     A  9815    L_619:
                           A  9816    .LINE 1242
                           A  9817    
                           A  9818    ; 1243	    return;
                           A  9819    ; 1244	}
                           A  9820    .LINE 1244
                           A  9821    
042B46 DDF9                A  9822    	LD	SP,IX
042B48 DDE1                A  9823    	POP	IX
042B4A C9                  A  9824    	RET	
                           A  9825    
                           A  9826    
                           A  9827    ;**************************** _handle_assembler
                           A  9828    ;Name                         Addr/Register   S
                           A  9829    ;_emit_8bit                          IMPORT  --
                           A  9830    ;_currentline                        IMPORT    
                           A  9831    
                           A  9832    
                           A  9833    ; Stack Frame Size: 6 (bytes)
                           A  9834    ;       Spill Code: -1 (instruction)
                           A  9835    
                           A  9836    
                           A  9837    .ENDFUNC "handle_assembler_command",1244,"_hand
                           A  9838    ; 1245	
                           A  9839    ; 1246	void processInstructions(void){
042B4B                     A  9840    _processInstructions:
                           A  9841    .DEFINE "_processInstructions"
                           A  9842    
                           A  9843    .VALUE _processInstructions
                           A  9844    
                           A  9845    .CLASS 2
                           A  9846    
                           A  9847    .TYPE 65
                           A  9848    
                           A  9849    .ENDEF
                           A  9850    
                           A  9851    .BEGFUNC "processInstructions",1246,"_processIn
                           A  9852    
                           A  9853    .LINE 1246
                           A  9854    
                           A  9855    .DEFINE "list"
                           A  9856    
                           A  9857    .CLASS 65
                           A  9858    
                           A  9859    .VALUE -3
                           A  9860    
                           A  9861    .TAG "NONAME5"
                           A  9862    
                           A  9863    .TYPE 40
                           A  9864    
                           A  9865    .ENDEF
                           A  9866    
                           A  9867    .DEFINE "listitem"
                           A  9868    
                           A  9869    .CLASS 65
                           A  9870    
                           A  9871    .VALUE -4
                           A  9872    
                           A  9873    .TYPE 12
                           A  9874    
                           A  9875    .ENDEF
                           A  9876    
                           A  9877    .DEFINE "match"
                           A  9878    
                           A  9879    .CLASS 65
                           A  9880    
                           A  9881    .VALUE -5
                           A  9882    
                           A  9883    .TYPE 12
                           A  9884    
                           A  9885    .ENDEF
                           A  9886    
042B4B DDE5                A  9887    	PUSH	IX
042B4D DD210000 00         A  9888    	LD	IX,0
042B52 DD39                A  9889    	ADD	IX,SP
042B54 C5                  A  9890    	PUSH	BC
042B55 3B                  A  9891    	DEC	SP
042B56 3B                  A  9892    	DEC	SP
                           A  9893    ; 1247	    operandlist *list;
                           A  9894    ; 1248	    uint8_t listitem;
                           A  9895    ; 1249	    bool match;
                           A  9896    ; 1250	
                           A  9897    ; 1251	    // return on empty lines
                           A  9898    ; 1252	    if(isEmpty(currentline.mnemonic)) {
                           A  9899    .LINE 1252
                           A  9900    
042B57 01 86 8A 04         A  9901    	LD	BC,_currentline+38
042B5B C5                  A  9902    	PUSH	BC
042B5C CD 70 4E 04         A  9903    	CALL	_isEmpty
042B60 C1                  A  9904    	POP	BC
042B61 B7                  A  9905    	OR	A,A
042B62 28 27               A  9906    	JR	Z,L_638
                           A  9907    ; 1253	        // check if there is a single l
                           A  9908    ; 1254	        if(pass == 1) definelabel(addre
                           A  9909    .LINE 1254
                           A  9910    
042B64 01010000            A  9911    	LD	BC,1
042B68 2A 52 8A 04         A  9912    	LD	HL,(_pass)
042B6C B7                  A  9913    	OR	A,A
042B6D ED42                A  9914    	SBC	HL,BC
042B6F C2 41 2C 04         A  9915    	JR	NZ,L_640
042B73 3A 58 8A 04         A  9916    	LD	A,(_address+3)
042B77 4F                  A  9917    	LD	C,A
042B78 0600                A  9918    	LD	B,%0
042B7A C5                  A  9919    	PUSH	BC
042B7B ED4B 55 8A 04       A  9920    	LD	BC,(_address)
042B80 C5                  A  9921    	PUSH	BC
042B81 CD 5F 12 04         A  9922    	CALL	_definelabel
042B85 C1                  A  9923    	POP	BC
042B86 C1                  A  9924    	POP	BC
                           A  9925    ; 1255	        return; // valid line, but empt
                           A  9926    .LINE 1255
                           A  9927    
042B87 C3 41 2C 04         A  9928    	JR	L_640
                           A  9929    ; 1256	    }
042B8B                     A  9930    L_638:
                           A  9931    .LINE 1256
                           A  9932    
                           A  9933    ; 1257	
                           A  9934    ; 1258	    if(currentline.current_instruction)
                           A  9935    .LINE 1258
                           A  9936    
042B8B 2A 60 8A 04         A  9937    	LD	HL,(_currentline)
042B8F CD CF 60 04         A  9938    	CALL	__icmpzero
042B93 CA 41 2C 04         A  9939    	JR	Z,L_639
                           A  9940    ; 1259	        if(currentline.current_instruct
                           A  9941    .LINE 1259
                           A  9942    
042B97 FD2A 60 8A 04       A  9943    	LD	IY,(_currentline)
042B9C FD7E08              A  9944    	LD	A,(IY+%8)
042B9F B7                  A  9945    	OR	A,A
042BA0 C2 3D 2C 04         A  9946    	JR	NZ,L_636
                           A  9947    ; 1260	            // process this mnemonic by
                           A  9948    ; 1261	            list = currentline.current_
                           A  9949    .LINE 1261
                           A  9950    
042BA4 FD2A 60 8A 04       A  9951    	LD	IY,(_currentline)
042BA9 FD070B              A  9952    	LD	BC,(IY+%B)
042BAC DD0FFD              A  9953    	LD	(IX+%FFFFFFFD),BC
                           A  9954    ; 1262	            match = false;
                           A  9955    .LINE 1262
                           A  9956    
042BAF DD36FB00            A  9957    	LD	(IX+%FFFFFFFB),%0
                           A  9958    ; 1263	            for(listitem = 0; listitem 
                           A  9959    .LINE 1263
                           A  9960    
042BB3 DD36FC00            A  9961    	LD	(IX+%FFFFFFFC),%0
042BB7 18 63               A  9962    	JR	L_631
042BB9                     A  9963    L_629:
                           A  9964    ; 1264	                if(permittype_matchlist
                           A  9965    .LINE 1264
                           A  9966    
042BB9 DD31FD              A  9967    	LD	IY,(IX+%FFFFFFFD)
042BBC FD2700              A  9968    	LD	HL,(IY+%0)
042BBF E5C1                A  9969    	LD	BC,HL
042BC1 29                  A  9970    	ADD	HL,HL
042BC2 29                  A  9971    	ADD	HL,HL
042BC3 09                  A  9972    	ADD	HL,BC
042BC4 09                  A  9973    	ADD	HL,BC
042BC5 01 BC 67 04         A  9974    	LD	BC,_permittype_matchlist
042BC9 09                  A  9975    	ADD	HL,BC
042BCA E5FDE1              A  9976    	LD	IY,HL
042BCD FD3703              A  9977    	LD	IY,(IY+%3)
042BD0 01 68 8B 04         A  9978    	LD	BC,_operand1
042BD4 C5                  A  9979    	PUSH	BC
042BD5 CD EC 63 04         A  9980    	CALL	__indcall
042BD9 C1                  A  9981    	POP	BC
042BDA B7                  A  9982    	OR	A,A
042BDB 28 33               A  9983    	JR	Z,L_628
042BDD DD31FD              A  9984    	LD	IY,(IX+%FFFFFFFD)
042BE0 FD2703              A  9985    	LD	HL,(IY+%3)
042BE3 E5C1                A  9986    	LD	BC,HL
042BE5 29                  A  9987    	ADD	HL,HL
042BE6 29                  A  9988    	ADD	HL,HL
042BE7 09                  A  9989    	ADD	HL,BC
042BE8 09                  A  9990    	ADD	HL,BC
042BE9 01 BC 67 04         A  9991    	LD	BC,_permittype_matchlist
042BED 09                  A  9992    	ADD	HL,BC
042BEE E5FDE1              A  9993    	LD	IY,HL
042BF1 FD3703              A  9994    	LD	IY,(IY+%3)
042BF4 01 78 8B 04         A  9995    	LD	BC,_operand2
042BF8 C5                  A  9996    	PUSH	BC
042BF9 CD EC 63 04         A  9997    	CALL	__indcall
042BFD C1                  A  9998    	POP	BC
042BFE B7                  A  9999    	OR	A,A
042BFF 28 0F               A 10000    	JR	Z,L_628
                           A 10001    ; 1265	                    match = true;
                           A 10002    .LINE 1265
                           A 10003    
042C01 DD36FB01            A 10004    	LD	(IX+%FFFFFFFB),%1
                           A 10005    ; 1266	                    emit_instruction(li
                           A 10006    .LINE 1266
                           A 10007    
042C05 DD07FD              A 10008    	LD	BC,(IX+%FFFFFFFD)
042C08 C5                  A 10009    	PUSH	BC
042C09 CD 9A 19 04         A 10010    	CALL	_emit_instruction
042C0D C1                  A 10011    	POP	BC
                           A 10012    ; 1267	                    break;
                           A 10013    .LINE 1267
                           A 10014    
042C0E 18 19               A 10015    	JR	L_633
                           A 10016    ; 1268	                }
042C10                     A 10017    L_628:
                           A 10018    .LINE 1268
                           A 10019    
                           A 10020    ; 1269	                list++;
                           A 10021    .LINE 1269
                           A 10022    
042C10 DD31FD              A 10023    	LD	IY,(IX+%FFFFFFFD)
042C13 ED3310              A 10024    	LEA	IY,IY+%10
042C16 DD3EFD              A 10025    	LD	(IX+%FFFFFFFD),IY
042C19 DD34FC              A 10026    	INC	(IX+%FFFFFFFC)
                           A 10027    ; 1270	            }
042C1C                     A 10028    L_631:
                           A 10029    .LINE 1270
                           A 10030    
042C1C FD2A 60 8A 04       A 10031    	LD	IY,(_currentline)
042C21 DD7EFC              A 10032    	LD	A,(IX+%FFFFFFFC)
042C24 FDBE0A              A 10033    	CP	A,(IY+%A)
042C27 38 90               A 10034    	JR	C,L_629
042C29                     A 10035    L_633:
                           A 10036    ; 1271	            if(!match) error(message[ER
                           A 10037    .LINE 1271
                           A 10038    
042C29 DD7EFB              A 10039    	LD	A,(IX+%FFFFFFFB)
042C2C B7                  A 10040    	OR	A,A
042C2D 20 12               A 10041    	JR	NZ,L_640
042C2F 21 59 67 04         A 10042    	LD	HL,_message+24
042C33 ED07                A 10043    	LD	BC,(HL)
042C35 C5                  A 10044    	PUSH	BC
042C36 CD A4 4E 04         A 10045    	CALL	_error
042C3A C1                  A 10046    	POP	BC
                           A 10047    ; 1272	            return;
                           A 10048    .LINE 1272
                           A 10049    
042C3B 18 04               A 10050    	JR	L_640
                           A 10051    ; 1273	        }
                           A 10052    ; 1274	        else handle_assembler_command()
042C3D                     A 10053    L_636:
                           A 10054    .LINE 1274
                           A 10055    
042C3D CD 72 2A 04         A 10056    	CALL	_handle_assembler_command
                           A 10057    ; 1275	    }
042C41                     A 10058    L_639:
                           A 10059    .LINE 1275
                           A 10060    
                           A 10061    ; 1276	    return;
                           A 10062    ; 1277	}
042C41                     A 10063    L_640:
                           A 10064    .LINE 1277
                           A 10065    
042C41 DDF9                A 10066    	LD	SP,IX
042C43 DDE1                A 10067    	POP	IX
042C45 C9                  A 10068    	RET	
                           A 10069    
                           A 10070    
                           A 10071    ;**************************** _processInstructi
                           A 10072    ;Name                         Addr/Register   S
                           A 10073    ;_message                            IMPORT  un
                           A 10074    ;_error                              IMPORT  --
                           A 10075    ;_operand2                           IMPORT    
                           A 10076    ;_operand1                           IMPORT    
                           A 10077    ;_permittype_matchlist               IMPORT  un
                           A 10078    ;_address                            IMPORT    
                           A 10079    ;_pass                               IMPORT    
                           A 10080    ;_currentline                        IMPORT    
                           A 10081    ;_isEmpty                            IMPORT  --
                           A 10082    ;match                                 IX-5    
                           A 10083    ;listitem                              IX-4    
                           A 10084    ;list                                  IX-3    
                           A 10085    
                           A 10086    
                           A 10087    ; Stack Frame Size: 11 (bytes)
                           A 10088    ;       Spill Code: -1 (instruction)
                           A 10089    
                           A 10090    
                           A 10091    .ENDFUNC "processInstructions",1277,"_processIn
                           A 10092    ; 1278	
                           A 10093    ; 1279	void passInitialize(uint8_t passnumber)
042C46                     A 10094    _passInitialize:
                           A 10095    .DEFINE "_passInitialize"
                           A 10096    
                           A 10097    .VALUE _passInitialize
                           A 10098    
                           A 10099    .CLASS 2
                           A 10100    
                           A 10101    .TYPE 65
                           A 10102    
                           A 10103    .ENDEF
                           A 10104    
                           A 10105    .BEGFUNC "passInitialize",1279,"_passInitialize
                           A 10106    
                           A 10107    .LINE 1279
                           A 10108    
                           A 10109    .DEFINE "passnumber"
                           A 10110    
                           A 10111    .CLASS 65
                           A 10112    
                           A 10113    .VALUE 6
                           A 10114    
                           A 10115    .TYPE 12
                           A 10116    
                           A 10117    .ENDEF
                           A 10118    
042C46 DDE5                A 10119    	PUSH	IX
042C48 DD210000 00         A 10120    	LD	IX,0
042C4D DD39                A 10121    	ADD	IX,SP
                           A 10122    ; 1280	    pass = passnumber;
                           A 10123    .LINE 1280
                           A 10124    
042C4F DD7E06              A 10125    	LD	A,(IX+%6)
042C52 B7ED62              A 10126    	UEXT	HL
042C55 6F                  A 10127    	LD	L,A
042C56 22 52 8A 04         A 10128    	LD	(_pass),HL
                           A 10129    ; 1281	    adlmode = true;
                           A 10130    .LINE 1281
                           A 10131    
042C5A 3E01                A 10132    	LD	A,%1
042C5C 32 5F 8A 04         A 10133    	LD	(_adlmode),A
                           A 10134    ; 1282	    linenumber = 0;
                           A 10135    .LINE 1282
                           A 10136    
042C60 01000000            A 10137    	LD	BC,0
042C64 ED43 4F 8A 04       A 10138    	LD	(_linenumber),BC
                           A 10139    ; 1283	    address = START_ADDRESS;
                           A 10140    .LINE 1283
                           A 10141    
042C69 AF                  A 10142    	XOR	A,A
042C6A ED43 55 8A 04       A 10143    	LD	(_address),BC
042C6F 32 58 8A 04         A 10144    	LD	(_address+3),A
                           A 10145    ; 1284	    totalsize = 0;
                           A 10146    .LINE 1284
                           A 10147    
042C73 AF                  A 10148    	XOR	A,A
042C74 ED43 59 8A 04       A 10149    	LD	(_totalsize),BC
042C79 32 5C 8A 04         A 10150    	LD	(_totalsize+3),A
                           A 10151    ; 1285	    
                           A 10152    ; 1286	    // init the file stack and push the
                           A 10153    ; 1287	    filestackInit();
                           A 10154    .LINE 1287
                           A 10155    
042C7D CD 0B 2F 04         A 10156    	CALL	_filestackInit
                           A 10157    ; 1288	}
                           A 10158    .LINE 1288
                           A 10159    
042C81 DDF9                A 10160    	LD	SP,IX
042C83 DDE1                A 10161    	POP	IX
042C85 C9                  A 10162    	RET	
                           A 10163    
                           A 10164    
                           A 10165    ;**************************** _passInitialize *
                           A 10166    ;Name                         Addr/Register   S
                           A 10167    ;_filestackInit                      IMPORT  --
                           A 10168    ;_totalsize                          IMPORT    
                           A 10169    ;_address                            IMPORT    
                           A 10170    ;_linenumber                         IMPORT    
                           A 10171    ;_adlmode                            IMPORT    
                           A 10172    ;_pass                               IMPORT    
                           A 10173    ;passnumber                            IX+6    
                           A 10174    
                           A 10175    
                           A 10176    ; Stack Frame Size: 9 (bytes)
                           A 10177    ;       Spill Code: -1 (instruction)
                           A 10178    
                           A 10179    
                           A 10180    .ENDFUNC "passInitialize",1288,"_passInitialize
                           A 10181    ; 1289	
                           A 10182    ; 1290	// Assembler directives may demand a la
                           A 10183    ; 1291	void processDelayedLineNumberReset(void
042C86                     A 10184    _processDelayedLineNumberReset:
                           A 10185    .DEFINE "_processDelayedLineNumberReset"
                           A 10186    
                           A 10187    .VALUE _processDelayedLineNumberReset
                           A 10188    
                           A 10189    .CLASS 2
                           A 10190    
                           A 10191    .TYPE 65
                           A 10192    
                           A 10193    .ENDEF
                           A 10194    
                           A 10195    .BEGFUNC "processDelayedLineNumberReset",1291,"
                           A 10196    
042C86 DDE5                A 10197    	PUSH	IX
042C88 DD210000 00         A 10198    	LD	IX,0
042C8D DD39                A 10199    	ADD	IX,SP
                           A 10200    ; 1292	    if(lineNumberNeedsReset) {
                           A 10201    .LINE 1292
                           A 10202    
042C8F 3A 4E 8A 04         A 10203    	LD	A,(_lineNumberNeedsReset)
042C93 B7                  A 10204    	OR	A,A
042C94 28 0E               A 10205    	JR	Z,L_643
                           A 10206    ; 1293	        lineNumberNeedsReset = false;
                           A 10207    .LINE 1293
                           A 10208    
042C96 AF                  A 10209    	XOR	A,A
042C97 32 4E 8A 04         A 10210    	LD	(_lineNumberNeedsReset),A
                           A 10211    ; 1294	        linenumber = 0;
                           A 10212    .LINE 1294
                           A 10213    
042C9B 01000000            A 10214    	LD	BC,0
042C9F ED43 4F 8A 04       A 10215    	LD	(_linenumber),BC
                           A 10216    ; 1295	    }
                           A 10217    ; 1296	}
042CA4                     A 10218    L_643:
                           A 10219    .LINE 1296
                           A 10220    
042CA4 DDF9                A 10221    	LD	SP,IX
042CA6 DDE1                A 10222    	POP	IX
042CA8 C9                  A 10223    	RET	
                           A 10224    
                           A 10225    
                           A 10226    ;**************************** _processDelayedLi
                           A 10227    ;Name                         Addr/Register   S
                           A 10228    ;_linenumber                         IMPORT    
                           A 10229    ;_lineNumberNeedsReset               IMPORT    
                           A 10230    
                           A 10231    
                           A 10232    ; Stack Frame Size: 6 (bytes)
                           A 10233    ;       Spill Code: -1 (instruction)
                           A 10234    
                           A 10235    
                           A 10236    .ENDFUNC "processDelayedLineNumberReset",1296,"
                           A 10237    ; 1297	
                           A 10238    ; 1298	bool assemble(void){
042CA9                     A 10239    _assemble:
                           A 10240    .DEFINE "_assemble"
                           A 10241    
                           A 10242    .VALUE _assemble
                           A 10243    
                           A 10244    .CLASS 2
                           A 10245    
                           A 10246    .TYPE 76
                           A 10247    
                           A 10248    .ENDEF
                           A 10249    
                           A 10250    .BEGFUNC "assemble",1298,"_assemble"
                           A 10251    
                           A 10252    .LINE 1298
                           A 10253    
                           A 10254    .DEFINE "incfiles"
                           A 10255    
                           A 10256    .CLASS 65
                           A 10257    
                           A 10258    .VALUE -1
                           A 10259    
                           A 10260    .TYPE 12
                           A 10261    
                           A 10262    .ENDEF
                           A 10263    
                           A 10264    .DEFINE "fsitem"
                           A 10265    
                           A 10266    .CLASS 65
                           A 10267    
                           A 10268    .VALUE -68
                           A 10269    
                           A 10270    .TAG "NONAME12"
                           A 10271    
                           A 10272    .TYPE 8
                           A 10273    
                           A 10274    .ENDEF
                           A 10275    
                           A 10276    .DEFINE "line"
                           A 10277    
                           A 10278    .CLASS 65
                           A 10279    
                           A 10280    .VALUE -196
                           A 10281    
                           A 10282    .DIM 128
                           A 10283    
                           A 10284    .TYPE 98
                           A 10285    
                           A 10286    .ENDEF
                           A 10287    
042CA9 DDE5                A 10288    	PUSH	IX
042CAB DD210000 00         A 10289    	LD	IX,0
042CB0 DD39                A 10290    	ADD	IX,SP
042CB2 213CFFFF            A 10291    	LD	HL,-196
042CB6 39                  A 10292    	ADD	HL,SP
042CB7 F9                  A 10293    	LD	SP,HL
                           A 10294    ; 1299	    char line[LINEMAX];
                           A 10295    ; 1300	    filestackitem fsitem;
                           A 10296    ; 1301	    bool incfiles;
                           A 10297    ; 1302	
                           A 10298    ; 1303	    global_errors = 0;
                           A 10299    .LINE 1303
                           A 10300    
042CB8 21 5D 8A 04         A 10301    	LD	HL,_global_errors
042CBC 3600                A 10302    	LD	(HL),%0
042CBE 23                  A 10303    	INC	HL
042CBF 3600                A 10304    	LD	(HL),%0
                           A 10305    ; 1304	
                           A 10306    ; 1305	    filehandle[FILE_CURRENT] = filehand
                           A 10307    .LINE 1305
                           A 10308    
042CC1 21 46 8A 04         A 10309    	LD	HL,_filehandle
042CC5 23                  A 10310    	INC	HL
042CC6 7E                  A 10311    	LD	A,(HL)
042CC7 32 46 8A 04         A 10312    	LD	(_filehandle),A
                           A 10313    ; 1306	    strcpy(filename[FILE_CURRENT], file
                           A 10314    .LINE 1306
                           A 10315    
042CCB 01 06 89 04         A 10316    	LD	BC,_filename+64
042CCF C5                  A 10317    	PUSH	BC
042CD0 01 C6 88 04         A 10318    	LD	BC,_filename
042CD4 C5                  A 10319    	PUSH	BC
042CD5 CD EE 63 04         A 10320    	CALL	_strcpy
042CD9 C1                  A 10321    	POP	BC
042CDA C1                  A 10322    	POP	BC
                           A 10323    ; 1307	
                           A 10324    ; 1308	    // Assemble in two passes
                           A 10325    ; 1309	    // Pass 1
                           A 10326    ; 1310	    printf("Pass 1...\n\r");
                           A 10327    .LINE 1310
                           A 10328    
042CDB 01 88 5C 04         A 10329    	LD	BC,___print_uputch
042CDF ED43 EF 81 04       A 10330    	LD	(___print_xputch),BC
042CE4 01 B7 82 04         A 10331    	LD	BC,L__287
042CE8 C5                  A 10332    	PUSH	BC
042CE9 CD FA 5A 04         A 10333    	CALL	___print_sendstring
042CED C1                  A 10334    	POP	BC
                           A 10335    ; 1311	    passInitialize(1);
                           A 10336    .LINE 1311
                           A 10337    
042CEE 01010000            A 10338    	LD	BC,1
042CF2 C5                  A 10339    	PUSH	BC
042CF3 CD 46 2C 04         A 10340    	CALL	_passInitialize
042CF7 C1                  A 10341    	POP	BC
                           A 10342    ; 1312	    do {
                           A 10343    ; 1313	        while (agon_fgets(line, sizeof(
                           A 10344    .LINE 1313
                           A 10345    
042CF8 18 23               A 10346    	JR	L_645
042CFA                     A 10347    L_646:
                           A 10348    ; 1314	            linenumber++;
                           A 10349    .LINE 1314
                           A 10350    
042CFA ED4B 4F 8A 04       A 10351    	LD	BC,(_linenumber)
042CFF 03                  A 10352    	INC	BC
042D00 ED43 4F 8A 04       A 10353    	LD	(_linenumber),BC
                           A 10354    ; 1315	            parseLine(line);
                           A 10355    .LINE 1315
                           A 10356    
042D05 DDE5E1              A 10357    	LD	HL,IX
042D08 013CFFFF            A 10358    	LD	BC,-196
042D0C 09                  A 10359    	ADD	HL,BC
042D0D E5C1                A 10360    	LD	BC,HL
042D0F C5                  A 10361    	PUSH	BC
042D10 CD 60 0E 04         A 10362    	CALL	_parseLine
042D14 C1                  A 10363    	POP	BC
                           A 10364    ; 1316	            processInstructions();
                           A 10365    .LINE 1316
                           A 10366    
042D15 CD 4B 2B 04         A 10367    	CALL	_processInstructions
                           A 10368    ; 1317	            processDelayedLineNumberRes
                           A 10369    .LINE 1317
                           A 10370    
042D19 CD 86 2C 04         A 10371    	CALL	_processDelayedLineNumberReset
                           A 10372    ; 1318	
                           A 10373    ; 1319	            //printLocalLabelTable();
                           A 10374    ; 1320	
                           A 10375    ; 1321	        }
042D1D                     A 10376    L_645:
                           A 10377    .LINE 1321
                           A 10378    
042D1D 01000000            A 10379    	LD	BC,0
042D21 C5                  A 10380    	PUSH	BC
042D22 01800000            A 10381    	LD	BC,128
042D26 C5                  A 10382    	PUSH	BC
042D27 DDE5E1              A 10383    	LD	HL,IX
042D2A 013CFFFF            A 10384    	LD	BC,-196
042D2E 09                  A 10385    	ADD	HL,BC
042D2F E5C1                A 10386    	LD	BC,HL
042D31 C5                  A 10387    	PUSH	BC
042D32 CD 31 57 04         A 10388    	CALL	_agon_fgets
042D36 C1                  A 10389    	POP	BC
042D37 C1                  A 10390    	POP	BC
042D38 C1                  A 10391    	POP	BC
042D39 CD CF 60 04         A 10392    	CALL	__icmpzero
042D3D 20 BB               A 10393    	JR	NZ,L_646
                           A 10394    ; 1322	        if(filestackCount()) {
                           A 10395    .LINE 1322
                           A 10396    
042D3F CD 1E 2F 04         A 10397    	CALL	_filestackCount
042D43 B7                  A 10398    	OR	A,A
042D44 28 3A               A 10399    	JR	Z,L_648
                           A 10400    ; 1323	            mos_fclose(filehandle[FILE_
                           A 10401    .LINE 1323
                           A 10402    
042D46 3A 46 8A 04         A 10403    	LD	A,(_filehandle)
042D4A 4F                  A 10404    	LD	C,A
042D4B 0600                A 10405    	LD	B,%0
042D4D C5                  A 10406    	PUSH	BC
042D4E CD BC 03 04         A 10407    	CALL	_mos_fclose
042D52 C1                  A 10408    	POP	BC
                           A 10409    ; 1324	            incfiles = filestackPop(&fs
                           A 10410    .LINE 1324
                           A 10411    
042D53 ED65BC              A 10412    	PEA	IX+%FFFFFFBC
042D56 CD B7 2F 04         A 10413    	CALL	_filestackPop
042D5A C1                  A 10414    	POP	BC
042D5B DD77FF              A 10415    	LD	(IX+%FFFFFFFF),A
                           A 10416    ; 1325	            linenumber = fsitem.linenum
                           A 10417    .LINE 1325
                           A 10418    
042D5E DD07BC              A 10419    	LD	BC,(IX+%FFFFFFBC)
042D61 CD 82 5C 04         A 10420    	CALL	__stoiu
042D65 22 4F 8A 04         A 10421    	LD	(_linenumber),HL
                           A 10422    ; 1326	            filehandle[FILE_CURRENT] = 
                           A 10423    .LINE 1326
                           A 10424    
042D69 DD7EBE              A 10425    	LD	A,(IX+%FFFFFFBE)
042D6C 32 46 8A 04         A 10426    	LD	(_filehandle),A
                           A 10427    ; 1327	            strcpy(filename[FILE_CURREN
                           A 10428    .LINE 1327
                           A 10429    
042D70 ED65BF              A 10430    	PEA	IX+%FFFFFFBF
042D73 01 C6 88 04         A 10431    	LD	BC,_filename
042D77 C5                  A 10432    	PUSH	BC
042D78 CD EE 63 04         A 10433    	CALL	_strcpy
042D7C C1                  A 10434    	POP	BC
042D7D C1                  A 10435    	POP	BC
                           A 10436    ; 1328	        }
                           A 10437    ; 1329	        else incfiles = false;
                           A 10438    .LINE 1329
                           A 10439    
042D7E 18 04               A 10440    	JR	L_651
042D80                     A 10441    L_648:
042D80 DD36FF00            A 10442    	LD	(IX+%FFFFFFFF),%0
                           A 10443    ; 1330	    }
                           A 10444    ; 1331	    while(incfiles);
042D84                     A 10445    L_651:
                           A 10446    .LINE 1331
                           A 10447    
042D84 DD7EFF              A 10448    	LD	A,(IX+%FFFFFFFF)
042D87 B7                  A 10449    	OR	A,A
042D88 20 93               A 10450    	JR	NZ,L_645
                           A 10451    ; 1332	    writeLocalLabels();
                           A 10452    .LINE 1332
                           A 10453    
042D8A CD E0 3C 04         A 10454    	CALL	_writeLocalLabels
                           A 10455    ; 1333	    if(global_errors) return false;
                           A 10456    .LINE 1333
                           A 10457    
042D8E 2A 5D 8A 04         A 10458    	LD	HL,(_global_errors)
042D92 CD 08 64 04         A 10459    	CALL	__scmpzero
042D96 28 05               A 10460    	JR	Z,L_654
042D98 AF                  A 10461    	XOR	A,A
042D99 C3 06 2F 04         A 10462    	JR	L_664
042D9D                     A 10463    L_654:
                           A 10464    ; 1334	
                           A 10465    ; 1335	    printf("%d lines\n\r", linenumber);
                           A 10466    .LINE 1335
                           A 10467    
042D9D 01 88 5C 04         A 10468    	LD	BC,___print_uputch
042DA1 ED43 EF 81 04       A 10469    	LD	(___print_xputch),BC
042DA6 ED4B 4F 8A 04       A 10470    	LD	BC,(_linenumber)
042DAB AF                  A 10471    	XOR	A,A
042DAC C5D1                A 10472    	LD	DE,BC
042DAE 4F                  A 10473    	LD	C,A
042DAF 0600                A 10474    	LD	B,%0
042DB1 C5                  A 10475    	PUSH	BC
042DB2 D5                  A 10476    	PUSH	DE
042DB3 CD 62 5D 04         A 10477    	CALL	__u_itoa
042DB7 C1                  A 10478    	POP	BC
042DB8 C1                  A 10479    	POP	BC
042DB9 01 C3 82 04         A 10480    	LD	BC,L__292
042DBD C5                  A 10481    	PUSH	BC
042DBE CD FA 5A 04         A 10482    	CALL	___print_sendstring
042DC2 C1                  A 10483    	POP	BC
                           A 10484    ; 1336	    printf("%d labels\n\r", getGlobalLa
                           A 10485    .LINE 1336
                           A 10486    
042DC3 01 88 5C 04         A 10487    	LD	BC,___print_uputch
042DC7 ED43 EF 81 04       A 10488    	LD	(___print_xputch),BC
042DCC CD F2 3A 04         A 10489    	CALL	_getGlobalLabelCount
042DD0 E5C1                A 10490    	LD	BC,HL
042DD2 CD 82 5C 04         A 10491    	CALL	__stoiu
042DD6 E5C1                A 10492    	LD	BC,HL
042DD8 CD 95 63 04         A 10493    	CALL	__itol
042DDC C5D1                A 10494    	LD	DE,BC
042DDE 4F                  A 10495    	LD	C,A
042DDF 0600                A 10496    	LD	B,%0
042DE1 C5                  A 10497    	PUSH	BC
042DE2 D5                  A 10498    	PUSH	DE
042DE3 CD 62 5D 04         A 10499    	CALL	__u_itoa
042DE7 C1                  A 10500    	POP	BC
042DE8 C1                  A 10501    	POP	BC
042DE9 01 CC 82 04         A 10502    	LD	BC,L__293
042DED C5                  A 10503    	PUSH	BC
042DEE CD FA 5A 04         A 10504    	CALL	___print_sendstring
042DF2 C1                  A 10505    	POP	BC
                           A 10506    ; 1337	
                           A 10507    ; 1338	    // Pass 2
                           A 10508    ; 1339	    printf("Pass 2...\n\r");
                           A 10509    .LINE 1339
                           A 10510    
042DF3 01 88 5C 04         A 10511    	LD	BC,___print_uputch
042DF7 ED43 EF 81 04       A 10512    	LD	(___print_xputch),BC
042DFC 01 D6 82 04         A 10513    	LD	BC,L__294
042E00 C5                  A 10514    	PUSH	BC
042E01 CD FA 5A 04         A 10515    	CALL	___print_sendstring
042E05 C1                  A 10516    	POP	BC
                           A 10517    ; 1340	    //rewind(filehandle[FILE_INPUT]);
                           A 10518    ; 1341	    reOpenFile(FILE_INPUT, fa_read);
                           A 10519    .LINE 1341
                           A 10520    
042E06 01010000            A 10521    	LD	BC,1
042E0A C5                  A 10522    	PUSH	BC
042E0B C5                  A 10523    	PUSH	BC
042E0C CD 18 54 04         A 10524    	CALL	_reOpenFile
042E10 C1                  A 10525    	POP	BC
042E11 C1                  A 10526    	POP	BC
                           A 10527    ; 1342	    //rewind(filehandle[FILE_LOCAL_LABE
                           A 10528    ; 1343	    reOpenFile(FILE_LOCAL_LABELS, fa_re
                           A 10529    .LINE 1343
                           A 10530    
042E12 01010000            A 10531    	LD	BC,1
042E16 C5                  A 10532    	PUSH	BC
042E17 01030000            A 10533    	LD	BC,3
042E1B C5                  A 10534    	PUSH	BC
042E1C CD 18 54 04         A 10535    	CALL	_reOpenFile
042E20 C1                  A 10536    	POP	BC
042E21 C1                  A 10537    	POP	BC
                           A 10538    ; 1344	    //rewind(filehandle[FILE_ANONYMOUS_
                           A 10539    ; 1345	    reOpenFile(FILE_ANONYMOUS_LABELS, f
                           A 10540    .LINE 1345
                           A 10541    
042E22 01010000            A 10542    	LD	BC,1
042E26 C5                  A 10543    	PUSH	BC
042E27 01040000            A 10544    	LD	BC,4
042E2B C5                  A 10545    	PUSH	BC
042E2C CD 18 54 04         A 10546    	CALL	_reOpenFile
042E30 C1                  A 10547    	POP	BC
042E31 C1                  A 10548    	POP	BC
                           A 10549    ; 1346	    passInitialize(2);
                           A 10550    .LINE 1346
                           A 10551    
042E32 01020000            A 10552    	LD	BC,2
042E36 C5                  A 10553    	PUSH	BC
042E37 CD 46 2C 04         A 10554    	CALL	_passInitialize
042E3B C1                  A 10555    	POP	BC
                           A 10556    ; 1347	    listInit(consolelist_enabled);
                           A 10557    .LINE 1347
                           A 10558    
042E3C 3A 4D 8A 04         A 10559    	LD	A,(_consolelist_enabled)
042E40 4F                  A 10560    	LD	C,A
042E41 0600                A 10561    	LD	B,%0
042E43 C5                  A 10562    	PUSH	BC
042E44 CD 75 44 04         A 10563    	CALL	_listInit
042E48 C1                  A 10564    	POP	BC
                           A 10565    ; 1348	    readLocalLabels();
                           A 10566    .LINE 1348
                           A 10567    
042E49 CD E3 3D 04         A 10568    	CALL	_readLocalLabels
                           A 10569    ; 1349	    readAnonymousLabel();
                           A 10570    .LINE 1349
                           A 10571    
042E4D CD 0B 3F 04         A 10572    	CALL	_readAnonymousLabel
                           A 10573    ; 1350	    do {
                           A 10574    ; 1351	        while (agon_fgets(line, sizeof(
                           A 10575    .LINE 1351
                           A 10576    
042E51 18 44               A 10577    	JR	L_656
042E53                     A 10578    L_657:
                           A 10579    ; 1352	            linenumber++;
                           A 10580    .LINE 1352
                           A 10581    
042E53 ED4B 4F 8A 04       A 10582    	LD	BC,(_linenumber)
042E58 03                  A 10583    	INC	BC
042E59 ED43 4F 8A 04       A 10584    	LD	(_linenumber),BC
                           A 10585    ; 1353	            listStartLine(line);
                           A 10586    .LINE 1353
                           A 10587    
042E5E DDE5E1              A 10588    	LD	HL,IX
042E61 013CFFFF            A 10589    	LD	BC,-196
042E65 09                  A 10590    	ADD	HL,BC
042E66 E5C1                A 10591    	LD	BC,HL
042E68 C5                  A 10592    	PUSH	BC
042E69 CD E1 44 04         A 10593    	CALL	_listStartLine
042E6D C1                  A 10594    	POP	BC
                           A 10595    ; 1354	            parseLine(line);
                           A 10596    .LINE 1354
                           A 10597    
042E6E DDE5E1              A 10598    	LD	HL,IX
042E71 013CFFFF            A 10599    	LD	BC,-196
042E75 09                  A 10600    	ADD	HL,BC
042E76 E5C1                A 10601    	LD	BC,HL
042E78 C5                  A 10602    	PUSH	BC
042E79 CD 60 0E 04         A 10603    	CALL	_parseLine
042E7D C1                  A 10604    	POP	BC
                           A 10605    ; 1355	            refreshlocalLabels();
                           A 10606    .LINE 1355
                           A 10607    
042E7E CD 11 13 04         A 10608    	CALL	_refreshlocalLabels
                           A 10609    ; 1356	            processInstructions();
                           A 10610    .LINE 1356
                           A 10611    
042E82 CD 4B 2B 04         A 10612    	CALL	_processInstructions
                           A 10613    ; 1357	            listEndLine(consolelist_ena
                           A 10614    .LINE 1357
                           A 10615    
042E86 3A 4D 8A 04         A 10616    	LD	A,(_consolelist_enabled)
042E8A 4F                  A 10617    	LD	C,A
042E8B 0600                A 10618    	LD	B,%0
042E8D C5                  A 10619    	PUSH	BC
042E8E CD 1F 45 04         A 10620    	CALL	_listEndLine
042E92 C1                  A 10621    	POP	BC
                           A 10622    ; 1358	            processDelayedLineNumberRes
                           A 10623    .LINE 1358
                           A 10624    
042E93 CD 86 2C 04         A 10625    	CALL	_processDelayedLineNumberReset
                           A 10626    ; 1359	
                           A 10627    ; 1360	            //printLocalLabelTable();
                           A 10628    ; 1361	        }
042E97                     A 10629    L_656:
                           A 10630    .LINE 1361
                           A 10631    
042E97 01000000            A 10632    	LD	BC,0
042E9B C5                  A 10633    	PUSH	BC
042E9C 01800000            A 10634    	LD	BC,128
042EA0 C5                  A 10635    	PUSH	BC
042EA1 DDE5E1              A 10636    	LD	HL,IX
042EA4 013CFFFF            A 10637    	LD	BC,-196
042EA8 09                  A 10638    	ADD	HL,BC
042EA9 E5C1                A 10639    	LD	BC,HL
042EAB C5                  A 10640    	PUSH	BC
042EAC CD 31 57 04         A 10641    	CALL	_agon_fgets
042EB0 C1                  A 10642    	POP	BC
042EB1 C1                  A 10643    	POP	BC
042EB2 C1                  A 10644    	POP	BC
042EB3 CD CF 60 04         A 10645    	CALL	__icmpzero
042EB7 20 9A               A 10646    	JR	NZ,L_657
                           A 10647    ; 1362	        if(filestackCount()) {
                           A 10648    .LINE 1362
                           A 10649    
042EB9 CD 1E 2F 04         A 10650    	CALL	_filestackCount
042EBD B7                  A 10651    	OR	A,A
042EBE 28 3A               A 10652    	JR	Z,L_659
                           A 10653    ; 1363	            mos_fclose(filehandle[FILE_
                           A 10654    .LINE 1363
                           A 10655    
042EC0 3A 46 8A 04         A 10656    	LD	A,(_filehandle)
042EC4 4F                  A 10657    	LD	C,A
042EC5 0600                A 10658    	LD	B,%0
042EC7 C5                  A 10659    	PUSH	BC
042EC8 CD BC 03 04         A 10660    	CALL	_mos_fclose
042ECC C1                  A 10661    	POP	BC
                           A 10662    ; 1364	            incfiles = filestackPop(&fs
                           A 10663    .LINE 1364
                           A 10664    
042ECD ED65BC              A 10665    	PEA	IX+%FFFFFFBC
042ED0 CD B7 2F 04         A 10666    	CALL	_filestackPop
042ED4 C1                  A 10667    	POP	BC
042ED5 DD77FF              A 10668    	LD	(IX+%FFFFFFFF),A
                           A 10669    ; 1365	            linenumber = fsitem.linenum
                           A 10670    .LINE 1365
                           A 10671    
042ED8 DD07BC              A 10672    	LD	BC,(IX+%FFFFFFBC)
042EDB CD 82 5C 04         A 10673    	CALL	__stoiu
042EDF 22 4F 8A 04         A 10674    	LD	(_linenumber),HL
                           A 10675    ; 1366	            filehandle[FILE_CURRENT] = 
                           A 10676    .LINE 1366
                           A 10677    
042EE3 DD7EBE              A 10678    	LD	A,(IX+%FFFFFFBE)
042EE6 32 46 8A 04         A 10679    	LD	(_filehandle),A
                           A 10680    ; 1367	            strcpy(filename[FILE_CURREN
                           A 10681    .LINE 1367
                           A 10682    
042EEA ED65BF              A 10683    	PEA	IX+%FFFFFFBF
042EED 01 C6 88 04         A 10684    	LD	BC,_filename
042EF1 C5                  A 10685    	PUSH	BC
042EF2 CD EE 63 04         A 10686    	CALL	_strcpy
042EF6 C1                  A 10687    	POP	BC
042EF7 C1                  A 10688    	POP	BC
                           A 10689    ; 1368	        }
                           A 10690    ; 1369	        else incfiles = false;
                           A 10691    .LINE 1369
                           A 10692    
042EF8 18 04               A 10693    	JR	L_662
042EFA                     A 10694    L_659:
042EFA DD36FF00            A 10695    	LD	(IX+%FFFFFFFF),%0
                           A 10696    ; 1370	    }
                           A 10697    ; 1371	    while(incfiles);
042EFE                     A 10698    L_662:
                           A 10699    .LINE 1371
                           A 10700    
042EFE DD7EFF              A 10701    	LD	A,(IX+%FFFFFFFF)
042F01 B7                  A 10702    	OR	A,A
042F02 20 93               A 10703    	JR	NZ,L_656
                           A 10704    ; 1372	    return true;
                           A 10705    .LINE 1372
                           A 10706    
042F04 3E01                A 10707    	LD	A,%1
                           A 10708    ; 1373	}
042F06                     A 10709    L_664:
                           A 10710    .LINE 1373
                           A 10711    
042F06 DDF9                A 10712    	LD	SP,IX
042F08 DDE1                A 10713    	POP	IX
042F0A C9                  A 10714    	RET	
                           A 10715    
                           A 10716    
                           A 10717    ;**************************** _assemble *******
                           A 10718    ;Name                         Addr/Register   S
                           A 10719    ;_listEndLine                        IMPORT  --
                           A 10720    ;_listStartLine                      IMPORT  --
                           A 10721    ;_readAnonymousLabel                 IMPORT  --
                           A 10722    ;_readLocalLabels                    IMPORT  --
                           A 10723    ;_consolelist_enabled                IMPORT    
                           A 10724    ;_listInit                           IMPORT  --
                           A 10725    ;_reOpenFile                         IMPORT  --
                           A 10726    ;_getGlobalLabelCount                IMPORT  --
                           A 10727    ;__u_itoa                            IMPORT  --
                           A 10728    ;_writeLocalLabels                   IMPORT  --
                           A 10729    ;_filestackPop                       IMPORT  --
                           A 10730    ;_mos_fclose                         IMPORT  --
                           A 10731    ;_filestackCount                     IMPORT  --
                           A 10732    ;_agon_fgets                         IMPORT  --
                           A 10733    ;_linenumber                         IMPORT    
                           A 10734    ;___print_sendstring                 IMPORT  --
                           A 10735    ;___print_xputch                     IMPORT    
                           A 10736    ;___print_uputch                     IMPORT  --
                           A 10737    ;_filename                           IMPORT    
                           A 10738    ;_strcpy                             IMPORT  --
                           A 10739    ;_filehandle                         IMPORT    
                           A 10740    ;_global_errors                      IMPORT    
                           A 10741    ;line                                IX-196    
                           A 10742    ;fsitem                               IX-68    
                           A 10743    ;incfiles                              IX-1    
                           A 10744    
                           A 10745    
                           A 10746    ; Stack Frame Size: 202 (bytes)
                           A 10747    ;       Spill Code: -1 (instruction)
                           A 10748    
                           A 10749    
                           A 10750    .ENDFUNC "assemble",1373,"_assemble"
                           A 10751    	SEGMENT STRSECT
0482B7                     A 10752    L__287:
0482B7 50617373 20312E2E   A 10753    	DB	"Pass 1..."
0482BF 2E 
0482C0 0A0D00              A 10754    	DB	10,13,0
0482C3                     A 10755    L__292:
0482C3 206C696E 6573       A 10756    	DB	" lines"
0482C9 0A0D00              A 10757    	DB	10,13,0
0482CC                     A 10758    L__293:
0482CC 206C6162 656C73     A 10759    	DB	" labels"
0482D3 0A0D00              A 10760    	DB	10,13,0
0482D6                     A 10761    L__294:
0482D6 50617373 20322E2E   A 10762    	DB	"Pass 2..."
0482DE 2E 
0482DF 0A0D00              A 10763    	DB	10,13,0
                           A 10764    	XREF _mos_fclose:ROM
                           A 10765    	XREF _mos_fopen:ROM
                           A 10766    	XREF _filestackPop:ROM
                           A 10767    	XREF _filestackPush:ROM
                           A 10768    	XREF _filestackCount:ROM
                           A 10769    	XREF _filestackInit:ROM
                           A 10770    	XREF _listEmit8bit:ROM
                           A 10771    	XREF _listEndLine:ROM
                           A 10772    	XREF _listStartLine:ROM
                           A 10773    	XREF _listInit:ROM
                           A 10774    	XREF _err_str2num:ROM
                           A 10775    	XREF _str2num:ROM
                           A 10776    	XREF _strcasecmp:ROM
                           A 10777    	XREF _agon_fwrite:ROM
                           A 10778    	XREF _agon_fgets:ROM
                           A 10779    	XREF _reOpenFile:ROM
                           A 10780    	XREF _getOperatorToken:ROM
                           A 10781    	XREF _getLineToken:ROM
                           A 10782    	XREF _split_suffix:ROM
                           A 10783    	XREF _notEmpty:ROM
                           A 10784    	XREF _isEmpty:ROM
                           A 10785    	XREF _error:ROM
                           A 10786    	XREF _message:ROM
                           A 10787    	XREF _output:ROM
                           A 10788    	XREF _operand2:ROM
                           A 10789    	XREF _operand1:ROM
                           A 10790    	XREF _currentline:ROM
                           A 10791    	XREF _adlmode:ROM
                           A 10792    	XREF _global_errors:ROM
                           A 10793    	XREF _totalsize:ROM
                           A 10794    	XREF _address:ROM
                           A 10795    	XREF _pass:ROM
                           A 10796    	XREF _linenumber:ROM
                           A 10797    	XREF _filehandle:ROM
                           A 10798    	XREF _filename:ROM
                           A 10799    	XREF _lineNumberNeedsReset:ROM
                           A 10800    	XREF _consolelist_enabled:ROM
                           A 10801    	XREF _getGlobalLabelCount:ROM
                           A 10802    	XREF _readAnonymousLabel:ROM
                           A 10803    	XREF _writeAnonymousLabel:ROM
                           A 10804    	XREF _readLocalLabels:ROM
                           A 10805    	XREF _writeLocalLabels:ROM
                           A 10806    	XREF _clearLocalLabels:ROM
                           A 10807    	XREF _insertLocalLabel:ROM
                           A 10808    	XREF _insertGlobalLabel:ROM
                           A 10809    	XREF _findLabel:ROM
                           A 10810    	XREF _permittype_matchlist:ROM
                           A 10811    	XREF _instruction_table_lookup:ROM
                           A 10812    	XREF _tolower:ROM
                           A 10813    	XREF _isspace:ROM
                           A 10814    	XREF _isdigit:ROM
                           A 10815    	XREF _strlen:ROM
                           A 10816    	XREF _strcmp:ROM
                           A 10817    	XREF _strcpy:ROM
                           A 10818    	XREF __u_itoa:ROM
                           A 10819    	XREF ___print_sendstring:ROM
                           A 10820    	XREF ___print_xputch:ROM
                           A 10821    	XREF ___print_uputch:ROM
                           A 10822    	XREF __indcall:ROM
                           A 10823    	XREF __lcmps:ROM
                           A 10824    	XREF __lcmpu:ROM
                           A 10825    	XREF __ladd:ROM
                           A 10826    	XREF __lsub:ROM
                           A 10827    	XREF __sneg:ROM
                           A 10828    	XREF __lnot:ROM
                           A 10829    	XREF __land:ROM
                           A 10830    	XREF __lshl:ROM
                           A 10831    	XREF __lshrs:ROM
                           A 10832    	XREF __lshru:ROM
                           A 10833    	XREF __stoiu:ROM
                           A 10834    	XREF __itol:ROM
                           A 10835    	XREF __setflag:ROM
                           A 10836    	XREF __scmpzero:ROM
                           A 10837    	XREF __icmpzero:ROM
                           A 10838    	XREF __lcmpzero:ROM
                           A 10839    	XREF __case8D:ROM
                           A 10840    	XREF __seqcaseD:ROM
                           A 10841    	XREF __ladd_b:ROM
                           A 10842    	XREF __ishrs_b:ROM
                           A 10843    	XDEF _assemble
                           A 10844    	XDEF _processDelayedLineNumberReset
                           A 10845    	XDEF _passInitialize
                           A 10846    	XDEF _processInstructions
                           A 10847    	XDEF _handle_assembler_command
                           A 10848    	XDEF _handle_asm_align
                           A 10849    	XDEF _handle_asm_blk
                           A 10850    	XDEF _handle_asm_include
                           A 10851    	XDEF _handle_asm_org
                           A 10852    	XDEF _handle_asm_adl
                           A 10853    	XDEF _handle_asm_equ
                           A 10854    	XDEF _handle_asm_dw
                           A 10855    	XDEF _handle_asm_db
                           A 10856    	XDEF _parse_asm_keyval_pair
                           A 10857    	XDEF _parse_asm_single_immediate
                           A 10858    	XDEF _emit_quotedstring
                           A 10859    	XDEF _get_escaped_char
                           A 10860    	XDEF _emit_32bit
                           A 10861    	XDEF _emit_24bit
                           A 10862    	XDEF _emit_16bit
                           A 10863    	XDEF _emit_8bit
                           A 10864    	XDEF _emit_instruction
                           A 10865    	XDEF _transform_instruction
                           A 10866    	XDEF _prefix_ddfd_suffix
                           A 10867    	XDEF _get_ddfd_prefix
                           A 10868    	XDEF _emit_adlsuffix_code
                           A 10869    	XDEF _emit_immediate
                           A 10870    	XDEF _get_immediate_size
                           A 10871    	XDEF _adl_action
                           A 10872    	XDEF _getADLsuffix
                           A 10873    	XDEF _refreshlocalLabels
                           A 10874    	XDEF _definelabel
                           A 10875    	XDEF _parseLine
                           A 10876    	XDEF _parse_operand
                           A 10877    	XDEF _getLabelValue
                           A 10878    	XDEF _getAsciiValue
                           A 10879    	XDEF _advanceLocalLabel
                           A 10880    	XDEF _empty_operand
                           A 10881    	END


Errors: 0
Warnings: 0
Lines Assembled: 10882
